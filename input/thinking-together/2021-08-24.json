[
    {
        "user": "UJZS8UUJV",
        "type": "message",
        "ts": "1629824355.111500",
        "edited": {
            "user": "UJZS8UUJV",
            "ts": "1629824444.000000"
        },
        "client_msg_id": "6012ca88-2e7a-48fa-b86a-014462995c29",
        "text": "What minimal, universal AST specifications exist? Which are best?\n\nSoftware that deals with code in multiple languages usually needs to handle that code in a common format. But trying to capture complete language semantics for all languages in a single format seems hopeless. Instead, we’re faced with a trade-off between the variety of languages we represent and the thoroughness of the representation. On one end, text data is essentially entirely universal (caveat: encodings), but is very low level. On the other extreme, a given language compiler’s AST format fully represents semantics, but only for that one language. There are also some complete AST formats for families of closely related languages. Language-independent compiler IRs like the LLVM IR represent code in many different languages, but I think their usefulness is limited because they require irreversible transformations (they always would, right?).\n\nI’m interested in the spot just above text: interface specifications that can represent code as basic data structures for _nearly_ all languages, with little to no specification of semantics. So generally little more than a tree spec with room left for language-specific data.\n\nI’m only aware a few specifications like that:\n\n• as a baseline, s-expressions (not the textual format, just the concept of nested lists)\n• Babelfish’s <https:\/\/github.com\/bblfsh\/documentation\/blob\/master\/uast\/uast-specification-v2.md|UAST> — they lost their web domain, so presumed dead\n• unifiedjs’s <https:\/\/github.com\/syntax-tree\/unist|unist> — I’m thinking of adopting this for my structure editor because its ecosystem seems healthy and my project is in JavaScript, but to date it’s largely used for markup languages\nDo you know of any similar specifications? What are other projects using? Are you in a different spot on the trade-off spectrum?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g62b260c347a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/962b260c347a11e19b0fdce4a97a5d49.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Luke",
            "real_name": "Luke Persola",
            "display_name": "Luke Persola",
            "team": "T5TCAFTA9",
            "name": "lukepersola",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "reply_count": 22,
        "reply_users_count": 5,
        "latest_reply": "1630002447.002000",
        "reply_users": [
            "UJZS8UUJV",
            "UJBAJNFLK",
            "UCUSW7WVD",
            "UMVFWPZ36",
            "U02BBHT50KD"
        ],
        "replies": [
            {
                "user": "UJZS8UUJV",
                "ts": "1629824560.111900"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1629829535.112500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1629829945.112700"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1629830136.112900"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1629839899.113400"
            },
            {
                "user": "UJZS8UUJV",
                "ts": "1629841178.113700"
            },
            {
                "user": "UJZS8UUJV",
                "ts": "1629841249.113900"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1629842582.114200"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1629842947.114400"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1629843278.114600"
            },
            {
                "user": "UJZS8UUJV",
                "ts": "1629843501.115200"
            },
            {
                "user": "UJZS8UUJV",
                "ts": "1629843638.115500"
            },
            {
                "user": "UJZS8UUJV",
                "ts": "1629843767.115700"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1629850983.116000"
            },
            {
                "user": "UJZS8UUJV",
                "ts": "1629855791.116200"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1629874875.116800"
            },
            {
                "user": "U02BBHT50KD",
                "ts": "1629876986.117100"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1629898076.117700"
            },
            {
                "user": "UJZS8UUJV",
                "ts": "1629945438.000100"
            },
            {
                "user": "U02BBHT50KD",
                "ts": "1629965799.000700"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1629965842.000900"
            },
            {
                "user": "UJZS8UUJV",
                "ts": "1630002447.002000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TYmt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What minimal, universal AST specifications exist? Which are best?\n\nSoftware that deals with code in multiple languages usually needs to handle that code in a common format. But trying to capture complete language semantics for all languages in a single format seems hopeless. Instead, we’re faced with a trade-off between the variety of languages we represent and the thoroughness of the representation. On one end, text data is essentially entirely universal (caveat: encodings), but is very low level. On the other extreme, a given language compiler’s AST format fully represents semantics, but only for that one language. There are also some complete AST formats for families of closely related languages. Language-independent compiler IRs like the LLVM IR represent code in many different languages, but I think their usefulness is limited because they require irreversible transformations (they always would, right?).\n\nI’m interested in the spot just above text: interface specifications that can represent code as basic data structures for "
                            },
                            {
                                "type": "text",
                                "text": "nearly",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " all languages, with little to no specification of semantics. So generally little more than a tree spec with room left for language-specific data.\n\nI’m only aware a few specifications like that:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "as a baseline, s-expressions (not the textual format, just the concept of nested lists)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Babelfish’s "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/bblfsh\/documentation\/blob\/master\/uast\/uast-specification-v2.md",
                                        "text": "UAST"
                                    },
                                    {
                                        "type": "text",
                                        "text": " — they lost their web domain, so presumed dead"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "unifiedjs’s "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/syntax-tree\/unist",
                                        "text": "unist"
                                    },
                                    {
                                        "type": "text",
                                        "text": " — I’m thinking of adopting this for my structure editor because its ecosystem seems healthy and my project is in JavaScript, but to date it’s largely used for markup languages"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nDo you know of any similar specifications? What are other projects using? Are you in a different spot on the trade-off spectrum?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJZS8UUJV",
        "type": "message",
        "ts": "1629824560.111900",
        "client_msg_id": "6198bba3-3b7c-4569-acc3-b8b962e5e980",
        "text": "For the record, this is just where I’m at based on my own hobbyist exploration, so if you feel like I’m missing some context here I’d love to hear about it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g62b260c347a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/962b260c347a11e19b0fdce4a97a5d49.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Luke",
            "real_name": "Luke Persola",
            "display_name": "Luke Persola",
            "team": "T5TCAFTA9",
            "name": "lukepersola",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B3Z2A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For the record, this is just where I’m at based on my own hobbyist exploration, so if you feel like I’m missing some context here I’d love to hear about it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1629829535.112500",
        "client_msg_id": "1366290f-a687-496a-a262-203ca44cc9e6",
        "text": "Maybe <@UMVFWPZ36>' <https:\/\/treenotation.org\/|Tree Notation> is of interest for you.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZnTf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe "
                            },
                            {
                                "type": "user",
                                "user_id": "UMVFWPZ36"
                            },
                            {
                                "type": "text",
                                "text": "' "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/treenotation.org\/",
                                "text": "Tree Notation"
                            },
                            {
                                "type": "text",
                                "text": " is of interest for you."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1629829945.112700",
        "client_msg_id": "99be88fe-cfb8-41f2-9eb8-04b3f60bf945",
        "text": "I always thought ASTs (abstract _syntax_ trees) were about syntax and not semantics? For example, renaming a variable gives you a distinct AST but with identical semantics.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mAEjy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I always thought ASTs (abstract "
                            },
                            {
                                "type": "text",
                                "text": "syntax",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " trees) were about syntax and not semantics? For example, renaming a variable gives you a distinct AST but with identical semantics."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UN57U8V53",
                    "U027P92A0N5"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1629830136.112900",
        "client_msg_id": "d4abf7cb-5a5f-4726-8e07-53e1addbb156",
        "text": "<http:\/\/loyc.net> by <@UD6EXQVM0> might be relevant.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CfnF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/loyc.net"
                            },
                            {
                                "type": "text",
                                "text": " by "
                            },
                            {
                                "type": "user",
                                "user_id": "UD6EXQVM0"
                            },
                            {
                                "type": "text",
                                "text": " might be relevant."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1629839899.113400",
        "client_msg_id": "9f2017d2-5d23-463e-9e08-e695bc608c99",
        "text": "<https:\/\/tree-sitter.github.io\/tree-sitter\/> may be relevant",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UHAT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/tree-sitter.github.io\/tree-sitter\/"
                            },
                            {
                                "type": "text",
                                "text": " may be relevant"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJZS8UUJV",
        "type": "message",
        "ts": "1629841178.113700",
        "client_msg_id": "2e21099d-cd46-4124-a801-d227015c192f",
        "text": "<@UJBAJNFLK>\nDefinitely relevant, thanks\n\n<@UCUSW7WVD>\nIn my experience, people use “semantics” to refer to almost anything that they want to contrast with with “syntax”, which has a much more limited definition. Formally, <https:\/\/en.wikipedia.org\/wiki\/Semantics_(computer_science)#Approaches|it seems> there are a bunch of subcategories.\n\nI think your version is focusing on the end result of a program, where I’m thinking about the semantics of smaller units of code in a way that tracks pretty closely to the meaning of the term in linguistics, i.e., just whatever _meaning_ the code has. So I would say that ASTs are made _out of_ syntactic information, but because they bear meaning, they also have semantics.\n\nPragmatically, the issue is that if you look at a bunch of AST specifications, they are mostly comprised of data that’s specific to that language’s semantics. For example, a language with streams as first-class citizens might have an AST node type `STREAM` , which I would then have to account for individually if I was dealing with all language semantics.\n\nre: <@UD6EXQVM0>, yeah his stuff is definitely related. His website says he currently has an AST format for certain languages <https:\/\/loyc.net\/#loyc-trees|in the Algol family> and is planning to expand it to cover more languages in the future. So at the moment he’s more on the other end of the trade-off spectrum, but heading towards my end.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g62b260c347a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/962b260c347a11e19b0fdce4a97a5d49.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Luke",
            "real_name": "Luke Persola",
            "display_name": "Luke Persola",
            "team": "T5TCAFTA9",
            "name": "lukepersola",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+UHv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": "\nDefinitely relevant, thanks\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": "\nIn my experience, people use “semantics” to refer to almost anything that they want to contrast with with “syntax”, which has a much more limited definition. Formally, "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Semantics_(computer_science)#Approaches",
                                "text": "it seems"
                            },
                            {
                                "type": "text",
                                "text": " there are a bunch of subcategories.\n\nI think your version is focusing on the end result of a program, where I’m thinking about the semantics of smaller units of code in a way that tracks pretty closely to the meaning of the term in linguistics, i.e., just whatever "
                            },
                            {
                                "type": "text",
                                "text": "meaning",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the code has. So I would say that ASTs are made "
                            },
                            {
                                "type": "text",
                                "text": "out of",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " syntactic information, but because they bear meaning, they also have semantics.\n\nPragmatically, the issue is that if you look at a bunch of AST specifications, they are mostly comprised of data that’s specific to that language’s semantics. For example, a language with streams as first-class citizens might have an AST node type "
                            },
                            {
                                "type": "text",
                                "text": "STREAM",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " , which I would then have to account for individually if I was dealing with all language semantics.\n\nre: "
                            },
                            {
                                "type": "user",
                                "user_id": "UD6EXQVM0"
                            },
                            {
                                "type": "text",
                                "text": ", yeah his stuff is definitely related. His website says he currently has an AST format for certain languages "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/loyc.net\/#loyc-trees",
                                "text": "in the Algol family"
                            },
                            {
                                "type": "text",
                                "text": " and is planning to expand it to cover more languages in the future. So at the moment he’s more on the other end of the trade-off spectrum, but heading towards my end."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJZS8UUJV",
        "type": "message",
        "ts": "1629841249.113900",
        "edited": {
            "user": "UJZS8UUJV",
            "ts": "1629841273.000000"
        },
        "client_msg_id": "909dbc06-9301-4daa-b541-4f7788ee8d16",
        "text": "<@UMVFWPZ36> I’m going to take some time to digest Tree Notation, maybe I’ll DM you with some questions once I have?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g62b260c347a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/962b260c347a11e19b0fdce4a97a5d49.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Luke",
            "real_name": "Luke Persola",
            "display_name": "Luke Persola",
            "team": "T5TCAFTA9",
            "name": "lukepersola",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FIwH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UMVFWPZ36"
                            },
                            {
                                "type": "text",
                                "text": " I’m going to take some time to digest Tree Notation, maybe I’ll DM you with some questions once I have?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1629842582.114200",
        "client_msg_id": "6107ead8-669b-4901-a50c-aaa532ddf000",
        "text": "For sure. Another relevant read may be the I-expressions report (<https:\/\/srfi.schemers.org\/srfi-49\/srfi-49.html>), which might be more helpful reading for someone familar with S-expessions",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "==J1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For sure. Another relevant read may be the I-expressions report ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/srfi.schemers.org\/srfi-49\/srfi-49.html"
                            },
                            {
                                "type": "text",
                                "text": "), which might be more helpful reading for someone familar with S-expessions"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1629842947.114400",
        "client_msg_id": "974b8585-525a-4bb6-b787-d45b76abac1e",
        "text": "The area I'm exploring with Tree Notation is basically new languages without syntax—so the semantic form === the syntactic form. Heavy reliance on positioning for determining scope, and a focus on mini DSLs rather than General Purpose languages. I think this is a disjoint set from the existing 10,000+ languages out there. I think for existing languages something like Tree Sitter would be a good bet.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7wW9E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The area I'm exploring with Tree Notation is basically new languages without syntax—so the semantic form === the syntactic form. Heavy reliance on positioning for determining scope, and a focus on mini DSLs rather than General Purpose languages. I think this is a disjoint set from the existing 10,000+ languages out there. I think for existing languages something like Tree Sitter would be a good bet."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1629843278.114600",
        "client_msg_id": "e50c634c-650b-436e-af08-4c7a4ff1ccca",
        "text": "For indent-sensitive s-expressions there's also <https:\/\/srfi.schemers.org\/srfi-110\/srfi-110.html|https:\/\/srfi.schemers.org\/srfi-110\/srfi-110.html>. And my Mu's syntax sugar (<https:\/\/archive.org\/details\/akkartik-mu-2021-06-23;|https:\/\/archive.org\/details\/akkartik-mu-2021-06-23;> <https:\/\/github.com\/akkartik\/mu\/tree\/main\/shell#indent-sensitivity|https:\/\/github.com\/akkartik\/mu\/tree\/main\/shell#indent-sensitivity>) This subject is close to my heart, but I don't see how it's a universal AST spec.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D=kh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For indent-sensitive s-expressions there's also "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/srfi.schemers.org\/srfi-110\/srfi-110.html",
                                "text": "https:\/\/srfi.schemers.org\/srfi-110\/srfi-110.html"
                            },
                            {
                                "type": "text",
                                "text": ". And my Mu's syntax sugar ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/archive.org\/details\/akkartik-mu-2021-06-23;",
                                "text": "https:\/\/archive.org\/details\/akkartik-mu-2021-06-23;"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/akkartik\/mu\/tree\/main\/shell#indent-sensitivity",
                                "text": "https:\/\/github.com\/akkartik\/mu\/tree\/main\/shell#indent-sensitivity"
                            },
                            {
                                "type": "text",
                                "text": ") This subject is close to my heart, but I don't see how it's a universal AST spec."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJZS8UUJV",
        "type": "message",
        "ts": "1629843501.115200",
        "client_msg_id": "5372852c-3808-40c2-ae9e-cdc22d432e83",
        "text": "(thanks for the links, still going through them)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g62b260c347a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/962b260c347a11e19b0fdce4a97a5d49.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Luke",
            "real_name": "Luke Persola",
            "display_name": "Luke Persola",
            "team": "T5TCAFTA9",
            "name": "lukepersola",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I5df",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(thanks for the links, still going through them)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJZS8UUJV",
        "type": "message",
        "ts": "1629843638.115500",
        "client_msg_id": "255b595d-30f0-4b42-98c6-9f7f9c380569",
        "text": "A funny thing about looking into this stuff is since I’m working on a non-language-specific structure editor, I’m not really concerned with textual formats because I’m assuming the AST will be an in-memory data structure with a certain interface by the time I get it. Meanwhile, most people trying to define ASTs are writing parsers or something related, so the textual format is central.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g62b260c347a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/962b260c347a11e19b0fdce4a97a5d49.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Luke",
            "real_name": "Luke Persola",
            "display_name": "Luke Persola",
            "team": "T5TCAFTA9",
            "name": "lukepersola",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ortg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A funny thing about looking into this stuff is since I’m working on a non-language-specific structure editor, I’m not really concerned with textual formats because I’m assuming the AST will be an in-memory data structure with a certain interface by the time I get it. Meanwhile, most people trying to define ASTs are writing parsers or something related, so the textual format is central."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJZS8UUJV",
        "type": "message",
        "ts": "1629843767.115700",
        "edited": {
            "user": "UJZS8UUJV",
            "ts": "1629843777.000000"
        },
        "client_msg_id": "dc16ab65-8cc7-45be-99a1-defaf4949aaa",
        "text": "On disk, I just store those data structures as JSON, but it could be any serialization language if you have a parser for it. unist (#3 above) has the same philosophy.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g62b260c347a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/962b260c347a11e19b0fdce4a97a5d49.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Luke",
            "real_name": "Luke Persola",
            "display_name": "Luke Persola",
            "team": "T5TCAFTA9",
            "name": "lukepersola",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9fF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On disk, I just store those data structures as JSON, but it could be any serialization language if you have a parser for it. unist (#3 above) has the same philosophy."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1629850983.116000",
        "client_msg_id": "c50a6be8-aa7a-4317-9a9d-53db5ab80438",
        "text": "This might be more relevant to interop: <https:\/\/dion.systems\/blog_0002_roadmap.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SMzog",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This might be more relevant to interop: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/dion.systems\/blog_0002_roadmap.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJZS8UUJV",
        "type": "message",
        "ts": "1629855791.116200",
        "client_msg_id": "627de68c-4b3a-4f6b-b8ac-836f93a79193",
        "text": "<@UCUSW7WVD> nice, seems like their doing something in this zone, I’m going to hop on their discord",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g62b260c347a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/962b260c347a11e19b0fdce4a97a5d49.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Luke",
            "real_name": "Luke Persola",
            "display_name": "Luke Persola",
            "team": "T5TCAFTA9",
            "name": "lukepersola",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1629824355.111500",
        "parent_user_id": "UJZS8UUJV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fc+3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " nice, seems like their doing something in this zone, I’m going to hop on their discord"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]