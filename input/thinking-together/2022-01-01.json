[
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1641065753.338800",
        "client_msg_id": "7b552334-16f8-45ee-b87f-7151c730cb45",
        "text": "For (A) and (B), I'm hoping to do at least one new Hest prototype. Just one. Even 3\/4 of one would be an improvement. Gah.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1640985572.338200",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BhR1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For (A) and (B), I'm hoping to do at least one new Hest prototype. Just one. Even 3\/4 of one would be an improvement. Gah."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U02M6PM725T",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1641065767.339000",
        "client_msg_id": "ce61ed0d-acb3-4748-a219-d41531473755",
        "text": "You?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1640985572.338200",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DHJBj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U02M6PM725T"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1641097316.342600",
        "client_msg_id": "8a97d0e8-8718-4df7-bb98-fd6e67313f0e",
        "text": "Great question.  Same thing we do every year Pinky.  :rolling_on_the_floor_laughing:  At the moment...\n\n(1) I have a cute idea for a logic language somewhere between Prolog and Ohm.\n\n(2) I would like to add a less definite, more probabilistic aspect to it.\n\n(3) I want to continue exploring a notion of kinetic, non-symbolic, embodied programming where motions are used to define transformations of whole spaces rather than acting on discrete points.\n\nPerhaps an even better question is what would success look like for each project:\n\n(1) Allow for the definition of a game like rummy in about a page of code.  Likewise, for a serviceable AI player.\n\n(2) It should be easy to turn a parser for a language like JSON into an error correcting parser, \"You're probably missing a double quote here 'cus otherwise the rest of this doesn't make sense.\"\n\n(3) Defining the gamma function should feel as natural in its own way as defining factorial in a functional programming language.  (See <http:\/\/www.willamette.edu\/~fruehr\/haskell\/evolution.html|The Evolution of a Haskell Programmer>.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1640985572.338200",
        "parent_user_id": "U02M6PM725T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IxK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great question.  Same thing we do every year Pinky.  "
                            },
                            {
                                "type": "emoji",
                                "name": "rolling_on_the_floor_laughing",
                                "unicode": "1f923"
                            },
                            {
                                "type": "text",
                                "text": "  At the moment...\n\n(1) I have a cute idea for a logic language somewhere between Prolog and Ohm.\n\n(2) I would like to add a less definite, more probabilistic aspect to it.\n\n(3) I want to continue exploring a notion of kinetic, non-symbolic, embodied programming where motions are used to define transformations of whole spaces rather than acting on discrete points.\n\nPerhaps an even better question is what would success look like for each project:\n\n(1) Allow for the definition of a game like rummy in about a page of code.  Likewise, for a serviceable AI player.\n\n(2) It should be easy to turn a parser for a language like JSON into an error correcting parser, \"You're probably missing a double quote here 'cus otherwise the rest of this doesn't make sense.\"\n\n(3) Defining the gamma function should feel as natural in its own way as defining factorial in a functional programming language.  (See "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.willamette.edu\/~fruehr\/haskell\/evolution.html",
                                "text": "The Evolution of a Haskell Programmer"
                            },
                            {
                                "type": "text",
                                "text": ".)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U02M6PM725T",
                    "UMVFWPZ36"
                ],
                "count": 2
            }
        ]
    }
]