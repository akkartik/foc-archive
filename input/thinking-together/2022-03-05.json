[
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1646492014.642289",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1646496358.000000"
        },
        "client_msg_id": "00d1fee5-1f85-4d4b-8602-4955bc886884",
        "text": "I’ve been thinking about _text_ recently — as many here often do :stuck_out_tongue:\n\nSomething that comes up a lot here is that we represent things _with_ text, building atop it as a kind of “lower level” representation. For this to work, there needs to be some degree of coordination and communication in how these lower level representations should be interpreted.\n\nWhen digital text first emerged it was standards organisations who made these coordination decisions and they were able to convince or compel other groups to normalise around their decisions. This had limits even back then — see the history of the USA, ASCII, and non-english-speaking world for examples. The computing landscape today is radically different, and it seems unlikely that similar approaches would succeed. So my question is as follows:\n\nIf we want to someday go “beyond text” as it currently exists, or build other low-level representations, is this even conceivable today without addressing that low-level coordination? As in, perhaps the only viable way forward is to enable the _collective_ development of these systems of representation. This puts the challenge of (general purpose, low-level) representation firmly into the space of distributed systems, socio-technical systems, digital governance, coordination, communication, etc.\n\nI’m looking to sharpen my thinking here, all thoughts welcome!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1646492014.642289",
        "reply_count": 9,
        "reply_users_count": 6,
        "latest_reply": "1646654083.709899",
        "reply_users": [
            "UNCP67JSK",
            "U014WA16VNJ",
            "UGWUJUZHT",
            "U02PDVC9CNT",
            "UJBAJNFLK",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UNCP67JSK",
                "ts": "1646493663.462579"
            },
            {
                "user": "U014WA16VNJ",
                "ts": "1646494221.023759"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1646498430.599149"
            },
            {
                "user": "U02PDVC9CNT",
                "ts": "1646507158.965669"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1646552902.282409"
            },
            {
                "user": "U014WA16VNJ",
                "ts": "1646585309.931909"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1646636938.850269"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1646637379.368069"
            },
            {
                "user": "U014WA16VNJ",
                "ts": "1646654083.709899"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jFSpX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve been thinking about "
                            },
                            {
                                "type": "text",
                                "text": "text",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " recently — as many here often do "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": "\n\nSomething that comes up a lot here is that we represent things "
                            },
                            {
                                "type": "text",
                                "text": "with ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "text, building atop it as a kind of “lower level” representation. For this to work, there needs to be some degree of coordination and communication in how these lower level representations should be interpreted.\n\nWhen digital text first emerged it was standards organisations who made these coordination decisions and they were able to convince or compel other groups to normalise around their decisions. This had limits even back then — see the history of the USA, ASCII, and non-english-speaking world for examples. The computing landscape today is radically different, and it seems unlikely that similar approaches would succeed. So my question is as follows:\n\nIf we want to someday go “beyond text” as it currently exists, or build other low-level representations, is this even conceivable today without addressing that low-level coordination? As in, perhaps the only viable way forward is to enable the "
                            },
                            {
                                "type": "text",
                                "text": "collective ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "development of these systems of representation. This puts the challenge of (general purpose, low-level) representation firmly into the space of distributed systems, socio-technical systems, digital governance, coordination, communication, etc.\n\nI’m looking to sharpen my thinking here, all thoughts welcome!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "U02028JHX37",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UNCP67JSK",
        "type": "message",
        "ts": "1646493663.462579",
        "client_msg_id": "DFC2DF89-2722-441C-A6C3-B813233D41EB",
        "text": "Redefine \"language\" as information with interaction, presentation, translation, and nesting, with other languages. Separate the specification from implementation\/concept from substrate. Compress specification across languages. Result: Common mode of input\/editing, unified while specialized data model, combined with [the rest], also portable, translatable, adaptable.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e950179feb1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-11\/947800888119_9e950179feb1f81e1123_72.jpg",
            "first_name": "Leonard",
            "real_name": "Leonard Pauli",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "leonardpauli",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1646492014.642289",
        "parent_user_id": "U014WA16VNJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MS2=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Redefine \"language\" as information with interaction, presentation, translation, and nesting, with other languages. Separate the specification from implementation\/concept from substrate. Compress specification across languages. Result: Common mode of input\/editing, unified while specialized data model, combined with [the rest], also portable, translatable, adaptable."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1646494221.023759",
        "client_msg_id": "1fb78755-fa65-4aea-975e-4478b92f5f07",
        "text": "<@UNCP67JSK> I’m not sure I understand what you’re getting at there or how it applies to what I wrote above, could you elaborate?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1646492014.642289",
        "parent_user_id": "U014WA16VNJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GXkb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UNCP67JSK"
                            },
                            {
                                "type": "text",
                                "text": " I’m not sure I understand what you’re getting at there or how it applies to what I wrote above, could you elaborate?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1646498430.599149",
        "client_msg_id": "5d5a272a-2a76-4427-a94d-9814c8a5aa7d",
        "text": "I firmly believe that we need to go beyond text.  At least to using rectangles, ellipses, lines and text (i.e. minimalist SVG).\n\n0. Rhetorical Q: How did Galileo get us to change from Ptolemaic Cosmology to Copernican?\n0. Rhetorical Q: How did we make the switch from assembler to C and Pascal?  Assembler programmers hated HLLs and gave all sorts of reasons not to use HLLs.\n0. Rhetorical Q: How did we (normal people, not programmers) switch to using spreadsheets instead of ???\n1. I think, the “new” way has to be an order of magnitude “better” than the old way.\n2. I think that, in the interim, one has to incorporate the “old” into the “new”.  Somehow.  To appease the “assembler programmers”. (IMO, today’s “assembler mindset” is (1) the belief that there is “one language to rule them all”, (2) “everything must be synchronous”, (3) CALL\/RETURN).\n3. Maybe we need to ignore the current crop of “programmers” and target a different kind of programming?\n\nOn the technical front, we need to overcome the fear of compiling non-text to running programs (I have example WIPs of compiling <http:\/\/draw.io|draw.io> diagrams, technology isn’t the biggest issue).  We need to overcome the mindset of using ASCII Art instead of drawing boxes (“{...}” == box).\n\nProgramming is hitting an asymptote caused by in-the-box thinking.  There are things that we could express if we didn’t limit ourselves to text. Rhetorical Q: why do CEO’s draw things out on whiteboards?  Why can’t we compile whiteboards? “a = b+c” is well-covered by textual programming.  DaS (mini-VPL) ain’t “a = b+c”.  Rhetorical Q: what “tells” are there that current programming is not good enough?  The accepted mindset that “multitasking is complicated” is a tell...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1646492014.642289",
        "parent_user_id": "U014WA16VNJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JvG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I firmly believe that we need to go beyond text.  At least to using rectangles, ellipses, lines and text (i.e. minimalist SVG).\n\n0. Rhetorical Q: How did Galileo get us to change from Ptolemaic Cosmology to Copernican?\n0. Rhetorical Q: How did we make the switch from assembler to C and Pascal?  Assembler programmers hated HLLs and gave all sorts of reasons not to use HLLs.\n0. Rhetorical Q: How did we (normal people, not programmers) switch to using spreadsheets instead of ???\n1. I think, the “new” way has to be an order of magnitude “better” than the old way.\n2. I think that, in the interim, one has to incorporate the “old” into the “new”.  Somehow.  To appease the “assembler programmers”. (IMO, today’s “assembler mindset” is (1) the belief that there is “one language to rule them all”, (2) “everything must be synchronous”, (3) CALL\/RETURN).\n3. Maybe we need to ignore the current crop of “programmers” and target a different kind of programming?\n\nOn the technical front, we need to overcome the fear of compiling non-text to running programs (I have example WIPs of compiling "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/draw.io",
                                "text": "draw.io"
                            },
                            {
                                "type": "text",
                                "text": " diagrams, technology isn’t the biggest issue).  We need to overcome the mindset of using ASCII Art instead of drawing boxes (“{...}” == box).\n\nProgramming is hitting an asymptote caused by in-the-box thinking.  There are things that we could express if we didn’t limit ourselves to text. Rhetorical Q: why do CEO’s draw things out on whiteboards?  Why can’t we compile whiteboards? “a = b+c” is well-covered by textual programming.  DaS (mini-VPL) ain’t “a = b+c”.  Rhetorical Q: what “tells” are there that current programming is not good enough?  The accepted mindset that “multitasking is complicated” is a tell..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1646502270.793589",
        "client_msg_id": "825404B8-26D9-4C85-9647-151535A1A03C",
        "text": "<@U02E4DAQGSZ> thanks for those links! In my mind at least, decisions and choices are not the same as settings and configs. I agree with the assertion in the article that users want choices and the power to make decisions but I think it's wrong to equate this with needing settings.\n\nSettings feel like the buttons, switches and knobs that are hidden on the backside of an appliance because they're considered ugly.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1646335857.873069",
        "parent_user_id": "U014WA16VNJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h+b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02E4DAQGSZ"
                            },
                            {
                                "type": "text",
                                "text": " thanks for those links! In my mind at least, decisions and choices are not the same as settings and configs. I agree with the assertion in the article that users want choices and the power to make decisions but I think it's wrong to equate this with needing settings.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Settings feel like the buttons, switches and knobs that are hidden on the backside of an appliance because they're considered ugly."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1646502545.785349",
        "client_msg_id": "F7AC51DB-CA3B-409B-A868-8B6B98AA6F70",
        "text": "This presupposes a kind of user-programmer divide: where one class of people (programmers) dictate the choices that are available to others. I want to see a world where all who use computers have equal(ish) agency, and so grappling with the notion of settings in that context seems to be an important task.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1646335857.873069",
        "parent_user_id": "U014WA16VNJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Br=P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This presupposes a kind of user-programmer divide: where one class of people (programmers) dictate the choices that are available to others. I want to see a world where all who use computers have equal(ish) agency, and so grappling with the notion of settings in that context seems to be an important task."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U014WA16VNJ",
        "type": "message",
        "ts": "1646502778.172069",
        "edited": {
            "user": "U014WA16VNJ",
            "ts": "1646502811.000000"
        },
        "client_msg_id": "F9A3CBA6-3B54-4703-A3E5-0F118F6D7071",
        "text": "To be clear: I don't think we should get rid of settings in the current day, but think there must be far better ways to give people agency in the long run.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "808c371ba009",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-15\/7281936611971_808c371ba00918560d75_72.jpg",
            "first_name": "Orion",
            "real_name": "Orion Reed",
            "display_name": "Orion Reed",
            "team": "T5TCAFTA9",
            "name": "orionreedt",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1646335857.873069",
        "parent_user_id": "U014WA16VNJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FMn8I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To be clear: I don't think we should get rid of settings in the current day, but think there must be far better ways to give people agency in the long run."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02PDVC9CNT",
        "type": "message",
        "ts": "1646507158.965669",
        "client_msg_id": "484d5ab5-e7c8-4285-a37e-0914d152a285",
        "text": "The idea of magnitude\/the gradient of adoption and the question of the whiteboard I think could be really interesting if thought of in tandem. What is the gradient between modern IDE programming and wacom programming? how does one measure the impact of that evolution? what are tools that could be adopted by the modern IDE programmer that could exist in their workflow that would exist on that gradient? My mind instinctively goes to the classic cli commands. What could be built where a programmers desk includes a keyboard a mouse and a wacom tablet?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "735e4c98d276",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-07\/2834416174224_735e4c98d276cb0b0122_72.jpg",
            "first_name": "yeT",
            "real_name": "yeT",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jacob.t.wright",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1646492014.642289",
        "parent_user_id": "U014WA16VNJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FQ++W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The idea of magnitude\/the gradient of adoption and the question of the whiteboard I think could be really interesting if thought of in tandem. What is the gradient between modern IDE programming and wacom programming? how does one measure the impact of that evolution? what are tools that could be adopted by the modern IDE programmer that could exist in their workflow that would exist on that gradient? My mind instinctively goes to the classic cli commands. What could be built where a programmers desk includes a keyboard a mouse and a wacom tablet?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1646552902.282409",
        "client_msg_id": "9f13524a-4707-48a4-916b-6762c25cced2",
        "text": "Formal standardization, as with ASCII, Unicode, or PNG (to name something non-text), happens when there are many small players but no dominating one. De-facto standards originate with dominant players who find themselves at the center of an ecosystem that is beneficial for them.\nThe worst environment for emergent common representations is probably the digital feudalism that we see in today's platforms.\n\nAnother dimension is formal vs. informal representations. Formal representations encourage formal standards, informal representations encourage informal standards with many variants. Markdown is probably the best illustration of the latter. My guess is that this is the preferred mode of converging on representations for today's Open Source communities. It's well aligned with the spirit of forking and adapting existing things for your own needs.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1646492014.642289",
        "parent_user_id": "U014WA16VNJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CHj6F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Formal standardization, as with ASCII, Unicode, or PNG (to name something non-text), happens when there are many small players but no dominating one. De-facto standards originate with dominant players who find themselves at the center of an ecosystem that is beneficial for them.\nThe worst environment for emergent common representations is probably the digital feudalism that we see in today's platforms.\n\nAnother dimension is formal vs. informal representations. Formal representations encourage formal standards, informal representations encourage informal standards with many variants. Markdown is probably the best illustration of the latter. My guess is that this is the preferred mode of converging on representations for today's Open Source communities. It's well aligned with the spirit of forking and adapting existing things for your own needs."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]