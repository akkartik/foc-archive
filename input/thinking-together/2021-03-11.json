[
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1615452903.173400",
        "client_msg_id": "cfd47c86-d2bc-4c81-9e83-38a9edd004e2",
        "text": "I better clarify.  I meant \"what is this language bad at expressing?\"  No performance consideration whatsoever.  You have to pick the most natural, idiomatic way to say things.  If you answer \"I want people to be able to do anything,\" then you get bloat.  Between molecular and kitchen-sink extremes there are a lot reasonable (and unreasonable) tradeoffs.\n\nConsider dynamic\/scripting languages, which are all practically the same at some level.  (I did a talk promoting them forever ago when Java was king, and the Web was young.)  Consider Lua, Python, Ruby, and JavaScript.\n\nLua strives for a precise, beautiful minimalism.  \"Lua provides mechanism not policy. ... Instead of littering the language with lots of features, we provided ways for users to program the features themselves, in the way they wanted them, and only for those features they needed.\"\n\nPython is includes batteries plus \"there should be one — and preferably only one — obvious way to do it.\"  Prepare for ridicule if you don't like the one way.  (Generators, I'm looking at you.)\n\nMatz says, \"I'm trying to make Ruby natural, not simple.\"  Ruby is complicated, overcomplicated but in all the \"right\" ways.  Let's have methods, blocks, procs, and lambdas with multiple notations for each.  Let's have objects, classes, singleton classes, metaclasses <https:\/\/en.wikipedia.org\/wiki\/Metaclass#In_Ruby>, and mixin modules, which can be included, prepended, or extended.  Then add refinements <https:\/\/rubyreferences.github.io\/rubyref\/language\/refinements.html> for kicks.  For concurrency, we have threads, UNIX processes, coroutines, continuations, and now \"Ractors\" <https:\/\/github.com\/ruby\/ruby\/blob\/master\/doc\/ractor.md>.  Yet somehow Ruby ends up fairly programmer friendly.\n\nContrast with JavaScript, which is simultaneously overcomplicated <https:\/\/www.destroyallsoftware.com\/talks\/wat> and underpowered, \"Given the process that created JavaScript and made it a de facto standard, we deserve something far worse.\"  (Maybe React, TypeScript, or whatever makes JS better.  I honestly get by with jQuery despite its clear shortcomings.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1615252973.136100",
        "parent_user_id": "UCGAK10LS",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "ruby\/ruby",
                "title_link": "https:\/\/github.com\/ruby\/ruby\/blob\/master\/doc\/ractor.md",
                "text": "The Ruby Programming Language [mirror]. Contribute to ruby\/ruby development by creating an account on GitHub.",
                "fallback": "GitHub: ruby\/ruby",
                "thumb_url": "https:\/\/avatars.githubusercontent.com\/u\/210414?s=400&v=4",
                "from_url": "https:\/\/github.com\/ruby\/ruby\/blob\/master\/doc\/ractor.md",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/ruby\/ruby\/blob\/master\/doc\/ractor.md"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zQKv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I better clarify.  I meant \"what is this language bad at expressing?\"  No performance consideration whatsoever.  You have to pick the most natural, idiomatic way to say things.  If you answer \"I want people to be able to do anything,\" then you get bloat.  Between molecular and kitchen-sink extremes there are a lot reasonable (and unreasonable) tradeoffs.\n\nConsider dynamic\/scripting languages, which are all practically the same at some level.  (I did a talk promoting them forever ago when Java was king, and the Web was young.)  Consider Lua, Python, Ruby, and JavaScript.\n\nLua strives for a precise, beautiful minimalism.  \"Lua provides mechanism not policy. ... Instead of littering the language with lots of features, we provided ways for users to program the features themselves, in the way they wanted them, and only for those features they needed.\"\n\nPython is includes batteries plus \"there should be one — and preferably only one — obvious way to do it.\"  Prepare for ridicule if you don't like the one way.  (Generators, I'm looking at you.)\n\nMatz says, \"I'm trying to make Ruby natural, not simple.\"  Ruby is complicated, overcomplicated but in all the \"right\" ways.  Let's have methods, blocks, procs, and lambdas with multiple notations for each.  Let's have objects, classes, singleton classes, metaclasses "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Metaclass#In_Ruby"
                            },
                            {
                                "type": "text",
                                "text": ", and mixin modules, which can be included, prepended, or extended.  Then add refinements "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/rubyreferences.github.io\/rubyref\/language\/refinements.html"
                            },
                            {
                                "type": "text",
                                "text": " for kicks.  For concurrency, we have threads, UNIX processes, coroutines, continuations, and now \"Ractors\" "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/ruby\/ruby\/blob\/master\/doc\/ractor.md"
                            },
                            {
                                "type": "text",
                                "text": ".  Yet somehow Ruby ends up fairly programmer friendly.\n\nContrast with JavaScript, which is simultaneously overcomplicated "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.destroyallsoftware.com\/talks\/wat"
                            },
                            {
                                "type": "text",
                                "text": " and underpowered, \"Given the process that created JavaScript and made it a de facto standard, we deserve something far worse.\"  (Maybe React, TypeScript, or whatever makes JS better.  I honestly get by with jQuery despite its clear shortcomings.)"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]