[
    {
        "user": "U03LMRE6MQE",
        "type": "message",
        "ts": "1689173272.597409",
        "client_msg_id": "47a8c827-f074-4198-a2ce-423165630d5a",
        "text": "I think very cool, but I must admit I can't work out how to try it out. Would you be able to do a video where you explain the keypresses you do to make edits",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ea29e26e919b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-06-23\/3708469439522_ea29e26e919bc202feb6_72.png",
            "first_name": "Peter",
            "real_name": "Peter Saxton",
            "display_name": "Peter Saxton",
            "team": "T5TCAFTA9",
            "name": "peterhsaxton",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689083336.878249",
        "parent_user_id": "U03LJBR6THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8hp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think very cool, but I must admit I can't work out how to try it out. Would you be able to do a video where you explain the keypresses you do to make edits"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Admittedly it might be too early for <#CCL5VVBAN|share-your-work> but here's an attempt to show.\n\nOne thing is, its rough on mobile, you can eval it but editing is hard.\n\nThere's also a handful of crucial features missing notably\n• ability to tack on an operator after a node -&gt; going from `a.b` to `a.b.c`\n• delete the upcoming node - going from `a[0]` to `a::first()` is hard\/impossible right now\nAlso there's some awkwardness of dealing with the editor as ast nodes, you can only edit within a leaf node, to move on to the next part you must tab into.\n\nHere's a video, hope it helps.",
        "files": [
            {
                "id": "F05GM5D3D9B",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U03LJBR6THT",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r4Jf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Admittedly it might be too early for "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CCL5VVBAN"
                            },
                            {
                                "type": "text",
                                "text": " but here's an attempt to show.\n\nOne thing is, its rough on mobile, you can eval it but editing is hard.\n\nThere's also a handful of crucial features missing notably\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "ability to tack on an operator after a node -> going from "
                                    },
                                    {
                                        "type": "text",
                                        "text": "a.b",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " to "
                                    },
                                    {
                                        "type": "text",
                                        "text": "a.b.c",
                                        "style": {
                                            "code": true
                                        }
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "delete the upcoming node - going from "
                                    },
                                    {
                                        "type": "text",
                                        "text": "a[0]",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " to "
                                    },
                                    {
                                        "type": "text",
                                        "text": "a::first()",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " is hard\/impossible right now"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nAlso there's some awkwardness of dealing with the editor as ast nodes, you can only edit within a leaf node, to move on to the next part you must tab into.\n\nHere's a video, hope it helps."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1689173720.524199",
        "client_msg_id": "dd1f2378-0ca3-46bc-b644-fbbe11e1381c",
        "thread_ts": "1689083336.878249",
        "parent_user_id": "U03LJBR6THT"
    },
    {
        "user": "U03LJBR6THT",
        "type": "message",
        "ts": "1689173788.144059",
        "client_msg_id": "78454109-b582-48a2-9ee0-4e84b5e476e6",
        "text": "I believe those problems are solvable, but right now I'm just showcasing the simplicity of the model, and the benefits of storing AST as html.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0afa5db0b2d5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-07-06\/5524013698279_0afa5db0b2d593650747_72.jpg",
            "first_name": "Marcelle",
            "real_name": "Marcelle Rusu",
            "display_name": "Marcelle Rusu",
            "team": "T5TCAFTA9",
            "name": "marcelrusu0",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689083336.878249",
        "parent_user_id": "U03LJBR6THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kDPq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I believe those problems are solvable, but right now I'm just showcasing the simplicity of the model, and the benefits of storing AST as html."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03LJBR6THT",
        "type": "message",
        "ts": "1689173930.393469",
        "edited": {
            "user": "U03LJBR6THT",
            "ts": "1689173940.000000"
        },
        "client_msg_id": "0057dddd-0d82-467b-917e-d13fde376e76",
        "text": "When you insert a new line, its temporarily a plain text editor for that line until you focus away &amp; it parses it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0afa5db0b2d5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-07-06\/5524013698279_0afa5db0b2d593650747_72.jpg",
            "first_name": "Marcelle",
            "real_name": "Marcelle Rusu",
            "display_name": "Marcelle Rusu",
            "team": "T5TCAFTA9",
            "name": "marcelrusu0",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689083336.878249",
        "parent_user_id": "U03LJBR6THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FePi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When you insert a new line, its temporarily a plain text editor for that line until you focus away & it parses it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1689202617.352569",
        "client_msg_id": "e14b66b5-e795-48d7-9e66-c31816dd683b",
        "text": "<@U02U0AS3J49> Found this paper, I've read another by James Grimmelmann and really enjoyed it. I've only skimmed it, but seems like it might be more to your liking: <https:\/\/arxiv.org\/pdf\/2206.14879.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688402564.602729",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4Frv7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U02U0AS3J49"
                            },
                            {
                                "type": "text",
                                "text": " Found this paper, I've read another by James Grimmelmann and really enjoyed it. I've only skimmed it, but seems like it might be more to your liking: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/arxiv.org\/pdf\/2206.14879.pdf"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1689204357.406579",
        "client_msg_id": "01750347-e2e9-4384-b4e8-a2675608859f",
        "text": "To my liking? :slightly_smiling_face: You have invaded the very heart of my domain!:smiling_imp::fire: That paper was the keynote at the inaugural ProLaLa workshop in '22. I presented at ProLaLa '22 and '23. My co-author Joaquin is on the organizing committee along with Denis Merigoux, who is the developer of OpenFisca, the worlds most popular Rules as Code tool, and my former boss Meng Weng Wong, though I think he's moved on to run his own conference in Singapore, now. You should check out Grimmelman's <https:\/\/james.grimmelmann.net\/files\/articles\/structure-and-legal-interpretation.pdf|work on ambiguity in code>. If Diver says \"programmers don't understand how law works, it's inherently interpretable\", Grimmelman can be read to say \"lawyers don't understand how code works, it's interpretable just like law.\" I was reminded of it by the episode, when someone (I can't remember if it was you or Ivan) mentioned that a program \"means\" what it does on a correctly functioning computer. Grimmelman complicates that idea.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688402564.602729",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aE9M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To my liking? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " You have invaded the very heart of my domain!"
                            },
                            {
                                "type": "emoji",
                                "name": "smiling_imp",
                                "unicode": "1f608"
                            },
                            {
                                "type": "emoji",
                                "name": "fire",
                                "unicode": "1f525"
                            },
                            {
                                "type": "text",
                                "text": " That paper was the keynote at the inaugural ProLaLa workshop in '22. I presented at ProLaLa '22 and '23. My co-author Joaquin is on the organizing committee along with Denis Merigoux, who is the developer of OpenFisca, the worlds most popular Rules as Code tool, and my former boss Meng Weng Wong, though I think he's moved on to run his own conference in Singapore, now. You should check out Grimmelman's "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/james.grimmelmann.net\/files\/articles\/structure-and-legal-interpretation.pdf",
                                "text": "work on ambiguity in code"
                            },
                            {
                                "type": "text",
                                "text": ". If Diver says \"programmers don't understand how law works, it's inherently interpretable\", Grimmelman can be read to say \"lawyers don't understand how code works, it's interpretable just like law.\" I was reminded of it by the episode, when someone (I can't remember if it was you or Ivan) mentioned that a program \"means\" what it does on a correctly functioning computer. Grimmelman complicates that idea."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "fire",
                "users": [
                    "UK3LH8CF5"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1689204501.206359",
        "client_msg_id": "5bdc5dc0-62c1-4d16-ba5c-3e508e6e3245",
        "text": "Great to hear it! That's the paper I read by Grimmelmann that I loved. The reply by Marieke Huisman is soooo sad. The paper is so rich and the reply so dull. I'm actually considering writing something about how bad the reply is.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688402564.602729",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xhFKA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great to hear it! That's the paper I read by Grimmelmann that I loved. The reply by Marieke Huisman is soooo sad. The paper is so rich and the reply so dull. I'm actually considering writing something about how bad the reply is."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1689204583.182029",
        "client_msg_id": "2bcb12dc-c60f-4e99-8c90-7253f82da618",
        "text": "Figures. Right up your alley. I didn't know there was a reply. I'll read your review if you write it. :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1688402564.602729",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UZI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Figures. Right up your alley. I didn't know there was a reply. I'll read your review if you write it. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UK3LH8CF5"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UL5AX4G2H",
        "type": "message",
        "ts": "1689211921.984819",
        "client_msg_id": "8bbb80f1-5670-452c-a706-55a611977954",
        "text": "<https:\/\/codefaster.substack.com\/p\/unix-1-liner-for-getting-an-api-key>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b05739c44158",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-12-05\/1552783044467_b05739c44158d860f3bd_72.png",
            "first_name": "",
            "real_name": "Tyler Adams",
            "display_name": "Tyler Adams",
            "team": "T5TCAFTA9",
            "name": "coppero1237",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689211921.984819",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1689272263.182829",
        "reply_users": [
            "UGWUJUZHT",
            "UL5AX4G2H"
        ],
        "replies": [
            {
                "user": "UGWUJUZHT",
                "ts": "1689214828.043809"
            },
            {
                "user": "UL5AX4G2H",
                "ts": "1689272263.182829"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yQ2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/codefaster.substack.com\/p\/unix-1-liner-for-getting-an-api-key"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1689214828.043809",
        "edited": {
            "user": "UGWUJUZHT",
            "ts": "1689215377.000000"
        },
        "client_msg_id": "923c7fff-d3b8-4a76-83eb-a161a4643a6e",
        "text": "could\n```env | grep OPENAI_API | cut -d '=' -f 2 | ....```\nhave been written as\n\n```echo $OPENAI_API | ....```\n?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1689211921.984819",
        "parent_user_id": "UL5AX4G2H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kp+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "could\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "env | grep OPENAI_API | cut -d '=' -f 2 | ...."
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nhave been written as\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "echo $OPENAI_API | ...."
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "U055QFU92JK"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UBKNXPBAB"
                ],
                "count": 1
            }
        ]
    }
]