[
    {
        "user": "U023V63MF6V",
        "type": "message",
        "ts": "1699891861.798179",
        "client_msg_id": "6be0cd50-68ea-4e09-8808-affe1ddddce8",
        "text": "Agreed, <@UMHG81CBH> <@UJBAJNFLK> I share a lot of the feuds with the nodegraph way, but I'd like to sort them out. I've now used boxes-n-wires for everything from building... igh... \"apps\" for business (simple rich form submissions to connecting diverse legacy system into a simple mobile get-things-done tool) and personal use (habit tracker, medication tracker, travel tracker... small software), to getting at least into day 10 of Advent of Code (i.e. use it as a computationally powerful thinking surface)\n\nI do not come to the table with the deep experiences &amp; assumptions of a textual programmer -- those who code textually are definitely faster, but code has just 1.5 dimensions (linear lines of code + structural hinting) and I don't find that as ready-to-hand as I'd like at all. However programmers today would find a new nodegraph based visual coding surface quite present-at-hand I'd imagine.\n\nTo address the complexity peeve (you now have a wonderful 2.X dimensions of information) my answer has been two-fold: \"components\" &amp; \"live previews\";\n\n• \"components\" --  you can collapse a sub-graph into a pure function (re-usable) component that has its own in\/out interface -- once you're done thinking through a functional portion of the graph, you can group\/collapse it, give it an interface, annotate it for understanding, and you've greatly simplified your graph. So for now \"zooming in\" is actually \"drilling in.\"\n• \"live preview\" -- your box is not just a box, it's a small live\/reaactive preview of what it does, either showing the state of computation or the final computed output; your wire is not just a wire, it highlights to show flow, lighting up the next box as downstream state updates propagate through\nIt's quite beautiful in practice :-)\n\n_nb: all that being said, the most complex graphs do become hairnets, spaghetti, and detritus -- but so can text, and one answer is good mise-en-place_",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8c781271e0f0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-30\/2111810970118_8c781271e0f034f7c468_72.jpg",
            "first_name": "",
            "real_name": "Arvind Thyagarajan",
            "display_name": "Arvind Thyagarajan",
            "team": "T5TCAFTA9",
            "name": "arvind",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1699698007.782979",
        "parent_user_id": "UMHG81CBH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xlClO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Agreed, "
                            },
                            {
                                "type": "user",
                                "user_id": "UMHG81CBH"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " I share a lot of the feuds with the nodegraph way, but I'd like to sort them out. I've now used boxes-n-wires for everything from building... igh... \"apps\" for business (simple rich form submissions to connecting diverse legacy system into a simple mobile get-things-done tool) and personal use (habit tracker, medication tracker, travel tracker... small software), to getting at least into day 10 of Advent of Code (i.e. use it as a computationally powerful thinking surface)\n\nI do not come to the table with the deep experiences & assumptions of a textual programmer -- those who code textually are definitely faster, but code has just 1.5 dimensions (linear lines of code + structural hinting) and I don't find that as ready-to-hand as I'd like at all. However programmers today would find a new nodegraph based visual coding surface quite present-at-hand I'd imagine.\n\nTo address the complexity peeve (you now have a wonderful 2.X dimensions of information) my answer has been two-fold: \"components\" & \"live previews\";\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "\"components\" --  you can collapse a sub-graph into a pure function (re-usable) component that has its own in\/out interface -- once you're done thinking through a functional portion of the graph, you can group\/collapse it, give it an interface, annotate it for understanding, and you've greatly simplified your graph. So for now \"zooming in\" is actually \"drilling in.\""
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "\"live preview\" -- your box is not just a box, it's a small live\/reaactive preview of what it does, either showing the state of computation or the final computed output; your wire is not just a wire, it highlights to show flow, lighting up the next box as downstream state updates propagate through"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIt's quite beautiful in practice :-)\n\n"
                            },
                            {
                                "type": "text",
                                "text": "nb: all that being said, the most complex graphs do become hairnets, spaghetti, and detritus -- but so can text, and one answer is good mise-en-place",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U023V63MF6V",
        "type": "message",
        "ts": "1699892735.952649",
        "client_msg_id": "283fdc26-a5c7-4452-b4ae-14a1f8ec7476",
        "text": "Re:\n&gt; often low in information density\nYes, and it's it a pity when that's the case!\n\nBecause the opportunity is actually to present a much greater information load in a far more immediately _grokkable_ way -- where you have, at a glance:\n• the nodes or \"functions\", each has a type, does a thing, and presents an interface of strongly typed binding-points that you can connect to\n• the center of every node previewing the partial or complete state of execution, live as you're building (it's a 2D reactive spreadsheet of cells under the hood)\n• the general flow of data, logic, and actions across the graph\n• rich markdown annotations with some domain specific nifty things to point you through the graph as needed\n• errors highlighted on-graph, as they happen\nNow that's a lot of information! But once your eyes get used to viewing the territory, my sense in using this system is that you absorb all the information quite comfortably.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8c781271e0f0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-30\/2111810970118_8c781271e0f034f7c468_72.jpg",
            "first_name": "",
            "real_name": "Arvind Thyagarajan",
            "display_name": "Arvind Thyagarajan",
            "team": "T5TCAFTA9",
            "name": "arvind",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1699698007.782979",
        "parent_user_id": "UMHG81CBH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zC4TV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Re:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "often low in information density"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, and it's it a pity when that's the case!\n\nBecause the opportunity is actually to present a much greater information load in a far more immediately "
                            },
                            {
                                "type": "text",
                                "text": "grokkable",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " way -- where you have, at a glance:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "the nodes or \"functions\", each has a type, does a thing, and presents an interface of strongly typed binding-points that you can connect to"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "the center of every node previewing the partial or complete state of execution, live as you're building (it's a 2D reactive spreadsheet of cells under the hood)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "the general flow of data, logic, and actions across the graph"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "rich markdown annotations with some domain specific nifty things to point you through the graph as needed"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "errors highlighted on-graph, as they happen"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nNow that's a lot of information! But once your eyes get used to viewing the territory, my sense in using this system is that you absorb all the information quite comfortably."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1699895685.855069",
        "client_msg_id": "ea6c183a-fef7-48f1-9c6e-1643245f4362",
        "text": "<@UMHG81CBH> Yes, rewriting is the execution phase. The equivalent of a program is a set of rules which has in general no structure at all. A graph with no edges. Some rewriting technique add a partial order to the set, but that is just for convenience.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1699698007.782979",
        "parent_user_id": "UMHG81CBH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/YUbK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UMHG81CBH"
                            },
                            {
                                "type": "text",
                                "text": " Yes, rewriting is the execution phase. The equivalent of a program is a set of rules which has in general no structure at all. A graph with no edges. Some rewriting technique add a partial order to the set, but that is just for convenience."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDRF3ALP4",
        "type": "message",
        "ts": "1699896496.554289",
        "client_msg_id": "cb1302e2-1d8e-4bb7-84bf-43f4f8bdce05",
        "text": "Is there a good catalogue of programming languages? Preferably with the option of searching by feature or comparing languages on some dimensions?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cc11a4b410bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-01-16\/527084657030_cc11a4b410bd932425de_72.jpg",
            "first_name": "Gregor",
            "real_name": "Gregor",
            "display_name": "Gregor",
            "team": "T5TCAFTA9",
            "name": "gregorwbr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1699896496.554289",
        "reply_count": 9,
        "reply_users_count": 8,
        "latest_reply": "1700155282.685699",
        "reply_users": [
            "UMQ6LR9NZ",
            "UMHG81CBH",
            "U04JY2BF24E",
            "UDRF3ALP4",
            "U05PESXCC2E",
            "UJBAJNFLK",
            "U02028JHX37",
            "U05NLFQQ5MJ"
        ],
        "replies": [
            {
                "user": "UMQ6LR9NZ",
                "ts": "1699896618.863149"
            },
            {
                "user": "UMHG81CBH",
                "ts": "1699897020.777889"
            },
            {
                "user": "U04JY2BF24E",
                "ts": "1699898986.292879"
            },
            {
                "user": "UDRF3ALP4",
                "ts": "1699901699.273299"
            },
            {
                "user": "UDRF3ALP4",
                "ts": "1699906109.259229"
            },
            {
                "user": "U05PESXCC2E",
                "ts": "1699922171.589629"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1699959741.609399"
            },
            {
                "user": "U02028JHX37",
                "ts": "1699995968.000839"
            },
            {
                "user": "U05NLFQQ5MJ",
                "ts": "1700155282.685699"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RHetj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is there a good catalogue of programming languages? Preferably with the option of searching by feature or comparing languages on some dimensions?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1699896618.863149",
        "client_msg_id": "43cfca27-2407-45ce-aae9-bff6d6d02f1d",
        "text": "this doesn’t line up 1:1 with what you are asking, but I’ve always found that <https:\/\/learnxinyminutes.com\/|learn x in y> is a quick way to compare a number of languages, and get a sense for their basic semantics and feature set.\n\nthe big gap I see in learn x in y is that it doesn’t typically touch on tooling and ecosystem",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1699896496.554289",
        "parent_user_id": "UDRF3ALP4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X8zwN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this doesn’t line up 1:1 with what you are asking, but I’ve always found that "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/learnxinyminutes.com\/",
                                "text": "learn x in y"
                            },
                            {
                                "type": "text",
                                "text": " is a quick way to compare a number of languages, and get a sense for their basic semantics and feature set.\n\nthe big gap I see in learn x in y is that it doesn’t typically touch on tooling and ecosystem"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMHG81CBH",
        "type": "message",
        "ts": "1699897020.777889",
        "client_msg_id": "3c7e57c5-f4c8-4aea-b508-f0f2d7f18ca3",
        "text": "There's a few FoC-oriented languages in the catalog: <https:\/\/futureofcoding.org\/catalog\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "eeae1e506647",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-11-03\/6146149791636_eeae1e506647f237c0f9_72.jpg",
            "first_name": "Xavier",
            "real_name": "Xavier Lambein",
            "display_name": "Xavier Lambein",
            "team": "T5TCAFTA9",
            "name": "xlambein",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1699896496.554289",
        "parent_user_id": "UDRF3ALP4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eLZHJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's a few FoC-oriented languages in the catalog: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.org\/catalog\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UMV4B97GT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMHG81CBH",
        "type": "message",
        "ts": "1699897869.665759",
        "edited": {
            "user": "UMHG81CBH",
            "ts": "1699897883.000000"
        },
        "client_msg_id": "0c0ab1eb-8574-447c-9379-4d6ea4c5a197",
        "text": "> components\nSounds a bit like the \"good practices\" around coding in a pure functional language, where it's frowned upon to write very long functions because they're way less readable. This means a good boxes-n-wires programming environment should make it seamless to abstract things into components and inline them back :thinking_face:\n> live preview\nDefinitely a big selling point of such systems, I do love that about them!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "eeae1e506647",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-11-03\/6146149791636_eeae1e506647f237c0f9_72.jpg",
            "first_name": "Xavier",
            "real_name": "Xavier Lambein",
            "display_name": "Xavier Lambein",
            "team": "T5TCAFTA9",
            "name": "xlambein",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1699698007.782979",
        "parent_user_id": "UMHG81CBH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ywGZj",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "components"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sounds a bit like the \"good practices\" around coding in a pure functional language, where it's frowned upon to write very long functions because they're way less readable. This means a good boxes-n-wires programming environment should make it seamless to abstract things into components and inline them back "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "live preview"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Definitely a big selling point of such systems, I do love that about them!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMHG81CBH",
        "type": "message",
        "ts": "1699897983.428469",
        "client_msg_id": "c1923cb4-413b-4e05-b188-780740ef8d18",
        "text": "<@U023V63MF6V> Do you have recommendations of excellent wires-and-boxes systems you've used? I think my biases come in part from many terrible experiences with them (including currently at my day job :&lt;).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "eeae1e506647",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-11-03\/6146149791636_eeae1e506647f237c0f9_72.jpg",
            "first_name": "Xavier",
            "real_name": "Xavier Lambein",
            "display_name": "Xavier Lambein",
            "team": "T5TCAFTA9",
            "name": "xlambein",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1699698007.782979",
        "parent_user_id": "UMHG81CBH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CWZgb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U023V63MF6V"
                            },
                            {
                                "type": "text",
                                "text": " Do you have recommendations of excellent wires-and-boxes systems you've used? I think my biases come in part from many terrible experiences with them (including currently at my day job :<)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMHG81CBH",
        "type": "message",
        "ts": "1699898047.763789",
        "client_msg_id": "4bdfa508-eb68-4a32-94a4-143b56f43970",
        "text": "<@UJBAJNFLK> I don't fully understand. If it's like a graph with no edge, how does it represent a computation?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "eeae1e506647",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-11-03\/6146149791636_eeae1e506647f237c0f9_72.jpg",
            "first_name": "Xavier",
            "real_name": "Xavier Lambein",
            "display_name": "Xavier Lambein",
            "team": "T5TCAFTA9",
            "name": "xlambein",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1699698007.782979",
        "parent_user_id": "UMHG81CBH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mb7ND",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " I don't fully understand. If it's like a graph with no edge, how does it represent a computation?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04JY2BF24E",
        "type": "message",
        "ts": "1699898986.292879",
        "client_msg_id": "be268c16-9e02-4ea8-9ae3-8f98c4dd9452",
        "text": "Rosetta code? Granted, no search. <https:\/\/rosettacode.org\/wiki\/Category:Programming_Languages>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "154a9d12968c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-06-13\/5441522160256_154a9d12968ca5a13cf5_72.jpg",
            "first_name": "Greg",
            "real_name": "Greg Bylenok",
            "display_name": "Greg Bylenok",
            "team": "T5TCAFTA9",
            "name": "gregory.bylenok",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1699896496.554289",
        "parent_user_id": "UDRF3ALP4",
        "attachments": [
            {
                "from_url": "https:\/\/rosettacode.org\/wiki\/Category:Programming_Languages",
                "service_icon": "https:\/\/rosettacode.org\/apple-touch-icon.png",
                "thumb_url": "https:\/\/static.wikiforge.net\/rosettacodewikitide\/d\/d3\/RosettaCodeTitle.png",
                "thumb_width": 110,
                "thumb_height": 157,
                "ts": 1590412268,
                "id": 1,
                "original_url": "https:\/\/rosettacode.org\/wiki\/Category:Programming_Languages",
                "fallback": "Rosetta Code: Category:Programming Languages",
                "text": "For the programming language, see Category:Programming Language. A programming language is a symbolic representation of a specification for computer behavior. A...",
                "title": "Category:Programming Languages",
                "title_link": "https:\/\/rosettacode.org\/wiki\/Category:Programming_Languages",
                "service_name": "Rosetta Code"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rL0c2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Rosetta code? Granted, no search. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/rosettacode.org\/wiki\/Category:Programming_Languages"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "point_up",
                "users": [
                    "U05PESXCC2E"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UDRF3ALP4",
        "type": "message",
        "ts": "1699901699.273299",
        "client_msg_id": "9bbf0dcc-38c2-4cfa-b4e9-2d8c2671b881",
        "text": "Thanks for the resources! Grateful for it all. Might use it to compile a structured list of my own and share it back here",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cc11a4b410bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-01-16\/527084657030_cc11a4b410bd932425de_72.jpg",
            "first_name": "Gregor",
            "real_name": "Gregor",
            "display_name": "Gregor",
            "team": "T5TCAFTA9",
            "name": "gregorwbr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1699896496.554289",
        "parent_user_id": "UDRF3ALP4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CYbhE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the resources! Grateful for it all. Might use it to compile a structured list of my own and share it back here"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U023V63MF6V",
        "type": "message",
        "ts": "1699902461.670039",
        "client_msg_id": "5541a719-c175-4e3e-9e3d-7c1e70f12b5c",
        "text": "What do you use in your current day job <@UMHG81CBH>?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8c781271e0f0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-30\/2111810970118_8c781271e0f034f7c468_72.jpg",
            "first_name": "",
            "real_name": "Arvind Thyagarajan",
            "display_name": "Arvind Thyagarajan",
            "team": "T5TCAFTA9",
            "name": "arvind",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1699698007.782979",
        "parent_user_id": "UMHG81CBH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oKKkS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What do you use in your current day job "
                            },
                            {
                                "type": "user",
                                "user_id": "UMHG81CBH"
                            },
                            {
                                "type": "text",
                                "text": "?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDRF3ALP4",
        "type": "message",
        "ts": "1699906109.259229",
        "client_msg_id": "03ea4f3e-1db0-43b9-bf25-9f973bed51bc",
        "text": "I've started <https:\/\/airtable.com\/appvWEiBScAovJ49j\/shrJraIx0lH2Z1H5p|here>, focusing on new-ish langs that spark my interest, probably won't add much in terms of historic langs (me myself, but happy to give edit rights)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cc11a4b410bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-01-16\/527084657030_cc11a4b410bd932425de_72.jpg",
            "first_name": "Gregor",
            "real_name": "Gregor",
            "display_name": "Gregor",
            "team": "T5TCAFTA9",
            "name": "gregorwbr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1699896496.554289",
        "parent_user_id": "UDRF3ALP4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lxqxd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've started "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/airtable.com\/appvWEiBScAovJ49j\/shrJraIx0lH2Z1H5p",
                                "text": "here"
                            },
                            {
                                "type": "text",
                                "text": ", focusing on new-ish langs that spark my interest, probably won't add much in terms of historic langs (me myself, but happy to give edit rights)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PESXCC2E",
        "type": "message",
        "ts": "1699922171.589629",
        "client_msg_id": "1dd77404-020d-4b2e-ac1e-79b5d8039727",
        "text": "For a syntax between languages reference, I like to visit <https:\/\/rigaux.org\/language-study\/syntax-across-languages.html>. It's getting older, but sometimes useful to see how different languages implement a similar concept.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0d9c7dcaa476",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-17\/6066889038289_0d9c7dcaa476f559eb42_72.jpg",
            "first_name": "Mike",
            "real_name": "Mike Austin",
            "display_name": "Mike Austin",
            "team": "T5TCAFTA9",
            "name": "mike.austin.1024",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1699896496.554289",
        "parent_user_id": "UDRF3ALP4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8thW7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For a syntax between languages reference, I like to visit "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/rigaux.org\/language-study\/syntax-across-languages.html"
                            },
                            {
                                "type": "text",
                                "text": ". It's getting older, but sometimes useful to see how different languages implement a similar concept."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "UDRF3ALP4"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMHG81CBH",
        "type": "message",
        "ts": "1699947542.959709",
        "edited": {
            "user": "UMHG81CBH",
            "ts": "1699947861.000000"
        },
        "client_msg_id": "8c7e2cc5-c256-4542-bb3e-f6daa29bff31",
        "text": "Data scientists & previous devs built a massive model in KNIME, which is an absolute pain to use and maintain",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "eeae1e506647",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-11-03\/6146149791636_eeae1e506647f237c0f9_72.jpg",
            "first_name": "Xavier",
            "real_name": "Xavier Lambein",
            "display_name": "Xavier Lambein",
            "team": "T5TCAFTA9",
            "name": "xlambein",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1699698007.782979",
        "parent_user_id": "UMHG81CBH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tKrzZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Data scientists & previous devs built a massive model in KNIME, which is an absolute pain to use and maintain"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]