[
    {
        "user": "U023V63MF6V",
        "type": "message",
        "ts": "1727546957.492229",
        "client_msg_id": "4d439225-e7fd-4bb4-ae0b-0c50b0863049",
        "text": "(crosspost) a small tool, built live, at &amp; for a small gathering:\n<https:\/\/futureofcoding.slack.com\/archives\/C05V6D72U1K\/p1727540887587169>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8c781271e0f0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-30\/2111810970118_8c781271e0f034f7c468_72.jpg",
            "first_name": "",
            "real_name": "Arvind Thyagarajan",
            "display_name": "Arvind Thyagarajan",
            "team": "T5TCAFTA9",
            "name": "arvind",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1727335272.619229",
        "parent_user_id": "U018S42NMMM",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C05V6D72U1K\/p1727540887587169",
                "ts": "1727540887.587169",
                "author_id": "U023V63MF6V",
                "channel_id": "C05V6D72U1K",
                "channel_team": "T5TCAFTA9",
                "is_msg_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T5TCAFTA9",
                        "channel": "C05V6D72U1K",
                        "ts": "1727540887.587169",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "09TVO",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "Oh a little late but this is the small app built during the session using the Remix Studio node\/wire editor. Couldn't quite finish it during the 3 minute lighting demo "
                                                },
                                                {
                                                    "type": "emoji",
                                                    "name": "joy",
                                                    "unicode": "1f602"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": " but here it is as intended. It is a little tool to say, \"Hi I'm here\", or \"I'm raising my hand\":\n"
                                                },
                                                {
                                                    "type": "link",
                                                    "url": "https:\/\/remix.app\/event\/focjam",
                                                    "text": "https:\/\/remix.app\/event\/focjam"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "\n(ps: It should load as a native app clip if you're on iOS, I'm not, so I can neither confirm nor deny...)\n\nThe structure:\n"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "rich_text_list",
                                            "elements": [
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "the runtime is housed in a webcomponent, and can run on web, in an appclip, in our native app, or as an embed anywhere you can stick a webcomponent"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "the \"app\" is a .remix executable, packaged from the visual code you saw in the demo"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "the interactions are brokered via a cloud service hosting agents (ok, API endpoints) also built visually and installed on cloud via a .remix file"
                                                        }
                                                    ]
                                                },
                                                {
                                                    "type": "rich_text_section",
                                                    "elements": [
                                                        {
                                                            "type": "text",
                                                            "text": "Liveness comes from server sent events, a native primitive in our visual programming language"
                                                        }
                                                    ]
                                                }
                                            ],
                                            "style": "bullet",
                                            "indent": 0,
                                            "offset": 0,
                                            "border": 0
                                        },
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "\nWill share a build video separately on "
                                                },
                                                {
                                                    "type": "channel",
                                                    "channel_id": "CCL5VVBAN"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C05V6D72U1K\/p1727540887587169",
                "fallback": "[September 28th, 2024 9:28 AM] arvind: Oh a little late but this is the small app built during the session using the Remix Studio node\/wire editor. Couldn't quite finish it during the 3 minute lighting demo :joy: but here it is as intended. It is a little tool to say, \"Hi I'm here\", or \"I'm raising my hand\":\n<https:\/\/remix.app\/event\/focjam|https:\/\/remix.app\/event\/focjam>\n(ps: It should load as a native app clip if you're on iOS, I'm not, so I can neither confirm nor deny...)\n\nThe structure:\n• the runtime is housed in a webcomponent, and can run on web, in an appclip, in our native app, or as an embed anywhere you can stick a webcomponent\n• the \"app\" is a .remix executable, packaged from the visual code you saw in the demo\n• the interactions are brokered via a cloud service hosting agents (ok, API endpoints) also built visually and installed on cloud via a .remix file\n• Liveness comes from server sent events, a native primitive in our visual programming language\nWill share a build video separately on <#CCL5VVBAN|>",
                "text": "Oh a little late but this is the small app built during the session using the Remix Studio node\/wire editor. Couldn't quite finish it during the 3 minute lighting demo :joy: but here it is as intended. It is a little tool to say, \"Hi I'm here\", or \"I'm raising my hand\":\n<https:\/\/remix.app\/event\/focjam|https:\/\/remix.app\/event\/focjam>\n(ps: It should load as a native app clip if you're on iOS, I'm not, so I can neither confirm nor deny...)\n\nThe structure:\n• the runtime is housed in a webcomponent, and can run on web, in an appclip, in our native app, or as an embed anywhere you can stick a webcomponent\n• the \"app\" is a .remix executable, packaged from the visual code you saw in the demo\n• the interactions are brokered via a cloud service hosting agents (ok, API endpoints) also built visually and installed on cloud via a .remix file\n• Liveness comes from server sent events, a native primitive in our visual programming language\nWill share a build video separately on <#CCL5VVBAN|>",
                "author_name": "Arvind Thyagarajan",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/U023V63MF6V",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2021-05-30\/2111810970118_8c781271e0f034f7c468_48.jpg",
                "author_subname": "Arvind Thyagarajan",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bddgc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(crosspost) a small tool, built live, at & for a small gathering:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C05V6D72U1K\/p1727540887587169"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U01JNTE35QS"
                ],
                "count": 2
            }
        ]
    },
    {
        "text": "1. the flow is a simple one: an entry screen where you pick a colour, icon, a few tags for yourself \/ the \"room\" where everyone hangs out \/ and an overlay to show you anyone's avatar\/name\/tags\n2. this is the nodegraph for the \"room\" view: here you'll see the api calls to the service returning your profile and everyone else who's joined, some decision logic to show a different profile card, and navigation actions, etc.\n    a. everything is \"data\" so it can flow from node to node (live of course :-))\n    b. yellow lines are data, blue lines are cards, pink lines are action messages\n    c. there are lots of node primitives, like object, filter, lookup, join, database queries, card, component, decision, state machine, various actions like save, navigate, API calls, etc. etc. etc.\n3. the \"cloud agent\" is a simple one, no params even in this case, it just queries the data store it's sitting in and returns all the records to the caller (which is in the view in #2 above)\n",
        "files": [
            {
                "id": "F07PENHNPJ9",
                "mode": "hidden_by_limit"
            },
            {
                "id": "F07Q6CGNU48",
                "mode": "hidden_by_limit"
            },
            {
                "id": "F07PHJJN36E",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U023V63MF6V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YKaQJ",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "the flow is a simple one: an entry screen where you pick a colour, icon, a few tags for yourself \/ the \"room\" where everyone hangs out \/ and an overlay to show you anyone's avatar\/name\/tags"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "this is the nodegraph for the \"room\" view: here you'll see the api calls to the service returning your profile and everyone else who's joined, some decision logic to show a different profile card, and navigation actions, etc."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "everything is \"data\" so it can flow from node to node (live of course :-))"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "yellow lines are data, blue lines are cards, pink lines are action messages"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "there are lots of node primitives, like object, filter, lookup, join, database queries, card, component, decision, state machine, various actions like save, navigate, API calls, etc. etc. etc."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 1,
                        "border": 0
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "the \"cloud agent\" is a simple one, no params even in this case, it just queries the data store it's sitting in and returns all the records to the caller (which is in the view in #2 above)"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "offset": 2,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1727547308.522389",
        "client_msg_id": "f76ab702-1d86-4572-9812-f4f83b63aba4",
        "thread_ts": "1727335272.619229",
        "parent_user_id": "U018S42NMMM"
    }
]