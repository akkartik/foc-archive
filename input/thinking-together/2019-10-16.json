[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1571211189.383900",
        "client_msg_id": "E490AE16-18CB-408A-A713-0DC4489CB6E0",
        "text": "<@UCUSW7WVD> I agree for software, but any new system that can’t work with existing data and protocols ends up being useless.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571149857.330400",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tDr9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " I agree for software, but any new system that can’t work with existing data and protocols ends up being useless."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1571211437.386200",
        "client_msg_id": "36650FCA-4926-4273-BBF6-8633F9321426",
        "text": "Racket is a nice example of a platform designed for making interoperable DSLs. Assuming that everyone adopts it, of course, which is unlikely.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571172258.364800",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2S4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Racket is a nice example of a platform designed for making interoperable DSLs. Assuming that everyone adopts it, of course, which is unlikely."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1571211574.386400",
        "client_msg_id": "b88fd472-8bd6-40e4-ab3c-98d413cf7018",
        "text": "Absolutely! <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1568821241254900?thread_ts=1568748321.207400> I'm a digital packrat; I wouldn't want to give up my data hoard.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571149857.330400",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1568821241254900?thread_ts=1568748321.207400",
                "fallback": "[September 18th, 2019 8:40 AM] ak: Part of the problem with a word like 'reuse' is that it leads to us conflating many different things. Standardizing on a common protocol is not the same as asking the whole world to use the exact same bits of code.",
                "ts": "1568821241.254900",
                "author_id": "UCUSW7WVD",
                "author_subname": "Kartik Agaram",
                "channel_id": "C5T9GPWFL",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "Part of the problem with a word like 'reuse' is that it leads to us conflating many different things. Standardizing on a common protocol is not the same as asking the whole world to use the exact same bits of code.",
                "author_name": "Kartik Agaram",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/UCUSW7WVD",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_48.png",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1568821241254900?thread_ts=1568748321.207400",
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "53J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Absolutely! "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1568821241254900?thread_ts=1568748321.207400"
                            },
                            {
                                "type": "text",
                                "text": " I'm a digital packrat; I wouldn't want to give up my data hoard."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1571213130.386700",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1571213322.000000"
        },
        "client_msg_id": "1b7cb8e9-185a-442e-96e6-16d971ba9da7",
        "text": "About 40 yrs ago I coined the acronym DTIL - Domain and Target Independent Language - as the definition of what I was striving for, and have been ever since. The Target independence meaning nothing in the language was affected by how the underlying hardware likes to work. Hence efficiency has to be achieved by whatever cleverness the language implementation can deploy; plus I expected hardware to get very much faster in the future (it did).\n\nThus DSLs are the opposite of DTILs, as indeed would a \"TSL\" be - a Target Specific Language. C is a TSL - you can specify `uint16`, etc and fiddle with bits. It's very close to the metal. I guess GLSL and OpenCL are also kinds of TSL: any language that is a wrapper for a machine type.\n\nSo I'm not interested in a number type that is machine-specific, or that makes things faster. If needed, that speed can be achieved by handing-off or wrapping or clever tricks.\n\nAnd I am not interested in `data Nat = Z | S Nat` as my pos-int number system, because no-one talks of three bananas by saying `S S S Z bananas`!\n\nI store numbers as strings, so they can be any length. My challenge of course, is that's not efficient, but I'm on this forum to ask for help with that, amongst other things!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571172258.364800",
        "parent_user_id": "UJN1TAYEQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NRIuC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "About 40 yrs ago I coined the acronym DTIL - Domain and Target Independent Language - as the definition of what I was striving for, and have been ever since. The Target independence meaning nothing in the language was affected by how the underlying hardware likes to work. Hence efficiency has to be achieved by whatever cleverness the language implementation can deploy; plus I expected hardware to get very much faster in the future (it did).\n\nThus DSLs are the opposite of DTILs, as indeed would a \"TSL\" be - a Target Specific Language. C is a TSL - you can specify "
                            },
                            {
                                "type": "text",
                                "text": "uint16",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", etc and fiddle with bits. It's very close to the metal. I guess GLSL and OpenCL are also kinds of TSL: any language that is a wrapper for a machine type.\n\nSo I'm not interested in a number type that is machine-specific, or that makes things faster. If needed, that speed can be achieved by handing-off or wrapping or clever tricks.\n\nAnd I am not interested in "
                            },
                            {
                                "type": "text",
                                "text": "data Nat = Z | S Nat",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " as my pos-int number system, because no-one talks of three bananas by saying "
                            },
                            {
                                "type": "text",
                                "text": "S S S Z bananas",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "!\n\nI store numbers as strings, so they can be any length. My challenge of course, is that's not efficient, but I'm on this forum to ask for help with that, amongst other things!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UMU2RLPR8",
        "type": "message",
        "ts": "1571213863.387100",
        "client_msg_id": "0ac06b0c-4a48-4756-9ba0-380a2a6e3329",
        "text": "PHP is well down the list these days and python is already up there near the top <https:\/\/insights.stackoverflow.com\/survey\/2019#technology>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84533398a201",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-10\/756734099191_84533398a201c4f2babe_72.png",
            "first_name": "Ryan",
            "real_name": "Ryan",
            "display_name": "comma",
            "team": "T5TCAFTA9",
            "name": "ryan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571201713.381700",
        "parent_user_id": "UEQ6M68H0",
        "attachments": [
            {
                "service_name": "Stack Overflow",
                "title": "Stack Overflow Developer Survey 2019",
                "title_link": "https:\/\/insights.stackoverflow.com\/survey\/2019#technology",
                "text": "Nearly 90,000 took this comprehensive, annual survey of people who code. Demographics. Most loved, dreaded and wanted technologies. Salary and careers.",
                "fallback": "Stack Overflow: Stack Overflow Developer Survey 2019",
                "image_url": "https:\/\/cdn.sstatic.net\/insights\/Img\/Survey\/2019\/TwitterCard.png?v=87e2a0f1b247",
                "from_url": "https:\/\/insights.stackoverflow.com\/survey\/2019#technology",
                "image_width": 477,
                "image_height": 250,
                "image_bytes": 143789,
                "service_icon": "https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/img\/favicon.ico?v=4f32ecc8f43d",
                "id": 1,
                "original_url": "https:\/\/insights.stackoverflow.com\/survey\/2019#technology"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "u0W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "PHP is well down the list these days and python is already up there near the top "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/insights.stackoverflow.com\/survey\/2019#technology"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJKKBAMLL",
        "type": "message",
        "ts": "1571214312.387400",
        "client_msg_id": "af470858-08a8-4402-a95b-f36c57e251ec",
        "text": "Thanks to <@UL3EE9WR1> for changing the topic to the community documentation. :thumbsup: This is perfect!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6b9db1f76eed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-12\/662675221668_6b9db1f76eed746965ca_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Peak",
            "display_name": "Steve",
            "team": "T5TCAFTA9",
            "name": "steve727",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571170191.360800",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bG9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks to "
                            },
                            {
                                "type": "user",
                                "user_id": "UL3EE9WR1"
                            },
                            {
                                "type": "text",
                                "text": " for changing the topic to the community documentation. "
                            },
                            {
                                "type": "emoji",
                                "name": "thumbsup",
                                "unicode": "1f44d"
                            },
                            {
                                "type": "text",
                                "text": " This is perfect!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJKKBAMLL",
        "type": "message",
        "ts": "1571214715.388000",
        "client_msg_id": "649f0acd-5df9-4fec-9b2c-8f5d81043c96",
        "text": "<@UEQ6M68H0> Your touch on some positions\/observations that I absolutely agree with, which is why I believe (concerning the web backend languages only) instead of replacing PHP\/Python\/Ruby\/Go\/etc. we (and future programmers) need cloud glue-code to tie all these services together. FD this is what we are building at Storyscript. Regardless of Storyscript, I believe we need (a) less complexity, (b) more inclusive\/diverse\/flexible backends (c) better abstraction than k8s (d) tools that are more cohesive so the barrier to entry is less intense for our fellow new developers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6b9db1f76eed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-12\/662675221668_6b9db1f76eed746965ca_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Peak",
            "display_name": "Steve",
            "team": "T5TCAFTA9",
            "name": "steve727",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571162513.349300",
        "parent_user_id": "UJKKBAMLL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LHnJi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " Your touch on some positions\/observations that I absolutely agree with, which is why I believe (concerning the web backend languages only) instead of replacing PHP\/Python\/Ruby\/Go\/etc. we (and future programmers) need cloud glue-code to tie all these services together. FD this is what we are building at Storyscript. Regardless of Storyscript, I believe we need (a) less complexity, (b) more inclusive\/diverse\/flexible backends (c) better abstraction than k8s (d) tools that are more cohesive so the barrier to entry is less intense for our fellow new developers."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UP448V1PB",
        "type": "message",
        "ts": "1571238236.389200",
        "edited": {
            "user": "UP448V1PB",
            "ts": "1571238418.000000"
        },
        "client_msg_id": "f19f90c3-93f3-4e0b-bb2e-15af638860ab",
        "text": "Python is pretty ubiquitous in web backend, especially where the JVM or .NET CLR aren't a hard requirement.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "c956630d6bd7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-11\/794439110727_c956630d6bd7ba8faafb_72.jpg",
            "first_name": "Eric",
            "real_name": "Eric Casteleijn",
            "display_name": "Eric Casteleijn",
            "team": "T5TCAFTA9",
            "name": "thisfred",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571201713.381700",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LEmwT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Python is pretty ubiquitous in web backend, especially where the JVM or .NET CLR aren't a hard requirement."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UP448V1PB",
        "type": "message",
        "ts": "1571238272.389400",
        "client_msg_id": "09e09208-54c4-43b0-87cf-fc9bcef7e7d1",
        "text": "I haven't heard it called a scripting language in about 10 years either :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "c956630d6bd7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-11\/794439110727_c956630d6bd7ba8faafb_72.jpg",
            "first_name": "Eric",
            "real_name": "Eric Casteleijn",
            "display_name": "Eric Casteleijn",
            "team": "T5TCAFTA9",
            "name": "thisfred",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571201713.381700",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zZP0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven't heard it called a scripting language in about 10 years either "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "thread_broadcast",
        "user": "UEF95M2RH",
        "thread_ts": "1571196503.377700",
        "root": {
            "user": "UFB8STN7K",
            "type": "message",
            "ts": "1571196503.377700",
            "client_msg_id": "a16b42ab-93e0-40eb-83a8-d1609483ee1c",
            "text": "Like of course, each domain has its own set of primitives and operations that make sense for it, and we need libraries\/languages\/whatever to reflect that. The main question is rather, when there is shared structure between domains, how much of that can be captured by abstractions in the underlying programming system?",
            "team": "T5TCAFTA9",
            "thread_ts": "1571196503.377700",
            "reply_count": 5,
            "reply_users_count": 2,
            "latest_reply": "1571257840.407700",
            "reply_users": [
                "UEF95M2RH",
                "UFB8STN7K"
            ],
            "replies": [
                {
                    "user": "UEF95M2RH",
                    "ts": "1571240472.394300"
                },
                {
                    "user": "UFB8STN7K",
                    "ts": "1571253573.407000"
                },
                {
                    "user": "UFB8STN7K",
                    "ts": "1571253581.407200"
                },
                {
                    "user": "UFB8STN7K",
                    "ts": "1571253615.407400"
                },
                {
                    "user": "UEF95M2RH",
                    "ts": "1571257840.407700"
                }
            ],
            "is_locked": false,
            "subscribed": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "x1l",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "Like of course, each domain has its own set of primitives and operations that make sense for it, and we need libraries\/languages\/whatever to reflect that. The main question is rather, when there is shared structure between domains, how much of that can be captured by abstractions in the underlying programming system?"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1571240472.394300",
        "client_msg_id": "f7f89990-4281-426d-8913-a441203fbc82",
        "text": "<@UFB8STN7K> I'm not sure I understand exactly what you mean. Could you give:\n\n1. an example of what you mean by shared structure between domains;\n2. an example of it being captured by abstractions in the underlying programming system;\n3. an example of it _not_ being captured by abstractions in the underlying system?",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "22TY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": " I'm not sure I understand exactly what you mean. Could you give:\n\n1. an example of what you mean by shared structure between domains;\n2. an example of it being captured by abstractions in the underlying programming system;\n3. an example of it "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " being captured by abstractions in the underlying system?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJKKBAMLL",
        "type": "message",
        "ts": "1571240646.396900",
        "client_msg_id": "a0fe90ad-0296-4243-a9f4-353863f40fc4",
        "text": "Given that we agree there will be many DSLs\/tools fitting many different industries. I’m proposing a new channel for `cloud-centric languages for application developers` as <#C5T9GPWFL|thinking-together> and <#CLYCGTCPL|of-end-user-programming> are too broad and IMO not capable to sustain this many sub-communities\/interests.\n— Take for example languages could include Storyscript, Darklang, Ballerina, Bloomlang, Strat and maybe Stdlib. These are all cloud focused for application developers.\nI ask now: who is interested in this category (give a :thumbsup: if you are)? Should we create a separate thread for inspiring and sharing ideas (give a :hash: if you agree)? Thank you!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6b9db1f76eed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-12\/662675221668_6b9db1f76eed746965ca_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Peak",
            "display_name": "Steve",
            "team": "T5TCAFTA9",
            "name": "steve727",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JXT4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Given that we agree there will be many DSLs\/tools fitting many different industries. I’m proposing a new channel for "
                            },
                            {
                                "type": "text",
                                "text": "cloud-centric languages for application developers",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " as "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CLYCGTCPL"
                            },
                            {
                                "type": "text",
                                "text": " are too broad and IMO not capable to sustain this many sub-communities\/interests.\n— Take for example languages could include Storyscript, Darklang, Ballerina, Bloomlang, Strat and maybe Stdlib. These are all cloud focused for application developers.\nI ask now: who is interested in this category (give a "
                            },
                            {
                                "type": "emoji",
                                "name": "thumbsup",
                                "unicode": "1f44d"
                            },
                            {
                                "type": "text",
                                "text": " if you are)? Should we create a separate thread for inspiring and sharing ideas (give a "
                            },
                            {
                                "type": "emoji",
                                "name": "hash",
                                "unicode": "0023-fe0f-20e3"
                            },
                            {
                                "type": "text",
                                "text": " if you agree)? Thank you!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJKKBAMLL",
                    "U8A5MS6R1",
                    "UHWC9PXBL",
                    "UAL7940NM",
                    "UPDJV04FR"
                ],
                "count": 5
            },
            {
                "name": "hash",
                "users": [
                    "UJKKBAMLL",
                    "UFPH678P4",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1571241676.397700",
        "client_msg_id": "75dea7b1-9079-4c64-bbcb-68e8f3360792",
        "text": "<https:\/\/stratechery.com\/2019\/google-and-ambient-computing\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "Stratechery by Ben Thompson",
                "title": "Google and Ambient Computing",
                "title_link": "https:\/\/stratechery.com\/2019\/google-and-ambient-computing\/",
                "text": "Google presented a vision of ambient computing that goes beyond the smartphone. The company is well-placed, but faces challenges both in the marketplace and in the mirror.",
                "fallback": "Stratechery by Ben Thompson: Google and Ambient Computing",
                "thumb_url": "https:\/\/stratechery.com\/wp-content\/uploads\/2019\/10\/googleambient-1024x768.png",
                "ts": 1571237470,
                "from_url": "https:\/\/stratechery.com\/2019\/google-and-ambient-computing\/",
                "thumb_width": 1024,
                "thumb_height": 768,
                "service_icon": "https:\/\/stratechery.com\/favicon\/apple-touch-icon.png",
                "id": 1,
                "original_url": "https:\/\/stratechery.com\/2019\/google-and-ambient-computing\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MItE4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/stratechery.com\/2019\/google-and-ambient-computing\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1571241687.398100",
        "client_msg_id": "971dbabb-d87a-405d-a5fa-97ca7a2c0dd8",
        "text": "anyone working on programming for ambient computing? :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571241687.398100",
        "reply_count": 14,
        "reply_users_count": 5,
        "latest_reply": "1571428035.027300",
        "reply_users": [
            "UC2A2ARPT",
            "UN89MTTML",
            "UHWC9PXBL",
            "UBM0S2AN4",
            "UE6EFEPTQ"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1571241786.398200"
            },
            {
                "user": "UN89MTTML",
                "ts": "1571242037.398500"
            },
            {
                "user": "UN89MTTML",
                "ts": "1571242075.398700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1571267945.410500"
            },
            {
                "user": "UBM0S2AN4",
                "ts": "1571296934.435900"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1571351257.484900"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1571351345.485700"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1571389738.492800"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1571389741.493000"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1571427258.025100"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1571427817.026100"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1571427832.026800"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1571428010.027000"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1571428035.027300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+4ez",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "anyone working on programming for ambient computing? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1571241786.398200",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1571241824.000000"
        },
        "client_msg_id": "25c09fdc-e2fb-4591-bcba-bc9cf5cf23d3",
        "text": "It feels akin to <#CL0FBFS8H|robust-computation>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571241687.398100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JdJOg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It feels akin to "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CL0FBFS8H"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN89MTTML",
        "type": "message",
        "ts": "1571242037.398500",
        "client_msg_id": "63aba156-2361-4630-ac20-59e66eb43a23",
        "text": "I’m kind of adjacent to ambient computing, my team works on tools for voice interface design - with ambient computing there are a lot of new types of user interaction that become available",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g91ae73eb7a3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/91ae73eb7a309b760a0030e0f85ccbfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Scott Werner",
            "display_name": "Scott Werner",
            "team": "T5TCAFTA9",
            "name": "stwerner",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571241687.398100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T7S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m kind of adjacent to ambient computing, my team works on tools for voice interface design - with ambient computing there are a lot of new types of user interaction that become available"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN89MTTML",
        "type": "message",
        "ts": "1571242075.398700",
        "client_msg_id": "a1e37275-09b5-43df-986e-b7725bf06c14",
        "text": "and new patterns that need discovered - like how long it took for say the swipe to refresh pattern to come to mobile",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g91ae73eb7a3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/91ae73eb7a309b760a0030e0f85ccbfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Scott Werner",
            "display_name": "Scott Werner",
            "team": "T5TCAFTA9",
            "name": "stwerner",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571241687.398100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s3Il\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and new patterns that need discovered - like how long it took for say the swipe to refresh pattern to come to mobile"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1571247122.402500",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1571375865.000000"
        },
        "client_msg_id": "f8d82b4e-e471-4d4a-8677-1f9998ba0d1b",
        "text": "Don't believe these surveys of use. PHP is used in a huge fraction of websites, even if just a teeny bit. As the only language built into Apache, it has an unfair advantage. Same with JS for the web; as it is hard-wired into the browser, it has to win.  But yes PHP is dropping as a development language, and with its latest \"kitchen-sink\" version has gotten so complex that it will stop being picked for new projects (i.e. dropping birth rate) that C++ and Java are experiencing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571201713.381700",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2iX9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Don't believe these surveys of use. PHP is used in a huge fraction of websites, even if just a teeny bit. As the only language built into Apache, it has an unfair advantage. Same with JS for the web; as it is hard-wired into the browser, it has to win.  But yes PHP is dropping as a development language, and with its latest \"kitchen-sink\" version has gotten so complex that it will stop being picked for new projects (i.e. dropping birth rate) that C++ and Java are experiencing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1571247197.402700",
        "client_msg_id": "5fec1ffd-04ad-4167-88d7-95464282d0ae",
        "text": "It seems like the OpenAI project has made an impressive amount of progress. If you’re looking for an example of how to go about this, maybe that project would be a good place to start, though the problem and solution space of AI may be much better defined at this point than FoC.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570632039.005300",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qB6r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It seems like the OpenAI project has made an impressive amount of progress. If you’re looking for an example of how to go about this, maybe that project would be a good place to start, though the problem and solution space of AI may be much better defined at this point than FoC."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1571249017.402900",
        "edited": {
            "user": "UKJGU23KP",
            "ts": "1571249035.000000"
        },
        "client_msg_id": "7b18dba6-d66e-4c6c-a023-bd4dedbb48b0",
        "text": "I have a draft post about how many distinct niches there were for different programming languages.\n\nRelated to that question, are there features of Ruby\/Python\/JS\/Perl that make some of them better or worse suited to data science (and are any of those features different from those that make them better\/worse as a general purpose language)? Or is it all path-dependence. Does data science actually require a separate language?\n\nThat was a question I punted on, because I haven’t done data science.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571196434.376700",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mybw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a draft post about how many distinct niches there were for different programming languages.\n\nRelated to that question, are there features of Ruby\/Python\/JS\/Perl that make some of them better or worse suited to data science (and are any of those features different from those that make them better\/worse as a general purpose language)? Or is it all path-dependence. Does data science actually require a separate language?\n\nThat was a question I punted on, because I haven’t done data science."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1571250791.403200",
        "client_msg_id": "e03b3cad-882d-49cd-8c4a-d2f9a50a8a3d",
        "text": "It’s probably 50% path dependence and 50% Python having a good C API. I haven’t evaluated Ruby\/JS\/Perl, but C integration was critical for numpy and tensorflow.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571196434.376700",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pTg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’s probably 50% path dependence and 50% Python having a good C API. I haven’t evaluated Ruby\/JS\/Perl, but C integration was critical for numpy and tensorflow."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1571251001.403400",
        "client_msg_id": "bbf93599-f989-4a9e-a296-523ba3878531",
        "text": "Then I recurse…is there a goal that Ruby\/Perl\/JS have that precludes a good C api, or is that just path dependence?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571196434.376700",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yNEmT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Then I recurse…is there a goal that Ruby\/Perl\/JS have that precludes a good C api, or is that just path dependence?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1571251055.403600",
        "client_msg_id": "cfdb82d3-18c3-4d6a-b19e-0a52bc8765cf",
        "text": "The root question I was asking is “how many distinct languages do we need for non-aesthetic reasons?” (i.e. both Ruby and Python are low-ceremony languages, but often people prefer the feel of one of them).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571196434.376700",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7adOR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The root question I was asking is “how many distinct languages do we need for non-aesthetic reasons?” (i.e. both Ruby and Python are low-ceremony languages, but often people prefer the feel of one of them)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMU2RLPR8",
        "type": "message",
        "ts": "1571251139.403800",
        "client_msg_id": "684e2421-26b9-427c-93d0-bcaa91e1dbf7",
        "text": "oh sure, php is powering most of the internet it’s just that nobody is writing it any more lol",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84533398a201",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-10\/756734099191_84533398a201c4f2babe_72.png",
            "first_name": "Ryan",
            "real_name": "Ryan",
            "display_name": "comma",
            "team": "T5TCAFTA9",
            "name": "ryan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571201713.381700",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VsB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh sure, php is powering most of the internet it’s just that nobody is writing it any more lol"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1571251446.404000",
        "client_msg_id": "ed75ac85-7544-42d7-9c3a-b26247079d18",
        "text": "It's tough to use OpenAI as a measuring stick. The amount of funding and prestige that they had from the very beginning is incomparable to what we're talking about here. They paid a *lot* to get some of the best very early on.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570632039.005300",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZCEg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's tough to use OpenAI as a measuring stick. The amount of funding and prestige that they had from the very beginning is incomparable to what we're talking about here. They paid a "
                            },
                            {
                                "type": "text",
                                "text": "lot",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to get some of the best very early on."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UP448V1PB",
        "type": "message",
        "ts": "1571251488.404200",
        "client_msg_id": "cef35d69-4ea6-4de7-9fa5-1d5b4aa115b3",
        "text": "Facebook has served as a kind of cautionary tale.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "c956630d6bd7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-11\/794439110727_c956630d6bd7ba8faafb_72.jpg",
            "first_name": "Eric",
            "real_name": "Eric Casteleijn",
            "display_name": "Eric Casteleijn",
            "team": "T5TCAFTA9",
            "name": "thisfred",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571201713.381700",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I+IQ\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Facebook has served as a kind of cautionary tale."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1571253381.406600",
        "client_msg_id": "88741a63-8614-4b41-be75-a578a49bbc38",
        "text": "Not that I know of. It’s possible that the developers simply intended for people to develop only within the language. Guido intentionally developed python as “Bash for C programmers”, so the C integration was a bigger goal from day one. (Again, I don’t know Ruby\/Perl\/JS, so that’s speculation on their part.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571196434.376700",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lik9I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not that I know of. It’s possible that the developers simply intended for people to develop only within the language. Guido intentionally developed python as “Bash for C programmers”, so the C integration was a bigger goal from day one. (Again, I don’t know Ruby\/Perl\/JS, so that’s speculation on their part.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1571253442.406800",
        "client_msg_id": "eb3b2dc3-2bae-4017-8d9e-1dc9abaea6ae",
        "text": "It is definitely true though that the more complex the language, the harder the C integration. Lua is notable for being the scripting language with the easiest C integration, hence why it’s embedded in C applications (games, media editors, etc.). Lua’s runtime is super simple and was designed to be embeddable.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571196434.376700",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OdWl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It is definitely true though that the more complex the language, the harder the C integration. Lua is notable for being the scripting language with the easiest C integration, hence why it’s embedded in C applications (games, media editors, etc.). Lua’s runtime is super simple and was designed to be embeddable."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1571253573.407000",
        "client_msg_id": "38b2bca3-2382-4a00-b448-40ade78f4915",
        "text": "1. Many operations in different domains can be meaningfully modeled as higher order functions. Map and filter in the data\/list processing domain, route handling in the web processing domain. A language which allows higher-order functions can enable both domains to express that underlying structure in their API.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571196503.377700",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d+FF=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "1. Many operations in different domains can be meaningfully modeled as higher order functions. Map and filter in the data\/list processing domain, route handling in the web processing domain. A language which allows higher-order functions can enable both domains to express that underlying structure in their API."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1571253581.407200",
        "client_msg_id": "d05c535b-e363-45ef-9427-09c781d9268e",
        "text": "That’s also #2.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571196503.377700",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i8LJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That’s also #2."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1571253615.407400",
        "client_msg_id": "57df8126-fb94-4075-93e7-b1c3dcca4952",
        "text": "3. And C is a language that does not easily allow the definition and use of higher order functions, so development of such libraries is more difficult.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571196503.377700",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Iv5c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "3. And C is a language that does not easily allow the definition and use of higher order functions, so development of such libraries is more difficult."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEF95M2RH",
        "type": "message",
        "ts": "1571257840.407700",
        "client_msg_id": "533c84a5-d0a5-4afb-bfee-b95983cafa2c",
        "text": "Thanks, that's very clear.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4e6637707ff",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c4e6637707ff62601f3dd21ec7626095.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Michael Arntzenius",
            "display_name": "rntz",
            "team": "T5TCAFTA9",
            "name": "daekharel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571196503.377700",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=isN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks, that's very clear."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "innocent",
                "users": [
                    "UFB8STN7K"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1571258505.407900",
        "client_msg_id": "7f2dba6e-67c1-4b84-bc1d-abfe97150f3b",
        "text": "<@UEBG0NPDK> Yeah, the level of resources is a big difference. Also, AI has converged on Deep Learning connectionism as the path forward, so it’s much easier see how to usefully invest in it. I recently watched a video of Danny Hillis talking about the Connection Machine and how it was designed for connectionism and essentially had the same computing model as modern GPU\/TPU but a about a million times slower than what was required for connectionist networks to start becoming particularly useful. Right model, wrong time. Both supercomputing and AI had “winters” between their early days of promise until the tech got powerful &amp; cheap enough to make them widely useful (I’m counting cloud computing as modern supercomputing).  Lately, I’ve been wondering if the FoC winter between the early days of LISP and Smalltalk and today are part of a somewhat similar pattern. If so, maybe we’ll need a convergence of hw power, a sufficiently suitable sw stack and standards, to build on top of before we start to see solutions that can clearly point the way forward.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570632039.005300",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1bSDV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " Yeah, the level of resources is a big difference. Also, AI has converged on Deep Learning connectionism as the path forward, so it’s much easier see how to usefully invest in it. I recently watched a video of Danny Hillis talking about the Connection Machine and how it was designed for connectionism and essentially had the same computing model as modern GPU\/TPU but a about a million times slower than what was required for connectionist networks to start becoming particularly useful. Right model, wrong time. Both supercomputing and AI had “winters” between their early days of promise until the tech got powerful & cheap enough to make them widely useful (I’m counting cloud computing as modern supercomputing).  Lately, I’ve been wondering if the FoC winter between the early days of LISP and Smalltalk and today are part of a somewhat similar pattern. If so, maybe we’ll need a convergence of hw power, a sufficiently suitable sw stack and standards, to build on top of before we start to see solutions that can clearly point the way forward."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1571267945.410500",
        "client_msg_id": "E9C22CA9-FA8C-49D3-8E51-318A7C6DCF32",
        "text": "in terms of what i’d call high-density ambient computing, i feel like dynamicland is leagues ahead. too bad google won’t fund it as a moonshot, although bret would probably be opposed to working with them",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571241687.398100",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dkT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "in terms of what i’d call high-density ambient computing, i feel like dynamicland is leagues ahead. too bad google won’t fund it as a moonshot, although bret would probably be opposed to working with them"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1571271347.410900",
        "client_msg_id": "417e82b8-594f-4856-9f09-010476e5b0bb",
        "text": "<@UEQ6M68H0> It seems to me that good abstractions can allow one to leverage powerful (albeit less than ideal systems) such as JS &amp; DOM in a way that allows them to be easily replaced once better options are available. Just as modern OSes may not be ideal, but we can build languages and tools on top of them without exposing the higher level to the details of the lower. To attempt to replace the entire stack seems like it would ensure you’ll be working for decades on the lower parts before you can make any progress on the higher parts.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570947400.258800",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I9c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " It seems to me that good abstractions can allow one to leverage powerful (albeit less than ideal systems) such as JS & DOM in a way that allows them to be easily replaced once better options are available. Just as modern OSes may not be ideal, but we can build languages and tools on top of them without exposing the higher level to the details of the lower. To attempt to replace the entire stack seems like it would ensure you’ll be working for decades on the lower parts before you can make any progress on the higher parts."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1571271567.411100",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1571271912.000000"
        },
        "client_msg_id": "60586cd9-0083-4188-8475-e7919369f5d9",
        "text": "In languages, once you build a system, you might maintain it for another 20 years. After the creation point, it is updates, refinements, fixes, feature additions. Rarely does one change the language and rewrite from scratch. That almost never gets approved by management. Thus in all statistics of programming language use you will see very old languages persisting. This is why COBOL still shows up in the lists, even though nobody starts a new project in COBOL. I argue that PHP has a lot of inherited code, and that people starting projects today are much less likely to select PHP in 2020 than they did in 2010. So i guess dying is too strong a word. The more accurate description is that the birth rate of PHP projects has been dropping, and that fewer people myself included are selecting it for those somewhat rare cases of a \"from scratch\" project. Python is increasing in birth rate, and many preprocessor languages for JS are also increasing.\n\nThese charts of programming language popularity are more like the census of past design wins.  This keeps the newer entrants down in statistics, making them look risky, when in reality using a crappy tool from decades ago is a guarantee of mediocre productivity, so isn't that a risk also?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571201713.381700",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vv=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In languages, once you build a system, you might maintain it for another 20 years. After the creation point, it is updates, refinements, fixes, feature additions. Rarely does one change the language and rewrite from scratch. That almost never gets approved by management. Thus in all statistics of programming language use you will see very old languages persisting. This is why COBOL still shows up in the lists, even though nobody starts a new project in COBOL. I argue that PHP has a lot of inherited code, and that people starting projects today are much less likely to select PHP in 2020 than they did in 2010. So i guess dying is too strong a word. The more accurate description is that the birth rate of PHP projects has been dropping, and that fewer people myself included are selecting it for those somewhat rare cases of a \"from scratch\" project. Python is increasing in birth rate, and many preprocessor languages for JS are also increasing.\n\nThese charts of programming language popularity are more like the census of past design wins.  This keeps the newer entrants down in statistics, making them look risky, when in reality using a crappy tool from decades ago is a guarantee of mediocre productivity, so isn't that a risk also?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1571272163.411500",
        "client_msg_id": "ab82416f-2d56-45cf-80cd-07c7fba5923e",
        "text": "Just like TypeScript, CoffeeScript, etc., In my Beads language i emit JS and AS3 so as to leverage the fully debugged lower part of the stack. I present a graph database, a nice fluid 2D layout and drawing model, and an event model that is miles away from CSS\/HTML\/JS, so that one doesn't have to think in that JS\/OOP way. It would add man years to the project to go one layer deeper and go directly to the OS. Eventually though one usually does go the extra mile, because it removes a dependency from the chain.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570947400.258800",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HA55",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just like TypeScript, CoffeeScript, etc., In my Beads language i emit JS and AS3 so as to leverage the fully debugged lower part of the stack. I present a graph database, a nice fluid 2D layout and drawing model, and an event model that is miles away from CSS\/HTML\/JS, so that one doesn't have to think in that JS\/OOP way. It would add man years to the project to go one layer deeper and go directly to the OS. Eventually though one usually does go the extra mile, because it removes a dependency from the chain."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1571291950.435300",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1571392041.000000"
        },
        "client_msg_id": "a7e6761f-09df-43d3-ac71-3775cf38852d",
        "text": "Catching up on some of the discussion around adoption and its importance. Diversity of opinion is a good thing! I do think that it's useful to identify what our positions are wrt some axes. For instance, research and discovery are very different than bringing a product to market. On the pure research side you're not thinking of products but are investigating ideas, new perspectives, maybe the 'mathematical structure' of things, hoping to find some powerful ideas that bring deep simplicity, order, strength and\/or reliability to various endeavors. Newton wasn't interested in bringing a product to market. I believe this kind of research is valuable in the artificial sciences and design space (~computers) as well. Interestingly Newton spent a bunch of his life chasing alchemy to no avail. Back then it wasn't clear to him or anyone else why this pursuit might be less fruitful than the others. Today this would be obvious to anyone but why it wasn't back then is an interesting question - the deeper education from Newton etc. is probably not whats in the books - the specific formulae etc. - but perhaps the idea that processes can be encoded as forumulae and that these can be discovered, must be consistent, etc - the very medium of science. On the other end of this axis is Henry Ford - definitely many new ideas but in the service of bringing the product. Where would we be with the Model T? Perhaps somewhere in the middle are the Wright brothers. Adoption of product is more of a concern of the product makers. Adoption may also turn out to be valuable to the ideas made by idea seekers (Newton's ideas are very widely adopted), but it's not usually the primary goal because truly new ideas are almost never going to 'fit' in the sea of prevalent ideas.\n\nAnother axis is the time horizon - do you have one and how long is it? This is kind of different from the research\/product axis but long time horizons tend to less popular be in the product space. Another axis is the expectation of failure and risk - invest in safer options likely to have mediocre success or wild options likely to fail but an occasional super hit? In the product space, some investors go with this approach - VCs invest in 10 outlandish ideas and hope for one success. In research, I don't know if such funding exists.. I'm not super familiar with the academic space but it seems most grants favor safe and incremental research. It seems that incremental vs radical is another axis..almost all products and ideas have things they change and things they don't.  Anyway, I've rambled quite a bit and no sure where to take this further so I'm just going to leave this at that. Thanks for reading.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571291950.435300",
        "reply_count": 6,
        "reply_users_count": 2,
        "latest_reply": "1571303284.442100",
        "reply_users": [
            "UE6EFEPTQ",
            "UBN9AFS0N"
        ],
        "replies": [
            {
                "user": "UE6EFEPTQ",
                "ts": "1571302811.440300"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1571302953.440800"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1571303007.441000"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1571303019.441200"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1571303098.441900"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1571303284.442100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kcy=Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Catching up on some of the discussion around adoption and its importance. Diversity of opinion is a good thing! I do think that it's useful to identify what our positions are wrt some axes. For instance, research and discovery are very different than bringing a product to market. On the pure research side you're not thinking of products but are investigating ideas, new perspectives, maybe the 'mathematical structure' of things, hoping to find some powerful ideas that bring deep simplicity, order, strength and\/or reliability to various endeavors. Newton wasn't interested in bringing a product to market. I believe this kind of research is valuable in the artificial sciences and design space (~computers) as well. Interestingly Newton spent a bunch of his life chasing alchemy to no avail. Back then it wasn't clear to him or anyone else why this pursuit might be less fruitful than the others. Today this would be obvious to anyone but why it wasn't back then is an interesting question - the deeper education from Newton etc. is probably not whats in the books - the specific formulae etc. - but perhaps the idea that processes can be encoded as forumulae and that these can be discovered, must be consistent, etc - the very medium of science. On the other end of this axis is Henry Ford - definitely many new ideas but in the service of bringing the product. Where would we be with the Model T? Perhaps somewhere in the middle are the Wright brothers. Adoption of product is more of a concern of the product makers. Adoption may also turn out to be valuable to the ideas made by idea seekers (Newton's ideas are very widely adopted), but it's not usually the primary goal because truly new ideas are almost never going to 'fit' in the sea of prevalent ideas.\n\nAnother axis is the time horizon - do you have one and how long is it? This is kind of different from the research\/product axis but long time horizons tend to less popular be in the product space. Another axis is the expectation of failure and risk - invest in safer options likely to have mediocre success or wild options likely to fail but an occasional super hit? In the product space, some investors go with this approach - VCs invest in 10 outlandish ideas and hope for one success. In research, I don't know if such funding exists.. I'm not super familiar with the academic space but it seems most grants favor safe and incremental research. It seems that incremental vs radical is another axis..almost all products and ideas have things they change and things they don't.  Anyway, I've rambled quite a bit and no sure where to take this further so I'm just going to leave this at that. Thanks for reading."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UC2A2ARPT",
                    "UJ6LDMMN0"
                ],
                "count": 2
            },
            {
                "name": "+1::skin-tone-4",
                "users": [
                    "UBN9AFS0N"
                ],
                "count": 1
            }
        ]
    }
]