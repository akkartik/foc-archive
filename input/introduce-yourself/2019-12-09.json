[
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1575925613.264600",
        "client_msg_id": "46e3eb41-f2f3-4b25-89bd-0633533e3955",
        "text": "Hey <@UC2A2ARPT>, <@UG0EL18H3>, I'm in Calgary! We should meet up here in the middle sometime!!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570473737.112300",
        "parent_user_id": "UG0EL18H3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tnaNA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hey "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "user",
                                "user_id": "UG0EL18H3"
                            },
                            {
                                "type": "text",
                                "text": ", I'm in Calgary! We should meet up here in the middle sometime!!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1575925883.264800",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1575925948.000000"
        },
        "client_msg_id": "4c4cc50c-16b7-431c-8e8b-1ab27481b268",
        "text": "To answer your question, I was 10 when I said I wanted to make video games and my dad sat me down and explained I couldn't do that because I'd have to hire a team of illustrators and programmers, and then when I was 11 found out I could program a Commodore 64 to output anything I wanted with a series of \"print\" statements. Exciting stuff! I went on to make a series of amateur Arkanoid clones, until I realized the programming languages I was using (C++ and VB) kinda suck and need improvement, which led me on a path that led to &lt;http:\/\/loyc.net|loyc.net&gt;.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570473737.112300",
        "parent_user_id": "UG0EL18H3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZrrV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To answer your question, I was 10 when I said I wanted to make video games and my dad sat me down and explained I couldn't do that because I'd have to hire a team of illustrators and programmers, and then when I was 11 found out I could program a Commodore 64 to output anything I wanted with a series of \"print\" statements. Exciting stuff! I went on to make a series of amateur Arkanoid clones, until I realized the programming languages I was using (C++ and VB) kinda suck and need improvement, which led me on a path that led to "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/loyc.net",
                                "text": "loyc.net"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1575926200.265300",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1575926317.000000"
        },
        "client_msg_id": "c0399e03-037e-4940-83eb-420feaf0f7ea",
        "text": "Whoa, cool! I've been looking for a job in developer tools for years now. There isn't much funding available, after all. Do you have any tips for getting jobs in this space?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1571437376.083100",
        "parent_user_id": "UPBEWVA3B",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sTLc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Whoa, cool! I've been looking for a job in developer tools for years now. There isn't much funding available, after all. Do you have any tips for getting jobs in this space?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UG0EL18H3",
        "type": "message",
        "ts": "1575926684.267400",
        "client_msg_id": "DB0A461F-E287-4EAD-9A15-038B1E9C5796",
        "text": "<@UD6EXQVM0> i noticed <@URDRJEWS0> is also new here from alberta! lots of FoC-ers here! i’m absolutely down to meet in calgary sometime",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "25cc47143833",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-08-01\/702360681283_25cc471438337c72e600_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Rabl",
            "display_name": "crabl",
            "team": "T5TCAFTA9",
            "name": "chris.rabl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570473737.112300",
        "parent_user_id": "UG0EL18H3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/5o7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UD6EXQVM0"
                            },
                            {
                                "type": "text",
                                "text": " i noticed "
                            },
                            {
                                "type": "user",
                                "user_id": "URDRJEWS0"
                            },
                            {
                                "type": "text",
                                "text": " is also new here from alberta! lots of FoC-ers here! i’m absolutely down to meet in calgary sometime"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1575926958.268000",
        "client_msg_id": "E3D31740-0ADE-4ADE-A234-37CC8046E805",
        "text": "Yeah, that'd be fun.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570473737.112300",
        "parent_user_id": "UG0EL18H3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D5y3S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, that'd be fun."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1575927069.268200",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1575927269.000000"
        },
        "client_msg_id": "26c4d9c4-fd0f-4ea5-bc37-70213d622dc6",
        "text": "When I started with a big code base recently (millions of lines) it would certainly have been nice to have a tool that could help me figure it out more easily, both at a very high level (like which folders\/projects refer to code in which other folders\/projects - it's a C# codebase, so Resharper's Architecture View did help with this) and at a lower level (like, given a thing I want to see other things that are related to it.) Since the code is of generally poor quality (and any time you hear \"millions of lines\" you can assume this) it would have been nice to have a tool that could discover patterns of relationships. Examples:\n- similar method names appear in many different classes\n- similar blocks of code appear in many places\n- tuples often appear together (e.g. if enum type A usually appears in the same parameter list, or field list, as class B and an integer called C, the tool could point this out, suggesting that A B and C are related and perhaps should be encapsulated in a new type.)\n\nA tool could probably find hundreds or thousands of noteworthy patterns in a large codebase, so it would need ways of limiting what it shows the user (e.g. show patterns related to \/ exemplified by the source file I am looking at.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572038747.150500",
        "parent_user_id": "UPU0YJ1CM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OVrKx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When I started with a big code base recently (millions of lines) it would certainly have been nice to have a tool that could help me figure it out more easily, both at a very high level (like which folders\/projects refer to code in which other folders\/projects - it's a C# codebase, so Resharper's Architecture View did help with this) and at a lower level (like, given a thing I want to see other things that are related to it.) Since the code is of generally poor quality (and any time you hear \"millions of lines\" you can assume this) it would have been nice to have a tool that could discover patterns of relationships. Examples:\n- similar method names appear in many different classes\n- similar blocks of code appear in many places\n- tuples often appear together (e.g. if enum type A usually appears in the same parameter list, or field list, as class B and an integer called C, the tool could point this out, suggesting that A B and C are related and perhaps should be encapsulated in a new type.)\n\nA tool could probably find hundreds or thousands of noteworthy patterns in a large codebase, so it would need ways of limiting what it shows the user (e.g. show patterns related to \/ exemplified by the source file I am looking at.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1575928575.268900",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1575929917.000000"
        },
        "client_msg_id": "92eeb9bf-3614-4396-b00f-b5d1ccd471f4",
        "text": "When I think \"github for science\" I think \"git for people who aren't experienced software developers\" and then I think of \"10 things I hate about git\" &lt;https:\/\/stevebennett.me\/2012\/02\/24\/10-things-i-hate-about-git\/&gt; ... my favorite part says \"Git doesn’t so much have a leaky abstraction as *no* abstraction. [...] even beginners are quickly confronted with hideous internal details. In theory, there is the “plumbing” and “the porcelain” – but you’d better be a plumber to know how to work the porcelain.\" and then there's a table \"of commands I’ve noticed which are almost useless without additional options.\"\n\nI'd love it if somebody comes up with an good abstraction for git - something with an undo command as a core feature? -  if it's compatible with git on some level then professional developers can use it to and scientists can more easily work with developers. (Edit: I wonder if Mercurial could be that tool? I don't know, I haven't used it; I hated git's awful user experience but in the end I chose GitHub over Mercurial because GitHub was so much more popular.)\n\nLooking at the blog, it isn't clear if you have a vision yet of what to build. Do you?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569614587.079400",
        "parent_user_id": "UNTRC48LC",
        "attachments": [
            {
                "service_name": "Steve Bennett blogs",
                "service_url": "http:\/\/stevebennett.me",
                "title": "10 things I hate about Git",
                "title_link": "https:\/\/stevebennett.me\/2012\/02\/24\/10-things-i-hate-about-git\/",
                "author_name": "steveko",
                "author_link": "https:\/\/stevebennett.me\/author\/steveko\/",
                "thumb_url": "http:\/\/steveko.files.wordpress.com\/2012\/02\/subversion-arrows1.png?fit=200%2C150",
                "text": "Git is the source code version control system that is rapidly becoming the standard for open source projects. It has a powerful distributed model which allows advanced users to do tricky things with branches, and rewriting history. What a pity that it&rsquo;s so hard to learn, has such an unpleasant command line interface, and treats its users with such utter contempt.\n1. Complex information model\nThe information model is complicated &ndash; and you need to know all of it. As a point of reference, consider Subversion: you have files, a working directory, a repository, versions, branches, and tags. That&rsquo;s pretty much everything you need to know. In fact, branches are tags, and files you already know about, so you really need to learn three new things. Versions are linear, with the odd merge. Now Git: you have files, a working tree, an index, a local repository, a remote repository, remotes (pointers to remote repositories), commits, treeishes (pointers to commits), branches, a stash&hellip; and you need to know all of it.\n2. Crazy command line syntax\nThe command line syntax is completely arbitrary and inconsistent. Some &ldquo;shortcuts&rdquo; are graced with top level commands: &ldquo;git pull&rdquo; is exactly equivalent to &ldquo;git fetch&rdquo; followed by &ldquo;git merge&rdquo;. But the shortcut for &ldquo;git branch&rdquo; combined with &ldquo;git checkout&rdquo;? &ldquo;git checkout -b&rdquo;. Specifying filenames completely changes the semantics of some commands (&ldquo;git commit&rdquo; ignores local, unstaged changes in foo.txt; &ldquo;git commit foo.txt&rdquo; doesn&rsquo;t). The various options of &ldquo;git reset&rdquo; do completely different things.\nThe most spectacular example of this is the command &ldquo;git am&rdquo;, which as far as I can tell, is something Linus hacked up and forced into the main codebase to solve a problem he was having one night. It combines email reading with patch applying, and thus uses a different patch syntax (specifically, one with email headers at the top).\n3. Crappy documentation\nThe man pages are one almighty &ldquo;fuck you&rdquo;. They describe the commands from the perspective of a computer scientist, not a user. Case in point:\ngit-push &ndash; Update remote refs along with associated objects\nHere&rsquo;s a description for humans: git-push &ndash; Upload changes from your local repository into a remote repository\nUpdate, another example: (thanks cgd)\ngit-rebase &ndash; Forward-port local commits to the updated upstream head\nTranslation: git-rebase &ndash; Sequentially regenerate a series of commits so they can be applied directly to the head node\n4. Information model sprawl\nRemember the complicated information model in step 1? It keeps growing, like a cancer. Keep using Git, and more concepts will occasionally drop out of the sky: refs, tags, the reflog, fast-forward commits, detached head state (!), remote branches, tracking, namespaces\n5. Leaky abstraction\nGit doesn&rsquo;t so much have a leaky abstraction as&nbsp;no abstraction. There is essentially no distinction between implementation detail and user interface. It&rsquo;s understandable that an advanced user might need to know a little about how features are implemented, to grasp subtleties about various commands. But even beginners are quickly confronted with hideous internal details. In theory, there is the &ldquo;plumbing&rdquo; and &ldquo;the porcelain&rdquo; &ndash; but you&rsquo;d better be a plumber to know how to work the porcelain.\n\nA common response I get to complaints about Git&rsquo;s command line complexity is that &ldquo;you don&rsquo;t need to use all those commands, you can use it like Subversion if that&rsquo;s what you really want&rdquo;. Rubbish. That&rsquo;s like telling an old granny that the freeway isn&rsquo;t scary, she can drive at 20kph in the left lane if she wants. Git doesn&rsquo;t provide any useful subsets &ndash; every command soon requires another; even simple actions often require complex actions to undo or refine.\n\nHere was the (well-intentioned!) advice from a GitHub maintainer of a project I&rsquo;m working on (with apologies!):\n\nFind the merge base between your branch and master: &lsquo;git merge-base master yourbranch&rsquo;\nAssuming you&rsquo;ve already committed your changes, rebased your commit onto the merge base, then create a new branch:\ngit rebase &ndash;onto  HEAD~1 HEAD\ngit checkout -b my-new-branch\nCheckout your ruggedisation branch, and remove the commit you just rebased: &lsquo;git reset &ndash;hard HEAD~1&rsquo;\nMerge your new branch back into ruggedisation: &lsquo;git merge my-new-branch&rsquo;\nCheckout master (&lsquo;git checkout master&rsquo;), merge your new branch in (&lsquo;git merge my-new-branch&rsquo;), and check it works when merged, then remove the merge (&lsquo;git reset &ndash;hard HEAD~1&rsquo;).\nPush your new branch (&lsquo;git push origin my-new-branch&rsquo;) and log a pull request.\nTranslation: &ldquo;It&rsquo;s easy, Granny. Just rev to 6000, dump the clutch, and use wheel spin to get round the first corner. Up to third, then trail brake onto the freeway, late apexing but watch the marbles on the inside. Hard up to fifth, then handbrake turn to make the exit.&rdquo;\n\n6. Power for the maintainer, at the expense of the contributor\n\nMost of the power of Git is aimed squarely at maintainers of codebases: people who have to merge contributions from a wide number of different sources, or who have to ensure a number of parallel development efforts result in a single, coherent, stable release. This is good. But the majority of Git users are not in this situation: they simply write code, often on a single branch for months at a time. Git is a 4 handle, dual boiler espresso machine &ndash; when all they need is instant.\nInterestingly, I don&rsquo;t think this trade-off is inherent in Git&rsquo;s &nbsp;design. It&rsquo;s simply the result of ignoring the needs of normal users, and confusing architecture with interface. &ldquo;Git is good&rdquo; is true if speaking of architecture &ndash; but false of user interface. Someone could quite conceivably write an improved interface (easygit is a start) that hides unhelpful complexity such as the index and the local repository.\n7. Unsafe version control\nThe fundamental promise of any version control system is this: &ldquo;Once you put your precious source code in here, it&rsquo;s safe. You can make any changes you like, and you can always get it back&rdquo;. Git breaks this promise. Several ways a committer can irrevocably destroy the contents of a repository:\ngit add . \/ &hellip; \/ git push -f origin master\ngit push origin +master\ngit rebase -i  \/ git push\n8. Burden of VCS maintainance pushed to contributors\nIn the traditional open source project, only one person had to deal with the complexities of branches and merges: the maintainer. Everyone else only had to update, commit, update, commit, update, commit&hellip; Git dumps the burden of &nbsp;understanding complex version control on everyone &ndash; while making the maintainer&rsquo;s job easier. Why would you do this to new contributors &ndash; those with nothing invested in the project, and every incentive to throw their hands up and leave?\n9. Git history is a bunch of lies\nThe primary output of development work should be source code. Is a well-maintained history really such an important by-product? Most of the arguments for rebase, in particular, rely on aesthetic judgments about &ldquo;messy merges&rdquo; in the history, or &ldquo;unreadable logs&rdquo;. So rebase encourages you to lie in order to provide other developers with a &ldquo;clean&rdquo;, &ldquo;uncluttered&rdquo; history. Surely the correct solution is a better log output that can filter out these unwanted merges.\n10. Simple tasks need so many commands\nThe point of working on an open source project is to make some changes, then share them with the world. In Subversion, this looks like:\n\nMake some changes\nsvn commit\n…",
                "fallback": "Steve Bennett blogs Link: 10 things I hate about&nbsp;Git",
                "from_url": "https:\/\/stevebennett.me\/2012\/02\/24\/10-things-i-hate-about-git\/",
                "thumb_width": 114,
                "thumb_height": 150,
                "service_icon": "https:\/\/secure.gravatar.com\/blavatar\/c7f9331c35c3c296089cd9d0117c301f?s=114",
                "id": 1,
                "original_url": "https:\/\/stevebennett.me\/2012\/02\/24\/10-things-i-hate-about-git\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JEWH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When I think \"github for science\" I think \"git for people who aren't experienced software developers\" and then I think of \"10 things I hate about git\" "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/stevebennett.me\/2012\/02\/24\/10-things-i-hate-about-git\/"
                            },
                            {
                                "type": "text",
                                "text": " ... my favorite part says \"Git doesn’t so much have a leaky abstraction as "
                            },
                            {
                                "type": "text",
                                "text": "no",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " abstraction. [...] even beginners are quickly confronted with hideous internal details. In theory, there is the “plumbing” and “the porcelain” – but you’d better be a plumber to know how to work the porcelain.\" and then there's a table \"of commands I’ve noticed which are almost useless without additional options.\"\n\nI'd love it if somebody comes up with an good abstraction for git - something with an undo command as a core feature? -  if it's compatible with git on some level then professional developers can use it to and scientists can more easily work with developers. (Edit: I wonder if Mercurial could be that tool? I don't know, I haven't used it; I hated git's awful user experience but in the end I chose GitHub over Mercurial because GitHub was so much more popular.)\n\nLooking at the blog, it isn't clear if you have a vision yet of what to build. Do you?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UNTRC48LC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1575928763.269200",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1575928946.000000"
        },
        "client_msg_id": "1163cb0a-a349-4cbf-a62b-a2afc8bf78d1",
        "text": "Oh? Well I've got some December vacation time I can allocate, or we can do a weekend? You'll probably want to make it a few hours to justify the travel time... my house is in the NE near Trans Canada Highway (16 Ave) which is probably pretty convenient, or, elsewhere is fine too.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1570473737.112300",
        "parent_user_id": "UG0EL18H3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FP00",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh? Well I've got some December vacation time I can allocate, or we can do a weekend? You'll probably want to make it a few hours to justify the travel time... my house is in the NE near Trans Canada Highway (16 Ave) which is probably pretty convenient, or, elsewhere is fine too."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJC8ZDSTX",
        "type": "message",
        "ts": "1575930993.270000",
        "client_msg_id": "bcfeefd3-f450-4e38-bd1f-bd7eeda257f9",
        "text": "By non-calculus math you mean, literally, math that does not involve calculus?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9da36842baa4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-09\/777488933203_9da36842baa46c9c0803_72.png",
            "first_name": "",
            "real_name": "Al Mo",
            "display_name": "Al Mo",
            "team": "T5TCAFTA9",
            "name": "jose.moralestapia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575773319.262100",
        "parent_user_id": "URDRJEWS0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LuIaN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "By non-calculus math you mean, literally, math that does not involve calculus?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNTRC48LC",
        "type": "message",
        "ts": "1575931833.270300",
        "client_msg_id": "0d1671a2-73a4-46ee-8654-bd98a43cb797",
        "text": "Thanks for sharing that article. We’ve been working on this project for 11 weeks now! As of Thanksgiving we have a demo to show, but we decided not to start with the most straight forward path. :smirk: If you want a demo email me <mailto:cindy@jellypbc.com|cindy@jellypbc.com>. Would love your input.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7ac1b627050d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-27\/778546394390_7ac1b627050d647b9143_72.jpg",
            "first_name": "Cindy",
            "real_name": "Cindy Wu",
            "display_name": "Cindy Wu",
            "team": "T5TCAFTA9",
            "name": "cindy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569614587.079400",
        "parent_user_id": "UNTRC48LC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RTf9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for sharing that article. We’ve been working on this project for 11 weeks now! As of Thanksgiving we have a demo to show, but we decided not to start with the most straight forward path. "
                            },
                            {
                                "type": "emoji",
                                "name": "smirk",
                                "unicode": "1f60f"
                            },
                            {
                                "type": "text",
                                "text": " If you want a demo email me "
                            },
                            {
                                "type": "link",
                                "url": "mailto:cindy@jellypbc.com",
                                "text": "cindy@jellypbc.com"
                            },
                            {
                                "type": "text",
                                "text": ". Would love your input."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1575935630.270800",
        "client_msg_id": "34119a52-7d2f-4005-8757-30a376525556",
        "text": "I'm skeptical about the idea of being 'unburdened' from text-based syntax in the sense of \"yay, projectional editors don't have to worry about ambiguity!\" But they do - people need to be able to post code snippets on Reddit and elsewhere, snippets that can then be pasted back into the projectional editor. Another reason to have a reasonable text representation is so that conventional-diffing tools like git can make sense of it.\n\nI'd like to see a toolchain that is unburdened from syntax in a different way: I think syntax should be decoupled and designed separately from semantics. Plug: one can always use Loyc trees (<http:\/\/loyc.net\/loyc-trees>, let me know if you need a <http:\/\/non-.NET|non-.NET> implementation) to represent a visual language textually, encoding X-Y locations of things as attributes.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572204623.163800",
        "parent_user_id": "UPX3PH28N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hg=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm skeptical about the idea of being 'unburdened' from text-based syntax in the sense of \"yay, projectional editors don't have to worry about ambiguity!\" But they do - people need to be able to post code snippets on Reddit and elsewhere, snippets that can then be pasted back into the projectional editor. Another reason to have a reasonable text representation is so that conventional-diffing tools like git can make sense of it.\n\nI'd like to see a toolchain that is unburdened from syntax in a different way: I think syntax should be decoupled and designed separately from semantics. Plug: one can always use Loyc trees ("
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/loyc.net\/loyc-trees"
                            },
                            {
                                "type": "text",
                                "text": ", let me know if you need a non-.NET implementation) to represent a visual language textually, encoding X-Y locations of things as attributes."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "URDRJEWS0",
        "type": "message",
        "ts": "1575936198.273100",
        "client_msg_id": "8FB512DE-A7F9-4127-AC7D-6472C467AC75",
        "text": "Yup :D got a bunch of that in formal education. Turns out there is a bunch of other neat math besides taking derivatives and integrals! Sets, groups, graphs, topology, etc",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g50c0946fdf2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/50c0946fdf28e7126132cdbe315055bd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Scott Newson",
            "display_name": "Scott Newson",
            "team": "T5TCAFTA9",
            "name": "scott.g.newson",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575773319.262100",
        "parent_user_id": "URDRJEWS0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EIrM+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yup :D got a bunch of that in formal education. Turns out there is a bunch of other neat math besides taking derivatives and integrals! Sets, groups, graphs, topology, etc"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJC8ZDSTX"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1575936364.273700",
        "client_msg_id": "7ee93601-f290-41fd-9859-b084895ae9a3",
        "text": "Oh, did you not study _lambda_ calculus?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575773319.262100",
        "parent_user_id": "URDRJEWS0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=sSE1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh, did you not study "
                            },
                            {
                                "type": "text",
                                "text": "lambda",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " calculus?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "URDRJEWS0",
        "type": "message",
        "ts": "1575936497.274100",
        "client_msg_id": "12C46032-A03A-46CE-A3EA-767BF01A5422",
        "text": "Nope. Should have :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g50c0946fdf2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/50c0946fdf28e7126132cdbe315055bd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Scott Newson",
            "display_name": "Scott Newson",
            "team": "T5TCAFTA9",
            "name": "scott.g.newson",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575773319.262100",
        "parent_user_id": "URDRJEWS0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kw\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nope. Should have :)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1575937562.275900",
        "client_msg_id": "83032cb5-f281-4981-932c-1e5daa1c03ba",
        "text": "Do you have FoC-related interests, like making programming languages or whatever?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575773319.262100",
        "parent_user_id": "URDRJEWS0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6i\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do you have FoC-related interests, like making programming languages or whatever?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "URDRJEWS0",
        "type": "message",
        "ts": "1575939350.282000",
        "client_msg_id": "43C90972-4A9E-4718-9299-4AB8F59435F4",
        "text": "That’s a good question! What counts? I have no immediate plans to revolutionize the world with a great new scottlang.. but understanding\/improving and experimenting with how people and computers can work well together has always been interesting. I’m hoping to catch up on the FoC content (podcast and web page and links) and then might be better able to answer your question :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g50c0946fdf2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/50c0946fdf28e7126132cdbe315055bd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Scott Newson",
            "display_name": "Scott Newson",
            "team": "T5TCAFTA9",
            "name": "scott.g.newson",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575773319.262100",
        "parent_user_id": "URDRJEWS0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s5G4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That’s a good question! What counts? I have no immediate plans to revolutionize the world with a great new scottlang.. but understanding\/improving and experimenting with how people and computers can work well together has always been interesting. I’m hoping to catch up on the FoC content (podcast and web page and links) and then might be better able to answer your question :)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPU0YJ1CM",
        "type": "message",
        "ts": "1575957105.282700",
        "client_msg_id": "b10a6668-e76d-45b6-8d18-38e6740cd957",
        "text": "Hello <@UD6EXQVM0> thanks for sharing your experience. I did not know about Resharper I'll look into it! It's really nice idea you mentioned to highlight tuples occurrences.\nSo far, the tool we are developing handles Python code and dependencies mapping: <http:\/\/app.codist-ai.com\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b88e30c8a541",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-20\/870238505987_b88e30c8a541a7725a6d_72.png",
            "first_name": "",
            "real_name": "Maeliza",
            "display_name": "Maeliza",
            "team": "T5TCAFTA9",
            "name": "maeliza.seymour",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572038747.150500",
        "parent_user_id": "UPU0YJ1CM",
        "attachments": [
            {
                "title": "CodistAI | Fast graphical navigation of source code in augmented context",
                "title_link": "http:\/\/app.codist-ai.com\/",
                "text": "CodistAI helps any developers explore and navigate source code quickly and thoroughly by providing an interactive graph visualization and all contextual information (documentation, reported bugs...) necessary.",
                "fallback": "CodistAI | Fast graphical navigation of source code in augmented context",
                "from_url": "http:\/\/app.codist-ai.com\/",
                "service_icon": "http:\/\/app.codist-ai.com\/codistai\/img\/logoCodist.png",
                "service_name": "app.codist-ai.com",
                "id": 1,
                "original_url": "http:\/\/app.codist-ai.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E53",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hello "
                            },
                            {
                                "type": "user",
                                "user_id": "UD6EXQVM0"
                            },
                            {
                                "type": "text",
                                "text": " thanks for sharing your experience. I did not know about Resharper I'll look into it! It's really nice idea you mentioned to highlight tuples occurrences.\nSo far, the tool we are developing handles Python code and dependencies mapping: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/app.codist-ai.com\/"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]