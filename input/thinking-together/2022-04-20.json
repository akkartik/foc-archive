[
    {
        "user": "UJFN50C00",
        "type": "message",
        "ts": "1650446095.091469",
        "client_msg_id": "6D45EFF9-27CD-42EE-BF33-2624D15C96FD",
        "text": "Nice :+1: looks quite in line with <https:\/\/twitter.com\/Gilad_Bracha\/status\/1516531127405584391|https:\/\/twitter.com\/Gilad_Bracha\/status\/1516531127405584391>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1649684169.167799",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "from_url": "https:\/\/twitter.com\/Gilad_Bracha\/status\/1516531127405584391",
                "ts": 1650404171,
                "id": 1,
                "original_url": "https:\/\/twitter.com\/Gilad_Bracha\/status\/1516531127405584391",
                "fallback": "<https:\/\/twitter.com\/Gilad_Bracha|@Gilad_Bracha>: Bitrot Revisited: Local First Software and Orthogonal Synchronization\nNew blog post based on my recent &lt;Programming 22&gt; talk, \n<https:\/\/gbracha.blogspot.com\/2022\/04\/bitrot-revisited-local-first-software.html>\nAnd a video (original wasn't recorded):  <https:\/\/youtu.be\/qx6ekxXdidI>",
                "text": "Bitrot Revisited: Local First Software and Orthogonal Synchronization\nNew blog post based on my recent &lt;Programming 22&gt; talk, \n<https:\/\/gbracha.blogspot.com\/2022\/04\/bitrot-revisited-local-first-software.html>\nAnd a video (original wasn't recorded):  <https:\/\/youtu.be\/qx6ekxXdidI>",
                "author_name": "Gilad Bracha",
                "author_link": "https:\/\/twitter.com\/Gilad_Bracha\/status\/1516531127405584391",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/605609749\/IMG_0780_normal.jpg",
                "author_subname": "@Gilad_Bracha",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=Y6sr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice "
                            },
                            {
                                "type": "emoji",
                                "name": "+1",
                                "unicode": "1f44d"
                            },
                            {
                                "type": "text",
                                "text": " looks quite in line with "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/Gilad_Bracha\/status\/1516531127405584391",
                                "text": "https:\/\/twitter.com\/Gilad_Bracha\/status\/1516531127405584391"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1650449186.498479",
        "client_msg_id": "f17659ac-b812-44d0-8858-8f34c8bd5ede",
        "text": "I went :sob: . An algorithm is relatively self-contained. The implications of changing a data model can be impossible to even enumerate.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650424146.803409",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3Xc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I went "
                            },
                            {
                                "type": "emoji",
                                "name": "sob",
                                "unicode": "1f62d"
                            },
                            {
                                "type": "text",
                                "text": " . An algorithm is relatively self-contained. The implications of changing a data model can be impossible to even enumerate."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03CEGR3HSL",
        "type": "message",
        "ts": "1650464577.515109",
        "client_msg_id": "2f4655de-eed1-4124-a5ed-3a1b5adf5d2c",
        "text": "I've been pondering how to define a metric for how programmable a user's overall environment is. One thought I've had is to add up, for each application used in an average day, the percent of time it is used times the percent of features that can be programmed. Call it something like Overall Average Programmability.\n\nI know this doesn't account for differences in how easy it is to use the programmability of a given app (mailx is much easier to automate than Gmail) or the importance of individual features that can or cannot be automated, or the ease of integrating applications with different built-in scripting languages, but I think this is a relatively well-defined metric that might still contain some meaning.\n\nDoes this sound like a meaningful and\/or useful concept?\n\nWould you estimate, over the course of your career, that your environment's Overall Average Programmability has trended upwards or downwards?\n\nAny thoughts on the forces that may have impacted the trends?\n\nPersonally, I think mine has trended downwards, and I suspect it has something to do with the increasing roles played in my life by mobile apps, web apps, and services that make their money from advertising and want to maximize user engagement rather than productivity.\n\nThoughts?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7fd1bd5c536",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7fd1bd5c53681452a80086a54ebb2ad1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Personal",
            "real_name": "Personal Dynamic Media",
            "display_name": "Personal Dynamic Media",
            "team": "T5TCAFTA9",
            "name": "personaldynamicmedia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650464577.515109",
        "reply_count": 13,
        "reply_users_count": 3,
        "latest_reply": "1651146116.406469",
        "reply_users": [
            "UDQBTJ211",
            "UCUSW7WVD",
            "UJBAJNFLK"
        ],
        "replies": [
            {
                "user": "UDQBTJ211",
                "ts": "1650486717.190599"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1650688301.617309"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1650702843.175699"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1650727820.667669"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1650728125.332199"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1650731586.091999"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1650733506.325319"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1650781756.976969"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1650866524.759269"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1651083064.055419"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1651087623.141109"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1651127734.277019"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1651146116.406469"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jm1j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been pondering how to define a metric for how programmable a user's overall environment is. One thought I've had is to add up, for each application used in an average day, the percent of time it is used times the percent of features that can be programmed. Call it something like Overall Average Programmability.\n\nI know this doesn't account for differences in how easy it is to use the programmability of a given app (mailx is much easier to automate than Gmail) or the importance of individual features that can or cannot be automated, or the ease of integrating applications with different built-in scripting languages, but I think this is a relatively well-defined metric that might still contain some meaning.\n\nDoes this sound like a meaningful and\/or useful concept?\n\nWould you estimate, over the course of your career, that your environment's Overall Average Programmability has trended upwards or downwards?\n\nAny thoughts on the forces that may have impacted the trends?\n\nPersonally, I think mine has trended downwards, and I suspect it has something to do with the increasing roles played in my life by mobile apps, web apps, and services that make their money from advertising and want to maximize user engagement rather than productivity.\n\nThoughts?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1650481404.475269",
        "client_msg_id": "afceddba-339c-4f21-bf69-242ac94cd044",
        "text": ":open_mouth: Understanding all the code, including code not in my codebase, to know if the change I want to make is okay. Actually making the changes to an algorithm or a data model is not too hard, in isolation.\n\nI think data models in practice are typically harder because other code depends on it in a way that I have to understand that other code too. That other code may not even be accessible to me. (A customers codebase for example). Algorithms can have that implication, but not as often.\n\nSince I’m guessing this question is asked partially to motivate which problems to solve, I do think there are ways to tackle this.\n\nFirst, since others code in my scenario is a blackbox, we can’t just make tools for actually understanding that code, it isn’t accessible. But what we could do is make it easy to explore implications of changes.\n\nTake an algorithm change. Instead of sending a request for every one message, I aggregate every 10 messages and send them. What are the implications of this? What if I never get 10 messages? What if I overflow some bounds? What about retries? Would my accuracy decrees if my failure rate increased? Would this change be effective? Would it reduce my downstream costs?\n\nConsider a data model change. I have data structure A and I want to have data structure B. Is there a bidirectional mapping between them? What will the increase in my storage be? If I need to convert between the two, at what do I need to support? I know that I need X,Y, and Z access patterns. Are those efficient with the new data structure?\n\nAll of these things are questions we have to ask ourselves as we are making changes in systems. But we have no way to watch them play out. No way to tweak the parameters.\n\nReally there are two tools trying to help us 1) Whiteboards 2) Formal models.Surely there is a nicer middle ground here.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650424146.803409",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PCnN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "open_mouth",
                                "unicode": "1f62e"
                            },
                            {
                                "type": "text",
                                "text": " Understanding all the code, including code not in my codebase, to know if the change I want to make is okay. Actually making the changes to an algorithm or a data model is not too hard, in isolation.\n\nI think data models in practice are typically harder because other code depends on it in a way that I have to understand that other code too. That other code may not even be accessible to me. (A customers codebase for example). Algorithms can have that implication, but not as often.\n\nSince I’m guessing this question is asked partially to motivate which problems to solve, I do think there are ways to tackle this.\n\nFirst, since others code in my scenario is a blackbox, we can’t just make tools for actually understanding that code, it isn’t accessible. But what we could do is make it easy to explore implications of changes.\n\nTake an algorithm change. Instead of sending a request for every one message, I aggregate every 10 messages and send them. What are the implications of this? What if I never get 10 messages? What if I overflow some bounds? What about retries? Would my accuracy decrees if my failure rate increased? Would this change be effective? Would it reduce my downstream costs?\n\nConsider a data model change. I have data structure A and I want to have data structure B. Is there a bidirectional mapping between them? What will the increase in my storage be? If I need to convert between the two, at what do I need to support? I know that I need X,Y, and Z access patterns. Are those efficient with the new data structure?\n\nAll of these things are questions we have to ask ourselves as we are making changes in systems. But we have no way to watch them play out. No way to tweak the parameters.\n\nReally there are two tools trying to help us 1) Whiteboards 2) Formal models.Surely there is a nicer middle ground here."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1650486717.190599",
        "client_msg_id": "cd88fed1-be4c-48e1-8ba1-c4fd5da85c8e",
        "text": "I don't think it's a trend I've noticed. I would say the programmability of almost everything has stayed consistently low.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650464577.515109",
        "parent_user_id": "U03CEGR3HSL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UP\/9p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't think it's a trend I've noticed. I would say the programmability of almost everything has stayed consistently low."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01NWARGPNC",
        "type": "message",
        "ts": "1650506851.511289",
        "client_msg_id": "2747b15c-bb45-4cd9-86d7-03528d4fc47c",
        "text": "I had not seen this <@U013ZLJARC7>! Thanks! :slightly_smiling_face:\nIt doesn’t solve the whole problem, but it could help with the tree diffing part of it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "beaca7f5eafb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-02-15\/1767152625025_beaca7f5eafb1b6233d0_72.png",
            "first_name": "Katie",
            "real_name": "Katie Bell",
            "display_name": "Katie Bell",
            "team": "T5TCAFTA9",
            "name": "katie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650388220.757719",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Hys2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I had not seen this "
                            },
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": "! Thanks! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\nIt doesn’t solve the whole problem, but it could help with the tree diffing part of it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    }
]