[
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1601882123.154300",
        "client_msg_id": "2890c640-a875-4457-92b0-4b1aad66d025",
        "text": "To follow up Chris on the zen stuff that help me freeing my mind from issues, etc.: I like cooking (and then eating what I have cooked of course) it helps me focused on manual things with a good balance between simple repetitive tasks with a bit of creativity. I find it relaxing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601838627.149500",
        "parent_user_id": "UPX3PH28N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9NEJ0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To follow up Chris on the zen stuff that help me freeing my mind from issues, etc.: I like cooking (and then eating what I have cooked of course) it helps me focused on manual things with a good balance between simple repetitive tasks with a bit of creativity. I find it relaxing."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5STGTB3J",
                    "UG0EL18H3",
                    "UKP3B2J5D",
                    "U019PRL1BNU"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1601882676.154600",
        "client_msg_id": "ad90b54a-32ce-46ad-b49c-ee841cf6f17f",
        "text": "And about my prog-futurism work, what motivates me the more is when I see that something that were complicated to do becomes really simple. It is when programming feels like magic.\n\nAnd what also motivates me is when someone else suddenly feels the magic also. For example during workshop, where you see a kid with sparkles in her eyes when she discover what she can create. Something, she didn't believe she can do a few minutes before.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601838627.149500",
        "parent_user_id": "UPX3PH28N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bz+9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And about my prog-futurism work, what motivates me the more is when I see that something that were complicated to do becomes really simple. It is when programming feels like magic.\n\nAnd what also motivates me is when someone else suddenly feels the magic also. For example during workshop, where you see a kid with sparkles in her eyes when she discover what she can create. Something, she didn't believe she can do a few minutes before."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UPX3PH28N",
                    "UKP3B2J5D"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1601882930.154800",
        "client_msg_id": "22ef587f-db84-4a06-94ed-6b9a1028200a",
        "text": "Also, a classic here, someone that motivates me, inspires me and makes me think a lot is Bret Victor. Another important inspiration: Seymour Papert.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601838627.149500",
        "parent_user_id": "UPX3PH28N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LjN\/8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, a classic here, someone that motivates me, inspires me and makes me think a lot is Bret Victor. Another important inspiration: Seymour Papert."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "This is an odd one, but this video inspires me. Imagine trying to convince a farm worker 200 years ago that this level of efficiency would be possible. Imagine the equivalent manual work.",
        "files": [
            {
                "id": "F01BHKX3W8P",
                "mode": "tombstone"
            }
        ],
        "upload": true,
        "user": "UDQBTJ211",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fngN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is an odd one, but this video inspires me. Imagine trying to convince a farm worker 200 years ago that this level of efficiency would be possible. Imagine the equivalent manual work."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1601884252.155200",
        "client_msg_id": "55cee29e-c69c-46a7-b65e-d0f363fe8aef",
        "thread_ts": "1601838627.149500",
        "parent_user_id": "UPX3PH28N",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UPX3PH28N",
                    "UKP3B2J5D"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1601884382.155600",
        "client_msg_id": "093e0726-6108-49b8-965f-a0dc15a33c5f",
        "text": "In terms of actual projects, it's bringing the real power of computers to frontline practitioners in fields that are currently underserved by computers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601838627.149500",
        "parent_user_id": "UPX3PH28N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qa6h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In terms of actual projects, it's bringing the real power of computers to frontline practitioners in fields that are currently underserved by computers."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UPX3PH28N",
                    "UKP3B2J5D"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1601889507.156300",
        "client_msg_id": "1048b0f6-63a1-4b8c-8fcc-b9d7897624ca",
        "text": "Partial evaluation to remove abstraction overhead?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601510649.105100",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BFX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Partial evaluation to remove abstraction overhead?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPZLYD3GB",
        "type": "message",
        "ts": "1601926994.157400",
        "client_msg_id": "88cdbee9-7c57-460d-9088-f3e6e6fa173a",
        "text": "A couple months ago I started a nightly routine of asking \"what was life-giving today?\". It's really helped me to identify the activities that really light me up, or provide me fuel. Those things that leave me with more energy then when I started them.  The biggest surprise I had here was doing physical activities while listening to an audiobook as a daily practice is highly rewarding for me. I'm talking about things like cleaning the garage, yardwork, etc.  On the coding side of things, I'm really lit up by the idea of giving developers freedom of notation where we can read\/write any function using whatever notation best serves our ability to think about that problem.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7ea171f95f0d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-08\/1170563225077_7ea171f95f0d1e213020_72.jpg",
            "first_name": "Jason",
            "real_name": "Jason Hobbs",
            "display_name": "Jason Hobbs",
            "team": "T5TCAFTA9",
            "name": "jddevnet",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601838627.149500",
        "parent_user_id": "UPX3PH28N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "911z6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A couple months ago I started a nightly routine of asking \"what was life-giving today?\". It's really helped me to identify the activities that really light me up, or provide me fuel. Those things that leave me with more energy then when I started them.  The biggest surprise I had here was doing physical activities while listening to an audiobook as a daily practice is highly rewarding for me. I'm talking about things like cleaning the garage, yardwork, etc.  On the coding side of things, I'm really lit up by the idea of giving developers freedom of notation where we can read\/write any function using whatever notation best serves our ability to think about that problem."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UPX3PH28N",
                    "UKP3B2J5D",
                    "U019PRL1BNU"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UNCP67JSK",
        "type": "message",
        "ts": "1601936078.157700",
        "edited": {
            "user": "UNCP67JSK",
            "ts": "1601937849.000000"
        },
        "client_msg_id": "b5d607d2-dd31-4dc7-85ea-ebfdd79f17f8",
        "text": "<@U01AD80KMLK> Very cool! Working on something similar (interactive graph of knowledge and logic). An interesting aspect is converters\/lenses\/mappers between types of values. A simple one being unit conversion, a more complex one being eg. a rephrasing of a concept with the terminology of one field, to another (where the mapping isn't 1:1).\n\nWould be cool to have the ability to associate function with functions (edge(origin function, target function, relation type\/concept article)); for instance. \"inverse\" of a multiplication with b is a division with b (I would prefer to have the multiplicative inverse of a real number, and the rest derived, but doesn't seem to fit as well with wikilambdas current structure).\n\n+ indexes of all functions applicable to a specific type (allowing fancy auto-complete).\n\nWill it support higher order functions? Thoughts regarding program termination? (I believe it can be solved for most cases in practise)\n\nOf course, a nice integration with wikidata.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e950179feb1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-11\/947800888119_9e950179feb1f81e1123_72.jpg",
            "first_name": "Leonard",
            "real_name": "Leonard Pauli",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "leonardpauli",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601330319.057300",
        "parent_user_id": "U01AD80KMLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2RL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01AD80KMLK"
                            },
                            {
                                "type": "text",
                                "text": " Very cool! Working on something similar (interactive graph of knowledge and logic). An interesting aspect is converters\/lenses\/mappers between types of values. A simple one being unit conversion, a more complex one being eg. a rephrasing of a concept with the terminology of one field, to another (where the mapping isn't 1:1).\n\nWould be cool to have the ability to associate function with functions (edge(origin function, target function, relation type\/concept article)); for instance. \"inverse\" of a multiplication with b is a division with b (I would prefer to have the multiplicative inverse of a real number, and the rest derived, but doesn't seem to fit as well with wikilambdas current structure).\n\n+ indexes of all functions applicable to a specific type (allowing fancy auto-complete).\n\nWill it support higher order functions? Thoughts regarding program termination? (I believe it can be solved for most cases in practise)\n\nOf course, a nice integration with wikidata."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNCP67JSK",
        "type": "message",
        "ts": "1601938614.158100",
        "edited": {
            "user": "UNCP67JSK",
            "ts": "1601938835.000000"
        },
        "client_msg_id": "aa0c6ae5-f2dd-4861-86bc-b2baabe25235",
        "text": "Oh! oh! Allow different output than text, eg. plots. Would then be great to update datasets\/tables in wikipedia to be type-annotated, both to make it accessible structurally, but also to allow `population_pyramid(country.sweden.population_history)` instead of the current images, that quickly go out of date with the underlying data (eg. <https:\/\/en.wikipedia.org\/wiki\/Demographics_of_Sweden>). (I suppose you've seen the likes of <https:\/\/observablehq.com\/explore>) Also, show function on article pages; eg. molar mass calc for a chemical compound. Wait, it is currently manually entered?? (eg. <https:\/\/en.wikipedia.org\/wiki\/Adenosine_triphosphate>). Also, all values inline text to be type-annotated, with the ability to apply relevant single-argument functions; eg. unit conversion. In math example, ability to \"link\" the values, resulting in the ability to provide your own. Endless possibilities. Much excitement. Looking forward to interop with my system; both using and adding functions\/data (also, when this becomes a reality, and an api gets used extensively, it would be cool with at least some sort of \"estimated infrastructure cost\" calculator, or a wikilambda-specific donation flag, if nothing else).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e950179feb1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-11\/947800888119_9e950179feb1f81e1123_72.jpg",
            "first_name": "Leonard",
            "real_name": "Leonard Pauli",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "leonardpauli",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601330319.057300",
        "parent_user_id": "U01AD80KMLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fHV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh! oh! Allow different output than text, eg. plots. Would then be great to update datasets\/tables in wikipedia to be type-annotated, both to make it accessible structurally, but also to allow "
                            },
                            {
                                "type": "text",
                                "text": "population_pyramid(country.sweden.population_history)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " instead of the current images, that quickly go out of date with the underlying data (eg. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Demographics_of_Sweden"
                            },
                            {
                                "type": "text",
                                "text": "). (I suppose you've seen the likes of "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/observablehq.com\/explore"
                            },
                            {
                                "type": "text",
                                "text": ") Also, show function on article pages; eg. molar mass calc for a chemical compound. Wait, it is currently manually entered?? (eg. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Adenosine_triphosphate"
                            },
                            {
                                "type": "text",
                                "text": "). Also, all values inline text to be type-annotated, with the ability to apply relevant single-argument functions; eg. unit conversion. In math example, ability to \"link\" the values, resulting in the ability to provide your own. Endless possibilities. Much excitement. Looking forward to interop with my system; both using and adding functions\/data (also, when this becomes a reality, and an api gets used extensively, it would be cool with at least some sort of \"estimated infrastructure cost\" calculator, or a wikilambda-specific donation flag, if nothing else)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNCP67JSK",
        "type": "message",
        "ts": "1601941405.158400",
        "client_msg_id": "06d92b38-955a-4d39-a82f-b1505209ce10",
        "text": "Disregarding mass destruction events, it's a question of preservation through data portability + software portability. Docker is pretty cool in that regard that as long as docker itself is maintained, all images will work for long. If not, just put the old docker in a medium old os in the next docker, and the gap is bridged. Seen windows95 in the browser? <https:\/\/copy.sh\/v86\/?profile=windows95> As long as we get a steady stream of bridges, and keep the data store fresh, we should be good. (though possibly a big ask for orgs like the internet archive).\n\nIt's tricky to enforce when the access-interval is longer than the rot-interval, but otherwise, the increasing decoupling of data from storage medium + logic from computational substrate is a good sign. Cloud platforms that die, and take both data and logic to the grave, is a less good trend. Don't do that. Observablehq is a little nice by including an open runtime with the source when you download your projects.\n\nIn my language, I strive for more high-level, separating logic from computational substrate, allowing re-export to multiple different mediums. By keeping it append-only, with unique refs to versioned logic, and including them in any potential exported data, in addition to somewhat automatic migration transformations between logic versions, I hope that a piece of data\/logic should both be runnable as is + \"migratable\" to a far future version, seamlessly.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e950179feb1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-11\/947800888119_9e950179feb1f81e1123_72.jpg",
            "first_name": "Leonard",
            "real_name": "Leonard Pauli",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "leonardpauli",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601503724.095900",
        "parent_user_id": "U019CPED6T1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LaD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Disregarding mass destruction events, it's a question of preservation through data portability + software portability. Docker is pretty cool in that regard that as long as docker itself is maintained, all images will work for long. If not, just put the old docker in a medium old os in the next docker, and the gap is bridged. Seen windows95 in the browser? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/copy.sh\/v86\/?profile=windows95"
                            },
                            {
                                "type": "text",
                                "text": " As long as we get a steady stream of bridges, and keep the data store fresh, we should be good. (though possibly a big ask for orgs like the internet archive).\n\nIt's tricky to enforce when the access-interval is longer than the rot-interval, but otherwise, the increasing decoupling of data from storage medium + logic from computational substrate is a good sign. Cloud platforms that die, and take both data and logic to the grave, is a less good trend. Don't do that. Observablehq is a little nice by including an open runtime with the source when you download your projects.\n\nIn my language, I strive for more high-level, separating logic from computational substrate, allowing re-export to multiple different mediums. By keeping it append-only, with unique refs to versioned logic, and including them in any potential exported data, in addition to somewhat automatic migration transformations between logic versions, I hope that a piece of data\/logic should both be runnable as is + \"migratable\" to a far future version, seamlessly."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01AD80KMLK",
        "type": "message",
        "ts": "1601945688.158600",
        "client_msg_id": "48dd5055-7d20-4f63-badd-c5cc62d438cf",
        "text": "<@UNCP67JSK> plenty of good ideas! come and join us on our mailing list! :slightly_smiling_face: Yes plenty of these ideas should become realizable when we get there",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a07cdcb6d037",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-09\/1376906509376_a07cdcb6d037bf7b6a5e_72.jpg",
            "first_name": "",
            "real_name": "Denny Vrandečić",
            "display_name": "Denny Vrandečić",
            "team": "T5TCAFTA9",
            "name": "dvrandecic",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601330319.057300",
        "parent_user_id": "U01AD80KMLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wm0d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UNCP67JSK"
                            },
                            {
                                "type": "text",
                                "text": " plenty of good ideas! come and join us on our mailing list! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " Yes plenty of these ideas should become realizable when we get there"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]