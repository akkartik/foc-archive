[
    {
        "user": "UEDDR6L5Q",
        "type": "message",
        "ts": "1557654730.334300",
        "text": "I think that one of the important takeaways from this post (and a reply to it) is that you need to be careful in choosing the fundamental atomic operations for CRDTs.\nHere, a character-based atom fails in the way he describes, but a span-based atom can work fine (see espadrine's reply)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "adf09dea9be2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-04-20\/1975289475446_adf09dea9be29fa422a0_72.png",
            "first_name": "",
            "real_name": "Andrew Reece",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "azmreece",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557595466.330800",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X=zl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think that one of the important takeaways from this post (and a reply to it) is that you need to be careful in choosing the fundamental atomic operations for CRDTs.\nHere, a character-based atom fails in the way he describes, but a span-based atom can work fine (see espadrine's reply)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "U7C7B75R6",
                    "UCUSW7WVD",
                    "UC2A2ARPT",
                    "U8A5MS6R1"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1557680713.334800",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1557689216.000000"
        },
        "client_msg_id": "6acaa9d7-3870-4ebe-9dc3-5506ac50fd63",
        "text": "I would think that \"emergent\" behavior is behavior that emerges (i.e. is discovered or evolves naturally) from patterns of interaction\/use with parts of a system. Anything that is just the expected way the entire system must behave (even if it's a distributed system) is not really \"emergent\".\n\nI usually hear others talk about \"emergence\" as if it's a \"divide and conquer\" approach to whole system design. I think that's a bad technique in general, because you want your software to be as whole and consistent and possible. (Even with hard boundaries across machines, the impact of that split can be minimized).\n\nAnyway, I'm pretty sure that's not the OOP vision of \"emergence\" that Alan Kay promotes. That's more like \"here's some crayons and a canvas\" or \"here's some forces that can be applied to objects\", and seeing where that leads to.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557447597.287300",
        "parent_user_id": "UJKC8B0QN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0P2wN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would think that \"emergent\" behavior is behavior that emerges (i.e. is discovered or evolves naturally) from patterns of interaction\/use with parts of a system. Anything that is just the expected way the entire system must behave (even if it's a distributed system) is not really \"emergent\".\n\nI usually hear others talk about \"emergence\" as if it's a \"divide and conquer\" approach to whole system design. I think that's a bad technique in general, because you want your software to be as whole and consistent and possible. (Even with hard boundaries across machines, the impact of that split can be minimized).\n\nAnyway, I'm pretty sure that's not the OOP vision of \"emergence\" that Alan Kay promotes. That's more like \"here's some crayons and a canvas\" or \"here's some forces that can be applied to objects\", and seeing where that leads to."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1557697434.335700",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1557700568.000000"
        },
        "client_msg_id": "de24990d-ffbd-42e2-9283-4c505c73aa82",
        "text": "Back to Shalabh's question though, one approach I've seen a few times is to allow a system to be coded (or otherwise specified) as if it were one self contained program, which then either compiles into separate parts, or and acts like a CI\/CD\/build script which installs or updates separate components on each server.\n\nI think that's also an approach used with protectional editing (e.g. with Jetbrains MPS): a single specification acts as a projection for multiple different software components",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557447597.287300",
        "parent_user_id": "UJKC8B0QN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oGZ73",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Back to Shalabh's question though, one approach I've seen a few times is to allow a system to be coded (or otherwise specified) as if it were one self contained program, which then either compiles into separate parts, or and acts like a CI\/CD\/build script which installs or updates separate components on each server.\n\nI think that's also an approach used with protectional editing (e.g. with Jetbrains MPS): a single specification acts as a projection for multiple different software components"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1557699570.335900",
        "client_msg_id": "b672da33-a9e7-4ab6-8788-ed54ea6cddfd",
        "text": "I have a few demo videos I recorded but I haven't put them together for a broader release yet. Maybe <@UE1JQM9HQ> has something...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557614429.334000",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TRYm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a few demo videos I recorded but I haven't put them together for a broader release yet. Maybe "
                            },
                            {
                                "type": "user",
                                "user_id": "UE1JQM9HQ"
                            },
                            {
                                "type": "text",
                                "text": " has something..."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]