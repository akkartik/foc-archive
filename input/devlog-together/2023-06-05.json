[
    {
        "text": "Lamdu now elaborates on non-trivial type errors!\nIn the screenshot several type errors are demonstrated:\n• A simple one: Text isn’t Num\n• “Occurs check”: `func func` means that the type of `func` is infinitely `(((a -&gt; a) -&gt; a) -&gt; a) -&gt; …` (note it can be done if wrapping in a nominal type to break the loop\n• Expand-record when inside record has the same fields. The message here isn’t yet very informative to which field is duplicated. Just says “constraints” for now\n• Scoped type variable escape (i.e “skolem”) error. This is equivalent to leaking Haskell’s `ST` monad’s `s` variable",
        "files": [
            {
                "id": "F05ARKA1C94",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U79HM6726",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E3m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lamdu now elaborates on non-trivial type errors!\nIn the screenshot several type errors are demonstrated:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "A simple one: Text isn’t Num"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "“Occurs check”: "
                                    },
                                    {
                                        "type": "text",
                                        "text": "func func",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " means that the type of "
                                    },
                                    {
                                        "type": "text",
                                        "text": "func",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " is infinitely "
                                    },
                                    {
                                        "type": "text",
                                        "text": "(((a -> a) -> a) -> a) -> …",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " (note it can be done if wrapping in a nominal type to break the loop"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Expand-record when inside record has the same fields. The message here isn’t yet very informative to which field is duplicated. Just says “constraints” for now"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Scoped type variable escape (i.e “skolem”) error. This is equivalent to leaking Haskell’s "
                                    },
                                    {
                                        "type": "text",
                                        "text": "ST",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " monad’s "
                                    },
                                    {
                                        "type": "text",
                                        "text": "s",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " variable"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1685955785.485109",
        "edited": {
            "user": "U79HM6726",
            "ts": "1685955940.000000"
        },
        "client_msg_id": "061bdd54-69a3-4563-afd1-8190b1c08d86",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "U0123H7JRDM",
                    "U02JQA5FY5C"
                ],
                "count": 3
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]