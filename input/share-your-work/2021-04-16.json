[
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1618588456.014500",
        "client_msg_id": "2fca88f6-e86a-4710-a3f1-0a728a7f9073",
        "text": "This kinda reminds me of the feeling of programming with the ECS pattern, where each system in ECS is the equivalent of that `dynamic()` function shown at the start. I wonder how he manages hierarchy, though (or even how he would approach _visualizing_ the spreadsheet with hierarchical data).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1617663267.017800",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rtg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This kinda reminds me of the feeling of programming with the ECS pattern, where each system in ECS is the equivalent of that "
                            },
                            {
                                "type": "text",
                                "text": "dynamic()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " function shown at the start. I wonder how he manages hierarchy, though (or even how he would approach "
                            },
                            {
                                "type": "text",
                                "text": "visualizing",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the spreadsheet with hierarchical data)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1618590489.014700",
        "client_msg_id": "a457b0a1-f398-411c-98c8-79f3d9794572",
        "text": "Cool demo <@U01DX39SB33>! Great work <@U016LEA3J1H> &amp; <@U01DX39SB33>\n\nThe demo of state charts is really interesting (cc <@UHWC9PXBL> @ 6m55s). Garth and I have discussed something similar for the product I'm working on at Storyscript, but instead of opening up to any state transitions, narrowing down to prioritize representing linear state progressions, as in:\n`Opened (Task Name)` -&gt;\n+ `In progress(Due Date)` -&gt;\n+ `Finished(Date Finished)` -&gt;\n+ `Accepted(Accepted By)`\nWhere each transition requires the properties of the next state to be defined, and each state is additive of the properties of the previous states. My guess is that the majority of domain models will move in a \"linear \/ acyclic\" \"additive\" way the majority of the time. Another example is order fulfillment for a web store.\n\nWhat do you all think? Do you all have any ambitious\/out-there ideas for the future of state charts &amp; domain modeling?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1617997306.003600",
        "parent_user_id": "U01DX39SB33",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FVJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cool demo "
                            },
                            {
                                "type": "user",
                                "user_id": "U01DX39SB33"
                            },
                            {
                                "type": "text",
                                "text": "! Great work "
                            },
                            {
                                "type": "user",
                                "user_id": "U016LEA3J1H"
                            },
                            {
                                "type": "text",
                                "text": " & "
                            },
                            {
                                "type": "user",
                                "user_id": "U01DX39SB33"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe demo of state charts is really interesting (cc "
                            },
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " @ 6m55s). Garth and I have discussed something similar for the product I'm working on at Storyscript, but instead of opening up to any state transitions, narrowing down to prioritize representing linear state progressions, as in:\n"
                            },
                            {
                                "type": "text",
                                "text": "Opened (Task Name)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ->\n+ "
                            },
                            {
                                "type": "text",
                                "text": "In progress(Due Date)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ->\n+ "
                            },
                            {
                                "type": "text",
                                "text": "Finished(Date Finished)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " ->\n+ "
                            },
                            {
                                "type": "text",
                                "text": "Accepted(Accepted By)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nWhere each transition requires the properties of the next state to be defined, and each state is additive of the properties of the previous states. My guess is that the majority of domain models will move in a \"linear \/ acyclic\" \"additive\" way the majority of the time. Another example is order fulfillment for a web store.\n\nWhat do you all think? Do you all have any ambitious\/out-there ideas for the future of state charts & domain modeling?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016LEA3J1H",
        "type": "message",
        "ts": "1618593935.014900",
        "edited": {
            "user": "U016LEA3J1H",
            "ts": "1618594105.000000"
        },
        "client_msg_id": "e9151054-ac25-4c36-833e-1c232ee059b8",
        "text": "i think your instincts are right for sure, most things tend to go in those linear states. Mo and I both used to work at Shopify and have a borderline uncomfortably deep familiarity with the state machines powering the shopify order model, and notably there's actually two kind-of-orthogonal ones, one for the financial status and one for the fulfillment status. most of the time, merchants wait till they get all their money before sending out on order, but not always like with net 30 payment processing, or the other way around, they sometimes take the money way way before fulfillment is even possible, like with a kickstarter or pre-order",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7082261f477c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-06\/1225163496802_7082261f477cd8a85548_72.jpg",
            "first_name": "Harry",
            "real_name": "Harry Brundage",
            "display_name": "Harry Brundage",
            "team": "T5TCAFTA9",
            "name": "harry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1617997306.003600",
        "parent_user_id": "U01DX39SB33",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ubp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i think your instincts are right for sure, most things tend to go in those linear states. Mo and I both used to work at Shopify and have a borderline uncomfortably deep familiarity with the state machines powering the shopify order model, and notably there's actually two kind-of-orthogonal ones, one for the financial status and one for the fulfillment status. most of the time, merchants wait till they get all their money before sending out on order, but not always like with net 30 payment processing, or the other way around, they sometimes take the money way way before fulfillment is even possible, like with a kickstarter or pre-order"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thought_balloon",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016LEA3J1H",
        "type": "message",
        "ts": "1618593971.015100",
        "edited": {
            "user": "U016LEA3J1H",
            "ts": "1618593997.000000"
        },
        "client_msg_id": "78ad7374-9c14-4f4c-9e75-c177f58ede5f",
        "text": "so we kinda think that while state machines are a really powerful way of modelling this logic, you still end up with a lot of extra transitions between states that happen rarely, but not never, and that can in fact be burdensome when using such a formal way of governing stuff",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7082261f477c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-06\/1225163496802_7082261f477cd8a85548_72.jpg",
            "first_name": "Harry",
            "real_name": "Harry Brundage",
            "display_name": "Harry Brundage",
            "team": "T5TCAFTA9",
            "name": "harry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1617997306.003600",
        "parent_user_id": "U01DX39SB33",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bew",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "so we kinda think that while state machines are a really powerful way of modelling this logic, you still end up with a lot of extra transitions between states that happen rarely, but not never, and that can in fact be burdensome when using such a formal way of governing stuff"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "ok_hand",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016LEA3J1H",
        "type": "message",
        "ts": "1618594046.015400",
        "edited": {
            "user": "U016LEA3J1H",
            "ts": "1618594062.000000"
        },
        "client_msg_id": "538dd903-200f-43e0-8906-6ad6bda01240",
        "text": "we hope that by owning the interface our developers are using to construct these state machines we can help with that and accelerate the creation of those not-super-frequently taken transitions, think like click and select 4 states then right click and hit a \"create all possible transitions\" menu option, easier to delete the ones you don't want than create all the ones you do",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7082261f477c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-06\/1225163496802_7082261f477cd8a85548_72.jpg",
            "first_name": "Harry",
            "real_name": "Harry Brundage",
            "display_name": "Harry Brundage",
            "team": "T5TCAFTA9",
            "name": "harry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1617997306.003600",
        "parent_user_id": "U01DX39SB33",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6bd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "we hope that by owning the interface our developers are using to construct these state machines we can help with that and accelerate the creation of those not-super-frequently taken transitions, think like click and select 4 states then right click and hit a \"create all possible transitions\" menu option, easier to delete the ones you don't want than create all the ones you do"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016LEA3J1H",
        "type": "message",
        "ts": "1618594139.016000",
        "client_msg_id": "0e4a40e2-224c-4626-95e8-18dc982e4111",
        "text": "even for a kanban board backend, you should probably be able to move a card between any column at any time, and ya as you said just some of those transitions should require particular validations to be met before being take-able",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7082261f477c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-06\/1225163496802_7082261f477cd8a85548_72.jpg",
            "first_name": "Harry",
            "real_name": "Harry Brundage",
            "display_name": "Harry Brundage",
            "team": "T5TCAFTA9",
            "name": "harry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1617997306.003600",
        "parent_user_id": "U01DX39SB33",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wnl1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "even for a kanban board backend, you should probably be able to move a card between any column at any time, and ya as you said just some of those transitions should require particular validations to be met before being take-able"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016LEA3J1H",
        "type": "message",
        "ts": "1618594226.016200",
        "client_msg_id": "3dedeb80-c321-46d2-b4b7-8cb5f25a5fa6",
        "text": "one thing we haven't nailed yet is the relationship between those additive validations and the state that something is in, we have a facility for defining one global, always applying set of validations for each model same as Rails or Django or Postgres constraints might work, but i think you are totally right and there's a set of validations that only apply in the later stages of a record's lifecycle that would be nice to model as such",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7082261f477c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-06\/1225163496802_7082261f477cd8a85548_72.jpg",
            "first_name": "Harry",
            "real_name": "Harry Brundage",
            "display_name": "Harry Brundage",
            "team": "T5TCAFTA9",
            "name": "harry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1617997306.003600",
        "parent_user_id": "U01DX39SB33",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+FLI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "one thing we haven't nailed yet is the relationship between those additive validations and the state that something is in, we have a facility for defining one global, always applying set of validations for each model same as Rails or Django or Postgres constraints might work, but i think you are totally right and there's a set of validations that only apply in the later stages of a record's lifecycle that would be nice to model as such"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1618594273.016400",
        "edited": {
            "user": "UFPPABQ7P",
            "ts": "1618594284.000000"
        },
        "client_msg_id": "540d65aa-b14d-44b9-b286-003c4f590929",
        "text": "There's also an interesting difference between enabling \"human scale\" editability (as in, directly updating the data) vs automated updates of the data (via API).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1617997306.003600",
        "parent_user_id": "U01DX39SB33",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rPyQ9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's also an interesting difference between enabling \"human scale\" editability (as in, directly updating the data) vs automated updates of the data (via API)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1618594595.016700",
        "edited": {
            "user": "UFPPABQ7P",
            "ts": "1618594650.000000"
        },
        "client_msg_id": "1b1bbaad-7b2f-4a8f-98eb-4c2b2f5ea8ee",
        "text": "It sounds like from your experience and intuition, you would suggest that it is common enough that a gadget user will just need to \"make it work\" even if their domain model is incorrect. Therefore, it's likely best to not have a forced constraints model, but *maybe* enable a spectrum of \"constrainability\". For example, \"while this operation is possible, we strongly recommend you do Y. Please confirm.\" At which point the editor has to confirm their action which will be marked in the audit trail...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1617997306.003600",
        "parent_user_id": "U01DX39SB33",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vqZL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It sounds like from your experience and intuition, you would suggest that it is common enough that a gadget user will just need to \"make it work\" even if their domain model is incorrect. Therefore, it's likely best to not have a forced constraints model, but *maybe* enable a spectrum of \"constrainability\". For example, \"while this operation is possible, we strongly recommend you do Y. Please confirm.\" At which point the editor has to confirm their action which will be marked in the audit trail..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01U19ECZTJ",
        "type": "message",
        "ts": "1618609600.017100",
        "client_msg_id": "1b587cd7-d2ca-4f61-8ed1-17721e6c59a3",
        "text": "Hi Cole, did you watch the second video, as it shows more hierarchical data. By ECS, do you mean \"entity component system\"? The version I had about 22 years ago was designed that way. There isn't strictly a hierarchy, just dependencies. Notice how time can even depend on itself. Objects can be grouped in a hierarchy, but that's not related to the dependency management.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d80d37c53cd4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-04-05\/1929520000754_d80d37c53cd4ee3c8f5f_72.png",
            "first_name": "",
            "real_name": "Kevin Greer",
            "display_name": "Kevin Greer",
            "team": "T5TCAFTA9",
            "name": "kgrgreer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1617663267.017800",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kZLO7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi Cole, did you watch the second video, as it shows more hierarchical data. By ECS, do you mean \"entity component system\"? The version I had about 22 years ago was designed that way. There isn't strictly a hierarchy, just dependencies. Notice how time can even depend on itself. Objects can be grouped in a hierarchy, but that's not related to the dependency management."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1618610018.017400",
        "edited": {
            "user": "UFPPABQ7P",
            "ts": "1618610036.000000"
        },
        "client_msg_id": "656340a2-1a1c-4e8a-a041-2880376fb1ab",
        "text": "I hadn't seen the other video. Is it the one with Turtle Graphics?\nYes, I am referring to the \"entity component system\" pattern, which is something we love using in our product eng. <@U01U19ECZTJ>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1617663267.017800",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ieZH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I hadn't seen the other video. Is it the one with Turtle Graphics?\nYes, I am referring to the \"entity component system\" pattern, which is something we love using in our product eng. "
                            },
                            {
                                "type": "user",
                                "user_id": "U01U19ECZTJ"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01U19ECZTJ",
        "type": "message",
        "ts": "1618615313.017900",
        "client_msg_id": "be168cf9-7949-4be0-afb1-c35ecde50894",
        "text": "This one: <https:\/\/drive.google.com\/file\/d\/0B5eit2LJlAkaOXE4RmZXbEZxb3c\/view> It's the one that starts with the robot my son made and later shows a puppet on strings.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d80d37c53cd4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-04-05\/1929520000754_d80d37c53cd4ee3c8f5f_72.png",
            "first_name": "",
            "real_name": "Kevin Greer",
            "display_name": "Kevin Greer",
            "team": "T5TCAFTA9",
            "name": "kgrgreer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1617663267.017800",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ipq\/P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This one: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/drive.google.com\/file\/d\/0B5eit2LJlAkaOXE4RmZXbEZxb3c\/view"
                            },
                            {
                                "type": "text",
                                "text": " It's the one that starts with the robot my son made and later shows a puppet on strings."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]