[
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1547109738.074000",
        "client_msg_id": "45c99359-9749-4ec8-aabd-d5ebce547554",
        "text": "This link is trending on HN with the title\n\n<https:\/\/news.ycombinator.com\/item?id=18866500>\n\nNot sure if slack will show a title but it's about someone who says he taught his little brother to code and made a small game. The game is designed for mobile. Hold the phone flat and tilt.\n\nIn any case it kind of shows my point above on JavaScript vs PICO-8.\n\nI agree that PICO-8 with build in sprite editor, map editor, sound editor, music tracker helps. The small size also make it less likely you're going to spend too long on making pretty graphics instead of coding.\n\nAt the same time you're entirely your own. Instead of just deciding what you want your character to do like you might in Unity you've got to code your own collisions, your own (simple) physics, etc...  That might be good for learning but it seems the far opposite of the topic \"future of coding\". More like \"past of coding\" :stuck_out_tongue:   I guess it's still undecided if the old way is the best or if some new way would be better. Having learned the old way it certainly can work but it seems like the premise of this group is that there's likely a much better way.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1546431799.043400",
        "parent_user_id": "UEQ7QL15F",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4+1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This link is trending on HN with the title\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=18866500"
                            },
                            {
                                "type": "text",
                                "text": "\n\nNot sure if slack will show a title but it's about someone who says he taught his little brother to code and made a small game. The game is designed for mobile. Hold the phone flat and tilt.\n\nIn any case it kind of shows my point above on JavaScript vs PICO-8.\n\nI agree that PICO-8 with build in sprite editor, map editor, sound editor, music tracker helps. The small size also make it less likely you're going to spend too long on making pretty graphics instead of coding.\n\nAt the same time you're entirely your own. Instead of just deciding what you want your character to do like you might in Unity you've got to code your own collisions, your own (simple) physics, etc...  That might be good for learning but it seems the far opposite of the topic \"future of coding\". More like \"past of coding\" "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": "   I guess it's still undecided if the old way is the best or if some new way would be better. Having learned the old way it certainly can work but it seems like the premise of this group is that there's likely a much better way."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEQ7QL15F",
        "type": "message",
        "ts": "1547116041.074300",
        "client_msg_id": "fbab6533-a359-496b-a1b3-4f0075eddafa",
        "text": "The right level of abstraction is always hard. Ideally, you’d want to have something that is low-level to give full flexibility and small API, but something that is at the same time expressive enough to make it easy to do complex things as well.\n\nI think the lack of inbuilt collision detection etc is by design in PICO-8. Other tools, like GDevelop and Stencyl (and Unity), give you those out-of-the-box, but then you will never learn how they work.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g52d221ae708",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/a52d221ae708f36674644a348005633a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Janne",
            "real_name": "Janne Aukia",
            "display_name": "jaukia",
            "team": "T5TCAFTA9",
            "name": "janne.aukia",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1546431799.043400",
        "parent_user_id": "UEQ7QL15F",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3oN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The right level of abstraction is always hard. Ideally, you’d want to have something that is low-level to give full flexibility and small API, but something that is at the same time expressive enough to make it easy to do complex things as well.\n\nI think the lack of inbuilt collision detection etc is by design in PICO-8. Other tools, like GDevelop and Stencyl (and Unity), give you those out-of-the-box, but then you will never learn how they work."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1547135882.074500",
        "client_msg_id": "5280e1c7-2024-4b0c-b9ce-2c581ed5c62e",
        "text": "I dunno. Unity gives you collision detection, sure, but a lot of people (myself included) end up writing their own, because the kind of game they're making doesn't fit the kind of collision Unity handles best. That's a testament to Unity — when you _need_ to make your own, you can. But until then, there's a nice built-in implementation to get you started. It'd be nicer though, I'd argue, if the built-in one was open source and designed to be hackable.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1546431799.043400",
        "parent_user_id": "UEQ7QL15F",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zm1Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I dunno. Unity gives you collision detection, sure, but a lot of people (myself included) end up writing their own, because the kind of game they're making doesn't fit the kind of collision Unity handles best. That's a testament to Unity — when you "
                            },
                            {
                                "type": "text",
                                "text": "need",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to make your own, you can. But until then, there's a nice built-in implementation to get you started. It'd be nicer though, I'd argue, if the built-in one was open source and designed to be hackable."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F",
                    "UBSMEUXAA"
                ],
                "count": 2
            }
        ]
    }
]