[
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1630318364.037000",
        "client_msg_id": "01f19ac4-4bb0-4911-8c57-6d797984b500",
        "text": "I think a pixel level regression failure has to be defined visually, e.g.with a screenshot, and displayed visually e.g. by showing a diff image or rapidly switching between expected value and result",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630187035.033600",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CD+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think a pixel level regression failure has to be defined visually, e.g.with a screenshot, and displayed visually e.g. by showing a diff image or rapidly switching between expected value and result"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1630318527.037200",
        "client_msg_id": "5233b452-316b-4fc1-b1be-fdb3e10a3773",
        "text": "If you want to assist with debugging, the feature I always used to want to exist, was to see which code contributed to affecting the pixel value",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630187035.033600",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8C\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you want to assist with debugging, the feature I always used to want to exist, was to see which code contributed to affecting the pixel value"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0H4170F",
        "type": "message",
        "ts": "1630353528.038200",
        "edited": {
            "user": "UE0H4170F",
            "ts": "1630353742.000000"
        },
        "client_msg_id": "a8255498-911e-44d7-a061-8ca23387b43d",
        "text": "<@URLP9FWR3> does feedforward associate pattern text with individual outputs already? I’m guessing yes from the highlighting you do with the mini-notation. Could you use the regular Tidal transitions to just jump back and forth between patterns like this? This is assuming you had some mechanism for a “bookmark” like what has already been discussed in this thread. Not sure what the code-side representation would look like during transitions but it’s fun to think about that for sure :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2cfca823894",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/72cfca823894034e7bdbc31623c007d3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Charlie Roberts",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "charlie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630137575.005900",
        "parent_user_id": "URLP9FWR3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZOz6o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "URLP9FWR3"
                            },
                            {
                                "type": "text",
                                "text": " does feedforward associate pattern text with individual outputs already? I’m guessing yes from the highlighting you do with the mini-notation. Could you use the regular Tidal transitions to just jump back and forth between patterns like this? This is assuming you had some mechanism for a “bookmark” like what has already been discussed in this thread. Not sure what the code-side representation would look like during transitions but it’s fun to think about that for sure "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1630371359.043100",
        "edited": {
            "user": "UMVFWPZ36",
            "ts": "1630371416.000000"
        },
        "client_msg_id": "158ecabf-ebb7-47e3-ba17-7a90293a4055",
        "text": "Has anyone seen a study on \"how a DSL becomes a GPL\"? Or, alternatively, \"what is the most common path travelers take before arriving at Greenspun's 10th rule?\"\n\nIs there something like \"DSLS either die or eventually add identifiers, then functions, then branching, then macros, etc\"? I'm curious if you can look ahead and say \"well if this is successful, it will eventual require so many things, so might as well not do a DSL in the beginning and instead start with a GPL and build a library\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1630371359.043100",
        "reply_count": 7,
        "reply_users_count": 4,
        "latest_reply": "1631030080.120900",
        "reply_users": [
            "U027P92A0N5",
            "U013ZLJARC7",
            "UJBAJNFLK",
            "UCUSW7WVD"
        ],
        "replies": [
            {
                "user": "U027P92A0N5",
                "ts": "1630396931.043400"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1630399048.043700"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1630480313.044400"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1630568392.044900"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1630573653.045200"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1630573743.045500"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1631030080.120900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GhK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Has anyone seen a study on \"how a DSL becomes a GPL\"? Or, alternatively, \"what is the most common path travelers take before arriving at Greenspun's 10th rule?\"\n\nIs there something like \"DSLS either die or eventually add identifiers, then functions, then branching, then macros, etc\"? I'm curious if you can look ahead and say \"well if this is successful, it will eventual require so many things, so might as well not do a DSL in the beginning and instead start with a GPL and build a library\""
                            }
                        ]
                    }
                ]
            }
        ]
    }
]