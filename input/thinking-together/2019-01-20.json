[
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1548014530.376500",
        "client_msg_id": "93c2ba17-b246-4108-aab6-6209ffab4fbd",
        "text": "One inversion of this question is to ask: what kinds of programming models make building applications _easy_? In general, I think the big issue here is: does a system allow you to think at the level of the domain? A basic example is Matplotlib vs. Tableau. If you’ve ever made a chart, you know how onerous Matplotlib’s programming model is, how manually you have to specify a lot of that seems obvious or inferrable. It’s so much friction that making charts seems like a chore, and exploring data is instead done through printing out data points and other easier visualizations. By contrast, a tool like Tableau gives you the vocabulary to think at the level of the domain (i.e. data visualization). “Ok, I need to plot these two rows against this column.” Done. Tableau picks the right chart type and axis bounds+labels. It autogenerated the SQL query that’s needed to join all the tables together and select your data. And importantly, small changes to the plot are easy. “Hmm, I wonder what happens if we remove this class of data points?” Quick filter done.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1547862690.360400",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mwF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One inversion of this question is to ask: what kinds of programming models make building applications "
                            },
                            {
                                "type": "text",
                                "text": "easy",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "? In general, I think the big issue here is: does a system allow you to think at the level of the domain? A basic example is Matplotlib vs. Tableau. If you’ve ever made a chart, you know how onerous Matplotlib’s programming model is, how manually you have to specify a lot of that seems obvious or inferrable. It’s so much friction that making charts seems like a chore, and exploring data is instead done through printing out data points and other easier visualizations. By contrast, a tool like Tableau gives you the vocabulary to think at the level of the domain (i.e. data visualization). “Ok, I need to plot these two rows against this column.” Done. Tableau picks the right chart type and axis bounds+labels. It autogenerated the SQL query that’s needed to join all the tables together and select your data. And importantly, small changes to the plot are easy. “Hmm, I wonder what happens if we remove this class of data points?” Quick filter done."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1548014640.376700",
        "client_msg_id": "61d87125-83c8-45f9-b54b-a3dc311d6372",
        "text": "It’s really effective (and a multibillion dollar company) because, I would claim, that is the level at which people think about visualization, and it’s a programming model that matches that level of abstraction. That’s why systems like Spark have won out over traditional HPC systems like OpenMPI as well, since they provide primitives that better match the language of the domain (distributed list processing).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1547862690.360400",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S9Y1P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’s really effective (and a multibillion dollar company) because, I would claim, that is the level at which people think about visualization, and it’s a programming model that matches that level of abstraction. That’s why systems like Spark have won out over traditional HPC systems like OpenMPI as well, since they provide primitives that better match the language of the domain (distributed list processing)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDJ8A6RNH",
        "type": "message",
        "ts": "1548024029.377900",
        "edited": {
            "user": "UDJ8A6RNH",
            "ts": "1548024041.000000"
        },
        "client_msg_id": "5da272c4-844d-4e8f-bcbb-b24270ba8007",
        "text": "thanks for making this happen <@U5TCAFTD3>! can we have an \"announcements\" or meetups channel for the next one? I missed  the announcement because I don't go on twitter and missed it in the general channel",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga41c273f4d5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2a41c273f4d55889dbecdb473a9dcc81.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "",
            "real_name": "Dev Doshi",
            "display_name": "dev",
            "team": "T5TCAFTA9",
            "name": "dev",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548024029.377900",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1548032852.397600",
        "reply_users": [
            "UE6EFEPTQ",
            "U5TCAFTD3"
        ],
        "replies": [
            {
                "user": "UE6EFEPTQ",
                "ts": "1548024475.380300"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1548024517.380500"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1548032830.397400"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1548032852.397600"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1548032852.397600",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MUe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "thanks for making this happen "
                            },
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": "! can we have an \"announcements\" or meetups channel for the next one? I missed  the announcement because I don't go on twitter and missed it in the general channel"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_check_mark",
                "users": [
                    "UFKM7DBAA",
                    "UCGAK10LS",
                    "UE6EFEPTQ"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "UFD2JRE58",
                    "UCKRZS3DZ",
                    "UE6EFEPTQ",
                    "UAZT04VT4",
                    "UD43R8ZFV"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1548024142.379300",
        "client_msg_id": "34bdfe9e-3aa1-4829-aa6c-bd340d4f66cf",
        "text": "Thanks a bunch for organizing this. I didn't have working AV, but I was hovering in the background and in the doc, like a ghost.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1547634447.327100",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aRLX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks a bunch for organizing this. I didn't have working AV, but I was hovering in the background and in the doc, like a ghost."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "ghost",
                "users": [
                    "UCGAK10LS",
                    "U5TCAFTD3"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UDJ8A6RNH",
        "type": "message",
        "ts": "1548024145.379600",
        "client_msg_id": "3829f3fd-a9b8-4563-92f1-816a36b8a6d9",
        "text": "Also, I would recommend flipyourtraining or something like our own subreddit for discussing all our links and stuff. In something like slack or google docs it's too easy to miss changes IMO",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga41c273f4d5",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2a41c273f4d55889dbecdb473a9dcc81.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "",
            "real_name": "Dev Doshi",
            "display_name": "dev",
            "team": "T5TCAFTA9",
            "name": "dev",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3RJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, I would recommend flipyourtraining or something like our own subreddit for discussing all our links and stuff. In something like slack or google docs it's too easy to miss changes IMO"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD43R8ZFV",
        "type": "message",
        "ts": "1548024341.379900",
        "client_msg_id": "707be3e3-4933-4d7a-9d86-d8edaebba2b4",
        "text": "+1 to thanks for organizing. Really well done meetup. You did a great job making sure no one voice overtook the conversation.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "85ee3dacef95",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-30\/445630960161_85ee3dacef95dd5617e4_72.png",
            "first_name": "Tim",
            "real_name": "Tim Swast",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "tswast",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1547634447.327100",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7Ie",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "+1 to thanks for organizing. Really well done meetup. You did a great job making sure no one voice overtook the conversation."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1548024475.380300",
        "client_msg_id": "8f9708ee-1614-45f6-aadc-65f7c1aebaa6",
        "text": "I missed it too, sadly. The more announcements the better! Especially not on side threads but in main channels.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548024029.377900",
        "parent_user_id": "UDJ8A6RNH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xnd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I missed it too, sadly. The more announcements the better! Especially not on side threads but in main channels."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1548024517.380500",
        "client_msg_id": "292e2225-1872-4630-9044-c5b256f43d50",
        "text": "Got a link to the uploaded video, <@U5TCAFTD3>? :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548024029.377900",
        "parent_user_id": "UDJ8A6RNH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kFJp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Got a link to the uploaded video, "
                            },
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": "? "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1548028182.386400",
        "client_msg_id": "4bfe9527-2b37-4bf1-9c44-5cc736461799",
        "text": "Yeah I guess it's not always really clear what's \"hard\" until an \"easy\" alternative is presented",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1547862690.360400",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WxOa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah I guess it's not always really clear what's \"hard\" until an \"easy\" alternative is presented"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1548029205.388800",
        "client_msg_id": "ce940f0c-bf67-429f-95c8-55fe68a6f119",
        "text": "Just to continue the conversation about collaboration a bit… RPCs have been the secret sauce in all my successful collaborations, large and small.\n\nAt work, hundreds of people collaborate by splitting into 3–10 person teams whose servers communicate over agreed-upon protocols. Teams just exchange addresses then go to work in their silos where communication is lightweight. In my side-projects, RPCs allow everybody involved to use their favorite programming languages and development environments. And in academia, the people who built on my work did so _because_ I released it as a library with a well-defined protocol.\n\nOn the flip side, the biggest failures I've been a part of started with \"let's all work on the same code base\" as a key part of their mission. When there were a lot of people, the failure was because that goes against any hierarchical organizational structure. When there were few people, having no clear areas of ownership led to a tragedy of the commons.\n\nSo if we want to change coding to make collaboration more efficient, I think we need languages that give us vastly more separation, to enable the divide-and-conquer strategy of collaboration that people tend to use. At authoring time, it's limiting that my team has to contribute to your project in Python because your part is in Python, and that you should even notice if mine isn't in Python. At run-time, it's limiting that when your piece crashes mine goes down with it. At source control time, it's painful that our changes are interspersed such that my piece is broken until you fix yours. And at design time, it's inefficient for every line of code to be up for debate rather than having the boundary between my part and your part be the sole surface of discussion.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qyDii",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just to continue the conversation about collaboration a bit… RPCs have been the secret sauce in all my successful collaborations, large and small.\n\nAt work, hundreds of people collaborate by splitting into 3–10 person teams whose servers communicate over agreed-upon protocols. Teams just exchange addresses then go to work in their silos where communication is lightweight. In my side-projects, RPCs allow everybody involved to use their favorite programming languages and development environments. And in academia, the people who built on my work did so "
                            },
                            {
                                "type": "text",
                                "text": "because",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " I released it as a library with a well-defined protocol.\n\nOn the flip side, the biggest failures I've been a part of started with \"let's all work on the same code base\" as a key part of their mission. When there were a lot of people, the failure was because that goes against any hierarchical organizational structure. When there were few people, having no clear areas of ownership led to a tragedy of the commons.\n\nSo if we want to change coding to make collaboration more efficient, I think we need languages that give us vastly more separation, to enable the divide-and-conquer strategy of collaboration that people tend to use. At authoring time, it's limiting that my team has to contribute to your project in Python because your part is in Python, and that you should even notice if mine isn't in Python. At run-time, it's limiting that when your piece crashes mine goes down with it. At source control time, it's painful that our changes are interspersed such that my piece is broken until you fix yours. And at design time, it's inefficient for every line of code to be up for debate rather than having the boundary between my part and your part be the sole surface of discussion."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UD43R8ZFV",
                    "U5TCAFTD3",
                    "U85MWBKEY"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1548029730.391900",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1548030534.000000"
        },
        "client_msg_id": "e0d3b22b-deba-45d8-8752-292dd5dd25e2",
        "text": "&gt; At authoring time, it's limiting that my team has to contribute to your project in Python because your part is in Python\nBut on the contrary, letting everyone choose their own language has to be a nightmare for maintainability, e.g. when the person who wrote a chunk of code in their own language and style leaves the project.\n&gt; At run-time, it's limiting that when your piece crashes mine goes down with it\nDoes RPC solve this better than projects with a single code base and a good type system? RPC is synchronous, so a failed call will cause an error value to be returned either way.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qp8nX",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At authoring time, it's limiting that my team has to contribute to your project in Python because your part is in Python"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But on the contrary, letting everyone choose their own language has to be a nightmare for maintainability, e.g. when the person who wrote a chunk of code in their own language and style leaves the project."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At run-time, it's limiting that when your piece crashes mine goes down with it"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does RPC solve this better than projects with a single code base and a good type system? RPC is synchronous, so a failed call will cause an error value to be returned either way."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1548029781.392600",
        "client_msg_id": "04211556-ecdd-4072-8438-56512558c478",
        "text": "&gt; At source control time, it's painful that our changes are interspersed such that my piece is broken until you fix yours.\nI agree. The ability to execute incomplete programs is a way around this. Check out <http:\/\/hazel.org|hazel.org> .",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F9R",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At source control time, it's painful that our changes are interspersed such that my piece is broken until you fix yours."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree. The ability to execute incomplete programs is a way around this. Check out "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/hazel.org",
                                "text": "hazel.org"
                            },
                            {
                                "type": "text",
                                "text": " ."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1548029874.393600",
        "client_msg_id": "3e281f2b-9bd6-4383-aa1b-dbf0ebf5d7c0",
        "text": "&gt; And at design time, it's inefficient for every line of code to be up for debate\nThis sounds more like a people problem than a tech problem though. Isn't it better solved through good communication?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+bVLs",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And at design time, it's inefficient for every line of code to be up for debate"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This sounds more like a people problem than a tech problem though. Isn't it better solved through good communication?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1548031069.394700",
        "client_msg_id": "30d6d208-4538-4b54-93e2-9215d542b98b",
        "text": "Sorry to have missed it.  Guess I needed to comment here to in order for Slack to let me know that this thread was active.  :cry:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1547634447.327100",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XcY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry to have missed it.  Guess I needed to comment here to in order for Slack to let me know that this thread was active.  "
                            },
                            {
                                "type": "emoji",
                                "name": "cry",
                                "unicode": "1f622"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cry",
                "users": [
                    "U5TCAFTD3",
                    "UE6EFEPTQ"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1548031652.396800",
        "edited": {
            "user": "UA14TGLTC",
            "ts": "1548033280.000000"
        },
        "client_msg_id": "9a4b1fb3-c298-46c8-9da6-a2b7c466cd87",
        "text": "<@UDJ8A6RNH> <@U5TCAFTD3> Yes, I also missed the meetup announcement since it was hidden in what became the \"just wanted to put feelers out for general interest\" thread.  You can find some minutes here friends <https:\/\/docs.google.com\/document\/d\/1HmeMPnEWn45nGuboM0-GDmkytvc-ChYKLLE3AFpyfr8\/edit#heading=h.ltpp6pwmivyf>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QNW0D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDJ8A6RNH"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": " Yes, I also missed the meetup announcement since it was hidden in what became the \"just wanted to put feelers out for general interest\" thread.  You can find some minutes here friends "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.google.com\/document\/d\/1HmeMPnEWn45nGuboM0-GDmkytvc-ChYKLLE3AFpyfr8\/edit#heading=h.ltpp6pwmivyf"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "face_with_rolling_eyes",
                "users": [
                    "UE6EFEPTQ"
                ],
                "count": 1
            },
            {
                "name": "upside_down_face",
                "users": [
                    "UE6EFEPTQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1548032830.397400",
        "client_msg_id": "4dd82074-2825-4552-be35-3c48244f336d",
        "text": "<@U6KQ2S410> do you have the video?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548024029.377900",
        "parent_user_id": "UDJ8A6RNH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pze4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": " do you have the video?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1548032852.397600",
        "client_msg_id": "142d368e-047e-4e18-bb58-eb8e133c67eb",
        "text": "Sorry you missed it! I try not to spam people with over notifying them, but will give a bigger push to the next one",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548024029.377900",
        "parent_user_id": "UDJ8A6RNH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tcv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry you missed it! I try not to spam people with over notifying them, but will give a bigger push to the next one"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1548037741.399400",
        "edited": {
            "user": "UFEQUBNNT",
            "ts": "1548038099.000000"
        },
        "client_msg_id": "fcba9786-01b4-49ef-b344-3899abeb803e",
        "text": "<@UCGAK10LS> I don't think so, but it's just because you're talking about the quality of the communication and I'm talking about the amount. I'm saying that when protocol boundaries match team boundaries, cross-team discussion is only ever needed when the protocol changes, whereas without protocol boundaries, the teams potentially step on each other's toes with every change.\n\nYou're right about maintainability, but today it's very easy technologically and organizationally to enforce a single programming language across the organization, whereas it's nearly impossible for people to collaborate in multiple languages at any level smaller than a server. That's a lever that we just can't pull, even in cases where it might make collaboration more efficient.\n\nA type of collaboration I see a lot is when my team needs another team's expertise. An RPC protocol can be written to satisfy almost any language's type system guarantees, so theoretically the only difference between calling a method written in the same language and one in a different language should be where the computer looks for the implementation. But when I ask a team of machine learning experts to write a GetRecommendedMovies() function for my web site, and their preferred ML library is TensorFlow, their implementation strategy varies _dramatically_ based on which language I want to call the function from. I don't think we necessarily want that collaboration overhead. Usually, we don't gain anything from it.\n\nAnd if in the course of writing GetRecommendedMovies(), they accidentally introduce a memory leak, does the user get a connection-lost error because the whole server goes down, or is the movie recommendation part of the page just empty because I handle the error on my side? Do I have to fix their bug to work on other parts of my page?\n\nAnd if I want to continue development with a working version of their code (not just a black hole that behaves as if the function never existed), do I have to root cause the bug to figure out which commits to revert, or can I just back out all of that team's changes (the ones on their side of the protocol boundary) from the past week? Can I do that without losing everyone else's changes from that same period?\n\nThis is the shape of my collaborative coding dream. :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548037741.399400",
        "reply_count": 9,
        "reply_users_count": 4,
        "latest_reply": "1556432083.209300",
        "reply_users": [
            "UFEQUBNNT",
            "UCUSW7WVD",
            "U8A5MS6R1",
            "UEQ6M68H0"
        ],
        "replies": [
            {
                "user": "UFEQUBNNT",
                "ts": "1556141350.183100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1556141891.183500"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1556198662.187000"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1556201791.187300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1556223353.187600"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1556224036.188100"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1556226543.188400"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1556226832.188600"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1556432083.209300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wnhce",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " I don't think so, but it's just because you're talking about the quality of the communication and I'm talking about the amount. I'm saying that when protocol boundaries match team boundaries, cross-team discussion is only ever needed when the protocol changes, whereas without protocol boundaries, the teams potentially step on each other's toes with every change.\n\nYou're right about maintainability, but today it's very easy technologically and organizationally to enforce a single programming language across the organization, whereas it's nearly impossible for people to collaborate in multiple languages at any level smaller than a server. That's a lever that we just can't pull, even in cases where it might make collaboration more efficient.\n\nA type of collaboration I see a lot is when my team needs another team's expertise. An RPC protocol can be written to satisfy almost any language's type system guarantees, so theoretically the only difference between calling a method written in the same language and one in a different language should be where the computer looks for the implementation. But when I ask a team of machine learning experts to write a GetRecommendedMovies() function for my web site, and their preferred ML library is TensorFlow, their implementation strategy varies "
                            },
                            {
                                "type": "text",
                                "text": "dramatically",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " based on which language I want to call the function from. I don't think we necessarily want that collaboration overhead. Usually, we don't gain anything from it.\n\nAnd if in the course of writing GetRecommendedMovies(), they accidentally introduce a memory leak, does the user get a connection-lost error because the whole server goes down, or is the movie recommendation part of the page just empty because I handle the error on my side? Do I have to fix their bug to work on other parts of my page?\n\nAnd if I want to continue development with a working version of their code (not just a black hole that behaves as if the function never existed), do I have to root cause the bug to figure out which commits to revert, or can I just back out all of that team's changes (the ones on their side of the protocol boundary) from the past week? Can I do that without losing everyone else's changes from that same period?\n\nThis is the shape of my collaborative coding dream. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U85MWBKEY"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1548057205.437200",
        "client_msg_id": "5e905745-84a8-49d9-a932-7bfdd3596595",
        "text": "Some thoughts after meetup.\n\n*Users are humans.* They evolved from monkeys not so long ago.\nThat's why today's UI uses shades, smooth animation, tries to look Material: this way UI reminds real world that we evolved against.\nThat's why one of the most effective ways to comprehend math is to rely on geometry, visual thinking.\nWe may think about programming environments (languages) as an UI for program design.\nMaybe this programming UI should also be limited to only those abstractions that fit well into human brain.\nThose abstractions and ideas that can be experienced in everyday monkey life.\n\nAbstractions and ideas that fit well:\n - idea of immutable data. Most objects in real world most of the time stay unchanged. Just like we have many identical pieces of paper (or rocks) that we modify, we have many copies of same immutable data, that used to produce something new.\n - idea that objects behave differently in different contexts (partial application of pure function as context update?). Objects in real world behave differently when they are places in different context: warm, cold, light, dark.\n - idea that actions can be undone by traversing routes backwards. That what we do, when we lost our keys in the middle of the route. We try to remember where exactly we walked, and walk backwards. Once we found the keys, we create new branch of walk.\n - idea of separation for reliable actions, and unreliable actions that may have unpredictable outcome. If you work with static objects (or objects that move linearly), you can be sure that you can walk, jump, catch, run pretty much unconsciously with desired results. If you engage with another actor: a moving object, you need to calculate, negotiate, and it's much harder.\n   In real world reducing number of moving objects, using as many static objects as possible makes life easier.\n   Same in programming: keeping as many things immutable as possible, reduce number of dependencies that can change behavior without your explicit command -- makes life easier.\n\nAbstractions and ideas that don't fit well:\n - closure function that captured IO interface (tcp socket, db connection). Basically what you get, is special kind of object that may behave totally differently, regardless of your input. It has implicit invisible dependency that change its behavior. It is not an object under your control, but rather an independent actor that you need to negotiate with (just like another human being).\n - objects that can arbitrarily modify their own behavior. We have that kind of objects in languages with metaprogramming (e.g. Lisp), but we rarely see anything similar in everyday life. Most of the time objects are changed explicitly from outside.\n - idea that object can implicitly change context, global state. If there change, it's always visible and explicit.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1548057205.437200",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1548230292.473700",
        "reply_users": [
            "UCKRZS3DZ",
            "UA14TGLTC",
            "UEQ6M68H0"
        ],
        "replies": [
            {
                "user": "UCKRZS3DZ",
                "ts": "1548061691.438400"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1548072966.439000"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1548230292.473700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wVP=e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some thoughts after meetup.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "Users are humans.",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " They evolved from monkeys not so long ago.\nThat's why today's UI uses shades, smooth animation, tries to look Material: this way UI reminds real world that we evolved against.\nThat's why one of the most effective ways to comprehend math is to rely on geometry, visual thinking.\nWe may think about programming environments (languages) as an UI for program design.\nMaybe this programming UI should also be limited to only those abstractions that fit well into human brain.\nThose abstractions and ideas that can be experienced in everyday monkey life.\n\nAbstractions and ideas that fit well:\n - idea of immutable data. Most objects in real world most of the time stay unchanged. Just like we have many identical pieces of paper (or rocks) that we modify, we have many copies of same immutable data, that used to produce something new.\n - idea that objects behave differently in different contexts (partial application of pure function as context update?). Objects in real world behave differently when they are places in different context: warm, cold, light, dark.\n - idea that actions can be undone by traversing routes backwards. That what we do, when we lost our keys in the middle of the route. We try to remember where exactly we walked, and walk backwards. Once we found the keys, we create new branch of walk.\n - idea of separation for reliable actions, and unreliable actions that may have unpredictable outcome. If you work with static objects (or objects that move linearly), you can be sure that you can walk, jump, catch, run pretty much unconsciously with desired results. If you engage with another actor: a moving object, you need to calculate, negotiate, and it's much harder.\n   In real world reducing number of moving objects, using as many static objects as possible makes life easier.\n   Same in programming: keeping as many things immutable as possible, reduce number of dependencies that can change behavior without your explicit command -- makes life easier.\n\nAbstractions and ideas that don't fit well:\n - closure function that captured IO interface (tcp socket, db connection). Basically what you get, is special kind of object that may behave totally differently, regardless of your input. It has implicit invisible dependency that change its behavior. It is not an object under your control, but rather an independent actor that you need to negotiate with (just like another human being).\n - objects that can arbitrarily modify their own behavior. We have that kind of objects in languages with metaprogramming (e.g. Lisp), but we rarely see anything similar in everyday life. Most of the time objects are changed explicitly from outside.\n - idea that object can implicitly change context, global state. If there change, it's always visible and explicit."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC",
                    "UBSMEUXAA"
                ],
                "count": 2
            },
            {
                "name": "bulb",
                "users": [
                    "UDJ2TKB99"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1548057563.438300",
        "client_msg_id": "c1700cf0-4605-41b2-86b5-2ae735d27121",
        "text": "Summary: not only UI should be fit for our monkey brains, but also programming abstractions.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uaGV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Summary: not only UI should be fit for our monkey brains, but also programming abstractions."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]