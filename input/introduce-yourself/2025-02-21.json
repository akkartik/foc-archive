[
    {
        "user": "UDRF3ALP4",
        "type": "message",
        "ts": "1740134913.686859",
        "edited": {
            "user": "UDRF3ALP4",
            "ts": "1740134953.000000"
        },
        "client_msg_id": "0709848f-9264-441b-b616-a5a07667f50b",
        "text": "I'm in awe! We had <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1737136852046089|a thread> about workflow engines a few weeks ago, which feels like a blindspot to me, would be curious to read more from from you about it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cc11a4b410bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-01-16\/527084657030_cc11a4b410bd932425de_72.jpg",
            "first_name": "Gregor",
            "real_name": "Gregor",
            "display_name": "Gregor",
            "team": "T5TCAFTA9",
            "name": "gregorwbr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1739940638.291049",
        "parent_user_id": "U08DYF4SEAE",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1737136852046089",
                "ts": "1737136852.046089",
                "author_id": "UDRF3ALP4",
                "channel_id": "C5T9GPWFL",
                "channel_team": "T5TCAFTA9",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "message_blocks": [
                    {
                        "team": "T5TCAFTA9",
                        "channel": "C5T9GPWFL",
                        "ts": "1737136852.046089",
                        "message": {
                            "blocks": [
                                {
                                    "type": "rich_text",
                                    "block_id": "mjLJ3",
                                    "elements": [
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "link",
                                                    "url": "https:\/\/bsky.app\/profile\/watwa.re\/post\/3lfxdhu7kss2m",
                                                    "text": "I just asked over on bsky:"
                                                },
                                                {
                                                    "type": "text",
                                                    "text": "\n"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "rich_text_quote",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "I'm morbidly fascinated by Business Process Modeling. On some level it's exactly what I want: end user programming.\nBut then the only people I heard speak positively about it are vendors, which is very much not what I want\n\nIt's also a non-topic in the alt programming circles I frequent. Any takes?"
                                                }
                                            ]
                                        },
                                        {
                                            "type": "rich_text_section",
                                            "elements": [
                                                {
                                                    "type": "text",
                                                    "text": "I guess I could've just put it here. Curious if anyone has thoughts on it"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1737136852046089",
                "fallback": "[January 17th, 2025 10:00 AM] gregorwbr: <https:\/\/bsky.app\/profile\/watwa.re\/post\/3lfxdhu7kss2m|I just asked over on bsky:>\n> I'm morbidly fascinated by Business Process Modeling. On some level it's exactly what I want: end user programming.\n> But then the only people I heard speak positively about it are vendors, which is very much not what I want\n> \n> It's also a non-topic in the alt programming circles I frequent. Any takes?\nI guess I could've just put it here. Curious if anyone has thoughts on it",
                "text": "<https:\/\/bsky.app\/profile\/watwa.re\/post\/3lfxdhu7kss2m|I just asked over on bsky:>\n> I'm morbidly fascinated by Business Process Modeling. On some level it's exactly what I want: end user programming.\n> But then the only people I heard speak positively about it are vendors, which is very much not what I want\n> \n> It's also a non-topic in the alt programming circles I frequent. Any takes?\nI guess I could've just put it here. Curious if anyone has thoughts on it",
                "author_name": "Gregor",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/UDRF3ALP4",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2019-01-16\/527084657030_cc11a4b410bd932425de_48.jpg",
                "author_subname": "Gregor",
                "mrkdwn_in": [
                    "text"
                ],
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vq63c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm in awe! We had "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1737136852046089",
                                "text": "a thread"
                            },
                            {
                                "type": "text",
                                "text": " about workflow engines a few weeks ago, which feels like a blindspot to me, would be curious to read more from from you about it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U08DYF4SEAE",
        "type": "message",
        "ts": "1740174745.699749",
        "edited": {
            "user": "U08DYF4SEAE",
            "ts": "1740177557.000000"
        },
        "client_msg_id": "6cf782a0-9b96-4537-92dc-359ab0585b83",
        "text": "Yeah, sure, let me see what I can do to convey this stuff. So first of all, the system I built was not based on BPMN at all. It was built from scratch and adapted over many years to suit the wide variety of use cases needed. It was still a reasonably generic workflow system, but by being something in house we were able to make it have the actual features that would get the job done, as opposed to grabbing something off the shelf and praying.\n\nMy core criticism of BPMN and most workflow systems - like say Camunda - is that they are simply a kind of glorified chart execution system. In general, they are completely disconnected from the actual system they are meant to control. They started from the same kind of modeling background as UML, and have historically had trouble IMO by effectively standardizing first. There was a lot of speculation about the value it could bring. On paper it might seem like the right path: create a visually oriented tool for describing business processes. Focus on the visual language that subject matter experts might be able to understand. Then create a standard for it so that a variety of tools can consume it. One of the problems you see is that the early versions of UML\/BPMN were really about a shared visual language for communication purposes. Then as the hope of making it work through automation came into play and a variety of enterprise vendors got involved. Both UML and BPMN went through revisions into order to give them execution semantics to actually run. It was also happening during peak XML\/WebServices complexity explosion was happening. This also dramatically increased the complexity, in many ways making a kind of worst of both worlds. Its no surprise to me that the AWS step function system is not based on BPMN, but is quite simple in comparison.\n\nIf you want a gruesome inside look of what creating a standard through OMG is like, I find this tale about CORBA to be a good example of the kind of insanity that happens when you make a standard from vendor soup: <https:\/\/queue.acm.org\/detail.cfm?id=1142044> there's a lot of \"castles in the sky\" kind of thinking. Here's an account around UML that echoes the similarities <https:\/\/tratt.net\/laurie\/blog\/2022\/uml_my_part_in_its_downfall.html>. A lot of dreaming of how to model the happy path of processes without actually building something and using it and making sure it actually worked. A lot of kitchen sink acceptance of feature requests without a simple coherent vision.\n\nWhen I built our workflow system, it was a completely different sort of process. We started with the simplest thing we could build - a kind of simple flow chart\/state machine that was built as a functional system first. As we built out the larger system (like I said, it was a complete loan automation system), and as we were trying to handle the problems of a real national mortgage lender, the system was built to solve the actual problems in ways that would actually be used\/useful. Where it ended up was dramatically different than something like BPMN.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "af3f4f3c0604",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-18\/8487018839873_af3f4f3c0604a679e817_72.jpg",
            "first_name": "When",
            "real_name": "When Leggett",
            "display_name": "When Leggett",
            "team": "T5TCAFTA9",
            "name": "russ",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1739940638.291049",
        "parent_user_id": "U08DYF4SEAE",
        "attachments": [
            {
                "from_url": "https:\/\/queue.acm.org\/detail.cfm?id=1142044",
                "service_icon": "https:\/\/queue.acm.org\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/queue.acm.org\/detail.cfm?id=1142044",
                "fallback": "The Rise and Fall of CORBA - ACM Queue",
                "text": "The Rise and Fall of CORBA\nThere’s a lot we can learn from CORBA’s mistakes.\nMICHI HENNING, ZeroC\nDepending on exactly when one starts counting, CORBA is about 10-15 years\n old. During its lifetime, CORBA has moved from being a bleeding-edge technology\n for early adopters, to being a popular middleware, to being a niche technology\n that exists in relative obscurity. It is instructive to examine why CORBA—despite\n once being heralded as the “next-generation technology for e-commerce”—suffered\n this fate. CORBA’s history is one that the computing industry has seen\n many times, and it seems likely that current middleware efforts, specifically\nWeb services, will reenact a similar history.\nA Brief History\n\n In the early ’90s, persuading programs on different machines to talk\n to each other was a nightmare, especially if different hardware, operating\n systems, and programming languages were involved: programmers either used sockets\n and wrote an entire protocol stack themselves or their programs didn’t\n talk at all. (Other early middleware, such as Sun ONC, Apollo NCS, and DCE,\n was tied to C and Unix and not suitable for heterogeneous environments.)",
                "title": "The Rise and Fall of CORBA - ACM Queue",
                "title_link": "https:\/\/queue.acm.org\/detail.cfm?id=1142044",
                "service_name": "queue.acm.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7eNs8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, sure, let me see what I can do to convey this stuff. So first of all, the system I built was not based on BPMN at all. It was built from scratch and adapted over many years to suit the wide variety of use cases needed. It was still a reasonably generic workflow system, but by being something in house we were able to make it have the actual features that would get the job done, as opposed to grabbing something off the shelf and praying.\n\nMy core criticism of BPMN and most workflow systems - like say Camunda - is that they are simply a kind of glorified chart execution system. In general, they are completely disconnected from the actual system they are meant to control. They started from the same kind of modeling background as UML, and have historically had trouble IMO by effectively standardizing first. There was a lot of speculation about the value it could bring. On paper it might seem like the right path: create a visually oriented tool for describing business processes. Focus on the visual language that subject matter experts might be able to understand. Then create a standard for it so that a variety of tools can consume it. One of the problems you see is that the early versions of UML\/BPMN were really about a shared visual language for communication purposes. Then as the hope of making it work through automation came into play and a variety of enterprise vendors got involved. Both UML and BPMN went through revisions into order to give them execution semantics to actually run. It was also happening during peak XML\/WebServices complexity explosion was happening. This also dramatically increased the complexity, in many ways making a kind of worst of both worlds. Its no surprise to me that the AWS step function system is not based on BPMN, but is quite simple in comparison.\n\nIf you want a gruesome inside look of what creating a standard through OMG is like, I find this tale about CORBA to be a good example of the kind of insanity that happens when you make a standard from vendor soup: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/queue.acm.org\/detail.cfm?id=1142044"
                            },
                            {
                                "type": "text",
                                "text": " there's a lot of \"castles in the sky\" kind of thinking. Here's an account around UML that echoes the similarities "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/tratt.net\/laurie\/blog\/2022\/uml_my_part_in_its_downfall.html"
                            },
                            {
                                "type": "text",
                                "text": ". A lot of dreaming of how to model the happy path of processes without actually building something and using it and making sure it actually worked. A lot of kitchen sink acceptance of feature requests without a simple coherent vision.\n\nWhen I built our workflow system, it was a completely different sort of process. We started with the simplest thing we could build - a kind of simple flow chart\/state machine that was built as a functional system first. As we built out the larger system (like I said, it was a complete loan automation system), and as we were trying to handle the problems of a real national mortgage lender, the system was built to solve the actual problems in ways that would actually be used\/useful. Where it ended up was dramatically different than something like BPMN."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U08DYF4SEAE",
        "type": "message",
        "ts": "1740194584.647149",
        "client_msg_id": "eb6a0ad4-8948-4383-baad-31034ec0a19b",
        "text": "Without writing up a full specification for you, let me see if I can hit some of the highlights about the major differences. Like I said before, one of the really core differences that shaped everything was the fact that our workflow system was more deeply integrated into the larger application.\n\nTake a product like Camunda, based on BPMN and deployed as a completely independent or even SaaS hosted approach. Triggering a Process to start generally means an API call from custom software. The data that the Process has access to is usually a payload (json) from the initial trigger that is carried along, possibly manipulated by the Process itself, but disconnected from the system that sourced it. Decisions could come from the outcome of a performance step - a human being making a choice. However, automated decisions need to be data driven. These decisions are handled by \"logic gates\" (that can pollute the chart a bit when it gets complicated), or use another standard, DMN, for decision modeling - typically using a kind of decision table.  Vendors also love to add in machine learning or maybe a rules engine integration to supplement. In all of these cases that make decisions based on data, it requires you to put the right data into the workflow for it to be available for the decisions. I don't really see this highlighted as a major sticking point because I'm honestly not sure people are aware of how much it affects the whole problem space.\n\nHere's a dialog I had with ChatGPT to sort of draw out an unbiased assessment of BPMN style tools and then compare to what I built, so there's a deeper explanation here of what I actually built <https:\/\/chatgpt.com\/share\/67b942ab-8a40-800d-9b97-be9c8f4bde38>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "af3f4f3c0604",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-18\/8487018839873_af3f4f3c0604a679e817_72.jpg",
            "first_name": "When",
            "real_name": "When Leggett",
            "display_name": "When Leggett",
            "team": "T5TCAFTA9",
            "name": "russ",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1739940638.291049",
        "parent_user_id": "U08DYF4SEAE",
        "attachments": [
            {
                "image_url": "https:\/\/cdn.oaistatic.com\/assets\/chatgpt-share-og-u7j5uyao.webp",
                "image_width": 1600,
                "image_height": 900,
                "image_bytes": 8652,
                "from_url": "https:\/\/chatgpt.com\/share\/67b942ab-8a40-800d-9b97-be9c8f4bde38",
                "service_icon": "https:\/\/cdn.oaistatic.com\/assets\/favicon-180x180-od45eci6.webp",
                "id": 1,
                "original_url": "https:\/\/chatgpt.com\/share\/67b942ab-8a40-800d-9b97-be9c8f4bde38",
                "fallback": "ChatGPT: ChatGPT - BPMN Tools and Maintenance",
                "text": "Shared via ChatGPT",
                "title": "ChatGPT - BPMN Tools and Maintenance",
                "title_link": "https:\/\/chatgpt.com\/share\/67b942ab-8a40-800d-9b97-be9c8f4bde38",
                "service_name": "ChatGPT"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bbs48",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Without writing up a full specification for you, let me see if I can hit some of the highlights about the major differences. Like I said before, one of the really core differences that shaped everything was the fact that our workflow system was more deeply integrated into the larger application.\n\nTake a product like Camunda, based on BPMN and deployed as a completely independent or even SaaS hosted approach. Triggering a Process to start generally means an API call from custom software. The data that the Process has access to is usually a payload (json) from the initial trigger that is carried along, possibly manipulated by the Process itself, but disconnected from the system that sourced it. Decisions could come from the outcome of a performance step - a human being making a choice. However, automated decisions need to be data driven. These decisions are handled by \"logic gates\" (that can pollute the chart a bit when it gets complicated), or use another standard, DMN, for decision modeling - typically using a kind of decision table.  Vendors also love to add in machine learning or maybe a rules engine integration to supplement. In all of these cases that make decisions based on data, it requires you to put the right data into the workflow for it to be available for the decisions. I don't really see this highlighted as a major sticking point because I'm honestly not sure people are aware of how much it affects the whole problem space.\n\nHere's a dialog I had with ChatGPT to sort of draw out an unbiased assessment of BPMN style tools and then compare to what I built, so there's a deeper explanation here of what I actually built "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/chatgpt.com\/share\/67b942ab-8a40-800d-9b97-be9c8f4bde38"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]