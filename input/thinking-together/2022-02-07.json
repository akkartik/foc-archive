[
    {
        "user": "UNCP67JSK",
        "type": "message",
        "ts": "1644225700.796269",
        "client_msg_id": "12E50C2C-F62C-43AF-A8E8-563B75EFA0E3",
        "text": "<@U01HKV85Y1J> Same! Web tech document paradigm and makes adapting a zoompan UI paradigm to it annoying. I've now started exploring going directly to the GPU (similar to eg. figma), using rust+wgpu-&gt;native+web w wasm. Totally different performance class + possibilities for novel UI's!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e950179feb1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-11\/947800888119_9e950179feb1f81e1123_72.jpg",
            "first_name": "Leonard",
            "real_name": "Leonard Pauli",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "leonardpauli",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1643604696.171209",
        "parent_user_id": "U01HKV85Y1J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i28h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01HKV85Y1J"
                            },
                            {
                                "type": "text",
                                "text": " Same! Web tech document paradigm and makes adapting a zoompan UI paradigm to it annoying. I've now started exploring going directly to the GPU (similar to eg. figma), using rust+wgpu->native+web w wasm. Totally different performance class + possibilities for novel UI's!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "popcorn",
                "users": [
                    "U01ULEWACPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03049AB2Q3",
        "type": "message",
        "ts": "1644239024.238569",
        "client_msg_id": "aa7e4b2d-829f-43e4-ab59-70231b6f8360",
        "text": "Counter to <@UDQBTJ211> I think right-to-left is the perfect choice. If I understand correctly, someone reading this is probably only interested in their own use case, so most of the tree will be collapsed.\n\nPresumably the user has already input a bunch of information about the current case, in which case you already know what relevant stuff to show them and what to hide.\n\nIf it's the other way round and the user wants to know what needs to be true to be eligible, then you actually want to gather all the leaves and present them to him as a form. A form autogenerated in this way could react and remove queries that you've calculated are no longer relevant based on info given so far.\n\nThe 'all's and 'any's will presumably have a mouseover text that says \"all\/any connected rule must apply for this to apply\" or some such. Similarly a longer description string for the rules themselves - either permanent or on mouseover - would be needed. Unless this is a tool for people who read \"OAS s.3(1)\" a thousand times a day and not intended for laymen.\n\nFor authoring the rules rather than reading them, might you actually prefer a freeform interface where you can drag the nodes around wherever? Then you could spatially organise the rules in way that makes implicit sense without having to verbalise anything.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8ee62111432",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8ee621114327943dac461ff4e9b9a7fc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Tobias",
            "real_name": "Tobias Showan",
            "display_name": "Tobias Showan",
            "team": "T5TCAFTA9",
            "name": "tobias.showan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1643218203.543119",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZP8M7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Counter to "
                            },
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " I think right-to-left is the perfect choice. If I understand correctly, someone reading this is probably only interested in their own use case, so most of the tree will be collapsed.\n\nPresumably the user has already input a bunch of information about the current case, in which case you already know what relevant stuff to show them and what to hide.\n\nIf it's the other way round and the user wants to know what needs to be true to be eligible, then you actually want to gather all the leaves and present them to him as a form. A form autogenerated in this way could react and remove queries that you've calculated are no longer relevant based on info given so far.\n\nThe 'all's and 'any's will presumably have a mouseover text that says \"all\/any connected rule must apply for this to apply\" or some such. Similarly a longer description string for the rules themselves - either permanent or on mouseover - would be needed. Unless this is a tool for people who read \"OAS s.3(1)\" a thousand times a day and not intended for laymen.\n\nFor authoring the rules rather than reading them, might you actually prefer a freeform interface where you can drag the nodes around wherever? Then you could spatially organise the rules in way that makes implicit sense without having to verbalise anything."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1644261643.466379",
        "edited": {
            "user": "U02E4DAQGSZ",
            "ts": "1644261714.000000"
        },
        "client_msg_id": "2a8c3c71-fd37-4e37-9a67-000d8a079171",
        "text": "the hook method is how game engines work too, I quite like it, I have adopted it in a few places too. It usually requires your hooks to do side effects, so its not for the FP purists!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1643881219.518079",
        "parent_user_id": "U01FAFPDFL4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Sug",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the hook method is how game engines work too, I quite like it, I have adopted it in a few places too. It usually requires your hooks to do side effects, so its not for the FP purists!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01HKV85Y1J",
        "type": "message",
        "ts": "1644262909.154029",
        "client_msg_id": "59897e75-8743-4bda-ad1a-a8e28499748a",
        "text": "that's great! <@UNCP67JSK> I'd love to see where you go with that :slightly_smiling_face:  I've dabbled in webgl but the DOM is already so useful for media (html, audio, video, iframes, etc) but if I can more easily get where I want to go with webgl, I'll absolutely jump ship :stuck_out_tongue:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf67023e922f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f67023e922f1b8898e41ad2ff927b301.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "David Brooks",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "brodavi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1643604696.171209",
        "parent_user_id": "U01HKV85Y1J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vn+f2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that's great! "
                            },
                            {
                                "type": "user",
                                "user_id": "UNCP67JSK"
                            },
                            {
                                "type": "text",
                                "text": " I'd love to see where you go with that "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "  I've dabbled in webgl but the DOM is already so useful for media (html, audio, video, iframes, etc) but if I can more easily get where I want to go with webgl, I'll absolutely jump ship "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]