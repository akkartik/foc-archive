[
    {
        "subtype": "channel_join",
        "user": "U5TCAFTD3",
        "text": "<@U5TCAFTD3> has joined the channel",
        "type": "message",
        "ts": "1542117714.000200"
    },
    {
        "subtype": "channel_join",
        "user": "U8A5MS6R1",
        "text": "<@U8A5MS6R1> has joined the channel",
        "type": "message",
        "ts": "1542130499.000400"
    },
    {
        "subtype": "channel_join",
        "user": "U5Y7114NS",
        "text": "<@U5Y7114NS> has joined the channel",
        "type": "message",
        "ts": "1542131929.000600"
    },
    {
        "subtype": "channel_join",
        "user": "UBN1G4C1J",
        "text": "<@UBN1G4C1J> has joined the channel",
        "type": "message",
        "ts": "1542132124.000800"
    },
    {
        "subtype": "channel_join",
        "user": "UC21F8Q48",
        "text": "<@UC21F8Q48> has joined the channel",
        "type": "message",
        "ts": "1542132601.001000"
    },
    {
        "subtype": "channel_join",
        "user": "UE0H4170F",
        "text": "<@UE0H4170F> has joined the channel",
        "type": "message",
        "ts": "1542132891.001200"
    },
    {
        "user": "UE0H4170F",
        "type": "message",
        "ts": "1542133059.002400",
        "client_msg_id": "f5428104-2909-4124-9d4c-8e7594936407",
        "text": "not using RTX (although I’m looking forward to digging into it!), but I’ve been working on a raymarching JS library that compiles GLSL shaders. Looking forward to sticking a DSL for CSG on top of it one of these days… <http:\/\/charlie-roberts.com\/marching\/playground\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2cfca823894",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/72cfca823894034e7bdbc31623c007d3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Charlie Roberts",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "charlie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zx9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "not using RTX (although I’m looking forward to digging into it!), but I’ve been working on a raymarching JS library that compiles GLSL shaders. Looking forward to sticking a DSL for CSG on top of it one of these days… "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/charlie-roberts.com\/marching\/playground\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0H4170F",
        "type": "message",
        "ts": "1542133097.003000",
        "client_msg_id": "00cf65e2-3721-42a7-bfac-235183b9a0aa",
        "text": "that might be the most acronyms I’ve ever used in two sentences.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2cfca823894",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/72cfca823894034e7bdbc31623c007d3.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Charlie Roberts",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "charlie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "swa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that might be the most acronyms I’ve ever used in two sentences."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "laughing",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "UD3R8FKAN",
        "text": "<@UD3R8FKAN> has joined the channel",
        "type": "message",
        "ts": "1542133154.003300"
    },
    {
        "subtype": "channel_join",
        "user": "UBSMEUXAA",
        "text": "<@UBSMEUXAA> has joined the channel",
        "type": "message",
        "ts": "1542133541.003500"
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1542133889.005000",
        "client_msg_id": "e2936e47-436e-452f-8250-dc30e8534bee",
        "text": "One thing that's happening is the shader pipeline is gaining a lot more complicity, ray tracing along adds 6 new shaders (callable, closest hit, any hit, intersection, miss, ray generation) <https:\/\/docs.microsoft.com\/en-us\/windows\/desktop\/direct3d12\/direct3d-12-raytracing-hlsl-shaders>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Direct3D 12 Raytracing HLSL Shaders",
                "title_link": "https:\/\/docs.microsoft.com\/en-us\/windows\/desktop\/direct3d12\/direct3d-12-raytracing-hlsl-shaders",
                "text": "The following HLSL shaders support the Direct3D 12 raytracing pipeline.",
                "fallback": "Direct3D 12 Raytracing HLSL Shaders",
                "thumb_url": "https:\/\/docs.microsoft.com\/_themes\/docs.theme\/master\/en-us\/_themes\/images\/microsoft-header.png",
                "from_url": "https:\/\/docs.microsoft.com\/en-us\/windows\/desktop\/direct3d12\/direct3d-12-raytracing-hlsl-shaders",
                "thumb_width": 128,
                "thumb_height": 128,
                "service_icon": "https:\/\/docs.microsoft.com\/favicon.ico",
                "service_name": "docs.microsoft.com",
                "id": 1,
                "original_url": "https:\/\/docs.microsoft.com\/en-us\/windows\/desktop\/direct3d12\/direct3d-12-raytracing-hlsl-shaders"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/iwr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One thing that's happening is the shader pipeline is gaining a lot more complicity, ray tracing along adds 6 new shaders (callable, closest hit, any hit, intersection, miss, ray generation) "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.microsoft.com\/en-us\/windows\/desktop\/direct3d12\/direct3d-12-raytracing-hlsl-shaders"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1542133934.005900",
        "client_msg_id": "fe1cda3d-7ac5-4908-98fd-f4e1b7d2766d",
        "text": "that doesn't include non-raytracing features like mesh shaders and texture space shading",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tds",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "that doesn't include non-raytracing features like mesh shaders and texture space shading"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1542134035.007200",
        "client_msg_id": "8387f80a-9efd-4b97-98e4-780684df6a3a",
        "text": "So a trend in graphics programming has been having the GPU generate work\\spawn tasks for itself",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W5A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So a trend in graphics programming has been having the GPU generate work\\spawn tasks for itself"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1542134282.009900",
        "client_msg_id": "2df44829-a333-49ce-a111-bb6df25c36ea",
        "text": "meanwhile there is more fixed function or special purpose hardware available (RT cores, Tensorcores) on RTX, I kind of want a system where there are no explicit shader stages, you just have \"shaders\" that can access fixed function and special purpose hardware (texture units, rasterizer, ROPs, RT Core, Tensor Core, etc.) and dispatch new shaders",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542134282.009900",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1554219130.002200",
        "reply_users": [
            "UHDQ62M4P"
        ],
        "replies": [
            {
                "user": "UHDQ62M4P",
                "ts": "1554219130.002200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M\/7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "meanwhile there is more fixed function or special purpose hardware available (RT cores, Tensorcores) on RTX, I kind of want a system where there are no explicit shader stages, you just have \"shaders\" that can access fixed function and special purpose hardware (texture units, rasterizer, ROPs, RT Core, Tensor Core, etc.) and dispatch new shaders"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "UC25EFSJC",
        "text": "<@UC25EFSJC> has joined the channel",
        "type": "message",
        "ts": "1542136243.010800"
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1542136304.011500",
        "client_msg_id": "2412a793-832f-417e-a150-9c5a50084c0a",
        "text": "Timothy Lottes (who mostly erased himself from the internet a couple of years ago...) had a cool personal engine\\framework that would generate \"command buffers\" (read back on the CPU) in shaders",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C6T7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Timothy Lottes (who mostly erased himself from the internet a couple of years ago...) had a cool personal engine\\framework that would generate \"command buffers\" (read back on the CPU) in shaders"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1542136305.011700",
        "client_msg_id": "7f77a66f-d970-43fe-a653-5e0608447c5b",
        "text": "<https:\/\/www.youtube.com\/watch?v=WzpLWzGvFK4>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "NVScene 2015 Session: GPU Unchained (Timothy Lottes)",
                "title_link": "https:\/\/www.youtube.com\/watch?v=WzpLWzGvFK4",
                "author_name": "NVScene",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCNk5-g0ese5YjDBK0Owx0Dg",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/WzpLWzGvFK4\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: NVScene 2015 Session: GPU Unchained (Timothy Lottes)",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/WzpLWzGvFK4?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=WzpLWzGvFK4",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=WzpLWzGvFK4"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g3mi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=WzpLWzGvFK4"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1542136331.012300",
        "client_msg_id": "c5d94c53-cd1f-43c8-adeb-d2b5087d6d80",
        "text": "I think he had more details on his blog but its gone now so hard to say, but it comes up in that talk",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wIYUB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think he had more details on his blog but its gone now so hard to say, but it comes up in that talk"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1542136377.012900",
        "client_msg_id": "ee143437-48ab-4364-b28d-ba8e9ad0ba77",
        "text": "Nvidia has a experimental extension to support this in Vulkan also (<https:\/\/developer.nvidia.com\/device-generated-commands-vulkan>)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "NVIDIA Developer",
                "title": "Vulkan Device-Generated Commands",
                "title_link": "https:\/\/developer.nvidia.com\/device-generated-commands-vulkan",
                "text": "We are introducing a device generated command (DGC) Vulkan extension, which allows the GPU to generate the most frequent rendering commands on its own. This means for the first time an open graphics API provides functionality to create compact command buffer streams on the device avoiding the worst-case state setup of previous indirect drawing methods.",
                "fallback": "NVIDIA Developer: Vulkan Device-Generated Commands",
                "image_url": "https:\/\/developer.nvidia.com\/sites\/default\/files\/akamai\/gameworks\/blog\/vulk.png",
                "ts": 1478652849,
                "from_url": "https:\/\/developer.nvidia.com\/device-generated-commands-vulkan",
                "image_width": 340,
                "image_height": 190,
                "image_bytes": 12906,
                "service_icon": "https:\/\/developer.nvidia.com\/sites\/all\/themes\/gameworks\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/developer.nvidia.com\/device-generated-commands-vulkan"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9yg1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nvidia has a experimental extension to support this in Vulkan also ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/developer.nvidia.com\/device-generated-commands-vulkan"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "UAVBSJGG5",
        "text": "<@UAVBSJGG5> has joined the channel",
        "type": "message",
        "ts": "1542138640.013200"
    },
    {
        "subtype": "channel_join",
        "user": "U9ZU3C9KM",
        "text": "<@U9ZU3C9KM> has joined the channel",
        "type": "message",
        "ts": "1542141010.013400"
    },
    {
        "subtype": "channel_join",
        "user": "UBAP530VB",
        "text": "<@UBAP530VB> has joined the channel",
        "type": "message",
        "ts": "1542141921.013600"
    },
    {
        "subtype": "channel_join",
        "user": "UBN9AFS0N",
        "text": "<@UBN9AFS0N> has joined the channel",
        "type": "message",
        "ts": "1542142782.013800"
    },
    {
        "user": "UDLGND5GA",
        "type": "message",
        "ts": "1542145589.014400",
        "client_msg_id": "d5d6c661-6843-484e-8099-b8334d4e7c1d",
        "text": "One brain-melting concept I encountered just recently is reverse rendering--generating a 3D mesh from a single 2D image: <https:\/\/github.com\/BachiLi\/redner>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g55e6ae108ed",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/455e6ae108edbb0568eb036d8cab103d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Nick Fox-Gieg",
            "display_name": "n1ckfg",
            "team": "T5TCAFTA9",
            "name": "nick908",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ws96",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One brain-melting concept I encountered just recently is reverse rendering--generating a 3D mesh from a single 2D image: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/BachiLi\/redner"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "UC2A2ARPT",
        "text": "<@UC2A2ARPT> has joined the channel",
        "type": "message",
        "ts": "1542146234.014600"
    },
    {
        "subtype": "channel_join",
        "user": "UBUFWBGNN",
        "text": "<@UBUFWBGNN> has joined the channel",
        "type": "message",
        "ts": "1542146450.015500"
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1542146612.018300",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1542152989.000000"
        },
        "client_msg_id": "94a7d6cd-2820-4319-8014-a10179e7098b",
        "text": "I'm really excited about the WHLSL news out of WebKit (<https:\/\/webkit.org\/blog\/8482\/web-high-level-shading-language\/>). Looks like the WebGPU project is maturing. Not quite as close to the metal as the RTX stuff mentioned above, but exciting for the sake of bringing a low-overhead graphics API to the masses, and putting it within reach of web developers (as opposed to game\/app developers).\n\nFor the _future of coding_ angle on this <#CE1R695T7|of-graphics> stuff, my company does a lot of interactive graphics, and I'm working on a visual programming language to support some of that. It's a nice domain to be in, since there's a tighter connection between the language and the result than there would be if (say) I were making a language for correctness validation or serving web apps. I'd be excited to hear if anyone else here is working on\/with tools\/languages that have a strong component of graphics to them.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1542146612.018300",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1554218887.002000",
        "reply_users": [
            "UHDQ62M4P"
        ],
        "replies": [
            {
                "user": "UHDQ62M4P",
                "ts": "1554218887.002000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZEVAR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm really excited about the WHLSL news out of WebKit ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/webkit.org\/blog\/8482\/web-high-level-shading-language\/"
                            },
                            {
                                "type": "text",
                                "text": "). Looks like the WebGPU project is maturing. Not quite as close to the metal as the RTX stuff mentioned above, but exciting for the sake of bringing a low-overhead graphics API to the masses, and putting it within reach of web developers (as opposed to game\/app developers).\n\nFor the "
                            },
                            {
                                "type": "text",
                                "text": "future of coding",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " angle on this "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CE1R695T7"
                            },
                            {
                                "type": "text",
                                "text": " stuff, my company does a lot of interactive graphics, and I'm working on a visual programming language to support some of that. It's a nice domain to be in, since there's a tighter connection between the language and the result than there would be if (say) I were making a language for correctness validation or serving web apps. I'd be excited to hear if anyone else here is working on\/with tools\/languages that have a strong component of graphics to them."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "subtype": "channel_join",
        "user": "UD43R8ZFV",
        "text": "<@UD43R8ZFV> has joined the channel",
        "type": "message",
        "ts": "1542148255.018700"
    }
]