[
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1586533563.217300",
        "client_msg_id": "3a1144ae-83af-4630-b9b1-1edc19f562cf",
        "text": "<@UCUSW7WVD> care to explain your :-1:? All of his complaints eventually boil down to him demanding to use the time of people he's not paying. That is never acceptable in my book.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586452234.203100",
        "parent_user_id": "UFQQ3P867",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/VB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " care to explain your "
                            },
                            {
                                "type": "emoji",
                                "name": "-1",
                                "unicode": "1f44e"
                            },
                            {
                                "type": "text",
                                "text": "? All of his complaints eventually boil down to him demanding to use the time of people he's not paying. That is never acceptable in my book."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1586533695.217500",
        "client_msg_id": "559e2ea1-e36a-4b48-a4fc-1f4f9ec82784",
        "text": "He's a better writer than me, so if that's all you got from this post I can't do better, sorry. It's vehemently not what I got from it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586452234.203100",
        "parent_user_id": "UFQQ3P867",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M7F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "He's a better writer than me, so if that's all you got from this post I can't do better, sorry. It's vehemently not what I got from it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFQQ3P867"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1586535156.217700",
        "client_msg_id": "2c7f3ca7-4db3-4ca8-942b-64326b98a0ad",
        "text": "That's a \"no\", then.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586452234.203100",
        "parent_user_id": "UFQQ3P867",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sirG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's a \"no\", then."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1586535253.217900",
        "client_msg_id": "6b94d4ea-1502-463c-8057-5b32f809d294",
        "text": "Yep. You're trying harder than usual to 'win' this argument. Think about why that is. And maybe reread the post. It's pretty well-written so I'm not sure where the disconnect is in your mind.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586452234.203100",
        "parent_user_id": "UFQQ3P867",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5BEB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yep. You're trying harder than usual to 'win' this argument. Think about why that is. And maybe reread the post. It's pretty well-written so I'm not sure where the disconnect is in your mind."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1586546055.218200",
        "client_msg_id": "81ab7d1a-a144-4c36-b48f-0c31e006832f",
        "text": "To help triangulate, I also strongly agree with everything here: <http:\/\/www.skeeve.com\/fork-my-code.html|http:\/\/www.skeeve.com\/fork-my-code.html>\n\nBut that's not what OP is about.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586452234.203100",
        "parent_user_id": "UFQQ3P867",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UW87N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To help triangulate, I also strongly agree with everything here: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.skeeve.com\/fork-my-code.html",
                                "text": "http:\/\/www.skeeve.com\/fork-my-code.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nBut that's not what OP is about."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1586546949.218400",
        "client_msg_id": "698433f3-e92f-476a-b526-f58cd1dc66ba",
        "text": "There's a hypocrisy at the center of many popular open source projects that's just more obvious with Elm: you're legally allowed to fork, and you'll be told to go \"fork off\" if you annoy the maintainers. But anyone who has the _temerity_ to _actually_ create a fork is shunned or constantly bombarded with questions about why they're sowing division in the community. My computer can hold multiple incompatible forks without them mutually annihilating. Why can't people's belief systems?\n\nWhen was the last time we saw a maintainer _thank_ someone for creating a fork? Forks should be treated more like Andon Cords (<https:\/\/itrevolution.com\/kata>). Creating them is an act of bravery, and even if you don't agree with the reasons they are a valuable source of feedback. These are events to be celebrated and encouraged.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586452234.203100",
        "parent_user_id": "UFQQ3P867",
        "attachments": [
            {
                "service_name": "IT Revolution",
                "title": "The Andon Cord - IT Revolution",
                "title_link": "https:\/\/itrevolution.com\/kata",
                "text": "The origin of the word  “Andon” in Japanese comes from the use of traditional lighting equipment using a fire burning lamp made out of paper and bamboo.  This “Andon” idea was later translated for use in manufacturing in Japan.  The “Andon” became used as a signal to highlight an anomaly (i.e., a flashing light).  This …",
                "fallback": "IT Revolution: The Andon Cord - IT Revolution",
                "thumb_url": "https:\/\/itrevolution.com\/wp-content\/uploads\/2016\/07\/ITR-Secondary-youtube-logo.jpg",
                "ts": 1444914611,
                "from_url": "https:\/\/itrevolution.com\/kata",
                "thumb_width": 600,
                "thumb_height": 600,
                "service_icon": "https:\/\/itrevolution.com\/wp-content\/uploads\/2017\/04\/cropped-favicon-300x300.png",
                "id": 1,
                "original_url": "https:\/\/itrevolution.com\/kata"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XW57",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's a hypocrisy at the center of many popular open source projects that's just more obvious with Elm: you're legally allowed to fork, and you'll be told to go \"fork off\" if you annoy the maintainers. But anyone who has the "
                            },
                            {
                                "type": "text",
                                "text": "temerity",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to "
                            },
                            {
                                "type": "text",
                                "text": "actually",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " create a fork is shunned or constantly bombarded with questions about why they're sowing division in the community. My computer can hold multiple incompatible forks without them mutually annihilating. Why can't people's belief systems?\n\nWhen was the last time we saw a maintainer "
                            },
                            {
                                "type": "text",
                                "text": "thank",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " someone for creating a fork? Forks should be treated more like Andon Cords ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/itrevolution.com\/kata"
                            },
                            {
                                "type": "text",
                                "text": "). Creating them is an act of bravery, and even if you don't agree with the reasons they are a valuable source of feedback. These are events to be celebrated and encouraged."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U79HM6726",
                    "UFQQ3P867",
                    "UA14TGLTC",
                    "UHWC9PXBL"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1586547966.218700",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1586549076.000000"
        },
        "client_msg_id": "421e19e4-474f-4207-bfee-a54c86c682e4",
        "text": "Having been on both sides of this, I agree with the author. <@UHDQ62M4P> I'm with you on the entitlement and the ridiculous expectations people have of open source maintainers - I still remember the first time I had someone screaming at me because LightTable didn't work on their crazy custom version of Linux. But, if you openly encourage people to take a dependency on you, if you go out of your way to build a community and promote the use of your software, you *are* signing up for an implicit social contract. You made the choice to place yourself in that position and so you are now held to the behavioral standards that come with it. You can't have it both ways: if you want to just sit at your desk and make a thing you want, that's fine. If you put that up on github and some other people take an interest, that's fine too. You have no responsibility. But once you actively promote your system and tell people they can and should build on top of it, you've explicitly chosen to be a steward. There are significant benefits that come with that choice (Fame! Fortune! :wink: ), but it isn't free. It comes with the burden of supporting those you encouraged. You can still of course choose not to do that, but you're now breaking a societal contract and that eventually causes posts like these.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586452234.203100",
        "parent_user_id": "UFQQ3P867",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0yq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Having been on both sides of this, I agree with the author. "
                            },
                            {
                                "type": "user",
                                "user_id": "UHDQ62M4P"
                            },
                            {
                                "type": "text",
                                "text": " I'm with you on the entitlement and the ridiculous expectations people have of open source maintainers - I still remember the first time I had someone screaming at me because LightTable didn't work on their crazy custom version of Linux. But, if you openly encourage people to take a dependency on you, if you go out of your way to build a community and promote the use of your software, you "
                            },
                            {
                                "type": "text",
                                "text": "are",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " signing up for an implicit social contract. You made the choice to place yourself in that position and so you are now held to the behavioral standards that come with it. You can't have it both ways: if you want to just sit at your desk and make a thing you want, that's fine. If you put that up on github and some other people take an interest, that's fine too. You have no responsibility. But once you actively promote your system and tell people they can and should build on top of it, you've explicitly chosen to be a steward. There are significant benefits that come with that choice (Fame! Fortune! "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            },
                            {
                                "type": "text",
                                "text": " ), but it isn't free. It comes with the burden of supporting those you encouraged. You can still of course choose not to do that, but you're now breaking a societal contract and that eventually causes posts like these."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "U79HM6726",
                    "UFQQ3P867",
                    "UMWF81HTP",
                    "UHWC9PXBL",
                    "UP00ZLX6G"
                ],
                "count": 6
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1586548362.219100",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1586548542.000000"
        },
        "client_msg_id": "e477e3ba-6a1e-4b1a-9c59-a5bd932de6de",
        "text": "To take an extreme analogy: there's a difference between someone taking an interest in a car in your driveway vs you going door to door telling people you've got a great car for them. The latter comes with an expectation of integrity and service, the former does not.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586452234.203100",
        "parent_user_id": "UFQQ3P867",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kKJ0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To take an extreme analogy: there's a difference between someone taking an interest in a car in your driveway vs you going door to door telling people you've got a great car for them. The latter comes with an expectation of integrity and service, the former does not."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U79HM6726",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1586550648.219800",
        "client_msg_id": "482da618-c9c7-4d30-b213-051dfce470d8",
        "text": "<@UEBG0NPDK> I don't buy that.. even if you generally want your software to be popular, and you want to be accommodating, your time never grows beyond 24hrs a day, yet the amount of people, and the amount and diversity of demands will always dwarf your time, as it gets popular. And every decision you take, no matter how reasonable, will be someone's most most evil move ever, and they will spend all their energy fighting you over it. There is no \"social contract\" that can fix this. In the end, the amount of time the original author is going to spend on your demands is \"best effort\" and \"within reason\", at the discretion of the original author.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586452234.203100",
        "parent_user_id": "UFQQ3P867",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3pFFp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " I don't buy that.. even if you generally want your software to be popular, and you want to be accommodating, your time never grows beyond 24hrs a day, yet the amount of people, and the amount and diversity of demands will always dwarf your time, as it gets popular. And every decision you take, no matter how reasonable, will be someone's most most evil move ever, and they will spend all their energy fighting you over it. There is no \"social contract\" that can fix this. In the end, the amount of time the original author is going to spend on your demands is \"best effort\" and \"within reason\", at the discretion of the original author."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1586550819.220000",
        "client_msg_id": "6b2788d0-47e7-4440-8963-3bd0b0ee9a42",
        "text": "And yes, I am incredibly biased, because I have spent probably 100x more time on the maintainer side of OSS projects than on the user side.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586452234.203100",
        "parent_user_id": "UFQQ3P867",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bkkso",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And yes, I am incredibly biased, because I have spent probably 100x more time on the maintainer side of OSS projects than on the user side."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1586552946.220200",
        "client_msg_id": "0c64c1f7-2403-4087-bfa7-28de4291b8fe",
        "text": "Yeah, I certainly appreciate the scar tissue maintainers have, and the level of bad behavior they often have to put up with. Certainly I'm willing to believe the ratio of bad behavior is 10:1 or 100:1 against maintainers. But it seems excessive to claim there's _no_ social contract at all. In this case what we're talking about is sins of commission, not omission, actions that have taken lots of energy to take. So I don't think \"best effort\" holds water as a justification.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586452234.203100",
        "parent_user_id": "UFQQ3P867",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N86",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I certainly appreciate the scar tissue maintainers have, and the level of bad behavior they often have to put up with. Certainly I'm willing to believe the ratio of bad behavior is 10:1 or 100:1 against maintainers. But it seems excessive to claim there's "
                            },
                            {
                                "type": "text",
                                "text": "no",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " social contract at all. In this case what we're talking about is sins of commission, not omission, actions that have taken lots of energy to take. So I don't think \"best effort\" holds water as a justification."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U79HM6726"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1586554768.220400",
        "client_msg_id": "929c2d12-8632-43cf-bb02-566a8e3c7f2f",
        "text": "Holy cow this thread went places. Thanks gang!\n\nMy thinking on this \"spectrum\" was to rank these models of computation in terms of how \"easy\" it'd be to build a little machine that implemented them. Totally subjective, really vague, just a fun way of getting a little closer to these concepts that are normally quite theoretical and at a remove.\n\nI was thinking, like... Junkyard Wars style, or like MythBusters... where you have a fairly well-stocked workshop for making hobbyist electrical things... how tricky would it be to build a machine that implements a particular model of computation. Rank them in that order.\n\nSo, like... Sure, von Neumann is conceptually simpler than a Turing Machine. All you need for vN is a lot of wires and a power source, whereas for a TM you need something like magnetic tape, and a tape reader, and something that can adjust the movement of the tape based on what's read, etc. But, on the other hand, you can probably salvage a cassette deck and use some sort of amplitude modulation as a binary encoding with nothing more than what you'd find in a Radio Shack of yore, so to me that _feels_ more doable. Whereas wiring up your own vN machine.. you've all seen the pictures of what it looks like to do, say, an 8 bit ALU just using wires and relays. Bonkers!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586462800.208000",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C+L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Holy cow this thread went places. Thanks gang!\n\nMy thinking on this \"spectrum\" was to rank these models of computation in terms of how \"easy\" it'd be to build a little machine that implemented them. Totally subjective, really vague, just a fun way of getting a little closer to these concepts that are normally quite theoretical and at a remove.\n\nI was thinking, like... Junkyard Wars style, or like MythBusters... where you have a fairly well-stocked workshop for making hobbyist electrical things... how tricky would it be to build a machine that implements a particular model of computation. Rank them in that order.\n\nSo, like... Sure, von Neumann is conceptually simpler than a Turing Machine. All you need for vN is a lot of wires and a power source, whereas for a TM you need something like magnetic tape, and a tape reader, and something that can adjust the movement of the tape based on what's read, etc. But, on the other hand, you can probably salvage a cassette deck and use some sort of amplitude modulation as a binary encoding with nothing more than what you'd find in a Radio Shack of yore, so to me that "
                            },
                            {
                                "type": "text",
                                "text": "feels",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " more doable. Whereas wiring up your own vN machine.. you've all seen the pictures of what it looks like to do, say, an 8 bit ALU just using wires and relays. Bonkers!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1586554991.220700",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1586555085.000000"
        },
        "client_msg_id": "1983e09c-82ad-4eed-b85b-daf03f37f843",
        "text": "&gt; the mainstream consensus of agreeing that Church-Turing Thesis formalizes what computation is. Though Alan Turing and Church's hypothesis is said to have given a bounded form to the mechanism of computation, there are ideas like that of Robert Rosen proposing that Church Turing Thesis is wrong and can't possibly stand as a model for all computation physically realizable. There is something called epistemic cut and other ideas which I haven't been able to unbundle yet.\nThis is fascinating. Intuitively, it does feel like Church-Turing couldn't possibly have nailed the lower bound on what constitutes the fundamentals of physically realizable computation. That just feels phenomenally unlikely considering that those were the first models we formalized. There's gotta be some wiggle room left under there.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586462800.208000",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bvM\/Y",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the mainstream consensus of agreeing that Church-Turing Thesis formalizes what computation is. Though Alan Turing and Church's hypothesis is said to have given a bounded form to the mechanism of computation, there are ideas like that of Robert Rosen proposing that Church Turing Thesis is wrong and can't possibly stand as a model for all computation physically realizable. There is something called epistemic cut and other ideas which I haven't been able to unbundle yet."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is fascinating. Intuitively, it does feel like Church-Turing couldn't possibly have nailed the lower bound on what constitutes the fundamentals of physically realizable computation. That just feels phenomenally unlikely considering that those were the first models we formalized. There's gotta be some wiggle room left under there."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD3AK9JRF",
        "type": "message",
        "ts": "1586570996.221100",
        "client_msg_id": "867fda48-e89d-4772-b831-1908042be8dd",
        "text": "I might throw relational logic down towards the bottom?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g35dfa49055c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/235dfa49055c0a25f2ccfc667a7a6b77.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Peter",
            "real_name": "Peter Abrahamsen",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "rainhead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586462800.208000",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XqmO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I might throw relational logic down towards the bottom?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1586571391.221300",
        "client_msg_id": "bd801d6b-4bbc-4d51-b16c-87fcf9fccb17",
        "text": "Nobody's found anything in the currently accepted laws of physics which would allow you to build a computing device more powerful than a Turing machine. I would further argue that the laws of physics, or at least the physical limitations imposed on human buildable technology, don't allow you to build a computer that is even as powerful as a Turing machine, since that requires unlimited memory. Physically buildable computers are only as powerful as finite state automata, due to the finite memory restriction. A Turing machine cannot solve the halting problem, in general, for another Turing machine. But, a Turing machine *can* solve the halting problem for a finite state automaton (ie, for a physically buildable computer).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586462800.208000",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F8Zu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nobody's found anything in the currently accepted laws of physics which would allow you to build a computing device more powerful than a Turing machine. I would further argue that the laws of physics, or at least the physical limitations imposed on human buildable technology, don't allow you to build a computer that is even as powerful as a Turing machine, since that requires unlimited memory. Physically buildable computers are only as powerful as finite state automata, due to the finite memory restriction. A Turing machine cannot solve the halting problem, in general, for another Turing machine. But, a Turing machine "
                            },
                            {
                                "type": "text",
                                "text": "can",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " solve the halting problem for a finite state automaton (ie, for a physically buildable computer)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1586572568.221500",
        "client_msg_id": "9e9eba29-8746-477a-89b1-1058a656277a",
        "text": "The study of models of computation more powerful than the Turing machine is called Hypercomputation. <https:\/\/en.wikipedia.org\/wiki\/Hypercomputation>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586462800.208000",
        "parent_user_id": "UC2A2ARPT",
        "attachments": [
            {
                "title": "Hypercomputation",
                "title_link": "https:\/\/en.wikipedia.org\/wiki\/Hypercomputation",
                "from_url": "https:\/\/en.wikipedia.org\/wiki\/Hypercomputation",
                "author_name": "Wikipedia",
                "author_link": "https:\/\/en.wikipedia.org\/",
                "text": "Hypercomputation or super-Turing computation refers to models of computation that can provide outputs that are not Turing-computable. For example, a machine that could solve the halting problem would be a hypercomputer; so too would one that can correctly evaluate every statement in Peano arithmetic.\nThe Church–Turing thesis states that any \"computable\" function that can be computed by a mathematician with a pen and paper using a finite set of simple algorithms, can be computed by a Turing machine. Hypercomputers compute functions that a Turing machine cannot and which are, hence, not computable in the Church–Turing sense.\nTechnically, the output of a random Turing machine is uncomputable; however, most hypercomputing literature focuses instead on the computation of useful, rather than random, uncomputable functions.",
                "fallback": "wikipedia: Hypercomputation",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/wikipedia.png",
                "id": 1,
                "original_url": "https:\/\/en.wikipedia.org\/wiki\/Hypercomputation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nha",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The study of models of computation more powerful than the Turing machine is called Hypercomputation. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Hypercomputation"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UDKTZSD6H"
                ],
                "count": 1
            },
            {
                "name": "eyes",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1586573390.221800",
        "client_msg_id": "358425a7-3da9-421f-8d1a-f0214ef5a069",
        "text": "There are various proposals for hypothetical \"physical constructions\" that are claimed to be compatible with the laws of physics, but which aren't physically realizable. One example is the Alcubierre warp drive, which would supposedly allow the construction of faster-than-light space craft. Another is the Malament–Hogarth spacetime, which would supposedly allow hypercomputation. <https:\/\/en.wikipedia.org\/wiki\/Malament%E2%80%93Hogarth_spacetime>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586462800.208000",
        "parent_user_id": "UC2A2ARPT",
        "attachments": [
            {
                "title": "Malament–Hogarth spacetime",
                "title_link": "https:\/\/en.wikipedia.org\/wiki\/Malament%E2%80%93Hogarth_spacetime",
                "from_url": "https:\/\/en.wikipedia.org\/wiki\/Malament%E2%80%93Hogarth_spacetime",
                "author_name": "Wikipedia",
                "author_link": "https:\/\/en.wikipedia.org\/",
                "text": "A Malament–Hogarth (M-H) spacetime, named after David B. Malament and Mark Hogarth, is a relativistic spacetime that possesses the following property: there exists a worldline \n  \n    \n      \n        λ\n      \n    \n    {\\displaystyle \\lambda }\n   and an event p such that all events along \n  \n    \n      \n        λ\n      \n    \n    {\\displaystyle \\lambda }\n   are a finite interval in the past of p, but the proper time along \n  \n    \n      \n        λ\n      \n    \n    {\\displaystyle \\lambda }\n   is infinite. The event p is known as an M-H event. The significance of M-H spacetimes is that they allow for the implementation of certain non-Turing computable tasks (hypercomputation). The idea is for an observer at some event in p's past to set a computer (Turing machine) to work on some task and then have the Turing machine travel on \n  \n    \n      \n        λ\n      \n    \n    {\\displaystyle \\lambda }\n  , computing for all eternity. Since \n  \n    \n      \n        λ\n      \n    \n    {\\displaystyle \\lambda }\n   lies in p's past, the Turing machine can signal (a solution) to p at any stage of this never-ending task. Meanwhile, the observer takes a quick trip (finite proper time) through spacetime to p, to pick up the solution. The set-up can be used to decide the halting problem, which is known to be undecidable by an ordinary Turing machine. All the observer needs to do is to prime the Turing machine to signal to p if and only if the Turing machine halts.\nThe Kerr metric, which describes empty spacetime around a rotating black hole, possesses these features: a computer can orbit the black hole indefinitely, while an observer falling into the black hole experiences an M-H event as they cross the inner event horizon. (This, however, neglects the effects of black hole evaporation.)",
                "fallback": "wikipedia: Malament–Hogarth spacetime",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/wikipedia.png",
                "id": 1,
                "original_url": "https:\/\/en.wikipedia.org\/wiki\/Malament%E2%80%93Hogarth_spacetime"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CcB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are various proposals for hypothetical \"physical constructions\" that are claimed to be compatible with the laws of physics, but which aren't physically realizable. One example is the Alcubierre warp drive, which would supposedly allow the construction of faster-than-light space craft. Another is the Malament–Hogarth spacetime, which would supposedly allow hypercomputation. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Malament%E2%80%93Hogarth_spacetime"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UDKTZSD6H"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1586573564.222100",
        "client_msg_id": "825761e5-4962-4452-8c10-758752d4dc93",
        "text": "Think we are getting into the highly controversial science territory. I am out of depth again, but I think Martin Davis have been beating the drum that Hypercomputation is a myth: 1\/ <https:\/\/www.researchgate.net\/publication\/243784599_The_Myth_of_Hypercomputation>\n2\/ <http:\/\/citeseerx.ist.psu.edu\/viewdoc\/download?doi=10.1.1.83.9917&amp;rep=rep1&amp;type=pdf>\n\nwhich means I think as my reading suggest he thinks Turing has bounded the problem of computation forever. But I like to err on the other side that there are other kinds of intriguing stuff going on than just state change \/ bit flipping. I think Rosen\/Process Theory people et al. have a very different perspective on this coming from a very different philosophical slant which reminds me, I need to read that Life Itself book soon.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586462800.208000",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AGqui",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Think we are getting into the highly controversial science territory. I am out of depth again, but I think Martin Davis have been beating the drum that Hypercomputation is a myth: 1\/ "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.researchgate.net\/publication\/243784599_The_Myth_of_Hypercomputation"
                            },
                            {
                                "type": "text",
                                "text": "\n2\/ "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/citeseerx.ist.psu.edu\/viewdoc\/download?doi=10.1.1.83.9917&rep=rep1&type=pdf"
                            },
                            {
                                "type": "text",
                                "text": "\n\nwhich means I think as my reading suggest he thinks Turing has bounded the problem of computation forever. But I like to err on the other side that there are other kinds of intriguing stuff going on than just state change \/ bit flipping. I think Rosen\/Process Theory people et al. have a very different perspective on this coming from a very different philosophical slant which reminds me, I need to read that Life Itself book soon."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1586587006.229500",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1586588806.000000"
        },
        "client_msg_id": "d0e45fb6-b576-4e30-880f-a8b709bb03c1",
        "text": "Has anyone thought about the practicality of a (general-purpose) language without floating-point numbers? I've always been skeptical of floats, but in the language I'm designing in particular, computations don't have a total ordering, and so the most natural way to sum\/multiply numbers is a SUM() or PRODUCT() function that accepts an unordered set (rather than looping through an ordered list). You can't use these functions for floats, because neither summation nor multiplication of floats is associative. I want my language to use BigInts (arbitrary precision) anyway, so I think I should just go ahead and have *rational numbers* (fractions) as the built-in type for fractional numbers. This would present some new design challenges, such as defining some ergonomic \"round-off\" functions that can be used alongside multiplication (and sin\/cos\/sqrt etc) to prevent unbounded growth of numerator and denominator sizes.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XmBi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Has anyone thought about the practicality of a (general-purpose) language without floating-point numbers? I've always been skeptical of floats, but in the language I'm designing in particular, computations don't have a total ordering, and so the most natural way to sum\/multiply numbers is a SUM() or PRODUCT() function that accepts an unordered set (rather than looping through an ordered list). You can't use these functions for floats, because neither summation nor multiplication of floats is associative. I want my language to use BigInts (arbitrary precision) anyway, so I think I should just go ahead and have "
                            },
                            {
                                "type": "text",
                                "text": "rational numbers",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (fractions) as the built-in type for fractional numbers. This would present some new design challenges, such as defining some ergonomic \"round-off\" functions that can be used alongside multiplication (and sin\/cos\/sqrt etc) to prevent unbounded growth of numerator and denominator sizes."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1586587116.230700",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1586588711.000000"
        },
        "client_msg_id": "dbe6f3dc-1806-4718-9be6-365b10781567",
        "text": "Surely someone has made a language with this design choice before (rationals and *no* *floats*)? I don't know of any examples.\n(Floats could be hidden in an \"advanced menu\" for backwards-compatibility and special needs only)\n\nEdit: I guess Scheme and Racket have \"exact numbers\" (rationals), though they have floats as well, and transcendental functions like sin() and cos() will return floats instead of approximated rationals, so you can't really escape using floats.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WWe8t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Surely someone has made a language with this design choice before (rationals and "
                            },
                            {
                                "type": "text",
                                "text": "no",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "floats",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ")? I don't know of any examples.\n(Floats could be hidden in an \"advanced menu\" for backwards-compatibility and special needs only)\n\nEdit: I guess Scheme and Racket have \"exact numbers\" (rationals), though they have floats as well, and transcendental functions like sin() and cos() will return floats instead of approximated rationals, so you can't really escape using floats."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]