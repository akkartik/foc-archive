[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1623050985.066900",
        "client_msg_id": "6e4ea7fe-9be0-4808-b1ff-3589e35c532e",
        "text": "I find it hard to take note-taking apps seriously in isolation of the features of a computational notebook (e.g. Mathematica, &amp;c). I like to keep interlinked notecards about my research, but I also require the ability to write and run code that analyzes and visualizes data, performs simulations, and so on, in the same environment. The affordances I prefer in this context are not different from the ones I prefer when building larger pieces of software, so it does ultimately feel like all one thing from my perspective...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622980122.044800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QI1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I find it hard to take note-taking apps seriously in isolation of the features of a computational notebook (e.g. Mathematica, &c). I like to keep interlinked notecards about my research, but I also require the ability to write and run code that analyzes and visualizes data, performs simulations, and so on, in the same environment. The affordances I prefer in this context are not different from the ones I prefer when building larger pieces of software, so it does ultimately feel like all one thing from my perspective..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1623055078.067200",
        "client_msg_id": "9ee2319e-d068-4a5d-9193-af9436467063",
        "text": "More context: I see that Tools of Thought are mainly about adding self contained snippets of knowledge and linking them without a particular schema\/taxonomy (input), the value you get out of it are the \"insights\" through navigation and finding patterns or relationships over time when you go back to some node and navigate adjacent ones (output). I would call these as *Navigational\/Organizational Tools of Thought.*\n\nOn the Future of Coding side if we tried to relate it I would call it *Computational Tools of Thought* where your inputs are both data (more structured, less textual) but also some computation instructions that operate on data, the \"insights\" you get out are the results of computations or the ability to tinker with the data and computation to better understand the underlying model.\n\nThe inputs (in my definition) are different, on Navigational Tools of Thought they are mostly hypertext created by humans and made for human consumption, in Computational Tools of Thought inputs are more structured, created by humans or computers and made to be processed, at the end they can be converted to a human format for interpretation or interpreted directly if they are human-friendly (a table, a number or similar)\n\nDoes it make sense? :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622980122.044800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CQH1=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "More context: I see that Tools of Thought are mainly about adding self contained snippets of knowledge and linking them without a particular schema\/taxonomy (input), the value you get out of it are the \"insights\" through navigation and finding patterns or relationships over time when you go back to some node and navigate adjacent ones (output). I would call these as "
                            },
                            {
                                "type": "text",
                                "text": "Navigational\/Organizational Tools of Thought.",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nOn the Future of Coding side if we tried to relate it I would call it "
                            },
                            {
                                "type": "text",
                                "text": "Computational Tools of Thought",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " where your inputs are both data (more structured, less textual) but also some computation instructions that operate on data, the \"insights\" you get out are the results of computations or the ability to tinker with the data and computation to better understand the underlying model.\n\nThe inputs (in my definition) are different, on Navigational Tools of Thought they are mostly hypertext created by humans and made for human consumption, in Computational Tools of Thought inputs are more structured, created by humans or computers and made to be processed, at the end they can be converted to a human format for interpretation or interpreted directly if they are human-friendly (a table, a number or similar)\n\nDoes it make sense? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1623055164.067400",
        "client_msg_id": "cd243444-1f84-45eb-87dc-a00467d47bf0",
        "text": "The current projects that are at the intersection are probably <https:\/\/explorabl.es\/|Explorable Explanations> which add computation to hypertext and allow readers to tinker with some inputs to better understand the underlying model",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622980122.044800",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "title": "Explorable Explanations",
                "title_link": "https:\/\/explorabl.es\/",
                "text": "a hub for learning through play",
                "fallback": "Explorable Explanations",
                "image_url": "http:\/\/explorabl.es\/-sharing\/index.png",
                "from_url": "https:\/\/explorabl.es\/",
                "image_width": 471,
                "image_height": 250,
                "image_bytes": 103612,
                "service_icon": "https:\/\/explorabl.es\/favicon.png",
                "service_name": "explorabl.es",
                "id": 1,
                "original_url": "https:\/\/explorabl.es\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vSUd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The current projects that are at the intersection are probably "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/explorabl.es\/",
                                "text": "Explorable Explanations"
                            },
                            {
                                "type": "text",
                                "text": " which add computation to hypertext and allow readers to tinker with some inputs to better understand the underlying model"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDJ2TKB99",
        "type": "message",
        "ts": "1623061107.071000",
        "client_msg_id": "0629BDD8-1800-4F5D-B144-870D54F61F30",
        "text": "<@U01T2PC8LBA> while not exactly a Tools for Thought community, Fission seems to have hosted several interesting TfT-related talks lately: <https:\/\/blog.fission.codes\/tag\/presentation\/|https:\/\/blog.fission.codes\/tag\/presentation\/>\n\nAnd they have a Discord here: <https:\/\/fission.codes\/discord|https:\/\/fission.codes\/discord>\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7acd71947ea2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-04\/2564854327154_7acd71947ea203e9a69b_72.jpg",
            "first_name": "Joe",
            "real_name": "Joe Trellick",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622980122.044800",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "service_name": "Fission",
                "title": "Presentations - Fission",
                "title_link": "https:\/\/blog.fission.codes\/tag\/presentation\/",
                "fallback": "Fission: Presentations - Fission",
                "image_url": "https:\/\/images.unsplash.com\/photo-1535016120720-40c646be5580?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ",
                "image_width": 375,
                "image_height": 250,
                "from_url": "https:\/\/blog.fission.codes\/tag\/presentation\/",
                "image_bytes": 61335,
                "service_icon": "https:\/\/blog.fission.codes\/favicon.png",
                "id": 1,
                "original_url": "https:\/\/blog.fission.codes\/tag\/presentation\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jzL4a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01T2PC8LBA"
                            },
                            {
                                "type": "text",
                                "text": " while not exactly a Tools for Thought community, Fission seems to have hosted several interesting TfT-related talks lately: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/blog.fission.codes\/tag\/presentation\/",
                                "text": "https:\/\/blog.fission.codes\/tag\/presentation\/"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\nAnd they have a Discord here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/fission.codes\/discord",
                                "text": "https:\/\/fission.codes\/discord"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDJ2TKB99",
        "type": "message",
        "ts": "1623061404.075400",
        "client_msg_id": "1D881B61-AB14-4DD1-AF97-5088AD0E857E",
        "text": "<@U013ZLJARC7> I agree, I have this nagging sense that there’s some missing tooling in the space between computational notebooks, linked note systems, and, well, everything we do in shell prompts and web pages as we’re working. I try to keep a digital “lab notebook” of what I’m working on (currently in Roam), but it does feel like it involves a lot more copy-pasting than it should",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7acd71947ea2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-04\/2564854327154_7acd71947ea203e9a69b_72.jpg",
            "first_name": "Joe",
            "real_name": "Joe Trellick",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joe",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622980122.044800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fDh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " I agree, I have this nagging sense that there’s some missing tooling in the space between computational notebooks, linked note systems, and, well, everything we do in shell prompts and web pages as we’re working. I try to keep a digital “lab notebook” of what I’m working on (currently in Roam), but it does feel like it involves a lot more copy-pasting than it should"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1623064869.075600",
        "client_msg_id": "24c76f6a-b69b-489f-bc65-eef569449e96",
        "text": "<@UE1JQM9HQ>'s Glamorous Toolkit (<https:\/\/gtoolkit.com\/>) has an important new feature since last week: a linked-notes system much like Roam Research, but with added code integration. Pharo code is easiest (since GToolkit is implemented in Pharo), but there are bridges to JavaScript and Python as well.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622980122.044800",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "service_name": "gtoolkit.com",
                "title": "Home",
                "title_link": "https:\/\/gtoolkit.com\/",
                "text": "Glamorous Toolkit is the moldable development environment.",
                "fallback": "gtoolkit.com: Home",
                "thumb_url": "https:\/\/gtoolkit.com\/\/assets\/pictures\/gtr-home.png",
                "from_url": "https:\/\/gtoolkit.com\/",
                "thumb_width": 2784,
                "thumb_height": 1868,
                "service_icon": "https:\/\/gtoolkit.com\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/gtoolkit.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2pjT0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE1JQM9HQ"
                            },
                            {
                                "type": "text",
                                "text": "'s Glamorous Toolkit ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/gtoolkit.com\/"
                            },
                            {
                                "type": "text",
                                "text": ") has an important new feature since last week: a linked-notes system much like Roam Research, but with added code integration. Pharo code is easiest (since GToolkit is implemented in Pharo), but there are bridges to JavaScript and Python as well."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U021MR7BK2Q",
                    "UML4ZEKDK",
                    "U013ZLJARC7"
                ],
                "count": 3
            },
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1623068147.075900",
        "client_msg_id": "10937204-630e-4bcd-bea6-0691e3f7bf10",
        "text": "a) failed experiments provide more information than successful experiments ; your observation implies that “something” is not “good enough” with that approach (maybe psychological)\n\nb) true isolation = data isolation + control-flow isolation\n\n(\n\n[0] For example, CALL\/RETURN does not isolate control-flow, it implies sequential operation, e.g. ‘var x = obj.method (...)’ is sequential ; Relational programming does not imply sequential operation (all control flow is handled by the engine), UNIX threads do not imply sequential operation (uber control flow is handled by the dispatcher), etc.).\n\n.(\n\n.[1] (meta) I am trying to respond in a hierarchical manner...\n\n..(\n\n..[2] fn(a)-&gt;b implies sequential operation ; the parameters are delivered in a “sequential block”, and the return value is delivered in a “sequential block” and the caller waits for a result.\n\n...(\n\n...[3] The caller does\/can not care if the callee (a) lives-then-dies, or, (b) lives forever ((a) is function-like, (b) is server-like).\n\n....(\n\n....[4] Saying “x.fn(...)” implies that you know too much about “x”. That knowledge is hard-wired into the calling code and makes it hard to change later, aka accidental dependency (suggestion: all methods have only one calling syntax and all methods have the “same” parameter list syntactically (with the same type (!))\n\n.....(\n\n.....[5] The suggestion is not to delete type-checking, but to move it elsewhere (we already do that with compilers-&gt;opcodes (compilers can be viewed as type filters that strip away semantic information to produce untyped opcodes))\n\n......(\n\n......[6] In ‘var x = obj.method (...)’, you do not get to choose whether the operation is concurrent or sequential, the choice is made for you and baked into your code (aka accidental dependency (aka accidentally not-isolated)).\n\n\n))))))",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622048775.021900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kw6\/O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "a) failed experiments provide more information than successful experiments ; your observation implies that “something” is not “good enough” with that approach (maybe psychological)\n\nb) true isolation = data isolation + control-flow isolation\n\n(\n\n[0] For example, CALL\/RETURN does not isolate control-flow, it implies sequential operation, e.g. ‘var x = obj.method (...)’ is sequential ; Relational programming does not imply sequential operation (all control flow is handled by the engine), UNIX threads do not imply sequential operation (uber control flow is handled by the dispatcher), etc.).\n\n.(\n\n.[1] (meta) I am trying to respond in a hierarchical manner...\n\n..(\n\n..[2] fn(a)->b implies sequential operation ; the parameters are delivered in a “sequential block”, and the return value is delivered in a “sequential block” and the caller waits for a result.\n\n...(\n\n...[3] The caller does\/can not care if the callee (a) lives-then-dies, or, (b) lives forever ((a) is function-like, (b) is server-like).\n\n....(\n\n....[4] Saying “x.fn(...)” implies that you know too much about “x”. That knowledge is hard-wired into the calling code and makes it hard to change later, aka accidental dependency (suggestion: all methods have only one calling syntax and all methods have the “same” parameter list syntactically (with the same type (!))\n\n.....(\n\n.....[5] The suggestion is not to delete type-checking, but to move it elsewhere (we already do that with compilers->opcodes (compilers can be viewed as type filters that strip away semantic information to produce untyped opcodes))\n\n......(\n\n......[6] In ‘var x = obj.method (...)’, you do not get to choose whether the operation is concurrent or sequential, the choice is made for you and baked into your code (aka accidental dependency (aka accidentally not-isolated)).\n\n\n))))))"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01FAFPDFL4",
        "type": "message",
        "ts": "1623078425.077500",
        "edited": {
            "user": "U01FAFPDFL4",
            "ts": "1623078512.000000"
        },
        "client_msg_id": "45A9694A-6C08-49BB-B269-0C81F8DFA01C",
        "text": "Im very much interested in this. I’m working on a mix of a coding environment and notion \/ Roam tool. I shared some earlier demos of the code environment (<https:\/\/futureofcoding.slack.com\/archives\/C0120A3L30R\/p1619633023057400|https:\/\/futureofcoding.slack.com\/archives\/C0120A3L30R\/p1619633023057400>), but not yet of the “tools for thought” domain. Hope to share more about that soon!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a863c7a92962",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-01-31\/3025191075606_a863c7a92962a53b14dd_72.jpg",
            "first_name": "Yousef",
            "real_name": "Yousef El-Dardiry",
            "display_name": "Yousef El-Dardiry",
            "team": "T5TCAFTA9",
            "name": "yousefdardiry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622980122.044800",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C0120A3L30R\/p1619633023057400",
                "fallback": "[April 28th, 2021 11:03 AM] yousefdardiry: Somewhat inspired by <https:\/\/moldabledevelopment.com|Moldable Development> I started experimenting with custom Type Visualizers \/ inspectors in a notebook environment. Using Type Visualizers, you can “extend” the notebook environment to make it easier to visualize \/ inspect variables of certain types.\n\nAs the notebook is Typescript based I hooked into the TS system to implement this. Eventually I’d like visualizers to be shareable in a “plugin directory”.\n\nLooking fwd to hearing your thoughts! What would you find this useful for?\n\n<https:\/\/www.loom.com\/share\/c606f610cd3b47db8e8db5dbab02adb1?a=1>",
                "ts": "1619633023.057400",
                "author_id": "U01FAFPDFL4",
                "author_subname": "Yousef El-Dardiry",
                "channel_id": "C0120A3L30R",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "text": "Somewhat inspired by <https:\/\/moldabledevelopment.com|Moldable Development> I started experimenting with custom Type Visualizers \/ inspectors in a notebook environment. Using Type Visualizers, you can “extend” the notebook environment to make it easier to visualize \/ inspect variables of certain types.\n\nAs the notebook is Typescript based I hooked into the TS system to implement this. Eventually I’d like visualizers to be shareable in a “plugin directory”.\n\nLooking fwd to hearing your thoughts! What would you find this useful for?\n\n<https:\/\/www.loom.com\/share\/c606f610cd3b47db8e8db5dbab02adb1?a=1>",
                "author_name": "Yousef El-Dardiry",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/U01FAFPDFL4",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2020-11-19\/1527001040433_035a7fc891c5df0f10cf_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C0120A3L30R\/p1619633023057400",
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5hY4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Im very much interested in this. I’m working on a mix of a coding environment and notion \/ Roam tool. I shared some earlier demos of the code environment ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C0120A3L30R\/p1619633023057400",
                                "text": "https:\/\/futureofcoding.slack.com\/archives\/C0120A3L30R\/p1619633023057400"
                            },
                            {
                                "type": "text",
                                "text": "), but not yet of the “tools for thought” domain. Hope to share more about that soon!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01U19ECZTJ",
        "type": "message",
        "ts": "1623079262.078000",
        "client_msg_id": "fcd26ec6-e742-446c-b45e-e930e0f9171a",
        "text": "<@UML4ZEKDK> By \"integration domain\", do you mean middleware, like CORBA, or something else? FOAM is my solution for this (if we're talking about the same thing): <https:\/\/www.youtube.com\/watch?v=S4LbUv5FsGQ>. Re. \"we'd see an explosion of software reuse\" -&gt; <https:\/\/www.youtube.com\/watch?v=3Ea3pkTCYx4>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d80d37c53cd4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-04-05\/1929520000754_d80d37c53cd4ee3c8f5f_72.png",
            "first_name": "",
            "real_name": "Kevin Greer",
            "display_name": "Kevin Greer",
            "team": "T5TCAFTA9",
            "name": "kgrgreer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622882372.038900",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rLs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UML4ZEKDK"
                            },
                            {
                                "type": "text",
                                "text": " By \"integration domain\", do you mean middleware, like CORBA, or something else? FOAM is my solution for this (if we're talking about the same thing): "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=S4LbUv5FsGQ"
                            },
                            {
                                "type": "text",
                                "text": ". Re. \"we'd see an explosion of software reuse\" -> "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=3Ea3pkTCYx4"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UML4ZEKDK",
        "type": "message",
        "ts": "1623082792.078700",
        "edited": {
            "user": "UML4ZEKDK",
            "ts": "1623082844.000000"
        },
        "client_msg_id": "d1092ad7-51b3-475b-af86-89cacad8ea9a",
        "text": "<@U01U19ECZTJ> I would recommend reading Stephen's paper that defines the term (<https:\/\/www.cs.kent.ac.uk\/people\/staff\/srk21\/research\/papers\/kell09mythical.pdf>), as that gives a good level of detail on the concept. I am not aware any existing tools tackle the challenge in a generic way: most require lots of manual work or adapting of code internal to the modules being connected. Most systems are swimming in piles of one-off glue code each time two modules are linked together... There should instead be a generic and easy way to connect things without so much repeated work happening.\n\nAs for FOAM, this is new to me, thanks for the links. Is there a text description of the goals of FOAM somewhere? I jumped around through the videos a bit, but I am not sure I understand what it's trying to achieve yet...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "edc1c9acb12d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-22\/5286358617767_edc1c9acb12dfa7d1a20_72.jpg",
            "first_name": "J.",
            "real_name": "J. Ryan Stinnett",
            "display_name": "J. Ryan Stinnett",
            "team": "T5TCAFTA9",
            "name": "jryans",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622882372.038900",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fmIvJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01U19ECZTJ"
                            },
                            {
                                "type": "text",
                                "text": " I would recommend reading Stephen's paper that defines the term ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.cs.kent.ac.uk\/people\/staff\/srk21\/research\/papers\/kell09mythical.pdf"
                            },
                            {
                                "type": "text",
                                "text": "), as that gives a good level of detail on the concept. I am not aware any existing tools tackle the challenge in a generic way: most require lots of manual work or adapting of code internal to the modules being connected. Most systems are swimming in piles of one-off glue code each time two modules are linked together... There should instead be a generic and easy way to connect things without so much repeated work happening.\n\nAs for FOAM, this is new to me, thanks for the links. Is there a text description of the goals of FOAM somewhere? I jumped around through the videos a bit, but I am not sure I understand what it's trying to achieve yet..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1623083577.079100",
        "client_msg_id": "0a15804b-4654-4fae-b92e-6045cdab7982",
        "text": "Assuming my reading of Stephen's paper is correct, a key point of the \"integration domain\" is that it's not just a matter of creating tools for it. Equally important is the creation of components that are meant to be integrated. Today's software is not written as components for integration, but as layers in a stack that must be assembled from bottom to top.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622882372.038900",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sdn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Assuming my reading of Stephen's paper is correct, a key point of the \"integration domain\" is that it's not just a matter of creating tools for it. Equally important is the creation of components that are meant to be integrated. Today's software is not written as components for integration, but as layers in a stack that must be assembled from bottom to top."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U014WA16VNJ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01U19ECZTJ",
        "type": "message",
        "ts": "1623083964.079500",
        "client_msg_id": "9615d567-f2cb-4824-9605-c3b963b4cb7a",
        "text": "<@UML4ZEKDK> Those videos are short, but pretty dense, and not really compatible with jumping around. You can learn more about FOAM at <http:\/\/foam-framework.github.io\/foam\/>. FOAM is a cross-language, cross-tier modelling framework. From a single model it can generate JS, Java and Swift classes and a full suite of \"features\" for them. Features include things like network marshalling code, JSON, XML, and CSV adapters, various kinds of views like table views, detail views, etc. database adapters, crypto support, etc. Then, you have and end to end(s) full-stack solution with support for multiple clients (Web, Android, iOS) and servers (Java, Node.js) and your objects can move between languages\/tiers because they share the same structure, wire-formats, and protocols.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d80d37c53cd4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-04-05\/1929520000754_d80d37c53cd4ee3c8f5f_72.png",
            "first_name": "",
            "real_name": "Kevin Greer",
            "display_name": "Kevin Greer",
            "team": "T5TCAFTA9",
            "name": "kgrgreer",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622882372.038900",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KCpMd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UML4ZEKDK"
                            },
                            {
                                "type": "text",
                                "text": " Those videos are short, but pretty dense, and not really compatible with jumping around. You can learn more about FOAM at "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/foam-framework.github.io\/foam\/"
                            },
                            {
                                "type": "text",
                                "text": ". FOAM is a cross-language, cross-tier modelling framework. From a single model it can generate JS, Java and Swift classes and a full suite of \"features\" for them. Features include things like network marshalling code, JSON, XML, and CSV adapters, various kinds of views like table views, detail views, etc. database adapters, crypto support, etc. Then, you have and end to end(s) full-stack solution with support for multiple clients (Web, Android, iOS) and servers (Java, Node.js) and your objects can move between languages\/tiers because they share the same structure, wire-formats, and protocols."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1623084253.079900",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1623084335.000000"
        },
        "client_msg_id": "dc3bfe82-1f6d-416d-867b-f90ae229ac5c",
        "text": "I saw this message right when you posted it, but decided to take some time to think about it before responding.\n\n(As an aside — the relation to chip design is choice. I work for a company that studies hydraulic &amp; electrical systems, so there's a ton of \"I read schematics\" DNA going into Hest. Not quite the same domain, but adjacent.)\n\n&gt; But with Fibers, presumably one of your inputs just wouldn't change and you'd have stale data on that input, but not the other.\nMy initial thought is that this is probably _fine_. As in: it's not as good as _not_ hitting this bug, granted, but it's a bug that should be easy to avoid most of the time and easy to solve when it does come up. If you hit this bug, then when you notice it 15 functions later, you just rewind execution back until you see where the problem cropped up.\n\nThat was my initial thought. But my prevailing thought is... that I don't understand what you mean by this:\n\n&gt; One point (in my eyes) in favor of calling it a \"barrier\" rather than the concept of \"Fibers\"\nIs a barrier like the \"sync\" node in SpaceChem? Is it something else?\n\nI'd like to hear more about what you think I should do instead of fibers. I think you're onto something (*), but I don't understand it well enough, even after a day of reflecting on it.\n\n(* Fibers are a conflation of several things. They hold state, they help with coordination. There are a few other approaches I've considered that keep those things separate. So it's very likely that I'll find more ways to slice up these concepts by looking at how other domains, like chips, handle similar problems.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1623018113.065400",
        "parent_user_id": "U0242H3GHHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U\/0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I saw this message right when you posted it, but decided to take some time to think about it before responding.\n\n(As an aside — the relation to chip design is choice. I work for a company that studies hydraulic & electrical systems, so there's a ton of \"I read schematics\" DNA going into Hest. Not quite the same domain, but adjacent.)\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But with Fibers, presumably one of your inputs just wouldn't change and you'd have stale data on that input, but not the other."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nMy initial thought is that this is probably "
                            },
                            {
                                "type": "text",
                                "text": "fine",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". As in: it's not as good as "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " hitting this bug, granted, but it's a bug that should be easy to avoid most of the time and easy to solve when it does come up. If you hit this bug, then when you notice it 15 functions later, you just rewind execution back until you see where the problem cropped up.\n\nThat was my initial thought. But my prevailing thought is... that I don't understand what you mean by this:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One point (in my eyes) in favor of calling it a \"barrier\" rather than the concept of \"Fibers\""
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIs a barrier like the \"sync\" node in SpaceChem? Is it something else?\n\nI'd like to hear more about what you think I should do instead of fibers. I think you're onto something (*), but I don't understand it well enough, even after a day of reflecting on it.\n\n(* Fibers are a conflation of several things. They hold state, they help with coordination. There are a few other approaches I've considered that keep those things separate. So it's very likely that I'll find more ways to slice up these concepts by looking at how other domains, like chips, handle similar problems.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1623086310.080300",
        "client_msg_id": "934d3cd9-214f-4adb-878b-2361eb48e7fe",
        "text": "All valid points, but I suspect that the underlying cause for most of them is a systematic neglect of hierarchical modularity since the dawn of software development. Probably for good reasons, historically, but now it's hard to get away from the habits of the past.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622048775.021900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gdo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "All valid points, but I suspect that the underlying cause for most of them is a systematic neglect of hierarchical modularity since the dawn of software development. Probably for good reasons, historically, but now it's hard to get away from the habits of the past."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0242H3GHHT",
        "type": "message",
        "ts": "1623089010.088300",
        "client_msg_id": "C92C3525-CE21-4F57-9885-DB0B466E5B89",
        "text": "Sorry, my bad for phrasing that sentence badly.\n\nBy \n&gt; calling it a „barrier“ rather than the concept of „Fibers“\nwhat I was trying to say is that I think a sync node (which I am calling barrier, because that‘s a slightly more precise term imo) would be my preferred solution, even if it does force you to solve the issue of handling the resulting „jams“",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd6d3825871f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d6d3825871fcd174c36fe3eada6d5fce.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Nils Berg",
            "display_name": "Nils Berg",
            "team": "T5TCAFTA9",
            "name": "berg.nils",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1623018113.065400",
        "parent_user_id": "U0242H3GHHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=7\/t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sorry, my bad for phrasing that sentence badly.\n"
                            },
                            {
                                "type": "text",
                                "text": "\nBy \n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "calling it a „barrier“ rather than the concept of „Fibers“"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "what I was trying to say is that I think a sync node (which I am calling barrier, because that‘s a slightly more precise term imo) would be my preferred solution, even if it does force you to solve the issue of handling the resulting „jams“"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0242H3GHHT",
        "type": "message",
        "ts": "1623089086.090400",
        "client_msg_id": "E932A159-C3B3-48CF-BDF6-B4A39826D03A",
        "text": "I think we‘re fundamentally in agreement that something should happen at the boundaries of an „abstraction“, there‘s just multiple ways to argue how best to do it :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd6d3825871f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d6d3825871fcd174c36fe3eada6d5fce.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Nils Berg",
            "display_name": "Nils Berg",
            "team": "T5TCAFTA9",
            "name": "berg.nils",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1623018113.065400",
        "parent_user_id": "U0242H3GHHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z5X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think we‘re fundamentally in agreement that something should happen at the boundaries of an „abstraction“, there‘s just multiple ways to argue how best to do it :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0242H3GHHT",
        "type": "message",
        "ts": "1623089522.091700",
        "client_msg_id": "69FB0758-43FE-4887-A138-CC492FF9291C",
        "text": "Also, I was wondering how a „sync“ node is different from just a point with multiple incoming lines. Do those exist in Hest?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd6d3825871f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d6d3825871fcd174c36fe3eada6d5fce.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Nils Berg",
            "display_name": "Nils Berg",
            "team": "T5TCAFTA9",
            "name": "berg.nils",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1623018113.065400",
        "parent_user_id": "U0242H3GHHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lWt=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, I was wondering how a „sync“ node is different from just a point with multiple incoming lines. Do those exist in Hest?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1623098510.092200",
        "client_msg_id": "84dcd89e-2445-427c-bfb6-325a4ea9cd1e",
        "text": "&gt; Is there a Tools for Thought community (slack, discord, etc.)? \n<https:\/\/thinkingtools.space>\n\n(Also a great place to try out Discourse as a forum platform in comparison to Slack)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622980122.044800",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "title": "Thinking Tools",
                "title_link": "https:\/\/thinkingtools.space\/",
                "text": "We are a friendly community building new tools and media for thinking.",
                "fallback": "Thinking Tools",
                "thumb_url": "https:\/\/thinkingtools.space\/uploads\/default\/original\/1X\/1aafffb117351b32397e01083ba87afcc305a807.jpeg",
                "from_url": "https:\/\/thinkingtools.space\/",
                "thumb_width": 584,
                "thumb_height": 582,
                "service_icon": "https:\/\/thinkingtools.space\/uploads\/default\/optimized\/1X\/1aafffb117351b32397e01083ba87afcc305a807_2_180x180.jpeg",
                "service_name": "thinkingtools.space",
                "id": 1,
                "original_url": "https:\/\/thinkingtools.space"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hTB3",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is there a Tools for Thought community (slack, discord, etc.)? "
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/thinkingtools.space"
                            },
                            {
                                "type": "text",
                                "text": "\n\n(Also a great place to try out Discourse as a forum platform in comparison to Slack)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UML4ZEKDK",
        "type": "message",
        "ts": "1623107771.092500",
        "edited": {
            "user": "UML4ZEKDK",
            "ts": "1623107789.000000"
        },
        "client_msg_id": "59b41a78-591e-425a-b55d-ab80c60e87cc",
        "text": "<@U01U19ECZTJ> Ah cool, sounds like a interesting project! :slightly_smiling_face: (As a tiny suggestion, maybe link to the website in the YouTube channel's about section: that's where I went to try to find a site from the videos, since \"foam\" seemed like a difficult word to search for.)\n\nFrom my initial impressions of FOAM, it seems like it has some properties of \"new world\" environments since you'd need to model things in FOAM, but then it seems like the generated classes in various languages could connect to other modules in those languages, which does relate to the integration vision... Maybe a separate thread about FOAM would help share context on what it can do.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "edc1c9acb12d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-05-22\/5286358617767_edc1c9acb12dfa7d1a20_72.jpg",
            "first_name": "J.",
            "real_name": "J. Ryan Stinnett",
            "display_name": "J. Ryan Stinnett",
            "team": "T5TCAFTA9",
            "name": "jryans",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1622882372.038900",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J8S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01U19ECZTJ"
                            },
                            {
                                "type": "text",
                                "text": " Ah cool, sounds like a interesting project! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " (As a tiny suggestion, maybe link to the website in the YouTube channel's about section: that's where I went to try to find a site from the videos, since \"foam\" seemed like a difficult word to search for.)\n\nFrom my initial impressions of FOAM, it seems like it has some properties of \"new world\" environments since you'd need to model things in FOAM, but then it seems like the generated classes in various languages could connect to other modules in those languages, which does relate to the integration vision... Maybe a separate thread about FOAM would help share context on what it can do."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UJBAJNFLK",
                    "U0112C10V4Y"
                ],
                "count": 3
            }
        ]
    }
]