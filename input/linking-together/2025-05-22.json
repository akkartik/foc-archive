[
    {
        "user": "U07BD7U4S4R",
        "type": "message",
        "ts": "1747911796.533919",
        "edited": {
            "user": "U07BD7U4S4R",
            "ts": "1747912207.000000"
        },
        "client_msg_id": "d72faa0c-202e-4963-bc85-bb339ef3f82f",
        "text": "I ~disagree.\nThe problem is the same as with SQL - it is text(files) first, AST (abstract syntax\/semantic\/etc tree) – later.\nTherefore each must roll their own text->ast convertor.\n\nYeah, you get carrying code around for free, looking at it with your own eyes too (however text is still bits, and text viewers - is a special software converting bits to human-readable \"photons\")\n\nBut also you get for free \"tabs vs spaces\", even if you dont care – someone on the project does.\nYou get all code-formatters and configs wars on the projects.\nYou get junk diffs with zero semantic awareness and have to go through them, when someone does not comply with formatting style was there before. Even for top 10 languages with Millions users for decades.\nYou get linters and bugs and cpu cycles wasted on linting, failed builds requiring attention because linter is not happy with space before comma.\n\nThe worst part is – it might have been inevitable.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d0343f70ca57",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-04\/7377091009748_d0343f70ca57c18eeb41_72.png",
            "first_name": "misha",
            "real_name": "misha",
            "display_name": "misha",
            "team": "T5TCAFTA9",
            "name": "misha.akovantsev",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747153874.428279",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lEtsG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I ~disagree.\nThe problem is the same as with SQL - it is text(files) first, AST (abstract syntax\/semantic\/etc tree) – later.\nTherefore each must roll their own text->ast convertor.\n\nYeah, you get carrying code around for free, looking at it with your own eyes too (however text is still bits, and text viewers - is a special software converting bits to human-readable \"photons\")\n\nBut also you get for free \"tabs vs spaces\", even if you dont care – someone on the project does.\nYou get all code-formatters and configs wars on the projects.\nYou get junk diffs with zero semantic awareness and have to go through them, when someone does not comply with formatting style was there before. Even for top 10 languages with Millions users for decades.\nYou get linters and bugs and cpu cycles wasted on linting, failed builds requiring attention because linter is not happy with space before comma.\n\nThe worst part is – it might have been inevitable."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1747912745.981619",
        "client_msg_id": "5267bf94-193a-4fdd-ae82-18fd4f3ea2c3",
        "text": "Nice podcast episode with <@U03R0B9U1GD>: <https:\/\/creators.spotify.com\/pod\/profile\/theorthogonalbet\/episodes\/Lu-Wilson-on-Art-of-Creative-Coding-e32t5lb>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747912745.981619",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1748352233.019019",
        "reply_users": [
            "U02A6KG76NP"
        ],
        "replies": [
            {
                "user": "U02A6KG76NP",
                "ts": "1748352233.019019"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l14S4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice podcast episode with "
                            },
                            {
                                "type": "user",
                                "user_id": "U03R0B9U1GD"
                            },
                            {
                                "type": "text",
                                "text": ": "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/creators.spotify.com\/pod\/profile\/theorthogonalbet\/episodes\/Lu-Wilson-on-Art-of-Creative-Coding-e32t5lb"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "headphones",
                "users": [
                    "U02QC0PPER3"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "U02A6KG76NP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1747913203.616729",
        "client_msg_id": "5dd853e2-5d2f-4fae-9e9b-0d90d43da075",
        "text": "&gt; Therefore each must roll their own text-&gt;ast convertor.\nParsers for most languages are readily available. Python even has a Python parser in its standard library. It would be nice of course to make the AST even easier to access, but I don't see it as a major obstacle.\n\nThe other points you list are partly an issue with text files, but mostly an issue with text representations of any kind. If you make ASTs the baseline representation of code, you still have to decide how to render it on screen, so code formatting matters exactly in the same way, just in a different place (the IDE rather than the text file).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747153874.428279",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dVTRe",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Therefore each must roll their own text->ast convertor."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Parsers for most languages are readily available. Python even has a Python parser in its standard library. It would be nice of course to make the AST even easier to access, but I don't see it as a major obstacle.\n\nThe other points you list are partly an issue with text files, but mostly an issue with text representations of any kind. If you make ASTs the baseline representation of code, you still have to decide how to render it on screen, so code formatting matters exactly in the same way, just in a different place (the IDE rather than the text file)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U07BD7U4S4R",
        "type": "message",
        "ts": "1747913223.030079",
        "client_msg_id": "02e37c4b-f4a6-4ce4-8252-d76dff4cd7bf",
        "text": "re: <https:\/\/hyperdoc.khinsen.net\/>\nwould benefit from more tiling (more than 1 pane in each next column)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d0343f70ca57",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-04\/7377091009748_d0343f70ca57c18eeb41_72.png",
            "first_name": "misha",
            "real_name": "misha",
            "display_name": "misha",
            "team": "T5TCAFTA9",
            "name": "misha.akovantsev",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747153874.428279",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O10Ge",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "re: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/hyperdoc.khinsen.net\/"
                            },
                            {
                                "type": "text",
                                "text": "\nwould benefit from more tiling (more than 1 pane in each next column)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U07BD7U4S4R",
        "type": "message",
        "ts": "1747913513.617129",
        "client_msg_id": "71179034-1274-4fe7-9abb-61e2b5041661",
        "text": "&gt; so code formatting matters exactly in the same way\nit would move it to client (= your IDE) where you could do all you want, write it however you want\n\"tabs vs spaces\" would never be a thing ever. linters would be compiler plugins alerting on semantics, not this \"opening { must be on the new line, build failed\" BS.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d0343f70ca57",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-04\/7377091009748_d0343f70ca57c18eeb41_72.png",
            "first_name": "misha",
            "real_name": "misha",
            "display_name": "misha",
            "team": "T5TCAFTA9",
            "name": "misha.akovantsev",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747153874.428279",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I1Vqk",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "so code formatting matters exactly in the same way"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it would move it to client (= your IDE) where you could do all you want, write it however you want\n\"tabs vs spaces\" would never be a thing ever. linters would be compiler plugins alerting on semantics, not this \"opening { must be on the new line, build failed\" BS."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U07BD7U4S4R",
        "type": "message",
        "ts": "1747913762.427979",
        "edited": {
            "user": "U07BD7U4S4R",
            "ts": "1747913794.000000"
        },
        "client_msg_id": "ab7086d5-7d3a-4632-8826-b41f978ac2fc",
        "text": "> I don't see it as a major obstacle.\nBut it is an obstacle, because nobody writes code in DION as far as I am aware. <https:\/\/www.youtube.com\/watch?v=GB_oTjVVgDc>\nLook how much of text files related BS is just absent from unison ecosystem. <https:\/\/share.unison-lang.org\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d0343f70ca57",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-04\/7377091009748_d0343f70ca57c18eeb41_72.png",
            "first_name": "misha",
            "real_name": "misha",
            "display_name": "misha",
            "team": "T5TCAFTA9",
            "name": "misha.akovantsev",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747153874.428279",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fy9SI",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't see it as a major obstacle."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But it is an obstacle, because nobody writes code in DION as far as I am aware. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=GB_oTjVVgDc"
                            },
                            {
                                "type": "text",
                                "text": "\nLook how much of text files related BS is just absent from unison ecosystem. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/share.unison-lang.org\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1747914621.665249",
        "client_msg_id": "7209d3e7-4969-4b60-ba24-9ae4c4d89ebd",
        "text": "This might be of interest to anyone with a hardware bent. One of the comments below it is: \"... The animated explanation of the tv lines and timing are the best i have ever seen. ...\"\n<https:\/\/www.youtube.com\/watch?v=5t1_XNc3vNw|ESP32 Composite Video>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "from_url": "https:\/\/www.youtube.com\/watch?v=5t1_XNc3vNw",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/5t1_XNc3vNw\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/5t1_XNc3vNw?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen title=\"ESP32 Composite Video\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=5t1_XNc3vNw",
                "fallback": "YouTube Video: ESP32 Composite Video",
                "title": "ESP32 Composite Video",
                "title_link": "https:\/\/www.youtube.com\/watch?v=5t1_XNc3vNw",
                "author_name": "bitluni",
                "author_link": "https:\/\/www.youtube.com\/@bitluni",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ql+JG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This might be of interest to anyone with a hardware bent. One of the comments below it is: \"... The animated explanation of the tv lines and timing are the best i have ever seen. ...\"\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=5t1_XNc3vNw",
                                "text": "ESP32 Composite Video"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UP00ZLX6G"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UE6EFEPTQ"
                ],
                "count": 1
            },
            {
                "name": "+1::skin-tone-2",
                "users": [
                    "U03U0SCU5LH"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1747928871.773659",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1747929049.000000"
        },
        "client_msg_id": "a2669a94-afab-4bb7-a8c5-67617307e027",
        "text": "Counterexample: <https:\/\/github.com\/khinsen\/GT-Zotero\/blob\/main\/src\/Zotero\/ZtApiClient.class.st>\nThis is Smalltalk code, stored in a text file. That's how it's stored in Git repositories, that's what the Smalltalk system loads into its image. But nobody every looks at it. It's parsed when loaded, and from then on the code lives in the image as data structures. The text files could be replaced by something else, e.g. ASTs, and hardly anyone would notice.\nAll the problems you describe come from people using text files as their preferred shared user interface. In Smalltalk, nobody does.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747153874.428279",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/C3qu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Counterexample: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/khinsen\/GT-Zotero\/blob\/main\/src\/Zotero\/ZtApiClient.class.st"
                            },
                            {
                                "type": "text",
                                "text": "\nThis is Smalltalk code, stored in a text file. That's how it's stored in Git repositories, that's what the Smalltalk system loads into its image. But nobody every looks at it. It's parsed when loaded, and from then on the code lives in the image as data structures. The text files could be replaced by something else, e.g. ASTs, and hardly anyone would notice.\nAll the problems you describe come from people using text files as their preferred shared user interface. In Smalltalk, nobody does."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U07BD7U4S4R",
        "type": "message",
        "ts": "1747930838.722919",
        "client_msg_id": "92cf4722-ca30-4ad8-b382-c0a34b510150",
        "text": "I know it is not impossible.\n\npeople follow path of least resistance.\nlegacy (backward compatibility, existing code, existing tooling, existing projects hiring juniors, existing skills, habits and preferences) make changing things very hard. Some even *start* with explicit goal \"existing things must work\" (cough, clojure re: java, cough).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d0343f70ca57",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-04\/7377091009748_d0343f70ca57c18eeb41_72.png",
            "first_name": "misha",
            "real_name": "misha",
            "display_name": "misha",
            "team": "T5TCAFTA9",
            "name": "misha.akovantsev",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747153874.428279",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yrjEw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I know it is not impossible.\n\npeople follow path of least resistance.\nlegacy (backward compatibility, existing code, existing tooling, existing projects hiring juniors, existing skills, habits and preferences) make changing things very hard. Some even "
                            },
                            {
                                "type": "text",
                                "text": "start",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " with explicit goal \"existing things must work\" (cough, clojure re: java, cough)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1747981569.395379",
        "client_msg_id": "73fb08e8-5fff-48ae-9930-cbf9030af875",
        "text": "Existing things must work is a very good principle if you design tech for solving today's problems! You can't expect anyone to build real-life tools on top of prototypes.\n\nMy point about text files is mostly that you can _evolve_ their use, rather than abolish them and start from scratch. That's very much \"existing things must continue to work\". Keep text files, but create better views in IDEs that make text formatting issues obsolete.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747153874.428279",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9vYKE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Existing things must work is a very good principle if you design tech for solving today's problems! You can't expect anyone to build real-life tools on top of prototypes.\n\nMy point about text files is mostly that you can "
                            },
                            {
                                "type": "text",
                                "text": "evolve",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " their use, rather than abolish them and start from scratch. That's very much \"existing things must continue to work\". Keep text files, but create better views in IDEs that make text formatting issues obsolete."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]