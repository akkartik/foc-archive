[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1682151409.577669",
        "client_msg_id": "c4ac12b0-1f08-421b-a664-eb4dca858fb3",
        "text": "In addition to all these arguments, it's worth considering that empirical research in software engineering is still far from a mature science. It's in a similar situation as nutritional science: a lot of (seemingly) applied research is done from a desire for answers that can be turned into advice, but there is no solid foundation from fundamental research. For example, nobody has a clear idea of which aspects of context matter for studying a given question, so there can be no carefully analysis of confounding factors.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1682105789.408249",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J88oN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In addition to all these arguments, it's worth considering that empirical research in software engineering is still far from a mature science. It's in a similar situation as nutritional science: a lot of (seemingly) applied research is done from a desire for answers that can be turned into advice, but there is no solid foundation from fundamental research. For example, nobody has a clear idea of which aspects of context matter for studying a given question, so there can be no carefully analysis of confounding factors."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1682151835.361699",
        "client_msg_id": "93b6e34e-ac2f-4933-8b8d-372d3cac9d84",
        "text": "I guess the \"export\" function is \"screenshot\"? Which I think is perfectly fine for this type of application. Though I wish graphics platforms systematically had \"save as SVG\" for whatever is drawn in a window.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1682132551.628689",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P9h7L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess the \"export\" function is \"screenshot\"? Which I think is perfectly fine for this type of application. Though I wish graphics platforms systematically had \"save as SVG\" for whatever is drawn in a window."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1682151958.587319",
        "client_msg_id": "9bdbd344-56b6-467f-b67c-9a716bd756ba",
        "text": "Yeah, no reason it couldn't. Lines.love has SVG export, should be easy to port over.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1682132551.628689",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nGV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, no reason it couldn't. Lines.love has SVG export, should be easy to port over."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1682155706.431769",
        "client_msg_id": "26f64b48-5b72-49ef-94d8-6e313a5eb7e3",
        "text": "The difference between boxes drawn by normal humans and boxes drawn by programmers is decoupling.\n\nNormal humans draw boxes that are asynchronous (e.g. boxes drawn on a whiteboard), programmers draw boxes that are synchronous (which leads to hating VPLs).\n\nRhetorical questions: Can Queues (LIFO) be created in Lua?  Does Lua have anonymous functions (closures\/whatever)?  If so, then full decoupling (which I call 0D ATM) is easy. :-)\n\nOne more step: create 2 kinds of boxes: (1) code and (2) routing.  Boxes of type 2 (Containers) are recursively defined - they can contain boxes of type 1 or type 2.  In Lisp, type 1 boxes are called Atoms and type 2 boxes are called Lists. In my vocabulary, 1=Leaf, 2=Container.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1682132551.628689",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g3EB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The difference between boxes drawn by normal humans and boxes drawn by programmers is decoupling.\n\nNormal humans draw boxes that are asynchronous (e.g. boxes drawn on a whiteboard), programmers draw boxes that are synchronous (which leads to hating VPLs).\n\nRhetorical questions: Can Queues (LIFO) be created in Lua?  Does Lua have anonymous functions (closures\/whatever)?  If so, then full decoupling (which I call 0D ATM) is easy. :-)\n\nOne more step: create 2 kinds of boxes: (1) code and (2) routing.  Boxes of type 2 (Containers) are recursively defined - they can contain boxes of type 1 or type 2.  In Lisp, type 1 boxes are called Atoms and type 2 boxes are called Lists. In my vocabulary, 1=Leaf, 2=Container."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UM7034QUQ",
        "type": "message",
        "ts": "1682185572.296679",
        "client_msg_id": "aca469d8-ec4d-4824-8e88-9a1306348de5",
        "text": "For <https:\/\/nodysseus.io|https:\/\/nodysseus.io> I went with autolayout only. To make that possible, it's got a tree structure - nodes have multiple inputs but only one output. This mimics some good programming practices too, so it works well.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5e9f304f291",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/05e9f304f29113e7155df3ab1f1d21e8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Ulysses Popple",
            "display_name": "Ulysses Popple",
            "team": "T5TCAFTA9",
            "name": "ulysses.popple",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1682132551.628689",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+aV0t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/nodysseus.io",
                                "text": "https:\/\/nodysseus.io"
                            },
                            {
                                "type": "text",
                                "text": " I went with autolayout only. To make that possible, it's got a tree structure - nodes have multiple inputs but only one output. This mimics some good programming practices too, so it works well."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1682202201.849259",
        "client_msg_id": "a4828b5e-b499-4b1b-a831-710c323e735a",
        "text": "CALL\/RETURN Spaghetti. <https:\/\/guitarvydas.github.io\/2020\/12\/09\/CALL-RETURN-Spaghetti.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1682202201.849259",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1682413543.865069",
        "reply_users": [
            "U0245E9RB2B",
            "UGWUJUZHT"
        ],
        "replies": [
            {
                "user": "U0245E9RB2B",
                "ts": "1682226016.020419"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1682413543.865069"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+e5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "CALL\/RETURN Spaghetti. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/guitarvydas.github.io\/2020\/12\/09\/CALL-RETURN-Spaghetti.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1682203928.478429",
        "client_msg_id": "1690027b-5429-4169-be86-690fc06745ec",
        "text": "That's cool! I poked at autolayout for an earlier app: <https:\/\/git.sr.ht\/~akkartik\/mastodon-unfurl.love> I may well do more with it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1682132551.628689",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y=m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's cool! I poked at autolayout for an earlier app: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/git.sr.ht\/~akkartik\/mastodon-unfurl.love"
                            },
                            {
                                "type": "text",
                                "text": " I may well do more with it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "UM7034QUQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1682217309.590799",
        "client_msg_id": "d8da190c-371a-4e3e-81b7-2565e23ff1c9",
        "text": "# Auto Layout Is A UX Disaster\n\nIMM, auto-layout results in disastrous UXs.\n\nThere are two kinds of code:\n1. code for controlling machines, code that is machine-readable\n2. code for communicating to human readers *why* code for controlling machines has been written the way it was - DI, Design Intent.  Code that is human-readable.\nWhen laying out code for DI - human consumption - spatial relationships matter.  Do you want power-assist to help you lay out spatial relationships? Yes.  Do you want power-assist to change the layout every time you make a change? No.\n\nWhen laying out code for machine consumption, spatial relationships don’t matter.  Current electronic machines (aka “computers”), work only with sequential relationships.  Spatial layout doesn’t matter to machines.  Auto-layout applied to this kind of code is just a waste of electrons.\n\nSummary: layout only matters to human readers.  Human readers grok things that are laid out spatially.  Each time the layout changes, human readers need to expend brain-power to re-grok what’s being presented.  Brain-power is bounded - users can burn brain power to think, or, they can burn brain power to re-grok what they’ve already grokked.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1682132551.628689",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gHtj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "# Auto Layout Is A UX Disaster\n\nIMM, auto-layout results in disastrous UXs.\n\nThere are two kinds of code:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "code for controlling machines, code that is machine-readable"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "code for communicating to human readers "
                                    },
                                    {
                                        "type": "text",
                                        "text": "why",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " code for controlling machines has been written the way it was - DI, Design Intent.  Code that is human-readable."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nWhen laying out code for DI - human consumption - spatial relationships matter.  Do you want power-assist to help you lay out spatial relationships? Yes.  Do you want power-assist to change the layout every time you make a change? No.\n\nWhen laying out code for machine consumption, spatial relationships don’t matter.  Current electronic machines (aka “computers”), work only with sequential relationships.  Spatial layout doesn’t matter to machines.  Auto-layout applied to this kind of code is just a waste of electrons.\n\nSummary: layout only matters to human readers.  Human readers grok things that are laid out spatially.  Each time the layout changes, human readers need to expend brain-power to re-grok what’s being presented.  Brain-power is bounded - users can burn brain power to think, or, they can burn brain power to re-grok what they’ve already grokked."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0245E9RB2B",
        "type": "message",
        "ts": "1682226016.020419",
        "edited": {
            "user": "U0245E9RB2B",
            "ts": "1682226026.000000"
        },
        "client_msg_id": "401adc1b-7491-4b87-8c65-3f030991e776",
        "text": "I think Scratch works a little like your proposal, right? Instead of function calls, messages are broadcast, and every object can respond.\n\n<https:\/\/en.scratch-wiki.info\/wiki\/Broadcast_()_(block)|https:\/\/en.scratch-wiki.info\/wiki\/Broadcast_()_(block)>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4146ee716d5c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-06-09\/2162420776068_4146ee716d5cee83a3b8_72.jpg",
            "first_name": "",
            "real_name": "Timothy Johnson",
            "display_name": "Timothy Johnson",
            "team": "T5TCAFTA9",
            "name": "timjohnson314",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1682202201.849259",
        "parent_user_id": "UGWUJUZHT",
        "attachments": [
            {
                "image_url": "https:\/\/en.scratch-wiki.info\/w\/images\/Wave_%28%29.jpg",
                "image_width": 95,
                "image_height": 49,
                "image_bytes": 8981,
                "from_url": "https:\/\/en.scratch-wiki.info\/wiki\/Broadcast_()_(block)",
                "service_icon": "https:\/\/en.scratch-wiki.info\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/en.scratch-wiki.info\/wiki\/Broadcast_()_(block)",
                "fallback": "Broadcast () (block) - Scratch Wiki",
                "title": "Broadcast () (block) - Scratch Wiki",
                "title_link": "https:\/\/en.scratch-wiki.info\/wiki\/Broadcast_()_(block)",
                "service_name": "en.scratch-wiki.info"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZJjkb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think Scratch works a little like your proposal, right? Instead of function calls, messages are broadcast, and every object can respond.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.scratch-wiki.info\/wiki\/Broadcast_()_(block)",
                                "text": "https:\/\/en.scratch-wiki.info\/wiki\/Broadcast_()_(block)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            },
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]