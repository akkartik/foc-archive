[
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1550563985.027700",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1550566086.000000"
        },
        "client_msg_id": "0ee1c784-fd7d-495f-8c21-d4de0bc588ea",
        "text": "I'm not sure how to speak to cross-cutting stuff, aside from that the \"code commit\" (e.g. in a source control repository) has become my favorite \"code construct\" -- maybe I'll explain more if needed.\n\nAs for the lower level concerns, sometimes the \"human\" in the \"human model\" is the programmer. There is a way to state, in plain human terms, what your are trying to do with the DB and how\/where that fits into the bigger picture or use-case. And either the code matches that, or it does not. That still all comes down to basic decomposition and abstraction skills.\n\nThere is still the non-functional requirements, though maybe abstraction done right can separate that from the other stuff.\n\nAs for threading issues, maybe we cannot get away entirely, or maybe there are other options. See the following video at 1:06:00 for about 5 minutes: <https:\/\/youtu.be\/nrVIlhtoE3Y>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1550137467.010900",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a4TQQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not sure how to speak to cross-cutting stuff, aside from that the \"code commit\" (e.g. in a source control repository) has become my favorite \"code construct\" -- maybe I'll explain more if needed.\n\nAs for the lower level concerns, sometimes the \"human\" in the \"human model\" is the programmer. There is a way to state, in plain human terms, what your are trying to do with the DB and how\/where that fits into the bigger picture or use-case. And either the code matches that, or it does not. That still all comes down to basic decomposition and abstraction skills.\n\nThere is still the non-functional requirements, though maybe abstraction done right can separate that from the other stuff.\n\nAs for threading issues, maybe we cannot get away entirely, or maybe there are other options. See the following video at 1:06:00 for about 5 minutes: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/nrVIlhtoE3Y"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1550564078.027900",
        "client_msg_id": "1126f449-22f9-4f5e-abec-65cfdd10a549",
        "text": "For simplicity being objective, watch Rich Hickey's \"Simple Made Easy\":\n\n<https:\/\/www.infoq.com\/presentations\/Simple-Made-Easy>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1550137467.010900",
        "parent_user_id": "U5TCAFTD3",
        "attachments": [
            {
                "service_name": "InfoQ",
                "title": "Simple Made Easy",
                "title_link": "https:\/\/www.infoq.com\/presentations\/Simple-Made-Easy",
                "text": "Rich Hickey emphasizes simplicity’s virtues over easiness’, showing that while many choose easiness they may end up with complexity, and the better way is to choose easiness along the simplicity path.",
                "fallback": "InfoQ: Simple Made Easy",
                "thumb_url": "https:\/\/res.infoq.com\/presentations\/Simple-Made-Easy\/en\/mediumimage\/rich-hickey-big.jpg",
                "from_url": "https:\/\/www.infoq.com\/presentations\/Simple-Made-Easy",
                "thumb_width": 270,
                "thumb_height": 200,
                "service_icon": "https:\/\/cdn.infoq.com\/statics_s1_20190219-0336\/apple-touch-icon.png",
                "id": 1,
                "original_url": "https:\/\/www.infoq.com\/presentations\/Simple-Made-Easy"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "v5v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For simplicity being objective, watch Rich Hickey's \"Simple Made Easy\":\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.infoq.com\/presentations\/Simple-Made-Easy"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "sunglasses",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1550564853.028300",
        "client_msg_id": "185db391-6afc-4984-b748-ab7859a53335",
        "text": "<@U8A5MS6R1> well said.  I may just like parsing, but it seems that the most tedious code I write has the feel of a parsing problem – especially if I view UI events as token streams.  I suppose distributed processes are the other kind of tedium that I encounter.  (Might even be rewriting my six year old background task system in sort order.)  Data ferrying is the least tricky part.  The tedious part is monitoring progress and recovering from failure.  (Given my particular constraints no off the shelf solution has proven the least bit helpful – except Redis as a foundation I suppose.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1550137467.010900",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AIiH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " well said.  I may just like parsing, but it seems that the most tedious code I write has the feel of a parsing problem – especially if I view UI events as token streams.  I suppose distributed processes are the other kind of tedium that I encounter.  (Might even be rewriting my six year old background task system in sort order.)  Data ferrying is the least tricky part.  The tedious part is monitoring progress and recovering from failure.  (Given my particular constraints no off the shelf solution has proven the least bit helpful – except Redis as a foundation I suppose.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1550565157.028500",
        "client_msg_id": "ec50b8ca-2155-4a8a-8828-63ec1bbc8ff6",
        "text": "As for crosscutting concerns and decomposition dimensions, I've always found insight in seeing solutions to the expression problem.  Interacting things often form a sort of lumpy product space where one perspective or another might be clearer depending.  Guess I just wish more was done with Aspect Oriented Programming.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1550137467.010900",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e=h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As for crosscutting concerns and decomposition dimensions, I've always found insight in seeing solutions to the expression problem.  Interacting things often form a sort of lumpy product space where one perspective or another might be clearer depending.  Guess I just wish more was done with Aspect Oriented Programming."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1550568151.029000",
        "client_msg_id": "cdb7e5d2-3465-4523-8fb5-83c41a469afb",
        "text": "<@UAVCC2X70> I enjoy your observations. I do believe that already now and even more so in the future, the key problem to solve is how to deal with existing software, how to make software approachable by other humans. The focus on pure semantics is certainly important. However, what we observed over the past decade is that the specification and the explanation do not have to coincide. For example, we have many ways to explain the same mathematical concepts to kids. Similarly, there can be many ways to explain the same software part to someone else.\n\nFurthermore, software is highly contextual and you can look at the same part from different perspectives, each of these having specific needs. For example, there are coarser points of view such as looking the same part to understand its meant functionality, or to reason about its performance. But, there are finer grained concerns as well. For example, when we look at a graphical object, we might want to understand its shape, but we might also want to be able to understand how it is composed out of smaller objects, and how all these handled and propagated events. Each of these points of view benefit from dedicated explanatory views.\n\nThat is the main motivation behind moldability. We think that moldability is orthogonal with the other software engineering concerns, such as language expressivity, and we also think it is a fundamental concept.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1550137467.010900",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mnUt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAVCC2X70"
                            },
                            {
                                "type": "text",
                                "text": " I enjoy your observations. I do believe that already now and even more so in the future, the key problem to solve is how to deal with existing software, how to make software approachable by other humans. The focus on pure semantics is certainly important. However, what we observed over the past decade is that the specification and the explanation do not have to coincide. For example, we have many ways to explain the same mathematical concepts to kids. Similarly, there can be many ways to explain the same software part to someone else.\n\nFurthermore, software is highly contextual and you can look at the same part from different perspectives, each of these having specific needs. For example, there are coarser points of view such as looking the same part to understand its meant functionality, or to reason about its performance. But, there are finer grained concerns as well. For example, when we look at a graphical object, we might want to understand its shape, but we might also want to be able to understand how it is composed out of smaller objects, and how all these handled and propagated events. Each of these points of view benefit from dedicated explanatory views.\n\nThat is the main motivation behind moldability. We think that moldability is orthogonal with the other software engineering concerns, such as language expressivity, and we also think it is a fundamental concept."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1550568726.029200",
        "client_msg_id": "9ed23936-efaf-4bcd-b4c4-d9c8901a7cb2",
        "text": "<@UA14TGLTC>\n&gt;Why are we missing really any objective complexity measure – beyond Lines of Code?  In as much as we optimize what we can measure, why don't we measure this!?\nIn software analysis and software evolution research fields lots of effort was spent to come up with the metric, or at least the metrics. I actually spent significant time doing that. I am now convinced that it cannot work due to the contextual nature of software. I believe that there is no one size fits all. We can predict classes of problems, but not specific problems that people have. I believe that we need to focus on context and I think there is a science behind it, too.\n\nI like a talk of Malcolm Gladwell that provides an interesting story related to contextual measurements. In this story, he talks about Howard Moskowitz, a statistician that wanted to convince the world that there is no perfect Pepsi, and that there are only perfect Pepsis. <https:\/\/www.ted.com\/talks\/malcolm_gladwell_on_spaghetti_sauce?language=en>\n\nI think this perspective matches our field as well.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1550137467.010900",
        "parent_user_id": "U5TCAFTD3",
        "attachments": [
            {
                "service_name": "TED",
                "service_url": "http:\/\/ted.com",
                "title": "Malcolm Gladwell: Choice, happiness and spaghetti sauce",
                "title_link": "https:\/\/www.ted.com\/talks\/malcolm_gladwell_on_spaghetti_sauce?language=en",
                "author_name": "Malcolm Gladwell",
                "author_link": "https:\/\/www.ted.com\/speakers\/malcolm_gladwell",
                "thumb_url": "https:\/\/pi.tedcdn.com\/r\/pe.tedcdn.com\/images\/ted\/46f08b057c280fb6e471b1003bb9a78078c394ed_2880x1620.jpg?h=150&w=267",
                "thumb_width": 267,
                "thumb_height": 150,
                "text": "\"Tipping Point\" author Malcolm Gladwell gets inside the food industry's pursuit of the perfect spaghetti sauce -- and makes a larger argument about the nature of choice and happiness.",
                "fallback": "TED Video: Malcolm Gladwell: Choice, happiness and spaghetti sauce",
                "from_url": "https:\/\/www.ted.com\/talks\/malcolm_gladwell_on_spaghetti_sauce?language=en",
                "service_icon": "https:\/\/pa.tedcdn.com\/apple-touch-icon.png",
                "id": 1,
                "original_url": "https:\/\/www.ted.com\/talks\/malcolm_gladwell_on_spaghetti_sauce?language=en"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "21iI1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why are we missing really any objective complexity measure – beyond Lines of Code?  In as much as we optimize what we can measure, why don't we measure this!?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In software analysis and software evolution research fields lots of effort was spent to come up with the metric, or at least the metrics. I actually spent significant time doing that. I am now convinced that it cannot work due to the contextual nature of software. I believe that there is no one size fits all. We can predict classes of problems, but not specific problems that people have. I believe that we need to focus on context and I think there is a science behind it, too.\n\nI like a talk of Malcolm Gladwell that provides an interesting story related to contextual measurements. In this story, he talks about Howard Moskowitz, a statistician that wanted to convince the world that there is no perfect Pepsi, and that there are only perfect Pepsis. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.ted.com\/talks\/malcolm_gladwell_on_spaghetti_sauce?language=en"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI think this perspective matches our field as well."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    }
]