[
    {
        "text": "I’m working on a new way of writing “dense” UI inspired by MVVM + ECS, and this is the debugger for the “View Model Components” (VMCs?) in the UI\nThe problem I’m usually facing with my apps is that we aim to pack many many features into small areas (for example: context menus, keyboard shortcuts, focus management, spatial navigation, version control diff presentation, multiplayer user presence, and _then_ the parts that are unique to your app).\nMy goal in managing this complexity is to be able to write each individual part of the application in its own single file. All things related to “module” editing, diffing, keyboard shortcuts, spatial navigation, CRDT sync, etc should be in a single file. Then, each shared behavior’s logic are implemented in their own single files. This is what is best as well for LLMs to understand and build out features without needing to understand everything all at once.\nHere, I’ve taken a video of just the “debugger” I developed in the last two days to observe the state of all these components for each item in the world.",
        "files": [
            {
                "id": "F088B41P5QC",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "UFPPABQ7P",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XYhn5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m working on a new way of writing “dense” UI inspired by MVVM + ECS, and this is the debugger for the “View Model Components” (VMCs?) in the UI\nThe problem I’m usually facing with my apps is that we aim to pack many many features into small areas (for example: context menus, keyboard shortcuts, focus management, spatial navigation, version control diff presentation, multiplayer user presence, and "
                            },
                            {
                                "type": "text",
                                "text": "then",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the parts that are unique to your app).\nMy goal in managing this complexity is to be able to write each individual part of the application in its own single file. All things related to “module” editing, diffing, keyboard shortcuts, spatial navigation, CRDT sync, etc should be in a single file. Then, each shared behavior’s logic are implemented in their own single files. This is what is best as well for LLMs to understand and build out features without needing to understand everything all at once.\nHere, I’ve taken a video of just the “debugger” I developed in the last two days to observe the state of all these components for each item in the world."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1736600042.219749",
        "client_msg_id": "72703a82-a0f3-48e8-bbca-741eef7b3803",
        "thread_ts": "1736600042.219749",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1737129593.258739",
        "reply_users": [
            "UFPPABQ7P",
            "UBN9AFS0N",
            "UE1JQM9HQ"
        ],
        "replies": [
            {
                "user": "UFPPABQ7P",
                "ts": "1736600168.792409"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1736603791.309209"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1736619961.092209"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1737119002.709709"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1737129593.258739"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UBN9AFS0N",
                    "U85HCL7JP"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "U0887QU9G2V",
                    "U0296ACR13M"
                ],
                "count": 2
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1736600168.792409",
        "edited": {
            "user": "UFPPABQ7P",
            "ts": "1736600352.000000"
        },
        "client_msg_id": "3c241a6f-ecf5-469a-90f1-53bd6a8dc909",
        "text": "cc <@U05M5A8E0NT> <@U07HKR7UZB2> <@UT9TWSZB5> <@UBN9AFS0N> <@U01PX5VD3S9> <@U03HC3XHZGW>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736600042.219749",
        "parent_user_id": "UFPPABQ7P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "liGEi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "cc "
                            },
                            {
                                "type": "user",
                                "user_id": "U05M5A8E0NT"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U07HKR7UZB2"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UT9TWSZB5"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U01PX5VD3S9"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U03HC3XHZGW"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1736603791.309209",
        "client_msg_id": "4660dd46-dc4d-40b5-8a57-7d8ef066256c",
        "text": "nice! are you presenting it in the next FoC virtual meetup? :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736600042.219749",
        "parent_user_id": "UFPPABQ7P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MO0k3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "nice! are you presenting it in the next FoC virtual meetup? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1736619961.092209",
        "client_msg_id": "432B688F-3CE7-47A9-97EB-60C4F059C0E0",
        "text": "Hmm last time I had shown the prompt editor, I had some really great feedback that I should somehow demonstrate the development cycle using the dev tool so I kinda wanna think about how I can demonstrate that with this",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736600042.219749",
        "parent_user_id": "UFPPABQ7P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nbMjv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hmm last time I had shown the prompt editor, I had some really great feedback that I should somehow demonstrate the development cycle using the dev tool so I kinda wanna think about how I can demonstrate that with this"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1736633004.659249",
        "client_msg_id": "e7ccc170-b301-4f2f-b3b2-46ff65739644",
        "text": "Hi! Back again. On the \"calls being Declarative, implementation being Imperative\" topic: are you saying all APIs wrapping implementations are Declarative? That's not what most mean by Declarative! This is a good article to read in this area: <https:\/\/stackoverflow.com\/questions\/602444\/functional-declarative-and-imperative-programming\/8357604>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736460195.528239",
        "parent_user_id": "U0887QU9G2V",
        "attachments": [
            {
                "from_url": "https:\/\/stackoverflow.com\/questions\/602444\/functional-declarative-and-imperative-programming\/8357604",
                "service_icon": "https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon.png?v=c78bd457575a",
                "thumb_url": "https:\/\/cdn.sstatic.net\/Sites\/stackoverflow\/Img\/apple-touch-icon@2.png?v=73d79a89bded",
                "thumb_width": 316,
                "thumb_height": 316,
                "id": 1,
                "original_url": "https:\/\/stackoverflow.com\/questions\/602444\/functional-declarative-and-imperative-programming\/8357604",
                "fallback": "Stack Overflow: Functional, Declarative, and Imperative Programming",
                "text": "What do the terms functional, declarative, and imperative programming mean?",
                "title": "Functional, Declarative, and Imperative Programming",
                "title_link": "https:\/\/stackoverflow.com\/questions\/602444\/functional-declarative-and-imperative-programming\/8357604",
                "service_name": "Stack Overflow"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mBwWT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi! Back again. On the \"calls being Declarative, implementation being Imperative\" topic: are you saying all APIs wrapping implementations are Declarative? That's not what most mean by Declarative! This is a good article to read in this area: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/stackoverflow.com\/questions\/602444\/functional-declarative-and-imperative-programming\/8357604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1736634284.670259",
        "client_msg_id": "e32fb506-dbbf-42e1-9674-8a9cb717a66f",
        "text": "The common (non-academic) understanding of Declarative is that you declare a bunch of relationships in any order and then apply those to real data to get more real data. Every time you ask the question, and regardless of the order that your declarations are applied, the answer is the same. This so far means Declarative isn't Turing Complete, but to achieve that you simply circulate around your answers or outputs back into your questions or inputs.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736460195.528239",
        "parent_user_id": "U0887QU9G2V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dNhZ5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The common (non-academic) understanding of Declarative is that you declare a bunch of relationships in any order and then apply those to real data to get more real data. Every time you ask the question, and regardless of the order that your declarations are applied, the answer is the same. This so far means Declarative isn't Turing Complete, but to achieve that you simply circulate around your answers or outputs back into your questions or inputs."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1736634543.967499",
        "client_msg_id": "c79a0821-9bb6-4c55-9c8d-7c12dbdc7d7d",
        "text": "It's a little more declarative in detail, where a \"call\" seems to enforce a relationship between parts of the \"dataspace\".  That said it looks like a pretty thin wrapper over just calling a procedure again with the new arguments. Unless I missed something big.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736460195.528239",
        "parent_user_id": "U0887QU9G2V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PixTb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's a little more declarative in detail, where a \"call\" seems to enforce a relationship between parts of the \"dataspace\".  That said it looks like a pretty thin wrapper over just calling a procedure again with the new arguments. Unless I missed something big."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]