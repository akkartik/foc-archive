[
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1737477442.946399",
        "client_msg_id": "84db7397-c5d2-41b0-b11e-3d1a98224961",
        "text": "<https:\/\/open.substack.com\/pub\/programmingsimplicity\/p\/whence-bloat?r=1egdky&amp;utm_campaign=post&amp;utm_medium=web&amp;showWelcomeOnShare=true_|Doodles> for discussion towards simplification of computers for non-programmers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737477442.946399",
        "reply_count": 6,
        "reply_users_count": 3,
        "latest_reply": "1737578802.415069",
        "reply_users": [
            "U088999PF62",
            "UJBAJNFLK",
            "UGWUJUZHT"
        ],
        "replies": [
            {
                "user": "U088999PF62",
                "ts": "1737477631.746869"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1737542436.267599"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1737548206.141049"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1737555342.100789"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1737559453.666819"
            },
            {
                "user": "U088999PF62",
                "ts": "1737578802.415069"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/open.substack.com\/pub\/programmingsimplicity\/p\/whence-bloat?r=1egdky&utm_campaign=post&utm_medium=web&showWelcomeOnShare=true_",
                "image_url": "https:\/\/substackcdn.com\/image\/fetch\/w_1200,h_600,c_fill,f_jpg,q_auto:good,fl_progressive:steep,g_auto\/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F38633535-d11b-411e-9807-315447e8dece_660x936.png",
                "image_width": 660,
                "image_height": 600,
                "image_bytes": 28719,
                "service_icon": "https:\/\/substackcdn.com\/image\/fetch\/f_auto,q_auto:good,fl_progressive:steep\/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F9bf28261-3dbc-4931-99f3-57bb47beeb02%2Fapple-touch-icon-57x57.png",
                "id": 1,
                "original_url": "https:\/\/open.substack.com\/pub\/programmingsimplicity\/p\/whence-bloat?r=1egdky&amp;utm_campaign=post&amp;utm_medium=web&amp;showWelcomeOnShare=true_",
                "fallback": "Whence Bloat?",
                "text": "Pond’ring Aloud 2025-01-19",
                "title": "Whence Bloat?",
                "title_link": "https:\/\/open.substack.com\/pub\/programmingsimplicity\/p\/whence-bloat?r=1egdky&utm_campaign=post&utm_medium=web&showWelcomeOnShare=true_",
                "service_name": "programmingsimplicity.substack.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AW15V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/open.substack.com\/pub\/programmingsimplicity\/p\/whence-bloat?r=1egdky&utm_campaign=post&utm_medium=web&showWelcomeOnShare=true_",
                                "text": "Doodles"
                            },
                            {
                                "type": "text",
                                "text": " for discussion towards simplification of computers for non-programmers."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1737477631.746869",
        "client_msg_id": "f16174b5-3857-4a53-a341-f05dcd02d04a",
        "text": "I think part of it is that with more resources, we can become more “careless,” which leads to bloat. Really clean diagrams!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737477442.946399",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nfCSq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think part of it is that with more resources, we can become more “careless,” which leads to bloat. Really clean diagrams!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1737482589.068679",
        "edited": {
            "user": "U088999PF62",
            "ts": "1737482827.000000"
        },
        "client_msg_id": "E580A450-895F-4915-911C-65AB97E0E60C",
        "text": "I found that indentation in programming languages like Python, at least with some of my students, seems to be a point of confusion. This idea of introducing spatial thinking and jumping around seems to conflict with our learned way of reading text on a page. The closest thing is textual paragraph indentation.\n\nMaybe there are some studies that contradict me, but couldn’t braces or begin\/ends actually be better? Or something built-into the editor.\n\nWhy couldn’t this be acceptable?\n```# instead of:\nif bla:\n    do_bla()\n   if blabla:\n       do_blabla()\n   else:\n       other()\nelse:\n    other()\n\n# do\nif bla {\ndo_bla()\nif blabla() {\ndo_blabla()\n} \nelse {\nother()\n}\nelse {\nother()\n}\n\n```\n\nOkay it’s hard to read, but it makes me think: any block of code could really be its own function, and suppose we had a kind of function that was purely an inline macro to jump to without any stack rules. The goal would just be to make code look as procedural\/linear as possible.\n\n```if bla do_bla() else other()\n\n#define do_bla somewhere somehow in a way that keeps the same scope without param\/stack rules\n```\nSure this would probably require more annoying steps and jumps for some, but I do wonder how it might impact early learners or maybe prove useful (or not useful) for understanding control flow \nMaybe if an editor could automatically inline code folding off and off with these macros…\n\nProbably more of a structured\/dynamic editor that isn’t just pure text.\n\nI’m sure this path has been followed before, but I wonder.\n\nIt’s really just closer to ASM languages with the conditional jumps and islands of code. Strangely, I find those pretty not so hard to understand. No nesting.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "reply_count": 21,
        "reply_users_count": 4,
        "latest_reply": "1737506185.042469",
        "reply_users": [
            "U05UK5T7LPP",
            "U088999PF62",
            "UGWUJUZHT",
            "U02U0AS3J49"
        ],
        "replies": [
            {
                "user": "U05UK5T7LPP",
                "ts": "1737487380.506719"
            },
            {
                "user": "U05UK5T7LPP",
                "ts": "1737487491.643749"
            },
            {
                "user": "U088999PF62",
                "ts": "1737487533.971499"
            },
            {
                "user": "U05UK5T7LPP",
                "ts": "1737487669.478509"
            },
            {
                "user": "U088999PF62",
                "ts": "1737487771.522579"
            },
            {
                "user": "U05UK5T7LPP",
                "ts": "1737488147.576589"
            },
            {
                "user": "U05UK5T7LPP",
                "ts": "1737488179.025299"
            },
            {
                "user": "U088999PF62",
                "ts": "1737488207.114069"
            },
            {
                "user": "U05UK5T7LPP",
                "ts": "1737488379.741819"
            },
            {
                "user": "U088999PF62",
                "ts": "1737488566.735399"
            },
            {
                "user": "U05UK5T7LPP",
                "ts": "1737488681.166869"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1737494864.997049"
            },
            {
                "user": "U088999PF62",
                "ts": "1737495596.101059"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1737496933.786719"
            },
            {
                "user": "U088999PF62",
                "ts": "1737496989.954439"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1737504839.092559"
            },
            {
                "user": "U088999PF62",
                "ts": "1737505035.540959"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1737505114.012369"
            },
            {
                "user": "U088999PF62",
                "ts": "1737505531.896639"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1737506136.012449"
            },
            {
                "user": "U088999PF62",
                "ts": "1737506185.042469"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KF945",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I found that indentation in programming languages like Python, at least with some of my students, seems to be a point of confusion. This idea of introducing spatial thinking and jumping around seems to conflict with our learned way of reading text on a page. The closest thing is textual paragraph indentation.\n\nMaybe there are some studies that contradict me, but couldn’t braces or begin\/ends actually be better? Or something built-into the editor.\n\nWhy couldn’t this be acceptable?\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "# instead of:\nif bla:\n    do_bla()\n   if blabla:\n       do_blabla()\n   else:\n       other()\nelse:\n    other()\n\n# do\nif bla {\ndo_bla()\nif blabla() {\ndo_blabla()\n} \nelse {\nother()\n}\nelse {\nother()\n}\n\n"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nOkay it’s hard to read, but it makes me think: any block of code could really be its own function, and suppose we had a kind of function that was purely an inline macro to jump to without any stack rules. The goal would just be to make code look as procedural\/linear as possible.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if bla do_bla() else other()\n\n#define do_bla somewhere somehow in a way that keeps the same scope without param\/stack rules\n"
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nSure this would probably require more annoying steps and jumps for some, but I do wonder how it might impact early learners or maybe prove useful (or not useful) for understanding control flow \nMaybe if an editor could automatically inline code folding off and off with these macros…\n\nProbably more of a structured\/dynamic editor that isn’t just pure text.\n\nI’m sure this path has been followed before, but I wonder."
                            },
                            {
                                "type": "text",
                                "text": "\n\nIt’s really just closer to ASM languages with the conditional jumps and islands of code. Strangely, I find those pretty not so hard to understand. No nesting."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05UK5T7LPP",
        "type": "message",
        "ts": "1737487380.506719",
        "client_msg_id": "bc9de171-c521-4c96-87d9-414b8e853cc4",
        "text": "Yeah, this feels like a solid case where learning recapitulates the historical path. Control flow is just syntactic sugar for GOTO statements; and function calls are just GOTO with a stack, as you suggest.\n\nHow to Design Programs has an excellent deep-dive on the whole learned wisdom here. I wish someone had pointed me at this book in undergrad.\n<https:\/\/htdp.org\/2024-11-6\/Book\/part_preface.html#%28counter._%28figure._fig~3athe-design-recipe%29%29>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87f45e326f3a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-30\/5997119242352_87f45e326f3a692ca55c_72.png",
            "first_name": "Jasmine",
            "real_name": "Jasmine Otto",
            "display_name": "Jasmine Otto",
            "team": "T5TCAFTA9",
            "name": "ottojasmine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ADTVA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, this feels like a solid case where learning recapitulates the historical path. Control flow is just syntactic sugar for GOTO statements; and function calls are just GOTO with a stack, as you suggest.\n\nHow to Design Programs has an excellent deep-dive on the whole learned wisdom here. I wish someone had pointed me at this book in undergrad.\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/htdp.org\/2024-11-6\/Book\/part_preface.html#%28counter._%28figure._fig~3athe-design-recipe%29%29"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05UK5T7LPP",
        "type": "message",
        "ts": "1737487491.643749",
        "client_msg_id": "5ffa2813-3574-4cd8-8393-bd3705d42c65",
        "text": "I would hate to start learning scope and encapsulation with Python, honestly. But it's so convenient to write...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87f45e326f3a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-30\/5997119242352_87f45e326f3a692ca55c_72.png",
            "first_name": "Jasmine",
            "real_name": "Jasmine Otto",
            "display_name": "Jasmine Otto",
            "team": "T5TCAFTA9",
            "name": "ottojasmine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mq57c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would hate to start learning scope and encapsulation with Python, honestly. But it's so convenient to write..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1737487533.971499",
        "client_msg_id": "37FECD2A-A506-43D5-B752-4584CFB240C6",
        "text": "Ah thanks. I’ll take a look. Is the “spoiler” that there’s a reason it has to be this way, or is it worth exploring again? \n\nI also thought a custom editor could reduce the amount of jumping around by just artificially inlining code temporarily.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yY7+5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah thanks. I’ll take a look. Is the “spoiler” that there’s a reason it has to be this way, or is it worth exploring again? \n\nI also thought a custom editor could reduce the amount of jumping around by just artificially inlining code temporarily."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05UK5T7LPP",
        "type": "message",
        "ts": "1737487669.478509",
        "client_msg_id": "084eb2b7-94ed-46ab-97f4-235ae3e5c471",
        "text": "That would be the scope and encapsulation, yes. I've been chewing on membrane computation one of the anti-encapsulation substrates; instead of a call graph, think reaction pathways.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87f45e326f3a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-30\/5997119242352_87f45e326f3a692ca55c_72.png",
            "first_name": "Jasmine",
            "real_name": "Jasmine Otto",
            "display_name": "Jasmine Otto",
            "team": "T5TCAFTA9",
            "name": "ottojasmine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fogAH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That would be the scope and encapsulation, yes. I've been chewing on membrane computation one of the anti-encapsulation substrates; instead of a call graph, think reaction pathways."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1737487771.522579",
        "client_msg_id": "4E5724E0-D958-40D0-BCB4-2B8A8BF6B95A",
        "text": "I’ve not heard of membrane computation.\n\nStrangely though I still think forward gotos make a lot of sense.\n\nOr at least one way I think of it is as train tracks.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WHD0z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve not heard of membrane computation.\n\nStrangely though I still think forward gotos make a lot of sense.\n\nOr at least one way I think of it is as train tracks."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05UK5T7LPP",
        "type": "message",
        "ts": "1737488147.576589",
        "client_msg_id": "25b7f38d-728f-4285-b012-39edf2a0878f",
        "text": "I'm really just going off of Isaac's generative poetics from his thesis. I thought he'd written about the 'bag of recombinable operators' as kind of the self-assembling Lego bricks, if the bricks were train tracks in your analogy.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87f45e326f3a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-30\/5997119242352_87f45e326f3a692ca55c_72.png",
            "first_name": "Jasmine",
            "real_name": "Jasmine Otto",
            "display_name": "Jasmine Otto",
            "team": "T5TCAFTA9",
            "name": "ottojasmine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SGnEt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm really just going off of Isaac's generative poetics from his thesis. I thought he'd written about the 'bag of recombinable operators' as kind of the self-assembling Lego bricks, if the bricks were train tracks in your analogy."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05UK5T7LPP",
        "type": "message",
        "ts": "1737488179.025299",
        "client_msg_id": "7cb120d5-7fa9-4d00-a324-97808534dbba",
        "text": "Chapter 4 (Generators in the Wild) is probably closest to where you're going, visual programming abounds\n<https:\/\/escholarship.org\/content\/qt7qh3304v\/qt7qh3304v.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87f45e326f3a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-30\/5997119242352_87f45e326f3a692ca55c_72.png",
            "first_name": "Jasmine",
            "real_name": "Jasmine Otto",
            "display_name": "Jasmine Otto",
            "team": "T5TCAFTA9",
            "name": "ottojasmine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PKRY6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Chapter 4 (Generators in the Wild) is probably closest to where you're going, visual programming abounds\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/escholarship.org\/content\/qt7qh3304v\/qt7qh3304v.pdf"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1737488207.114069",
        "edited": {
            "user": "U088999PF62",
            "ts": "1737488260.000000"
        },
        "client_msg_id": "6F28D369-CD64-4524-A83D-C9F3748D8843",
        "text": "This is all new to me. Interesting. Basically, I’m trying to find new ways of teaching this. Or coming up with new tools to make it easier to visualize paths in languages that force this style?\n\n—\n\nI could probably draw\/mock-up something. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OuC6A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is all new to me. Interesting. Basically, I’m trying to find new ways of teaching this. Or coming up with new tools to make it easier to visualize paths in languages that force this style?\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "—"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI could probably draw\/mock-up something. "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05UK5T7LPP",
        "type": "message",
        "ts": "1737488379.741819",
        "client_msg_id": "497ad0f1-eb0b-4d98-9346-1bbe2f8cbfa5",
        "text": "Ah, you're trying to get at something visual, does this example of code folding do the thing?\n<https:\/\/mastodon.gamedev.place\/@johnaustin\/113845457744971617>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87f45e326f3a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-30\/5997119242352_87f45e326f3a692ca55c_72.png",
            "first_name": "Jasmine",
            "real_name": "Jasmine Otto",
            "display_name": "Jasmine Otto",
            "team": "T5TCAFTA9",
            "name": "ottojasmine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "attachments": [
            {
                "from_url": "https:\/\/mastodon.gamedev.place\/@johnaustin\/113845457744971617",
                "thumb_url": "https:\/\/cdn.masto.host\/mastodongamedevplace\/media_attachments\/files\/113\/845\/457\/532\/253\/913\/small\/0344545aa384484f.png",
                "thumb_width": 640,
                "thumb_height": 602,
                "ts": 1737143825,
                "id": 1,
                "original_url": "https:\/\/mastodon.gamedev.place\/@johnaustin\/113845457744971617",
                "fallback": "Gamedev Mastodon: John Austin (@johnaustin@mastodon.gamedev.place)",
                "text": "Attached: 1 image\n\nLattice now has the ability to collapse simple nodes into a minimized form that snaps onto the parent node. This is shockingly nice! It makes working with complex scripts much more pleasant, because long chains of casts can be hidden out of the way!",
                "title": "John Austin (@johnaustin@mastodon.gamedev.place)",
                "title_link": "https:\/\/mastodon.gamedev.place\/@johnaustin\/113845457744971617",
                "service_name": "Gamedev Mastodon"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WrkoV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, you're trying to get at something visual, does this example of code folding do the thing?\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/mastodon.gamedev.place\/@johnaustin\/113845457744971617"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1737488566.735399",
        "edited": {
            "user": "U088999PF62",
            "ts": "1737488664.000000"
        },
        "client_msg_id": "B1EA2FA3-1FC9-4D97-BE17-BB4B3169FA75",
        "text": "Oh that’s cool. Not exactly only visual. It’s both “what would a textual language look like” and “how could I visualize what I’m doing more easily?” More like, you know how gpu code often unrolls loops? I’d like to be able to do that for code I’m reading. e.g. branches, function calls, struct\/type definitions. As opposed to jumping to a different line or file. I think it’s already somewhat possible in existing editors, but not explored deeply as a default feature.\n\nEDIT: oh when I said I could make a mockup, I meant that to explain what I’m thinking about, I could draw something,",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QuPO7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh that’s cool. Not exactly only visual. It’s both “what would a textual language look like” and “how could I visualize what I’m doing more easily?” More like, you know how gpu code often unrolls loops? I’d like to be able to do that for code I’m reading. e.g. branches, function calls, struct\/type definitions. As opposed to jumping to a different line or file. I think it’s already somewhat possible in existing editors, but not explored deeply as a default feature.\n"
                            },
                            {
                                "type": "text",
                                "text": "\nEDIT: oh when I said I could make a mockup, I meant that to explain what I’m thinking about, I could draw something,"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05UK5T7LPP",
        "type": "message",
        "ts": "1737488681.166869",
        "client_msg_id": "c4cf935a-9b7f-46df-a69d-588cc2f90945",
        "text": "Ye, visualization of compiler internals is juicy",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "87f45e326f3a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-09-30\/5997119242352_87f45e326f3a692ca55c_72.png",
            "first_name": "Jasmine",
            "real_name": "Jasmine Otto",
            "display_name": "Jasmine Otto",
            "team": "T5TCAFTA9",
            "name": "ottojasmine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t69cV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ye, visualization of compiler internals is juicy"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0887QU9G2V",
        "type": "message",
        "ts": "1737493017.224289",
        "edited": {
            "user": "U0887QU9G2V",
            "ts": "1737493655.000000"
        },
        "client_msg_id": "ad3331aa-be0b-43c2-a48a-16979821e730",
        "text": "Hi everyone! I just posted a short article with three thoughts on the \"AI summer\": <https:\/\/federicopereiro.com\/ai-summer\/>\n\nIf anyone has similar (or contrasting) experiences, I'd be glad to hear them!\n\n• UI through AI: the possibility of replacing more parts of the UI with AI\n• LLMs shrinking the area of training with own data\n• Temperature rising\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6b9d24756ac1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-08\/8269664865108_6b9d24756ac1aa304bb9_72.jpg",
            "first_name": "Federico",
            "real_name": "Federico Pereiro",
            "display_name": "Federico Pereiro",
            "team": "T5TCAFTA9",
            "name": "fpereiro",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737493017.224289",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1737564418.327889",
        "reply_users": [
            "U02U0AS3J49",
            "U0887QU9G2V"
        ],
        "replies": [
            {
                "user": "U02U0AS3J49",
                "ts": "1737504989.778129"
            },
            {
                "user": "U0887QU9G2V",
                "ts": "1737564418.327889"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7HN2S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi everyone! I just posted a short article with three thoughts on the \"AI summer\": "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/federicopereiro.com\/ai-summer\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIf anyone has similar (or contrasting) experiences, I'd be glad to hear them!\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "UI through AI: the possibility of replacing more parts of the UI with AI"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "LLMs shrinking the area of training with own data"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Temperature rising"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ]
    },
    {
        "user": "U0887QU9G2V",
        "type": "message",
        "ts": "1737493475.642889",
        "client_msg_id": "7ab3b0cf-6cf7-432b-b2f5-847c8a6b4786",
        "text": "&gt;  So manual steps are very much 1st class citizens\nI think this is the crux of it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6b9d24756ac1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-08\/8269664865108_6b9d24756ac1aa304bb9_72.jpg",
            "first_name": "Federico",
            "real_name": "Federico Pereiro",
            "display_name": "Federico Pereiro",
            "team": "T5TCAFTA9",
            "name": "fpereiro",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737136852.046089",
        "parent_user_id": "UDRF3ALP4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QNG0T",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " So manual steps are very much 1st class citizens"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think this is the crux of it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1737494864.997049",
        "client_msg_id": "f4d91393-10ed-48dc-a9c0-02cf0d585671",
        "text": "• non-programmers learn to sequence steps of a recipe in a flat, numbered manner without using indentation\n• when recipes (programs) get big, non-programmers resort to hot-links or node-and-arrow sketches that show data flow (not control flow), or, ... nothing, in which case they get into trouble (aka \"... add more tabs to the spreadsheet ...\")\n• programmers use scoping and indentation of blocks of text because 1950s hardware could only handle text, and, because textual scoping was the best way to structure text to show that some actions were constrained \n• when programs weren't so large, programmers laid out software in a non-indented manner (assembler, punch cards, BASIC)\n• when programs became big, programmers just did \"more of the same\", wasting brain power on work-arounds like textual 'imports' statements and complicated namespacing tricks to enable them to continue using 1950s text-only notation\n• this approach brought along baggage like \"global variable\" issues caused by visually-open notations like \"{...}\" that visually-closed notations like closed figures - boxes and ellipses - would have prevented, given that programmers had already learned how \"not to colour outside of the lines\" back in kindergarten\n• unfortunately programmers continued to find work-arounds to text-only-based issues instead of simply switching to a more suitable representation\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NJ9XU",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "non-programmers learn to sequence steps of a recipe in a flat, numbered manner without using indentation"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "when recipes (programs) get big, non-programmers resort to hot-links or node-and-arrow sketches that show data flow (not control flow), or, ... nothing, in which case they get into trouble (aka \"... add more tabs to the spreadsheet ...\")"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "programmers use scoping and indentation of blocks of text because 1950s hardware could only handle text, and, because textual scoping was the best way to structure text to show that some actions were constrained "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "when programs weren't so large, programmers laid out software in a non-indented manner (assembler, punch cards, BASIC)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "when programs became big, programmers just did \"more of the same\", wasting brain power on work-arounds like textual 'imports' statements and complicated namespacing tricks to enable them to continue using 1950s text-only notation"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "this approach brought along baggage like \"global variable\" issues caused by visually-open notations like \"{...}\" that visually-closed notations like closed figures - boxes and ellipses - would have prevented, given that programmers had already learned how \"not to colour outside of the lines\" back in kindergarten"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "unfortunately programmers continued to find work-arounds to text-only-based issues instead of simply switching to a more suitable representation"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": []
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "U05UK5T7LPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1737495596.101059",
        "client_msg_id": "41E6BCEE-A08F-40BE-A05B-A599EA59349E",
        "text": "Super interesting. I wonder what the data flow recipe arrows look like though. \n\nI’d be curious to experiment with the other representations more. Clearly we don’t have to use just text.\nHotlinks make sense.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g6ztA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Super interesting. I wonder what the data flow recipe arrows look like though. \n\nI’d be curious to experiment with the other representations more. Clearly we don’t have to use just text.\nHotlinks make sense."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1737496933.786719",
        "client_msg_id": "60279a07-3990-4662-9cbf-4208f5561e86",
        "text": "data flow notations:\n• what I call \"0D\" (node and wire stuff, scroll down the README to the pictures): <https:\/\/github.com\/guitarvydas\/0D>\n• FBP: <https:\/\/jpaulm.github.io\/fbp\/>\ncontrol flow notations:\n• StateCharts: <https:\/\/youtu.be\/-6VzMNoHhtU>\n• <https:\/\/drakon-editor.sourceforge.net> (click on \"learn more...\" then the 3 tutorial PDFs)\n[more will likely come to me in a few hours - keep prodding me if interested]",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "attachments": [
            {
                "from_url": "https:\/\/jpaulm.github.io\/fbp\/",
                "id": 1,
                "original_url": "https:\/\/jpaulm.github.io\/fbp\/",
                "fallback": "Official website for flow-based programming",
                "text": "Official website for flow-based programming",
                "service_name": "jpaulm.github.io"
            },
            {
                "from_url": "https:\/\/youtu.be\/-6VzMNoHhtU",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/-6VzMNoHhtU\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/-6VzMNoHhtU?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen title=\"StateCharts Papers We Love Toronto\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "id": 2,
                "original_url": "https:\/\/youtu.be\/-6VzMNoHhtU",
                "fallback": "YouTube Video: StateCharts Papers We Love Toronto",
                "title": "StateCharts Papers We Love Toronto",
                "title_link": "https:\/\/youtu.be\/-6VzMNoHhtU",
                "author_name": "Programming Simplicity",
                "author_link": "https:\/\/www.youtube.com\/@programmingsimplicity2980",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wW8oS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "data flow notations:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "what I call \"0D\" (node and wire stuff, scroll down the README to the pictures): "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/guitarvydas\/0D"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "FBP: "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/jpaulm.github.io\/fbp\/"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "control flow notations:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "StateCharts: "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/youtu.be\/-6VzMNoHhtU"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/drakon-editor.sourceforge.net"
                                    },
                                    {
                                        "type": "text",
                                        "text": " (click on \"learn more...\" then the 3 tutorial PDFs)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n[more will likely come to me in a few hours - keep prodding me if interested]"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1737496989.954439",
        "client_msg_id": "9751FD06-258E-4848-A46B-601B252E00DE",
        "text": "Thanks a lot for the references, and thanks for your patience. I imagine I appear as though I’m just walking along already-explored territory.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z4toa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks a lot for the references, and thanks for your patience. I imagine I appear as though I’m just walking along already-explored territory."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1737503898.378909",
        "client_msg_id": "304f3e2c-5925-441e-97d0-764f1c36e4ff",
        "text": "I played with Camunda a bit while working for the Singapore centre for computational law. My impressions were that a) it is fundamentally encoding a process, not the rules to which the process must adhere, or from which the process is derived, so it didn't meet the brief, and b) it was designed for a very flat data structure, which seldom matches how laws are written. You can get it to handle anything, but you lose the benefits of the visual language and interface, which can really only handle tables and the like. There are people out there in the computational law space who swear decision tables are all you need. I'm firmly not in that camp. It was cool, but awkward for my use case.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737136852.046089",
        "parent_user_id": "UDRF3ALP4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wli+l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I played with Camunda a bit while working for the Singapore centre for computational law. My impressions were that a) it is fundamentally encoding a process, not the rules to which the process must adhere, or from which the process is derived, so it didn't meet the brief, and b) it was designed for a very flat data structure, which seldom matches how laws are written. You can get it to handle anything, but you lose the benefits of the visual language and interface, which can really only handle tables and the like. There are people out there in the computational law space who swear decision tables are all you need. I'm firmly not in that camp. It was cool, but awkward for my use case."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1737504839.092559",
        "client_msg_id": "6bd1f14d-8cb5-4fde-ae24-3df7a0f058ac",
        "text": "I don't know if anyone has said it straightforwardly... So I will share my simplistic answer. before whitespace mattered, it didn't. Brackets did. Brackets were hard to read the nesting level of, so people indented the contents. At which point the information conveyed by the indentation made the brackets visually redundant. But it's useful for parsing to know precisely if a new sub-scope is intended, so they made a new, deeper indentation level equivalent to an open bracket, and returning to a previous indentation level equivalent to as many closing brackets as required. As a learner, once I had the idea in my head that a deeper indentation level is a subscope, and the parser is counting spaces to see where it ends, my issues with whitespace went away. If I was trying to teach it, I would show the history. Good luck, and apologies if all that is obvious.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ko2Q4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't know if anyone has said it straightforwardly... So I will share my simplistic answer. before whitespace mattered, it didn't. Brackets did. Brackets were hard to read the nesting level of, so people indented the contents. At which point the information conveyed by the indentation made the brackets visually redundant. But it's useful for parsing to know precisely if a new sub-scope is intended, so they made a new, deeper indentation level equivalent to an open bracket, and returning to a previous indentation level equivalent to as many closing brackets as required. As a learner, once I had the idea in my head that a deeper indentation level is a subscope, and the parser is counting spaces to see where it ends, my issues with whitespace went away. If I was trying to teach it, I would show the history. Good luck, and apologies if all that is obvious."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1737504989.778129",
        "client_msg_id": "afa7bfdf-09c7-4cf0-9b3c-bf952844a418",
        "text": "The weirdest part is not knowing whether a marginal improvement on what the current models can do alone will be rendered obsolete by the next model, so people don't know where to invest their time and effort.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737493017.224289",
        "parent_user_id": "U0887QU9G2V",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U4TqK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The weirdest part is not knowing whether a marginal improvement on what the current models can do alone will be rendered obsolete by the next model, so people don't know where to invest their time and effort."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1737505035.540959",
        "edited": {
            "user": "U088999PF62",
            "ts": "1737505052.000000"
        },
        "client_msg_id": "F9979EA1-769C-4717-AD81-E0B619E1D087",
        "text": "That all makes sense to me. I think part of this is teaching the concept of branching in the first place, in addition to the history.\n\nAlso, subjectively, I think it’s hard to read where a scope ends without an end delimiter. Easy to miss one. That’s the part I think something like Ruby does better.\n\nIn terms of inventing a new visualizer\/extension to a simple IDE, I wonder if it’s worth playing with it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AMXon",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That all makes sense to me. I think part of this is teaching the concept of branching in the first place"
                            },
                            {
                                "type": "text",
                                "text": ", in addition to the history."
                            },
                            {
                                "type": "text",
                                "text": "\n\nAlso, subjectively, I think it’s hard to read where a scope ends without an end delimiter. Easy to miss one. That’s the part I think something like Ruby does better.\n\nIn terms of inventing a new visualizer\/extension to a simple IDE, I wonder if it’s worth playing with it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1737505114.012369",
        "client_msg_id": "a26b0eb6-dd12-44ac-b1f5-90a209f6272a",
        "text": "Always. Play is what we are for. :+1::skin-tone-2:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O3xZM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Always. Play is what we are for. "
                            },
                            {
                                "type": "emoji",
                                "name": "+1",
                                "unicode": "1f44d-1f3fb",
                                "skin_tone": 2
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1737505531.896639",
        "client_msg_id": "8B970F62-A53A-402C-936C-513A13EB0793",
        "text": "It’d be best if it led to something, but yes.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DtYKR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It’d be best if it led to something, but yes."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1737506136.012449",
        "client_msg_id": "fdc2f38e-1b3d-4e47-82f8-62829adad3c5",
        "text": "I share the desire to make a difference. I have always been most effective at that when I was playing. I think because the effort is sustainable. But if you want something to come of it, just share your prototypes here.  You will think of things that are new, or validate other ideas. Either way we win.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ypl1u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I share the desire to make a difference. I have always been most effective at that when I was playing. I think because the effort is sustainable. But if you want something to come of it, just share your prototypes here.  You will think of things that are new, or validate other ideas. Either way we win."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U05UK5T7LPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1737506185.042469",
        "client_msg_id": "6AF9DC93-F723-46A6-AD76-D3BF55C74470",
        "text": "That’s true. To be honest, I’d really enjoy an opportunity to work on a team towards a project or paper. It means a lot to get ideas out there.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1737482589.068679",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "01t36",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That’s true. To be honest, I’d really enjoy an opportunity to work on a team towards a project or paper. It means a lot to get ideas out there."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]