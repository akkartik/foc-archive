[
    {
        "user": "U06BUK2M2RH",
        "type": "message",
        "ts": "1719434015.530049",
        "client_msg_id": "4D295637-6840-4B72-ADEC-C72F5B32BB18",
        "text": "Hi! Self-hosting is an awesome goal, it’s also something I’m hoping to get too. Where does self-hosting sit on your timeline of development? Is it a short term goal or desired eventuality? Curious how you think about it. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9eac202d45a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-28\/6396121022742_9eac202d45a2827e9fa6_72.jpg",
            "first_name": "Dennis",
            "real_name": "Dennis Hansen",
            "display_name": "Dennis Hansen",
            "team": "T5TCAFTA9",
            "name": "dhansen909",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719375881.288859",
        "parent_user_id": "U079PRQNZQD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y\/y9P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi! Self-hosting is an awesome goal, it’s also something I’m hoping to get too. Where does self-hosting sit on your timeline of development? Is it a short term goal or desired eventuality? Curious how you think about it. "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079PRQNZQD",
        "type": "message",
        "ts": "1719434173.181249",
        "client_msg_id": "6F63DDFD-2C3D-40DD-9B71-1C0C4C6A7809",
        "text": "Self-hosting is not a gating item for what I want to do, so it seems to always takes a back seat, while I explore language design and tooling. As you know, it’s a chicken and egg problem.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f8e9e1123d49",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-25\/7345443578225_f8e9e1123d49f08bf7e8_72.png",
            "first_name": "Jim",
            "real_name": "Jim Kring",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jim.kring",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719375881.288859",
        "parent_user_id": "U079PRQNZQD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QMf\/c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Self-hosting is not a gating item for what I want to do, so it seems to always takes a back seat, while I explore language design and tooling. As you know, it’s a chicken and egg problem."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079PRQNZQD",
        "type": "message",
        "ts": "1719434262.236329",
        "client_msg_id": "0340FF54-1869-41C1-A94C-9DB5ECF01524",
        "text": "I’ve taken a couple different paths:\nA) create a G interpreter in G (LabVIEW)\nB) create a G to Rust (or other text language) transpiler",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f8e9e1123d49",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-25\/7345443578225_f8e9e1123d49f08bf7e8_72.png",
            "first_name": "Jim",
            "real_name": "Jim Kring",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jim.kring",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719375881.288859",
        "parent_user_id": "U079PRQNZQD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p6vh5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve taken a couple different paths:\nA) create a G interpreter in G (LabVIEW)\nB) create a G to Rust (or other text language) transpiler"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "open_mouth",
                "users": [
                    "U079M43CQ31"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U079PRQNZQD",
        "type": "message",
        "ts": "1719434359.531109",
        "client_msg_id": "3C834EFD-711C-4868-B6A4-A45B7288B873",
        "text": "I have a pretty good JSON schema for the AST which makes working on runtime and compiler possible in any language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f8e9e1123d49",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-25\/7345443578225_f8e9e1123d49f08bf7e8_72.png",
            "first_name": "Jim",
            "real_name": "Jim Kring",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jim.kring",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719375881.288859",
        "parent_user_id": "U079PRQNZQD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b8db6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a pretty good JSON schema for the AST which makes working on runtime and compiler possible in any language."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079PRQNZQD",
        "type": "message",
        "ts": "1719434488.170099",
        "edited": {
            "user": "U079PRQNZQD",
            "ts": "1719434534.000000"
        },
        "client_msg_id": "C4CB9727-E7C7-482C-9129-3F43343B956F",
        "text": "I’m exploring svelte for a front end and even possibly using svelte as a compilation target (which then uses vite to compile to JS) since its reactivity and stores could serve as the basis for the dataflow execution. This lends to the possibility of creating a code editor in svelte for creating svelte components\/apps, which could be the code editor.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f8e9e1123d49",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-25\/7345443578225_f8e9e1123d49f08bf7e8_72.png",
            "first_name": "Jim",
            "real_name": "Jim Kring",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jim.kring",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719375881.288859",
        "parent_user_id": "U079PRQNZQD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iNwqw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m exploring svelte for a front end and even possibly using svelte as a compilation target (which then uses vite to compile to JS) since its reactivity and stores could serve as the basis for the dataflow execution. This lends to the possibility of creating a code editor in svelte for creating svelte components\/apps, which could be the code editor."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079PRQNZQD",
        "type": "message",
        "ts": "1719434645.701859",
        "client_msg_id": "7300D310-5889-41CE-9113-53CA32FF09F4",
        "text": "Back to the discussion about paths to self-hosting:\nC) I built a python editor and runtime using trio for asynchronous task execution. I’ve sort of paused python for a runtime, until nogil (free, threaded python) mature in the next couple releases",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f8e9e1123d49",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-25\/7345443578225_f8e9e1123d49f08bf7e8_72.png",
            "first_name": "Jim",
            "real_name": "Jim Kring",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jim.kring",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719375881.288859",
        "parent_user_id": "U079PRQNZQD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NYZah",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Back to the discussion about paths to self-hosting:\nC) I built a python editor and runtime using trio for asynchronous task execution. I’ve sort of paused python for a runtime, until nogil (free, threaded python) mature in the next couple releases"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079PRQNZQD",
        "type": "message",
        "ts": "1719434841.436269",
        "edited": {
            "user": "U079PRQNZQD",
            "ts": "1719434989.000000"
        },
        "client_msg_id": "1B056E95-E84F-48F0-BBDE-F4B41DCA7D95",
        "text": "it might be fun to try to self host using a more dynamic\/interpreted runtime. Compilation of this visual language, which is inherently parallel, gets a bit tricky in terms of clumping and scheduling synchrolinear tasks (that’s a term which I believe I coined, which means the order of execution of nodes in a given subgraph does not change the timing of the subgraph as a whole) that get executed in an asynchronous runtime. I really want this language to include the concept of what type of compute fabric and asynchronous capabilities a given diagram supports, since this has a tremendous impact on compilation and execution strategy.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f8e9e1123d49",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-25\/7345443578225_f8e9e1123d49f08bf7e8_72.png",
            "first_name": "Jim",
            "real_name": "Jim Kring",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jim.kring",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719375881.288859",
        "parent_user_id": "U079PRQNZQD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cer\/0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it might be fun to try to self host using a more dynamic\/interpreted runtime. Compilation of this visual language, which is inherently parallel, gets a bit tricky in terms of clumping and scheduling synchrolinear tasks (that’s a term which I believe I coined, which means the order of execution of nodes in a given subgraph does not change the timing of the subgraph as a whole) that get executed in an asynchronous runtime. I really want this language to include the concept of what type of compute fabric and asynchronous capabilities a given diagram supports, since this has a tremendous impact on compilation and execution strategy."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079PRQNZQD",
        "type": "message",
        "ts": "1719435049.160779",
        "client_msg_id": "80876046-E989-407F-8C26-A41BFAB76F1C",
        "text": "I worked on this privately as a hobby project during the pandemic. Now I’m gonna start opening it up and sharing more publicly.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f8e9e1123d49",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-25\/7345443578225_f8e9e1123d49f08bf7e8_72.png",
            "first_name": "Jim",
            "real_name": "Jim Kring",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jim.kring",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719375881.288859",
        "parent_user_id": "U079PRQNZQD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FD8jd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I worked on this privately as a hobby project during the pandemic. Now I’m gonna start opening it up and sharing more publicly."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079PRQNZQD",
        "type": "message",
        "ts": "1719435076.213929",
        "client_msg_id": "5ABD1449-48DA-46A3-AC39-5F4351CC830B",
        "text": "I’ve bounced a lot of these ideas off of the creator of LabVIEW and others who used to work on the compiler team, and it seems like I’m on the right track",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f8e9e1123d49",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-25\/7345443578225_f8e9e1123d49f08bf7e8_72.png",
            "first_name": "Jim",
            "real_name": "Jim Kring",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jim.kring",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719375881.288859",
        "parent_user_id": "U079PRQNZQD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P87\/n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve bounced a lot of these ideas off of the creator of LabVIEW and others who used to work on the compiler team, and it seems like I’m on the right track"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079PRQNZQD",
        "type": "message",
        "ts": "1719435406.665879",
        "edited": {
            "user": "U079PRQNZQD",
            "ts": "1719435434.000000"
        },
        "client_msg_id": "3D19680A-EC44-4569-8141-08BBEC4B6B49",
        "text": "The other language rabbit-hole I got sidetracked on is whether to include passing AST (vs data) as a first class feature of the language (like elixir allows). There are some extremely powerful concepts that come out of the idea that AST (code) can travel down the wire. However, I do like how Zig simply separates the two using comptime, which means that the final executable output does not need to support passing AST, since it is only at compile time that this occurs.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f8e9e1123d49",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-25\/7345443578225_f8e9e1123d49f08bf7e8_72.png",
            "first_name": "Jim",
            "real_name": "Jim Kring",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jim.kring",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719375881.288859",
        "parent_user_id": "U079PRQNZQD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qd0sN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The other language rabbit-hole I got sidetracked on is whether to include passing AST (vs data) as a first class feature of the language (like elixir allows). There are some extremely powerful concepts that come out of the idea that AST (code) can travel down the wire. However, I do like how Zig simply separates the two using comptime, which means that the final executable output does not need to support passing AST, since it is only at compile time that this occurs."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079PRQNZQD",
        "type": "message",
        "ts": "1719435507.536349",
        "edited": {
            "user": "U079PRQNZQD",
            "ts": "1719435521.000000"
        },
        "client_msg_id": "83BEBA65-EE10-4CD0-B21B-D48478E0EE13",
        "text": "Again, I think that using Svelte to start working on the visual aspects of the language (along with a JSON AST) will allow for rapid iteration of ideas and working concepts.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f8e9e1123d49",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-25\/7345443578225_f8e9e1123d49f08bf7e8_72.png",
            "first_name": "Jim",
            "real_name": "Jim Kring",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jim.kring",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719375881.288859",
        "parent_user_id": "U079PRQNZQD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gMRHW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Again, I think that using Svelte to start working on the visual aspects of the language (along with a JSON AST) will allow for rapid iteration of ideas and working concepts."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06BUK2M2RH",
        "type": "message",
        "ts": "1719436217.364579",
        "client_msg_id": "CAFA0010-8455-475A-9039-F1F6A95D81A6",
        "text": "Really cool stuff. Seems like you’ve really thought about this a lot! It’s hard to make it a priority though it’s a sweet goal given the dogfooding benefits and perhaps a proof point of universality. I like the idea of targeting svelte as a starting point- basically close the loop leveraging the DOM\/browser tech as a platform without trying to reinvent rendering at an MVP. And the point you made about that path sort of suggesting having the visual language support code I think is an interesting one. I’ve been thinking that the simplest version of a self-hosted visual language is effectively a code editor with access to its own source. And to get to a more visual code, imaging your code now lives and be modified in a canvas. Then imagine breaking apart code and leveraging more of your own languages data\/control semantics. Perhaps in this way we can do things incrementally. Could make for an interesting experiment at worst.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9eac202d45a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-28\/6396121022742_9eac202d45a2827e9fa6_72.jpg",
            "first_name": "Dennis",
            "real_name": "Dennis Hansen",
            "display_name": "Dennis Hansen",
            "team": "T5TCAFTA9",
            "name": "dhansen909",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719375881.288859",
        "parent_user_id": "U079PRQNZQD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "utPlO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Really cool stuff. Seems like "
                            },
                            {
                                "type": "text",
                                "text": "you’ve"
                            },
                            {
                                "type": "text",
                                "text": " really thought about this a lot! It’s hard to make it a priority though "
                            },
                            {
                                "type": "text",
                                "text": "it’s"
                            },
                            {
                                "type": "text",
                                "text": " a sweet goal given the dogfooding benefits and perhaps a proof point of universality. I like the idea of targeting svelte as a starting point- basically close the loop leveraging the DOM\/browser tech as a platform without trying to reinvent rendering at an MVP. And the point you made about that path sort of suggesting having the visual language support code I think is an interesting one. "
                            },
                            {
                                "type": "text",
                                "text": "I’ve"
                            },
                            {
                                "type": "text",
                                "text": " been thinking that the simplest version of a self-hosted visual language is effectively a code editor with access to its own source. And to get to a more visual code, imaging your code now lives and be modified in a canvas. Then imagine breaking apart code and leveraging more of your own languages data\/control semantics. Perhaps in this way we can do things incrementally. Could make for an interesting experiment at worst."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079PRQNZQD",
        "type": "message",
        "ts": "1719436801.855509",
        "client_msg_id": "CED6DAEA-13F8-4AD1-BD9B-A65CB2BB2AC6",
        "text": "<@U06BUK2M2RH> this approach definitely speeds up the iteration cycle, and it’s very obvious when the code is broken :rolling_on_the_floor_laughing: somewhat analogous to “working on the car while it’s driving down the road”.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f8e9e1123d49",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-25\/7345443578225_f8e9e1123d49f08bf7e8_72.png",
            "first_name": "Jim",
            "real_name": "Jim Kring",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jim.kring",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719375881.288859",
        "parent_user_id": "U079PRQNZQD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cWarx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U06BUK2M2RH"
                            },
                            {
                                "type": "text",
                                "text": " this approach definitely speeds up the iteration cycle, and it’s very obvious when the code is broken "
                            },
                            {
                                "type": "emoji",
                                "name": "rolling_on_the_floor_laughing",
                                "unicode": "1f923"
                            },
                            {
                                "type": "text",
                                "text": " somewhat analogous to “working on the car while it’s driving down the road”."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079PRQNZQD",
        "type": "message",
        "ts": "1719436900.947559",
        "client_msg_id": "EC59CECB-02B2-47E3-A9E1-0AFC6ED002F2",
        "text": "having code that can edit itself, will benefit a lot from having a mechanism to take a snapshot of the entire code base\/system, so one can easily roll back",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f8e9e1123d49",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-25\/7345443578225_f8e9e1123d49f08bf7e8_72.png",
            "first_name": "Jim",
            "real_name": "Jim Kring",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jim.kring",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719375881.288859",
        "parent_user_id": "U079PRQNZQD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TUUjF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "having code that can edit itself, will benefit a lot from having a mechanism to take a snapshot of the entire code base\/system, so one can easily roll back"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U06BUK2M2RH",
                    "U06131CATV3"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U06BUK2M2RH",
        "type": "message",
        "ts": "1719436948.322059",
        "client_msg_id": "EA6F6DAF-3211-4679-A223-A3C771F4379B",
        "text": "Exactly haha. And maybe gets us at least driving down the road as soon as we can. Going to give it some more thought in context of my thing as well as the ideas you’ve presented here. A lot of good stuff, appreciate the insights",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9eac202d45a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-28\/6396121022742_9eac202d45a2827e9fa6_72.jpg",
            "first_name": "Dennis",
            "real_name": "Dennis Hansen",
            "display_name": "Dennis Hansen",
            "team": "T5TCAFTA9",
            "name": "dhansen909",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719375881.288859",
        "parent_user_id": "U079PRQNZQD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KAjVB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Exactly haha. And maybe gets us at least driving down the road as soon as we can. Going to give it some more thought in context of my thing as well as the ideas "
                            },
                            {
                                "type": "text",
                                "text": "you’ve"
                            },
                            {
                                "type": "text",
                                "text": " presented here. A lot of good stuff, appreciate the insights"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079PRQNZQD",
        "type": "message",
        "ts": "1719437311.961709",
        "client_msg_id": "79C0338E-3A7B-4A2D-8934-CC85E031B667",
        "text": "Yeah, these conversations will make for a fun road trip! ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f8e9e1123d49",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-25\/7345443578225_f8e9e1123d49f08bf7e8_72.png",
            "first_name": "Jim",
            "real_name": "Jim Kring",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jim.kring",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719375881.288859",
        "parent_user_id": "U079PRQNZQD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DabCf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, these conversations will make for a fun road trip! "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U06BUK2M2RH"
                ],
                "count": 1
            },
            {
                "name": "joy",
                "users": [
                    "U06BUK2M2RH",
                    "U06131CATV3"
                ],
                "count": 2
            }
        ]
    }
]