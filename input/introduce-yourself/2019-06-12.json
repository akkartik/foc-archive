[
    {
        "user": "UEGFXUK3M",
        "type": "message",
        "ts": "1560350850.026900",
        "client_msg_id": "e8d42f23-b859-4e7c-bd60-ffcb5b8736af",
        "text": "So fascinating <@UC6997THT>, thanks for sharing",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bbd74d10a2d2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1108683470016_bbd74d10a2d2a0dbb156_72.jpg",
            "first_name": "Jack",
            "real_name": "Jack",
            "display_name": "jarm",
            "team": "T5TCAFTA9",
            "name": "jack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559860382.014900",
        "parent_user_id": "UKASUGYL8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K7T0p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So fascinating "
                            },
                            {
                                "type": "user",
                                "user_id": "UC6997THT"
                            },
                            {
                                "type": "text",
                                "text": ", thanks for sharing"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK9SUT9HU",
        "type": "message",
        "ts": "1560354373.027100",
        "client_msg_id": "1e934868-01b0-4443-925f-bd9bd9de1e09",
        "text": "<@UKFSDUCH2> yes, I will!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "99852c8ee086",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/642543262002_99852c8ee0867350e8f1_72.png",
            "first_name": "Harald",
            "real_name": "Harald Kirschner",
            "display_name": "digitarald",
            "team": "T5TCAFTA9",
            "name": "slack1924",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559590984.009900",
        "parent_user_id": "UK9SUT9HU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tAks",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UKFSDUCH2"
                            },
                            {
                                "type": "text",
                                "text": " yes, I will!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1560361515.027300",
        "client_msg_id": "920d053d-a43f-400c-8f33-64342eb14222",
        "text": "Are you referring to this quote from Learnable Programming?\n\n&gt; In many styles of programming today, when an application launches, it creates a large set of interconnected stateful objects. To see the effect of a code change, the application must be \"relaunched\" -- that is, its entire world is destroyed, and rebuilt again from scratch. How can we \"create by reacting\", continuously changing the code and seeing continuous effects in the flow and data, when there is no continuity between the application's state before and after the change?\n\nIf so, in my experience the potential upside of a programming language designed from the ground up to incorporate this sort of thing is not worth sacrificing the enormous amount of investment and interest in languages like Python and JS.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559761728.006700",
        "parent_user_id": "UJBC0NLDN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ldr+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you referring to this quote from Learnable Programming?\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In many styles of programming today, when an application launches, it creates a large set of interconnected stateful objects. To see the effect of a code change, the application must be \"relaunched\" -- that is, its entire world is destroyed, and rebuilt again from scratch. How can we \"create by reacting\", continuously changing the code and seeing continuous effects in the flow and data, when there is no continuity between the application's state before and after the change?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nIf so, in my experience the potential upside of a programming language designed from the ground up to incorporate this sort of thing is not worth sacrificing the enormous amount of investment and interest in languages like Python and JS."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1560361555.027500",
        "client_msg_id": "766b1efe-ce8e-4b16-b6b7-fe4dbdc48d2e",
        "text": "Basically, it is possible to demonstrate the effect of changes by just saving the full execution, for programs as complicated as a beginner would be writing",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559761728.006700",
        "parent_user_id": "UJBC0NLDN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EU=\/F",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Basically, it is possible to demonstrate the effect of changes by just saving the full execution, for programs as complicated as a beginner would be writing"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGLSY9X3J",
        "type": "message",
        "ts": "1560367256.027700",
        "client_msg_id": "7f1919bb-5059-4dad-b5c6-3fb512f35cb5",
        "text": "yup, you’re quoting the right part from Learnable Programming",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g03ebdf13bbe",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e03ebdf13bbeacace66454bea388b927.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Srini Kadamati",
            "display_name": "srini",
            "team": "T5TCAFTA9",
            "name": "srini",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559761728.006700",
        "parent_user_id": "UJBC0NLDN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G3KTl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yup, you’re quoting the right part from Learnable Programming"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGLSY9X3J",
        "type": "message",
        "ts": "1560367321.027900",
        "client_msg_id": "69624a80-f67d-48f5-ac87-6ca70822ae4f",
        "text": "as someone who works at an edtech startup that teaches Python to lots of people, I empathize with the need to teach existing languages better but I feel like it’s simply not enough. At what point is something with a lot of cruft just need to be thrown out and reinvented, instead of just building on top of it \/ adapting it here and there?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g03ebdf13bbe",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e03ebdf13bbeacace66454bea388b927.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Srini Kadamati",
            "display_name": "srini",
            "team": "T5TCAFTA9",
            "name": "srini",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559761728.006700",
        "parent_user_id": "UJBC0NLDN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "51Lco",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "as someone who works at an edtech startup that teaches Python to lots of people, I empathize with the need to teach existing languages better but I feel like it’s simply not enough. At what point is something with a lot of cruft just need to be thrown out and reinvented, instead of just building on top of it \/ adapting it here and there?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGLSY9X3J",
        "type": "message",
        "ts": "1560367401.028100",
        "client_msg_id": "aae17d8f-30ef-4907-be25-f000deaab5bb",
        "text": "the other thing that retrofitting Python &amp; JS with better execution visualization techniques won’t get us is the adoption of thinking and working this way for everyone. I’ve worked on complex Python code bases and I want this type of visualization and debugging for my “advanced” code as well. So I wonder if just building tooling for teaching Python for beginners is selling ourselves short?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g03ebdf13bbe",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e03ebdf13bbeacace66454bea388b927.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Srini Kadamati",
            "display_name": "srini",
            "team": "T5TCAFTA9",
            "name": "srini",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559761728.006700",
        "parent_user_id": "UJBC0NLDN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/ka",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the other thing that retrofitting Python & JS with better execution visualization techniques won’t get us is the adoption of thinking and working this way for everyone. I’ve worked on complex Python code bases and I want this type of visualization and debugging for my “advanced” code as well. So I wonder if just building tooling for teaching Python for beginners is selling ourselves short?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1560367572.028300",
        "client_msg_id": "68fa2998-a1af-49f0-8d1c-6cb82686e444",
        "text": "Just sticking my nose in here to say I'm building a stack from the ground up (i.e. x86 machine code) to support sandboxing and time travel debugging.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559761728.006700",
        "parent_user_id": "UJBC0NLDN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MHn6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just sticking my nose in here to say I'm building a stack from the ground up (i.e. x86 machine code) to support sandboxing and time travel debugging."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1560367672.028500",
        "client_msg_id": "66332e6b-d041-4345-aaea-b31b1ed09b1f",
        "text": "It'll eventually have new languages that look superficially like existing ones. But they'll necessarily be incompatible in some ways.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559761728.006700",
        "parent_user_id": "UJBC0NLDN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pVrd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It'll eventually have new languages that look superficially like existing ones. But they'll necessarily be incompatible in some ways."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGLSY9X3J",
        "type": "message",
        "ts": "1560367739.028700",
        "client_msg_id": "ffb8cc61-c016-4a79-b95d-ea56a6b1dd6b",
        "text": "I’m of the camp that we shouldn’t even try to support compatibility with existing languages :stuck_out_tongue: but that’s perhaps extreme",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g03ebdf13bbe",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e03ebdf13bbeacace66454bea388b927.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Srini Kadamati",
            "display_name": "srini",
            "team": "T5TCAFTA9",
            "name": "srini",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559761728.006700",
        "parent_user_id": "UJBC0NLDN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gU6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m of the camp that we shouldn’t even try to support compatibility with existing languages "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": " but that’s perhaps extreme"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGLSY9X3J",
        "type": "message",
        "ts": "1560367754.028900",
        "client_msg_id": "cc84a57c-9daf-4cfc-9e9b-753eccc8ea2e",
        "text": "super cool though <@UCUSW7WVD> where’s the best place to read more about your work? :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g03ebdf13bbe",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e03ebdf13bbeacace66454bea388b927.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Srini Kadamati",
            "display_name": "srini",
            "team": "T5TCAFTA9",
            "name": "srini",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559761728.006700",
        "parent_user_id": "UJBC0NLDN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w9=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "super cool though "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " where’s the best place to read more about your work? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1560368317.029200",
        "client_msg_id": "c758579a-9168-46ba-89ac-feeecb660c83",
        "text": "It's a bit scattered. The top level of <https:\/\/github.com\/akkartik\/mu> is a fairly fleshed out prototype with sandboxes but without HLLs, that I used to teach programming for a couple of years.\n\n<https:\/\/github.com\/akkartik\/mu\/blob\/master\/subx\/Readme.md> is the current prototype, still very low level. But I'm using a poor man's framework for time travel debugging as I build it. That's described up top.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559761728.006700",
        "parent_user_id": "UJBC0NLDN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=ng",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's a bit scattered. The top level of "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/akkartik\/mu"
                            },
                            {
                                "type": "text",
                                "text": " is a fairly fleshed out prototype with sandboxes but without HLLs, that I used to teach programming for a couple of years.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/akkartik\/mu\/blob\/master\/subx\/Readme.md"
                            },
                            {
                                "type": "text",
                                "text": " is the current prototype, still very low level. But I'm using a poor man's framework for time travel debugging as I build it. That's described up top."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1560369707.029400",
        "client_msg_id": "ac2ba88c-7343-4f07-a683-0b92277deb0e",
        "text": "<@UGLSY9X3J> Yes, it is selling short for sure, but it is also deliverable... and in the end \"actually existing\" is the most valuable attribute of all!\n\nIt's very seductive to dream of a completely clean beginning - \"We'll start again! Do it right this time!\" - but in the vast majority of cases this is undervaluing the status quo and underestimating how messy the new solution will end up.\n\nBasically I am currently not convinced of what BV says in that quote. I think you can implement every example from Learnable Programming in current languages with better tools.\n\nAfter this - yes - there will be more issues, and some of these might be show stoppers that require huge changes to the language to achieve, but I think these choices will be easier to make when you actually hit a road block.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559761728.006700",
        "parent_user_id": "UJBC0NLDN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zHIl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGLSY9X3J"
                            },
                            {
                                "type": "text",
                                "text": " Yes, it is selling short for sure, but it is also deliverable... and in the end \"actually existing\" is the most valuable attribute of all!\n\nIt's very seductive to dream of a completely clean beginning - \"We'll start again! Do it right this time!\" - but in the vast majority of cases this is undervaluing the status quo and underestimating how messy the new solution will end up.\n\nBasically I am currently not convinced of what BV says in that quote. I think you can implement every example from Learnable Programming in current languages with better tools.\n\nAfter this - yes - there will be more issues, and some of these might be show stoppers that require huge changes to the language to achieve, but I think these choices will be easier to make when you actually hit a road block."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGLSY9X3J",
        "type": "message",
        "ts": "1560392156.029600",
        "client_msg_id": "1501fb76-6726-4bf5-93df-ba9124c8ca18",
        "text": "interestingly, I actually have the opposite opinion :slightly_smiling_face: <@UDQBTJ211> the barrier to fixing what already exists actually feels really high to me. This something Jon Blow &amp; Alan Kay talk about, as well as others, and I tend to agree. To elaborate, any new innovation or idea has to work “at scale” relatively quickly. Meaning, learnable programming type visualization and iteration may be doable for basic examples (like the ones BV uses), but supporting that type of understanding and iteration would be almost impossible for the actual system that Python code would live in. At work, our Python code runs as part of the django framework (so features would have to work there), some jobs run async in celery, then they talk to different data sources like Postgres, then all of this spaghetti mess lives in containers, which exist in pods in kubernetes, and we have API’s on top of kubernetes to manage it.\n\nGetting Learnable Programming to work across our backend project would be a massive undertaking, especially if we treated all of the existing code as “dead” code that couldn’t be changed \/ rethought to better suit the features we want.\n\nOn the flip side, looking at the stories of Ruby and Python give us hope that greatness can come by rebuilding from scratch instead of trying to adding good type inference to Java and simplifying the Java syntax by adding pre-processors!\n\nBy creating something new from scratch, you have the opportunity to focus on niche end-users who were underserved by existing solutions. This is how startups (as well as new PL’s like python and ruby) actually succeed, b\/c small niche efforts can rarely integrate back into existing monolithic \/ bureaucratic systems. Strawman example.. but Uber \/ Lyft didn’t work with taxicab commissions but instead creating a new system from scratch.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g03ebdf13bbe",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e03ebdf13bbeacace66454bea388b927.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Srini Kadamati",
            "display_name": "srini",
            "team": "T5TCAFTA9",
            "name": "srini",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559761728.006700",
        "parent_user_id": "UJBC0NLDN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ym1Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "interestingly, I actually have the opposite opinion "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " the barrier to fixing what already exists actually feels really high to me. This something Jon Blow & Alan Kay talk about, as well as others, and I tend to agree. To elaborate, any new innovation or idea has to work “at scale” relatively quickly. Meaning, learnable programming type visualization and iteration may be doable for basic examples (like the ones BV uses), but supporting that type of understanding and iteration would be almost impossible for the actual system that Python code would live in. At work, our Python code runs as part of the django framework (so features would have to work there), some jobs run async in celery, then they talk to different data sources like Postgres, then all of this spaghetti mess lives in containers, which exist in pods in kubernetes, and we have API’s on top of kubernetes to manage it.\n\nGetting Learnable Programming to work across our backend project would be a massive undertaking, especially if we treated all of the existing code as “dead” code that couldn’t be changed \/ rethought to better suit the features we want.\n\nOn the flip side, looking at the stories of Ruby and Python give us hope that greatness can come by rebuilding from scratch instead of trying to adding good type inference to Java and simplifying the Java syntax by adding pre-processors!\n\nBy creating something new from scratch, you have the opportunity to focus on niche end-users who were underserved by existing solutions. This is how startups (as well as new PL’s like python and ruby) actually succeed, b\/c small niche efforts can rarely integrate back into existing monolithic \/ bureaucratic systems. Strawman example.. but Uber \/ Lyft didn’t work with taxicab commissions but instead creating a new system from scratch."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGLSY9X3J",
        "type": "message",
        "ts": "1560392202.029800",
        "client_msg_id": "d0181b9a-6fb3-4a00-a733-fdbf9bcc9a14",
        "text": "but its not a science :slightly_smiling_face: I could be completely off base! Just my own context and thoughts",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g03ebdf13bbe",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e03ebdf13bbeacace66454bea388b927.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Srini Kadamati",
            "display_name": "srini",
            "team": "T5TCAFTA9",
            "name": "srini",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1559761728.006700",
        "parent_user_id": "UJBC0NLDN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2aB2M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but its not a science "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " I could be completely off base! Just my own context and thoughts"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]