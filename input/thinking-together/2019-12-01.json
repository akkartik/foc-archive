[
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1575206215.326700",
        "edited": {
            "user": "UN57U8V53",
            "ts": "1575206279.000000"
        },
        "client_msg_id": "00f665a1-1482-4624-a2a6-490e1667659d",
        "text": "I’ve been trying to figure out better ways to visualize and classify functions that are M x M -> M (potentially monadic)\nSpecifically there are properties\/relationships I’d love to be able to “see” such as disjointness, symmetries (group? communative?), associativity, triangle inequalities (cartesian?), identity element, equivalences, and “primes” (all m in M such that M is only a result with itself and identity).\nOnly thing I’ve found in general so far are MxM tables, which are rather opaque for some of these properties.\nAnyone seen any specific visualizations, families of visualizations, or property “classifiers” (for finite cases) like this? I was thinking something like 3 “circles” of points in M--the result “sandwiched” between the args-- might be revealing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7P+\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve been trying to figure out better ways to visualize and classify functions that are M x M -> M (potentially monadic)\nSpecifically there are properties\/relationships I’d love to be able to “see” such as disjointness, symmetries (group? communative?), associativity, triangle inequalities (cartesian?), identity element, equivalences, and “primes” (all m in M such that M is only a result with itself and identity).\nOnly thing I’ve found in general so far are MxM tables, which are rather opaque for some of these properties.\nAnyone seen any specific visualizations, families of visualizations, or property “classifiers” (for finite cases) like this? I was thinking something like 3 “circles” of points in M--the result “sandwiched” between the args-- might be revealing."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up::skin-tone-3",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMPQ9A65N",
        "type": "message",
        "ts": "1575213645.328100",
        "client_msg_id": "f2eda993-31b5-4d38-93db-ae7e57e794e3",
        "text": "While this might be obvious to you all, but today while reading history it occurred to me that the name DynamicLand is a combination of Alan Kay's \"Personal Dynamic Media\" and Seymour Papert's \"Mathland\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g65ecdf18e50",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/65ecdf18e50934634898dd3eaa310a69.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Pine Wu",
            "display_name": "Pine Wu",
            "team": "T5TCAFTA9",
            "name": "octref",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575213645.328100",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1575249885.336800",
        "reply_users": [
            "UFPPABQ7P",
            "UAVCC2X70",
            "UJ6LDMMN0",
            "UFEQUBNNT"
        ],
        "replies": [
            {
                "user": "UFPPABQ7P",
                "ts": "1575213760.328200"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1575225311.330000"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1575227907.332600"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1575245379.336600"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1575249885.336800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9FSf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "While this might be obvious to you all, but today while reading history it occurred to me that the name DynamicLand is a combination of Alan Kay's \"Personal Dynamic Media\" and Seymour Papert's \"Mathland\"."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UNLS33M61",
                    "UAVCC2X70",
                    "UA14TGLTC",
                    "UHWC9PXBL"
                ],
                "count": 4
            },
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1575213760.328200",
        "client_msg_id": "28ad5632-939c-4382-ad6b-5b2cadea458e",
        "text": "I knew about the naming homage to Dynamic media, but I hadn't heard of Mathland",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575213645.328100",
        "parent_user_id": "UMPQ9A65N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fNOF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I knew about the naming homage to Dynamic media, but I hadn't heard of Mathland"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1575223752.328400",
        "client_msg_id": "2211080a-d422-4ad5-b8f1-abe747e2c254",
        "text": "I would agree that software can be vastly simpler, but there are some giant hurdles in the way a) the fact that (large) software creation is a extremely incremental process, where you add to the current structure rather than all at once, and of course b) humans tendency to overcomplicate.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LH+J3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would agree that software can be vastly simpler, but there are some giant hurdles in the way a) the fact that (large) software creation is a extremely incremental process, where you add to the current structure rather than all at once, and of course b) humans tendency to overcomplicate."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1575223901.328600",
        "client_msg_id": "182ae70b-2678-4c8c-a45e-fc8b5cfc7d4e",
        "text": "I find it an interesting thought experiment what would happen if you took a super complex piece of software, and had an omniscient god-like programmer refactor\/rewrite it all to whatever optimal code structure is in theory possible, while retaining 99%+ of functionality. Could, say, MS Word be 10x smaller? 100x?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lpNT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I find it an interesting thought experiment what would happen if you took a super complex piece of software, and had an omniscient god-like programmer refactor\/rewrite it all to whatever optimal code structure is in theory possible, while retaining 99%+ of functionality. Could, say, MS Word be 10x smaller? 100x?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1575224134.328800",
        "client_msg_id": "59e73538-1b22-42ed-833e-5efe9972fbcb",
        "text": "Trouble is, no actual humans, nor any software (and I did try <http:\/\/strlen.com\/restructor\/>) can do such refactoring :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A6v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Trouble is, no actual humans, nor any software (and I did try "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/strlen.com\/restructor\/"
                            },
                            {
                                "type": "text",
                                "text": ") can do such refactoring "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1575224230.329000",
        "client_msg_id": "98194284-7a68-4661-b997-aad340db9226",
        "text": "<@UHWC9PXBL> I'm on desktop (Chrome), and it doesn't work.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "parent_user_id": "UNLS33M61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ixbU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " I'm on desktop (Chrome), and it doesn't work."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1575224349.329200",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1575269000.000000"
        },
        "client_msg_id": "b8c293d7-9f81-48da-8dda-c1534c3f4f48",
        "text": "Why 99%? Why not 30%? Does anyone _really_ use more than that? The real problem is that each of us relies on a different 30%.\n\nWe really need to move past talking in terms of proper nouns. Redoing MS Word is an insurmountable goal, partly because much of it serves the needs of MS rather than any users. But redoing _text editing_ or _typesetting_, on the other hand. That's much more tractable.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Iz8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why 99%? Why not 30%? Does anyone "
                            },
                            {
                                "type": "text",
                                "text": "really",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " use more than that? The real problem is that each of us relies on a different 30%.\n\nWe really need to move past talking in terms of proper nouns. Redoing MS Word is an insurmountable goal, partly because much of it serves the needs of MS rather than any users. But redoing "
                            },
                            {
                                "type": "text",
                                "text": "text editing",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "text",
                                "text": "typesetting",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", on the other hand. That's much more tractable."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNLS33M61",
        "type": "message",
        "ts": "1575225234.329400",
        "client_msg_id": "d215598b-465c-4d49-a735-529b74dec7e9",
        "text": "<@UHWC9PXBL> Sure, I’d be interested to see the hints about what direction he’s been going in next. Would I just search for his handle in slack?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g915aac3dfde",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/915aac3dfde2fb502ce415d77643a72d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Wil Chung",
            "display_name": "Wil Chung",
            "team": "T5TCAFTA9",
            "name": "iamwil",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "parent_user_id": "UNLS33M61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M\/gs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " Sure, I’d be interested to see the hints about what direction he’s been going in next. Would I just search for his handle in slack?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1575225238.329600",
        "client_msg_id": "0ec876e2-04ec-4e7b-8e70-9d4942ba89bf",
        "text": "because my though experiment is about how much simpler code can in theory be.. what the functionality being implemented is doesn't matter. The reason I don't say 100% is because that is an unreasonable expectation, since any software has a ton of idiosyncrasies due to its implementation details, and requiring all of those to be replicated would seriously reduce the ability to simplify. Or put differently, I expect a steep power law curve of code size as you approach 100%, none of which is of actual use to anyone.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C0VQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "because my though experiment is about how much simpler code can in theory be.. what the functionality being implemented is doesn't matter. The reason I don't say 100% is because that is an unreasonable expectation, since any software has a ton of idiosyncrasies due to its implementation details, and requiring all of those to be replicated would seriously reduce the ability to simplify. Or put differently, I expect a steep power law curve of code size as you approach 100%, none of which is of actual use to anyone."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1575225311.330000",
        "client_msg_id": "e940e5e9-eef8-4999-a4fc-8bab6cd03912",
        "text": "Ditto",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575213645.328100",
        "parent_user_id": "UMPQ9A65N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gb3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ditto"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1575225360.330200",
        "client_msg_id": "21b90365-455d-47b7-8ef9-2c26c77a5b78",
        "text": "Again, this is not about MS Word or wether anyone should want software of that complexity. It is merely an example. Pick another: Windows, Linux, Chrome, Photoshop, Clang\/LLVM, Unity engine..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SRPQs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Again, this is not about MS Word or wether anyone should want software of that complexity. It is merely an example. Pick another: Windows, Linux, Chrome, Photoshop, Clang\/LLVM, Unity engine.."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1575225544.330400",
        "client_msg_id": "3f26cb3d-39df-425c-8179-f68c204378c9",
        "text": "Those are all proper nouns. My point is still not getting across.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GBg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Those are all proper nouns. My point is still not getting across."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1575225687.330600",
        "client_msg_id": "3a4047b2-80de-42d1-91d2-049618dc7afd",
        "text": "What I am saying is that your point appears unrelated to my comments",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PdE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What I am saying is that your point appears unrelated to my comments"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1575226155.330800",
        "client_msg_id": "96d1d3d6-bf9f-46e7-9ee3-a8bcf13b6197",
        "text": "Based on restructor you seem to think that the major sources of complexity are duplication. If only all the duplication could be removed, software would be 10x or 100x smaller. Is that kinda where your comments are leading?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vs7Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Based on restructor you seem to think that the major sources of complexity are duplication. If only all the duplication could be removed, software would be 10x or 100x smaller. Is that kinda where your comments are leading?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1575226379.331000",
        "client_msg_id": "c2a19d01-e4a2-4578-a873-a7cca06b3372",
        "text": "So like for a company that can't replace an unnecessarily giant codebase because it's in active use my many parallel projects\/products, but a vast simplification would greatly cut down the cost of maintaining it and the time it takes to add new features (and be able to do so in a sane manner). That exactly calls for a massive (albeit careful and piecemeal) refactor.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6IO57",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So like for a company that can't replace an unnecessarily giant codebase because it's in active use my many parallel projects\/products, but a vast simplification would greatly cut down the cost of maintaining it and the time it takes to add new features (and be able to do so in a sane manner). That exactly calls for a massive (albeit careful and piecemeal) refactor."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1575226597.331200",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1575228796.000000"
        },
        "client_msg_id": "06b08eb3-30dd-4d8e-9fb0-01c88bdbf8cf",
        "text": "But yeah, for just saying what's necessary to have whatever it is people need to do (and ignoring the specific way it's currently done or understood), then maybe it's best to start over from first principles.\n\nTwo examples:\n\n* The STEPS program created a full \"OS\" (not at all in the *traditional* sense, but you could do the things a computer user needs to do) in ~20K LOC\n\n* Bjarke Ingels does something very similar with physical architecture, i.e. throw out all preconceptions of what a building \"is\" and see what forms from first principles, even if it diverges greatly from mainstream practice. The results are strikingly different on every level, but insanely practical. It's literally the same thing we're taking about doing with software, but as something physical that anyone can look at and understand. (See follow-up comment below)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cbW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But yeah, for just saying what's necessary to have whatever it is people need to do (and ignoring the specific way it's currently done or understood), then maybe it's best to start over from first principles.\n\nTwo examples:\n\n* The STEPS program created a full \"OS\" (not at all in the "
                            },
                            {
                                "type": "text",
                                "text": "traditional",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " sense, but you could do the things a computer user needs to do) in ~20K LOC\n\n* Bjarke Ingels does something very similar with physical architecture, i.e. throw out all preconceptions of what a building \"is\" and see what forms from first principles, even if it diverges greatly from mainstream practice. The results are strikingly different on every level, but insanely practical. It's literally the same thing we're taking about doing with software, but as something physical that anyone can look at and understand. (See follow-up comment below)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1575227051.331700",
        "client_msg_id": "24f20f2f-1779-4a9f-8e4a-703e71237944",
        "text": "<@UCUSW7WVD> no, my comment actually said that Restructor is NOT able to do such a refactoring.. I merely mention it as related to to thought experiment. The real refactoring ability needed to execute my thought experiment is beyond any current humans and current software, as all software design decisions would need to be re-evaluated in parallel",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OUCFb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " no, my comment actually said that Restructor is NOT able to do such a refactoring.. I merely mention it as related to to thought experiment. The real refactoring ability needed to execute my thought experiment is beyond any current humans and current software, as all software design decisions would need to be re-evaluated in parallel"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UL3CJ7YKC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1575227163.331900",
        "client_msg_id": "e1e27312-7b77-4076-96d1-9236898a2936",
        "text": "<@UAVCC2X70> Yes, if you allow yourself to re-define what the software is supposed to do in the first place, you can gain much bigger factors of simplification, and humans can actually do this. My thought experiment was about the idea that even without changing what the software does huge simplifications are possible in theory, just they're impossible to reach",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7HQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UAVCC2X70"
                            },
                            {
                                "type": "text",
                                "text": " Yes, if you allow yourself to re-define what the software is supposed to do in the first place, you can gain much bigger factors of simplification, and humans can actually do this. My thought experiment was about the idea that even without changing what the software does huge simplifications are possible in theory, just they're impossible to reach"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UL3CJ7YKC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1575227244.332100",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1575227445.000000"
        },
        "client_msg_id": "4a50d4ee-1df4-4e7d-a1e6-66c584e0d48c",
        "text": "Yeah, there's a big difference between refactoring existing software that's in widespread use, and starting over from first principles.\n\nBut yes, some software is so insanely large and complex (e.g. MS Word) that a refactor \/ restructure is just not humanly possible.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fwe94",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, there's a big difference between refactoring existing software that's in widespread use, and starting over from first principles.\n\nBut yes, some software is so insanely large and complex (e.g. MS Word) that a refactor \/ restructure is just not humanly possible."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1575227907.332600",
        "client_msg_id": "0640abca-e64f-46fe-8925-f353679d2a84",
        "text": "The opposite for me. I knew mathland and I was sure Bret Victor was inspired by it. But for the dynamic part of the name I thought it was merely  a reference of what is realy going on, not necessary a \"quote\" of Alan Kay.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575213645.328100",
        "parent_user_id": "UMPQ9A65N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YJQ9p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The opposite for me. I knew mathland and I was sure Bret Victor was inspired by it. But for the dynamic part of the name I thought it was merely  a reference of what is realy going on, not necessary a \"quote\" of Alan Kay."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1575228750.332800",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1575230856.000000"
        },
        "client_msg_id": "0587e736-dc18-4925-a04e-a4f8f6df2721",
        "text": "Further note about Bjarke Ingells' work (I promise it's relevant):\n\nOn the surface it looks like he's just trying to create really strange (\"cool\") looking buildings and spaces, just for the sake of it -- which is the trap that both postmodernism (<https:\/\/youtu.be\/NAjz0INs3Lc?t=12m15s|https:\/\/youtu.be\/NAjz0INs3Lc?t=12m15s> 12:15-14:40) and software (<https:\/\/steve-yegge.blogspot.com\/2006\/03\/execution-in-kingdom-of-nouns.html|https:\/\/steve-yegge.blogspot.com\/2006\/03\/execution-in-kingdom-of-nouns.html>) both fall into.\n\nBut by throwing out all preconceptions of what the appearance, properties, or components of a building (or software) \"should\" be, and by focusing purely on the root needs that it's meant to address, you actually wind up with a form that is perfectly suited to those needs (i.e. the exact opposite of the examples linked above). He explains (with visual): <https:\/\/youtu.be\/dh96J9iXGyk?t=18m50s|https:\/\/youtu.be\/dh96J9iXGyk?t=18m50s> 18:50-20:15\n\nI think that's also the secret to improving the software situation. IMHO it's damaging to society that such things are not a core part of software education & practice.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NRj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Further note about Bjarke Ingells' work (I promise it's relevant):\n\nOn the surface it looks like he's just trying to create really strange (\"cool\") looking buildings and spaces, just for the sake of it -- which is the trap that both postmodernism ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/NAjz0INs3Lc?t=12m15s",
                                "text": "https:\/\/youtu.be\/NAjz0INs3Lc?t=12m15s"
                            },
                            {
                                "type": "text",
                                "text": " 12:15-14:40) and software ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/steve-yegge.blogspot.com\/2006\/03\/execution-in-kingdom-of-nouns.html",
                                "text": "https:\/\/steve-yegge.blogspot.com\/2006\/03\/execution-in-kingdom-of-nouns.html"
                            },
                            {
                                "type": "text",
                                "text": ") both fall into.\n\nBut by throwing out all preconceptions of what the appearance, properties, or components of a building (or software) \"should\" be, and by focusing purely on the root needs that it's meant to address, you actually wind up with a form that is perfectly suited to those needs (i.e. the exact opposite of the examples linked above). He explains (with visual): "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/dh96J9iXGyk?t=18m50s",
                                "text": "https:\/\/youtu.be\/dh96J9iXGyk?t=18m50s"
                            },
                            {
                                "type": "text",
                                "text": " 18:50-20:15\n\nI think that's also the secret to improving the software situation. IMHO it's damaging to society that such things are not a core part of software education & practice."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1575232215.333600",
        "client_msg_id": "f5a2e56f-adff-4b39-8d9c-b21c6c1e2439",
        "text": "Thanks, that's some.. cool architecture :slightly_smiling_face: I'm failing to see how that translates to software though",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=Ce+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks, that's some.. cool architecture "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " I'm failing to see how that translates to software though"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1575232931.333800",
        "client_msg_id": "d8afcb0a-e69f-42dc-a069-af54cb19a428",
        "text": "&gt;  were firm on that being a good underlying programming model\n<@UNLS33M61> Honestly, I'm not sure I'd say that. It's definitely an _interesting_ model, I don't know if it's a good one. For example, we came to the conclusion that you really want to compile away the \"database\" stuff. Towards the end of Eve, I worked on a really crazy compiler based on abstract interpretation that tried to do exactly that (in Eve actually!). In terms of the semantics, the 0.2-0.4 versions of Eve were quite powerful, but did have a downside - it was easy to lose the forest for the trees. Nothing gave the blocks a concrete structure and it was difficult to understand the behavior that emerged from them. This was particularly evident in anything workflow-y or process-y.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "parent_user_id": "UNLS33M61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QU\/dd",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " were firm on that being a good underlying programming model"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UNLS33M61"
                            },
                            {
                                "type": "text",
                                "text": " Honestly, I'm not sure I'd say that. It's definitely an "
                            },
                            {
                                "type": "text",
                                "text": "interesting",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " model, I don't know if it's a good one. For example, we came to the conclusion that you really want to compile away the \"database\" stuff. Towards the end of Eve, I worked on a really crazy compiler based on abstract interpretation that tried to do exactly that (in Eve actually!). In terms of the semantics, the 0.2-0.4 versions of Eve were quite powerful, but did have a downside - it was easy to lose the forest for the trees. Nothing gave the blocks a concrete structure and it was difficult to understand the behavior that emerged from them. This was particularly evident in anything workflow-y or process-y."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1575233021.334000",
        "client_msg_id": "2810ed60-6a13-4abd-a6d8-9dea88e16e16",
        "text": "I think it's probably a dead-end to have a system that is either *only* declarative (Eve) or *only* imperative. You need to be able to flow between the two so that things that are most easily expressed in one or the other can live together.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "parent_user_id": "UNLS33M61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Oqy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think it's probably a dead-end to have a system that is either "
                            },
                            {
                                "type": "text",
                                "text": "only",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " declarative (Eve) or "
                            },
                            {
                                "type": "text",
                                "text": "only",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " imperative. You need to be able to flow between the two so that things that are most easily expressed in one or the other can live together."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJN1TAYEQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1575233099.334200",
        "client_msg_id": "5d075813-ca73-4e01-be53-c0bdf54ea238",
        "text": "At several points throughout Eve, we talked about introducing something statemachine-like to help with that and we actually implemented them in Eve itself, but it never really felt right.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "parent_user_id": "UNLS33M61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J+Kvw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "At several points throughout Eve, we talked about introducing something statemachine-like to help with that and we actually implemented them in Eve itself, but it never really felt right."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1575233415.334400",
        "client_msg_id": "9388e74a-a3f9-4b30-bf82-f52b0f8ab925",
        "text": "After we shut things down, I worked on a language that was based on dataflow with embedded statemachines which was very promising. Since then we've flipped it around and had the focus on statemachines with dataflow computations embedded in them, which is looking very cool. :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "parent_user_id": "UNLS33M61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BAme5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "After we shut things down, I worked on a language that was based on dataflow with embedded statemachines which was very promising. Since then we've flipped it around and had the focus on statemachines with dataflow computations embedded in them, which is looking very cool. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1575233766.334600",
        "client_msg_id": "252e74cf-df4c-43c2-9b88-f959d5866f49",
        "text": "<@UEBG0NPDK> interesting, would love to hear where that goes..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "parent_user_id": "UNLS33M61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IpoB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " interesting, would love to hear where that goes.."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1575233969.334800",
        "client_msg_id": "bb20ea14-6cdf-42e4-a3d1-cf6927b3e740",
        "text": "The intent is to share more as we learn :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "parent_user_id": "UNLS33M61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BHu\/B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The intent is to share more as we learn "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1575237996.335200",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1575267801.000000"
        },
        "client_msg_id": "e68c0b00-cfd4-4c4d-8543-be9d9dd7fcd4",
        "text": "Ok, I'll try to explain...\n\nThis thread was about software architecture & size \/ complexity, and choosing abstractions and patterns to use to build it up, and whether to maintain or replace them. (Think of abstractions as the building materials or mode of construction)\n\nIn both fields, decisions and thought around these things, are heavily skewed toward things that have nothing to do with the needs that the architecture is ultimately meant to address.\n\nYou don't sell an arrangement of boxes fitting a certain way, nor layers of abstractions, nor (for either field) a specific framework or fittings for a specific framework.\n\nYou sell a place to work or live or socialize -- carving out a box (even if done well) does not even begin to scratch the right level of thinking\/goals for creating a \"good\" _place to live_, etc.\n\nIt's the same with software (see \"Screaming Architecture\": <https:\/\/blog.cleancoder.com\/uncle-bob\/2011\/09\/30\/Screaming-Architecture.html|https:\/\/blog.cleancoder.com\/uncle-bob\/2011\/09\/30\/Screaming-Architecture.html>). That is, good \"software engineering\", is about \"good software\" engineering -- which sadly, is typically far from the center of focus.\n\nThere's often a response back to this that user experience is such a small piece, it's just the \"skin\" on the outside ... No no, it runs all the way deep, and if done right, can LITERALLY shape the architecture of software (again, see \"Screaming Architecture\" ... It's actually a lot deeper than that explains, but it points in the right direction)\n\nWhat I'm saying is that the exact same backwards thinking \/ disbelief that the architecture can (or should) be _that_ tied to the user experience, exists in both fields. Bjarke's work not only shows EXACTLY how this _can_ be the case, but also how much better things become: not just asthetically, but functionally; and not just for the user, but cost of building and maintenance, environmental impact, structural concerns, etc. _all_ improve -- because the thing literally _is_, what it is.\n\nSoftware gets so tremendously large and complex, _largely_ because so much of the scaffolding and architecture is so focused on all this incidental artificial stuff that has nothing to do with what the software is _actually_ supposed to do or be.\n\nUnfortunately, all that incidental stuff is what programmers tend to think of as what the software \"is\" (and it's similar for physical architecture). But all that stuff is just the _baggage_ \"necessary\" (or rather, _elected_) to create the user space \/ experience which is the whole reason for the software's (or building's) existence! Once you really get that (which doesn't happen after just a few hours of thought, because it's \"new\" and not \"news\"), then similarities are striking.\n\nRead execution in the kingdom of nouns and screaming architecture, and then relate to the physical architecture resources (all linked to previously), and I think it will all begin to connect.\n\n(Ironically, I struggle with conciseness. I might trim this back later)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Yrlq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ok, I'll try to explain...\n\nThis thread was about software architecture & size \/ complexity, and choosing abstractions and patterns to use to build it up, and whether to maintain or replace them. (Think of abstractions as the building materials or mode of construction)\n\nIn both fields, decisions and thought around these things, are heavily skewed toward things that have nothing to do with the needs that the architecture is ultimately meant to address.\n\nYou don't sell an arrangement of boxes fitting a certain way, nor layers of abstractions, nor (for either field) a specific framework or fittings for a specific framework.\n\nYou sell a place to work or live or socialize -- carving out a box (even if done well) does not even begin to scratch the right level of thinking\/goals for creating a \"good\" "
                            },
                            {
                                "type": "text",
                                "text": "place to live",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", etc.\n\nIt's the same with software (see \"Screaming Architecture\": "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/blog.cleancoder.com\/uncle-bob\/2011\/09\/30\/Screaming-Architecture.html",
                                "text": "https:\/\/blog.cleancoder.com\/uncle-bob\/2011\/09\/30\/Screaming-Architecture.html"
                            },
                            {
                                "type": "text",
                                "text": "). That is, good \"software engineering\", is about \"good software\" engineering -- which sadly, is typically far from the center of focus.\n\nThere's often a response back to this that user experience is such a small piece, it's just the \"skin\" on the outside ... No no, it runs all the way deep, and if done right, can LITERALLY shape the architecture of software (again, see \"Screaming Architecture\" ... It's actually a lot deeper than that explains, but it points in the right direction)\n\nWhat I'm saying is that the exact same backwards thinking \/ disbelief that the architecture can (or should) be "
                            },
                            {
                                "type": "text",
                                "text": "that",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " tied to the user experience, exists in both fields. Bjarke's work not only shows EXACTLY how this "
                            },
                            {
                                "type": "text",
                                "text": "can",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " be the case, but also how much better things become: not just asthetically, but functionally; and not just for the user, but cost of building and maintenance, environmental impact, structural concerns, etc. "
                            },
                            {
                                "type": "text",
                                "text": "all",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " improve -- because the thing literally "
                            },
                            {
                                "type": "text",
                                "text": "is",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", what it is.\n\nSoftware gets so tremendously large and complex, "
                            },
                            {
                                "type": "text",
                                "text": "largely",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " because so much of the scaffolding and architecture is so focused on all this incidental artificial stuff that has nothing to do with what the software is "
                            },
                            {
                                "type": "text",
                                "text": "actually",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " supposed to do or be.\n\nUnfortunately, all that incidental stuff is what programmers tend to think of as what the software \"is\" (and it's similar for physical architecture). But all that stuff is just the "
                            },
                            {
                                "type": "text",
                                "text": "baggage",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " \"necessary\" (or rather, "
                            },
                            {
                                "type": "text",
                                "text": "elected",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ") to create the user space \/ experience which is the whole reason for the software's (or building's) existence! Once you really get that (which doesn't happen after just a few hours of thought, because it's \"new\" and not \"news\"), then similarities are striking.\n\nRead execution in the kingdom of nouns and screaming architecture, and then relate to the physical architecture resources (all linked to previously), and I think it will all begin to connect.\n\n(Ironically, I struggle with conciseness. I might trim this back later)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1575245379.336600",
        "client_msg_id": "EA251E83-958B-4E8E-874D-0822D1183296",
        "text": "All the land is your Dynabook",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575213645.328100",
        "parent_user_id": "UMPQ9A65N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "u88",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "All the land is your Dynabook"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1575249885.336800",
        "client_msg_id": "b92a2aa2-0da6-4ff6-9f35-7c3db92aa1cf",
        "text": "All your base are belong to us",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575213645.328100",
        "parent_user_id": "UMPQ9A65N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L7VvI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "All your base are belong to us"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNLS33M61",
        "type": "message",
        "ts": "1575251398.337000",
        "client_msg_id": "59314e30-bf0b-43d5-a5e0-1f1e1e637504",
        "text": "<@UEBG0NPDK> What does “compile away the database” mean? Do you mean that programming languages should have a built in database that helps handle state in a consistent manner?\n\nI thought the reason you had blocks for Eve 0.2-0.4 was because people had a hard time with scope. I can see how just blocks makes structure hard, because there didn’t seem to be a way to compose them together.\n\nI would have thought you can use the iterative nature of eve to build workflows, where each stage are the rules, and the result of one stage are just new facts in the database that feeds into the next stage. Does that not work well in practice?\n\nSo in the other computational model, you introduced a state machine to help track state, and all you have to do is state which actions should transition to what other state? In my imagination, it sounds a little like how Elm has the action\/reducers that tell the program how to map the state machine from one state to another. Why invert it, so statemachines have dataflow embeded in them? Unless the dataflow has a loop\/iteration in it, to help track complex state, I’m not able to make the leap why. What does that design buy you?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g915aac3dfde",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/915aac3dfde2fb502ce415d77643a72d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Wil Chung",
            "display_name": "Wil Chung",
            "team": "T5TCAFTA9",
            "name": "iamwil",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "parent_user_id": "UNLS33M61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o0p+2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " What does “compile away the database” mean? Do you mean that programming languages should have a built in database that helps handle state in a consistent manner?\n\nI thought the reason you had blocks for Eve 0.2-0.4 was because people had a hard time with scope. I can see how just blocks makes structure hard, because there didn’t seem to be a way to compose them together.\n\nI would have thought you can use the iterative nature of eve to build workflows, where each stage are the rules, and the result of one stage are just new facts in the database that feeds into the next stage. Does that not work well in practice?\n\nSo in the other computational model, you introduced a state machine to help track state, and all you have to do is state which actions should transition to what other state? In my imagination, it sounds a little like how Elm has the action\/reducers that tell the program how to map the state machine from one state to another. Why invert it, so statemachines have dataflow embeded in them? Unless the dataflow has a loop\/iteration in it, to help track complex state, I’m not able to make the leap why. What does that design buy you?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1575257959.339100",
        "client_msg_id": "7057b155-926c-4993-bea9-afae2bb22137",
        "text": "Angelo Pesce on hackability should appeal to many here: <http:\/\/c0de517e.blogspot.com\/2019\/12\/is-true-hacking-dead-what-we-lost.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575257959.339100",
        "reply_count": 20,
        "reply_users_count": 8,
        "latest_reply": "1575535479.039100",
        "reply_users": [
            "UEQ6M68H0",
            "UAVCC2X70",
            "U5STGTB3J",
            "UMVH31ML3",
            "UJN1TAYEQ",
            "UJBAJNFLK",
            "UHDQ62M4P",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UEQ6M68H0",
                "ts": "1575260081.339800"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1575264808.341000"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1575276098.358900"
            },
            {
                "user": "UMVH31ML3",
                "ts": "1575292750.359600"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1575330388.367900"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1575340598.368100"
            },
            {
                "user": "UMVH31ML3",
                "ts": "1575359456.368600"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1575377880.376200"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1575377898.376400"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1575386286.394600"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1575392165.395400"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1575392418.395600"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1575392638.395800"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1575392804.396000"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1575393132.396200"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1575448728.424000"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1575457222.448200"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1575476221.001400"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1575488923.015300"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1575535479.039100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "title": "Is true hacking dead? What we lost.",
                "title_link": "http:\/\/c0de517e.blogspot.com\/2019\/12\/is-true-hacking-dead-what-we-lost.html",
                "text": "Realtime rendering and videogame programming mostly, but I love computer science and visuals in all their forms. This is a notepad of my ideas.",
                "fallback": "Is true hacking dead? What we lost.",
                "image_url": "https:\/\/1.bp.blogspot.com\/-XihZKqg3Z3Y\/XeR7_-4sRHI\/AAAAAAAAB5c\/mG4HHeA09y4dYPBo2H7WZpBhOciQZY1XgCLcBGAsYHQ\/w1200-h630-p-k-no-nu\/hqdefault.jpg",
                "from_url": "http:\/\/c0de517e.blogspot.com\/2019\/12\/is-true-hacking-dead-what-we-lost.html",
                "image_width": 476,
                "image_height": 250,
                "image_bytes": 22792,
                "service_icon": "http:\/\/c0de517e.blogspot.com\/favicon.ico",
                "service_name": "c0de517e.blogspot.com",
                "id": 1,
                "original_url": "http:\/\/c0de517e.blogspot.com\/2019\/12\/is-true-hacking-dead-what-we-lost.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y98p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Angelo Pesce on hackability should appeal to many here: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/c0de517e.blogspot.com\/2019\/12\/is-true-hacking-dead-what-we-lost.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJ6LDMMN0",
                    "UBSMEUXAA",
                    "UJBAJNFLK",
                    "UML4ZEKDK"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1575260081.339800",
        "client_msg_id": "84c114c8-bc63-4555-866e-598e19a5c45f",
        "text": "This is a very nice essay. I think it is very clear that the current development stacks are ridiculously complex. Unfortunately the world rejected the work of Prof. Wirth, whose Pascal\/Modula-2\/Oberon progression was about making it possible for a small team to build and understand an entire operating system. I was one of perhaps a few hundred people working in Modula-2 for 20 years; the vast majority of American developers were wedded to C, because of the MS juggernaut. Even Apple eventually caved and switched out of their Pascal dialect into Objective-C. Simplicity, and understandability are not possible when you have a giant pile of dependencies in almost every project.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575257959.339100",
        "parent_user_id": "UHDQ62M4P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0O\/+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a very nice essay. I think it is very clear that the current development stacks are ridiculously complex. Unfortunately the world rejected the work of Prof. Wirth, whose Pascal\/Modula-2\/Oberon progression was about making it possible for a small team to build and understand an entire operating system. I was one of perhaps a few hundred people working in Modula-2 for 20 years; the vast majority of American developers were wedded to C, because of the MS juggernaut. Even Apple eventually caved and switched out of their Pascal dialect into Objective-C. Simplicity, and understandability are not possible when you have a giant pile of dependencies in almost every project."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1575261456.340300",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1575314835.000000"
        },
        "client_msg_id": "b0fe9673-2169-4226-8fba-e800a424cb27",
        "text": "I suppose the short version is that architecture is not about building materials (or abstractions) and structure and scaffolding and framework etc., but about the human use \/ purpose that the thing facilitates. Sure, it involves those things, but _as a means to an end_. The problem with both software and physical architecture in practice, is that they've made it _about_ the materials and scaffolding.\n\nMaybe that's why it's hard to see the relevance, because programming abstractions ≠ physical building materials, and the industry (and developers) generally struggle to see past that level of understanding.\n\nSo the relevance is that software is complex and large because its creators are obsessed with the wrong stuff. Bjarke's work demonstrates how much better things become when the thing being built is shaped _by_ the purpose it serves (rather than (perversely) the other way around) -- which not just reduces complexity\/cost\/etc., but also makes it vastly easier to serve that purpose much better.\n\n<https:\/\/www.lexico.com\/en\/definition\/perverse|https:\/\/www.lexico.com\/en\/definition\/perverse>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574787700.220500",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vb3vQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I suppose the short version is that architecture is not about building materials (or abstractions) and structure and scaffolding and framework etc., but about the human use \/ purpose that the thing facilitates. Sure, it involves those things, but "
                            },
                            {
                                "type": "text",
                                "text": "as a means to an end",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". The problem with both software and physical architecture in practice, is that they've made it "
                            },
                            {
                                "type": "text",
                                "text": "about",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the materials and scaffolding.\n\nMaybe that's why it's hard to see the relevance, because programming abstractions ≠ physical building materials, and the industry (and developers) generally struggle to see past that level of understanding.\n\nSo the relevance is that software is complex and large because its creators are obsessed with the wrong stuff. Bjarke's work demonstrates how much better things become when the thing being built is shaped "
                            },
                            {
                                "type": "text",
                                "text": "by",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " the purpose it serves (rather than (perversely) the other way around) -- which not just reduces complexity\/cost\/etc., but also makes it vastly easier to serve that purpose much better.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.lexico.com\/en\/definition\/perverse",
                                "text": "https:\/\/www.lexico.com\/en\/definition\/perverse"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1575264808.341000",
        "client_msg_id": "269faa79-70f0-4251-83d9-a3e8d8376c0e",
        "text": "&lt;cough&gt;NPM&lt;\/cough&gt;",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1575257959.339100",
        "parent_user_id": "UHDQ62M4P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ERJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "<cough>NPM<\/cough>"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]