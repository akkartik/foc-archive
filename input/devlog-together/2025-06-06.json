[
    {
        "text": "My next focus for lopecode is the editing experience. I've tidied most of the gitches up and its smooth, but kinda hardwork to do everything in my head. I need more hands!\n\nSo to kill 2 birds with one stone, I will redo <https:\/\/observablehq.com\/@tomlarkworthy\/robocoop|roboco-op> but this time with an agentic workflow following how Cline works. Early results is that it is quite good at following Observable dependancy graph and exposing itself to jsut enough context for the task at hand. Roboco-op was struggling with context management and I think this is a better path. It can add cells!\nRoboco-op hit a ceiling because you have to manually copy and paste cells over in Observable, but with Lopecode you can add cells programatically so its a better substrate for this kinda of idea.",
        "files": [
            {
                "id": "F090CGHSSH0",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U02E4DAQGSZ",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WJXPn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My next focus for lopecode is the editing experience. I've tidied most of the gitches up and its smooth, but kinda hardwork to do everything in my head. I need more hands!\n\nSo to kill 2 birds with one stone, I will redo "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/observablehq.com\/@tomlarkworthy\/robocoop",
                                "text": "roboco-op"
                            },
                            {
                                "type": "text",
                                "text": " but this time with an agentic workflow following how Cline works. Early results is that it is quite good at following Observable dependancy graph and exposing itself to jsut enough context for the task at hand. Roboco-op was struggling with context management and I think this is a better path. It can add cells!\nRoboco-op hit a ceiling because you have to manually copy and paste cells over in Observable, but with Lopecode you can add cells programatically so its a better substrate for this kinda of idea."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1749218002.872099",
        "client_msg_id": "829e0190-aa6b-44aa-b7e4-cc53cd33a480",
        "thread_ts": "1749218002.872099",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1749277569.230889",
        "reply_users": [
            "U02E4DAQGSZ"
        ],
        "replies": [
            {
                "user": "U02E4DAQGSZ",
                "ts": "1749277569.230889"
            }
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "text": "yeah it can pretty naturally inspect runtime state.  Even navigating the difficult viewof macro. I have not actually prompted observables programming model yet, it can figure it out. Note the input\/output descriptions give it a handhold to navigating the dependancy graph.",
        "files": [
            {
                "id": "F090T0VPX41",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U02E4DAQGSZ",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P\/FWC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah it can pretty naturally inspect runtime state.  Even navigating the difficult viewof macro. I have not actually prompted observables programming model yet, it can figure it out. Note the input\/output descriptions give it a handhold to navigating the dependancy graph."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1749277569.230889",
        "client_msg_id": "a313ab45-bf6b-44c6-a53b-0866a3400468",
        "thread_ts": "1749218002.872099",
        "parent_user_id": "U02E4DAQGSZ"
    }
]