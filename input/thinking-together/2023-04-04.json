[
    {
        "user": "U04RX8HBSKB",
        "type": "message",
        "ts": "1680621439.883399",
        "client_msg_id": "b5c64b41-4d0c-40c4-b7c2-c90ebff1c08f",
        "text": "In a system that supports forward declarations and function redefinition, you can do Knuth-inspired LP-ish function calls with very long names (e.g. `handleTheLockFile`, `readTheUserConfiguration`, &amp;c) and then define and redefine those functions—originally with a trivial or naive first pass at implementation, and then later with the \"grown up\" implementation.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0189ad4c5cb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0189ad4c5cb7b0dc7f87a2b6c97fac99.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "Colby",
            "real_name": "Colby",
            "display_name": "Colby",
            "team": "T5TCAFTA9",
            "name": "futureofcoding954",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675439262.538229",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yJ\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In a system that supports forward declarations and function redefinition, you can do Knuth-inspired LP-ish function calls with very long names (e.g. "
                            },
                            {
                                "type": "text",
                                "text": "handleTheLockFile",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "readTheUserConfiguration",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", &c) and then define and redefine those functions—originally with a trivial or naive first pass at implementation, and then later with the \"grown up\" implementation."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04RX8HBSKB",
        "type": "message",
        "ts": "1680621544.177049",
        "client_msg_id": "2838c0f8-5beb-40a8-b5f2-c160840f12f9",
        "text": "No tangle and weave necessary.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0189ad4c5cb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0189ad4c5cb7b0dc7f87a2b6c97fac99.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "Colby",
            "real_name": "Colby",
            "display_name": "Colby",
            "team": "T5TCAFTA9",
            "name": "futureofcoding954",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675439262.538229",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Anur",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "No tangle and weave necessary."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKB1S7ZMY",
        "type": "message",
        "ts": "1680622758.013259",
        "edited": {
            "user": "UKB1S7ZMY",
            "ts": "1680623133.000000"
        },
        "client_msg_id": "adf74b14-9202-4255-a5e3-eadbf2904a6f",
        "text": "I've been thinking about how the state of a running program could be modeled as the definition of a program changing over time. This seems closely related to \"image\" based programming systems, right? Does anyone have thoughts or reading related to this?\n\n(I got there thinking about the branchable\/forkable database trend which tries to tie program version to state version.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7ec9a7d1fc78",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-15\/838161930967_7ec9a7d1fc785cc9b389_72.jpg",
            "first_name": "",
            "real_name": "Adriaan Leijnse",
            "display_name": "Adriaan Leijnse",
            "team": "T5TCAFTA9",
            "name": "adriaan.leijnse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1680622758.013259",
        "reply_count": 13,
        "reply_users_count": 8,
        "latest_reply": "1684079263.327259",
        "reply_users": [
            "UDQBTJ211",
            "U050XKVAGKF",
            "U016VUZGUUQ",
            "UCGAK10LS",
            "U013ZLJARC7",
            "UKB1S7ZMY",
            "U0296ACR13M",
            "U02QC0PPER3"
        ],
        "replies": [
            {
                "user": "UDQBTJ211",
                "ts": "1680632462.878839"
            },
            {
                "user": "U050XKVAGKF",
                "ts": "1680632687.062039"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1680642020.570359"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1680654191.497209"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1680690146.248489"
            },
            {
                "user": "UKB1S7ZMY",
                "ts": "1680700640.141419"
            },
            {
                "user": "UKB1S7ZMY",
                "ts": "1680700766.397499"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1680701230.373259"
            },
            {
                "user": "UKB1S7ZMY",
                "ts": "1680701309.156079"
            },
            {
                "user": "UKB1S7ZMY",
                "ts": "1680701426.560359"
            },
            {
                "user": "U0296ACR13M",
                "ts": "1680764953.591719"
            },
            {
                "user": "U02QC0PPER3",
                "ts": "1684077799.066499"
            },
            {
                "user": "U02QC0PPER3",
                "ts": "1684079263.327259"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n97Pe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been thinking about how the state of a running program could be modeled as the definition of a program changing over time. This seems closely related to \"image\" based programming systems, right? Does anyone have thoughts or reading related to this?\n\n(I got there thinking about the branchable\/forkable database trend which tries to tie program version to state version.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1680632462.878839",
        "edited": {
            "user": "UDQBTJ211",
            "ts": "1680632505.000000"
        },
        "client_msg_id": "9f99bf65-5c07-4dc8-8e13-170f36354bf5",
        "text": "I'm not sure I follow. Does the definition of a program change at runtime?\n\nDo you mean to include user inputs as part of the definition?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1680622758.013259",
        "parent_user_id": "UKB1S7ZMY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EdR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not sure I follow. Does the definition of a program change at runtime?\n\nDo you mean to include user inputs as part of the definition?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U050XKVAGKF",
        "type": "message",
        "ts": "1680632687.062039",
        "client_msg_id": "7842E3B9-A285-4FE5-A285-6062201C784D",
        "text": "Would you consider something like Redux or Recoil and a React SPA as an image? ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "62aeda17b68c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-03-30\/5047249545681_62aeda17b68c49dcec4d_72.jpg",
            "first_name": "greg",
            "real_name": "greg kavanagh",
            "display_name": "greg kavanagh",
            "team": "T5TCAFTA9",
            "name": "greg.kavanagh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1680622758.013259",
        "parent_user_id": "UKB1S7ZMY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gbcl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would you consider something like Redux or Recoil and a React SPA as an image? "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1680642020.570359",
        "edited": {
            "user": "U016VUZGUUQ",
            "ts": "1680642074.000000"
        },
        "client_msg_id": "649dece9-4714-44a6-9a8c-a80108051bed",
        "text": "I do think about this a lot, particularly in the context of partial evaluation, where (in short) you can supply part of the arguments to a program and get a result program that has all the consequences of that argument baked in (as opposed to partial application, where you supplying an argument probably just builds a closure).\n\nI mean, a program changing over time is kind of how beta reduction is technically defined, right? Transformation from one lambda term to the next. The problem is, implementations using that strategy aren't (IMO) really feasible. They're not efficient, and there tends to be ambiguity as to the next step, where IIRC different choices determine whether the thing even converges.\n\nOne of my goals is a computational formalism that efficiently supports partial evaluation and this sort of program -&gt; program mindset in general. (Key point: you want to be able to output \"data\", therefore data is a program)\n\nI'm not precisely sure what you mean by the forkable database trend. Can you give an example? I feel like I've heard of a couple different things that answer that description in very different ways.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1680622758.013259",
        "parent_user_id": "UKB1S7ZMY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rq5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I do think about this a lot, particularly in the context of partial evaluation, where (in short) you can supply part of the arguments to a program and get a result program that has all the consequences of that argument baked in (as opposed to partial application, where you supplying an argument probably just builds a closure).\n\nI mean, a program changing over time is kind of how beta reduction is technically defined, right? Transformation from one lambda term to the next. The problem is, implementations using that strategy aren't (IMO) really feasible. They're not efficient, and there tends to be ambiguity as to the next step, where IIRC different choices determine whether the thing even converges.\n\nOne of my goals is a computational formalism that efficiently supports partial evaluation and this sort of program -> program mindset in general. (Key point: you want to be able to output \"data\", therefore data is a program)\n\nI'm not precisely sure what you mean by the forkable database trend. Can you give an example? I feel like I've heard of a couple different things that answer that description in very different ways."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1680654191.497209",
        "client_msg_id": "2bf19fbe-a65a-4d8a-b3c5-23da8005b9bf",
        "text": "<@UKB1S7ZMY> I <https:\/\/twitter.com\/NickSmit_\/status\/1563114360360222720|tweeted about this> a while ago. At some point in the future, I'd like to develop a programming environment based on this principle.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1680622758.013259",
        "parent_user_id": "UKB1S7ZMY",
        "attachments": [
            {
                "from_url": "https:\/\/twitter.com\/NickSmit_\/status\/1563114360360222720",
                "ts": 1661510479,
                "id": 1,
                "original_url": "https:\/\/twitter.com\/NickSmit_\/status\/1563114360360222720",
                "fallback": "<https:\/\/twitter.com\/NickSmit_|@NickSmit_>: Something I’ve recently realized: a running program is just a static program with some extra data (an event history). There’s no reason we shouldn’t be able to fork, edit, undo &amp; redo running programs (and archive them) just as we do with static ones.",
                "text": "Something I’ve recently realized: a running program is just a static program with some extra data (an event history). There’s no reason we shouldn’t be able to fork, edit, undo &amp; redo running programs (and archive them) just as we do with static ones.",
                "author_name": "Nick Smith",
                "author_link": "https:\/\/twitter.com\/NickSmit_\/status\/1563114360360222720",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1626448356049571842\/LFXhkiZC_normal.jpg",
                "author_subname": "@NickSmit_",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+Odw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UKB1S7ZMY"
                            },
                            {
                                "type": "text",
                                "text": " I "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/NickSmit_\/status\/1563114360360222720",
                                "text": "tweeted about this"
                            },
                            {
                                "type": "text",
                                "text": " a while ago. At some point in the future, I'd like to develop a programming environment based on this principle."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]