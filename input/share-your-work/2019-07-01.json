[
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1561971159.126900",
        "client_msg_id": "92c8efd1-3009-4122-a0ff-f1ab36a02950",
        "text": "I didn't understand how this example\n\n```\nmatch String.toInt a, String.toInt b with\n| Ok a, Ok b -&gt;\n    sum = a + b\n| _ -&gt;\n    Debug.log(â€œError parsing integers);\n    sum = 0\n```\n\nsolves a class of errors. I get that the compiler will complain if I don't handle both situations but I still have a bug and any code that calls this function can still fail, silently if either debug.log is off or effectively silently if such messages are buried in a sea of output. Worse all the code calling this will fail at runtime so I need unit tests for all code calling this function. If types are supposed to save me from bugs this doesn't seem like an example of that is it?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "avhg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I didn't understand how this example\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "match String.toInt a, String.toInt b with\n| Ok a, Ok b ->\n    sum = a + b\n| _ ->\n    Debug.log(\"Error parsing integers);\n    sum = 0\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nsolves a class of errors. I get that the compiler will complain if I don't handle both situations but I still have a bug and any code that calls this function can still fail, silently if either debug.log is off or effectively silently if such messages are buried in a sea of output. Worse all the code calling this will fail at runtime so I need unit tests for all code calling this function. If types are supposed to save me from bugs this doesn't seem like an example of that is it?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1562007487.127300",
        "client_msg_id": "dde02229-3eb3-401d-942d-0cdebad3bcdb",
        "text": "I agree <@UC6997THT>, i think the value proposition of types has to exist at development time to help us build better abstractions, they can't serve as those abstractions, which is often how I feel there presented",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ljc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I agree "
                            },
                            {
                                "type": "user",
                                "user_id": "UC6997THT"
                            },
                            {
                                "type": "text",
                                "text": ", i think the value proposition of types has to exist at development time to help us build better abstractions, they can't serve as those abstractions, which is often how I feel there presented"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1562007704.127500",
        "client_msg_id": "2ff0e15a-db2e-47b2-a071-1c14d7424156",
        "text": "This code sample isn't actual Dark syntax. Or at least that's how I interpreted it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ye7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This code sample isn't actual Dark syntax. Or at least that's how I interpreted it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKQT95T1V",
        "type": "message",
        "ts": "1562008383.127700",
        "client_msg_id": "76b53448-12e7-4956-a0c5-03d52327ef0f",
        "text": "reporting back from watching the Railway-oriented Programming talk is that, yes, it's similar what i've come to understand people refer to as Kleisi composition (e.g. <https:\/\/typelevel.org\/cats\/datatypes\/kleisli.html>). although, he models it a bit differently",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5602bab02fb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c5602bab02fb00f0c9a052ee6c220513.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Alan Johnson",
            "display_name": "Alan Johnson",
            "team": "T5TCAFTA9",
            "name": "alan135",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "attachments": [
            {
                "service_name": "Cats",
                "title": "Cats: Kleisli",
                "title_link": "https:\/\/typelevel.org\/cats\/datatypes\/kleisli.html",
                "text": "Lightweight, modular, and extensible library for functional programming",
                "fallback": "Cats: Cats: Kleisli",
                "image_url": "https:\/\/typelevel.org\/cats\/img\/poster.png",
                "from_url": "https:\/\/typelevel.org\/cats\/datatypes\/kleisli.html",
                "image_width": 484,
                "image_height": 250,
                "image_bytes": 70301,
                "service_icon": "https:\/\/typelevel.org\/cats\/img\/favicon.png",
                "id": 1,
                "original_url": "https:\/\/typelevel.org\/cats\/datatypes\/kleisli.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jlV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "reporting back from watching the Railway-oriented Programming talk is that, yes, it's similar what i've come to understand people refer to as Kleisi composition (e.g. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/typelevel.org\/cats\/datatypes\/kleisli.html"
                            },
                            {
                                "type": "text",
                                "text": "). although, he models it a bit differently"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKQT95T1V",
        "type": "message",
        "ts": "1562008406.128000",
        "client_msg_id": "43f368ef-20e1-4087-8a88-095312776e97",
        "text": "i dig that he manages to get the ideas across without going deep into monad land",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5602bab02fb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c5602bab02fb00f0c9a052ee6c220513.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Alan Johnson",
            "display_name": "Alan Johnson",
            "team": "T5TCAFTA9",
            "name": "alan135",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1561573844.118300",
        "parent_user_id": "U6BRN7A0Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "61XhV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i dig that he manages to get the ideas across without going deep into monad land"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJUGB1XGD",
                    "UHWC9PXBL",
                    "U6BRN7A0Y"
                ],
                "count": 3
            }
        ]
    }
]