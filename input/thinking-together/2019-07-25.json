[
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1564040754.297800",
        "client_msg_id": "71661322-7fa3-4cb2-be55-907cca3fd6f9",
        "text": "My point about TodoMVC is that if you rely on the OS standard library too heavily in your test cases, you are really testing the OS not the language on top of it. One typically does not handle all the myriad complexities that are inside a text edit box. One gets a lot more information about the merits of a language when you code a more complex project like the chess program i mentioned.\n\nIn the Mythical Man Month book, Prof. Brooks mentions that coding speed is relatively constant in terms of lines per day, so a more concise language is indeed more productive. He did not state any data about errors per line, but noted that overall productivity in terms of lines per code finished per day was remarkably constant. So conciseness is a major virtue as it also delivers more cost effectiveness.\n\nThe virtues of conciseness was demonstrated in the switch from Assembler in OS\/360 and the transition to PL1 in the Multics OS. PL\/1 was unfortunately shunned by the other mainframe companies for competitive reasons, and thus COBOL was enthroned, beating out the other contender FORTRAN, but PL\/1 was much more concise and productive than COBOL. But the most productive and effective language has never been adopted as the standard by the programming community, which overall pursues maximal billable hours rather than maximum cost effectiveness. This is how Java become #1 in enterprise coding. The staffers wanted the most verbose, most ponderous and spaghetti-capable language available.\n\nThose of us rebels who like to work in less popular languages purely for productivity gains of small teams, will always be aware of nice languages that are overlooked.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563646806.006100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0c=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My point about TodoMVC is that if you rely on the OS standard library too heavily in your test cases, you are really testing the OS not the language on top of it. One typically does not handle all the myriad complexities that are inside a text edit box. One gets a lot more information about the merits of a language when you code a more complex project like the chess program i mentioned.\n\nIn the Mythical Man Month book, Prof. Brooks mentions that coding speed is relatively constant in terms of lines per day, so a more concise language is indeed more productive. He did not state any data about errors per line, but noted that overall productivity in terms of lines per code finished per day was remarkably constant. So conciseness is a major virtue as it also delivers more cost effectiveness.\n\nThe virtues of conciseness was demonstrated in the switch from Assembler in OS\/360 and the transition to PL1 in the Multics OS. PL\/1 was unfortunately shunned by the other mainframe companies for competitive reasons, and thus COBOL was enthroned, beating out the other contender FORTRAN, but PL\/1 was much more concise and productive than COBOL. But the most productive and effective language has never been adopted as the standard by the programming community, which overall pursues maximal billable hours rather than maximum cost effectiveness. This is how Java become #1 in enterprise coding. The staffers wanted the most verbose, most ponderous and spaghetti-capable language available.\n\nThose of us rebels who like to work in less popular languages purely for productivity gains of small teams, will always be aware of nice languages that are overlooked."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1564045476.298900",
        "client_msg_id": "a0347b18-1734-4ac6-b198-39431d4f8ba7",
        "text": "Speaking of node-and-wire tools, this one reminds me a lot of Luna lang. One original feature I liked was the ability to collapse a number literal into a function   that inputs numbers to save space <https:\/\/lynxtool.com\/doc\/What.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564045476.298900",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1564081016.310200",
        "reply_users": [
            "UC2A2ARPT",
            "U5TCAFTD3"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1564079072.309400"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1564080896.310000"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564081016.310200"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1564081016.310200",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0C1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Speaking of node-and-wire tools, this one reminds me a lot of Luna lang. One original feature I liked was the ability to collapse a number literal into a function   that inputs numbers to save space "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/lynxtool.com\/doc\/What.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "brain",
                "users": [
                    "UFPPABQ7P",
                    "UHWC9PXBL",
                    "ULFEE4J5R",
                    "U79HM6726"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UEF95M2RH",
        "type": "message",
        "ts": "1564046590.299000",
        "client_msg_id": "382925f0-d7db-4782-91a1-6c3415be59c6",
        "text": "Interesting! Thanks for the examples.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4e6637707ff",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c4e6637707ff62601f3dd21ec7626095.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "",
            "real_name": "Michael Arntzenius",
            "display_name": "rntz",
            "team": "T5TCAFTA9",
            "name": "daekharel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563878052.200400",
        "parent_user_id": "UEF95M2RH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J8yD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting! Thanks for the examples."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1564061906.300800",
        "client_msg_id": "075B068F-FED7-43AC-B10F-737C33D20E81",
        "text": "Looks like yet another workflow language at first sight. Is there something new in there?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563828477.079400",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1+KZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Looks like yet another workflow language at first sight. Is there something new in there?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1564077265.304800",
        "client_msg_id": "20CF01C6-6C77-477D-8799-97A1F6A9ED4A",
        "text": "APL\/J are pretty much the same paradigm and I'm not sure how I'd map them on there ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564006215.294100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IR3di",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "APL\/J are pretty much the same paradigm and I'm not sure how I'd map them on there"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1564077293.305800",
        "client_msg_id": "FE2715FD-5DA2-4741-B83A-3B16E840F716",
        "text": "Joy would start with Forth and you could kind of put forth on both sides of the axes",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564006215.294100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UXf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Joy would start with Forth and you could kind of put forth on both sides of the axes"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1564077312.306500",
        "client_msg_id": "F04773E2-0470-49DD-A88A-C9E974DA66C3",
        "text": "so I think you've found the leaks in the abstraction!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564006215.294100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "D3x\/J",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "so I think you've found the leaks in the abstraction!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1564077340.307500",
        "client_msg_id": "70ABE1B7-95C7-490F-9156-C5C9CBF3D7FD",
        "text": "you could argue that APL comes out of functional programming but that wouldn't really be historically correct ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564006215.294100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "neE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you could argue that APL comes out of functional programming but that wouldn't really be historically correct"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564077713.308100",
        "text": "",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "reply_count": 21,
        "reply_users_count": 4,
        "latest_reply": "1564106034.322500",
        "reply_users": [
            "UC2A2ARPT",
            "UL2SJ88Q3",
            "UJTHWNH2T",
            "UHDQ62M4P"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1564077785.308200"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564077896.308400"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564078100.308600"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564078234.308800"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564078297.309000"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564078513.309200"
            },
            {
                "user": "UL2SJ88Q3",
                "ts": "1564081848.310400"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564084100.310600"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564084166.311000"
            },
            {
                "user": "UL2SJ88Q3",
                "ts": "1564085056.313300"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564085224.313500"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564085325.313700"
            },
            {
                "user": "UL2SJ88Q3",
                "ts": "1564085367.313900"
            },
            {
                "user": "UL2SJ88Q3",
                "ts": "1564085505.314100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564085805.314300"
            },
            {
                "user": "UJTHWNH2T",
                "ts": "1564094995.314500"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564097489.318700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564097662.318900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564097751.319300"
            },
            {
                "user": "UL2SJ88Q3",
                "ts": "1564099501.320300"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1564106034.322500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "fallback": "[July 25th, 2019 1:57 AM] magicmouse94937: JS is an intrinsically fragile language. It is incompatible with all the known research on proving programs correct, which is going on in Academia. I don't mind if it is JS under the hood in order to run in the browser; that is a current requirement (which may be relaxed in the future as WebASM evolves). The two main things that will distinguish the next generation of programming languages is 1) creating an ecosystem of interchangeable parts, and 2) drastically reducing the chance for error by the human programmer, which means both on the front side, by having the compiler make it very difficult to make an error, and also when an error does happen make it trivial to fix it.\n\nIf your code doesn't work, it doesn't matter how pretty\/fun it was to make. If nobody can understand your work, or you can't easily share it, then the world will continue to accumulate billions of lines of code. There is so much code today, yet it is very hard to use. So many dependencies crop up, that the final size of projects that one would think would be modest can be staggering.\n\nIn the regard of interchangeable parts, the software field is way behind the hardware guys. They put in chips all the time that have clear specifications on how they are to be wired up, and they have delivered more than a million to 1 price\/performance improvement over the last 25 years. Can software even claim 10:1  improvement over the last 25 years?",
                "ts": "1564041432.068400",
                "author_id": "UEQ6M68H0",
                "author_subname": "Edward de Jong",
                "channel_id": "CCL5VVBAN",
                "is_msg_unfurl": true,
                "is_reply_unfurl": true,
                "text": "JS is an intrinsically fragile language. It is incompatible with all the known research on proving programs correct, which is going on in Academia. I don't mind if it is JS under the hood in order to run in the browser; that is a current requirement (which may be relaxed in the future as WebASM evolves). The two main things that will distinguish the next generation of programming languages is 1) creating an ecosystem of interchangeable parts, and 2) drastically reducing the chance for error by the human programmer, which means both on the front side, by having the compiler make it very difficult to make an error, and also when an error does happen make it trivial to fix it.\n\nIf your code doesn't work, it doesn't matter how pretty\/fun it was to make. If nobody can understand your work, or you can't easily share it, then the world will continue to accumulate billions of lines of code. There is so much code today, yet it is very hard to use. So many dependencies crop up, that the final size of projects that one would think would be modest can be staggering.\n\nIn the regard of interchangeable parts, the software field is way behind the hardware guys. They put in chips all the time that have clear specifications on how they are to be wired up, and they have delivered more than a million to 1 price\/performance improvement over the last 25 years. Can software even claim 10:1  improvement over the last 25 years?",
                "author_name": "Edward de Jong",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/UEQ6M68H0",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "color": "D0D0D0",
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1564041432068400?thread_ts=1563882502002000&cid=CCL5VVBAN",
                "is_share": true,
                "footer": "Thread in Slack Conversation"
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564077785.308200",
        "client_msg_id": "e0ab4921-700a-4966-a74c-b381a38c8d25",
        "text": "&gt; It is incompatible with all the known research on proving programs correct, which is going on in Academia.\n\nThis doesn't square with Elm, or PureScript, does it? Those are languages that seem to do a remarkable job of offering strict guarantees about correctness, despite the alleged impurity of the underlying platform.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gJ82i",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It is incompatible with all the known research on proving programs correct, which is going on in Academia."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nThis doesn't square with Elm, or PureScript, does it? Those are languages that seem to do a remarkable job of offering strict guarantees about correctness, despite the alleged impurity of the underlying platform."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564077896.308400",
        "client_msg_id": "6e2f6f7d-155f-4b5f-a9b9-768d398e8dfb",
        "text": "&gt; which may be relaxed in the future as WebASM evolves\n\nWASM (as it is more commonly known) might serve well as a functional core, but you still need to use JS APIs to do any useful work, and I don't believe there's any plan to change that. My understanding is that JS will continue to be an important part of anything built on the web platform, no matter how much leverage you're able to get from WASM.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O1U",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "which may be relaxed in the future as WebASM evolves"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nWASM (as it is more commonly known) might serve well as a functional core, but you still need to use JS APIs to do any useful work, and I don't believe there's any plan to change that. My understanding is that JS will continue to be an important part of anything built on the web platform, no matter how much leverage you're able to get from WASM."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564078100.308600",
        "client_msg_id": "d2978470-4c55-4236-a99a-26fe0de4454b",
        "text": "&gt; The two main things that will distinguish the next generation of programming languages is 1) creating an ecosystem of interchangeable parts, and 2) drastically reducing the chance for error by the human programmer\n\nI'd wager that if you took a survey of folks in this Slack — people who have spent considerable portions of their careers considering these exact issues — you'd find a spectrum of people who vary from strong agreement to strong disagreement with that statement. I, personally, am so far on one end that I'd say I \"stringly disagree\" with that statement, in that I feel that there's plenty of room for, and benefit to be had from, a return to TCL-style string-based metaprogramming. More, looser dynamism.\n\nBut I know, without any doubt, that that is just my opinion.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tUS\/l",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The two main things that will distinguish the next generation of programming languages is 1) creating an ecosystem of interchangeable parts, and 2) drastically reducing the chance for error by the human programmer"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nI'd wager that if you took a survey of folks in this Slack — people who have spent considerable portions of their careers considering these exact issues — you'd find a spectrum of people who vary from strong agreement to strong disagreement with that statement. I, personally, am so far on one end that I'd say I \"stringly disagree\" with that statement, in that I feel that there's plenty of room for, and benefit to be had from, a return to TCL-style string-based metaprogramming. More, looser dynamism.\n\nBut I know, without any doubt, that that is just my opinion."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564078234.308800",
        "client_msg_id": "9da716c4-353b-4841-9856-36491f8bf09b",
        "text": "I'd be shocked if the next generation of programming languages were unified under any one umbrella. That's happened before, sure, but I expect it to get rarer as our technology matures. Rather, as the recent news about Cables and Nodes shows, we should expect every current approach to be furthered equally.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rut",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd be shocked if the next generation of programming languages were unified under any one umbrella. That's happened before, sure, but I expect it to get rarer as our technology matures. Rather, as the recent news about Cables and Nodes shows, we should expect every current approach to be furthered equally."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564078297.309000",
        "client_msg_id": "e55fa3f6-7e6e-4f0b-bf9e-5c71cb0d41b0",
        "text": "&gt; If your code doesn't work, it doesn't matter how pretty\/fun it was to make.\n\nThere's an implication here that JS doesn't work. Was that your intent?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UJft",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If your code doesn't work, it doesn't matter how pretty\/fun it was to make."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nThere's an implication here that JS doesn't work. Was that your intent?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564078513.309200",
        "client_msg_id": "41793b77-4bbf-475e-8b11-5248e273a5a7",
        "text": "&gt; They have delivered more than a million to 1 price\/performance improvement over the last 25 years. Can software even claim 10:1  improvement over the last 25 years?\n\nThis is totally an apples-to-oranges comparison for a tremendous number of reasons, but I will offer one angle of consideration that makes the mistake of taking your claim seriously:\n\nThe number of people who are writing software now.. who are even _able_ to write software.. has grown much, much faster than the number of people who are able to make their own hardware.\n\nMake of that what you will.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fJ8",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "They have delivered more than a million to 1 price\/performance improvement over the last 25 years. Can software even claim 10:1  improvement over the last 25 years?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nThis is totally an apples-to-oranges comparison for a tremendous number of reasons, but I will offer one angle of consideration that makes the mistake of taking your claim seriously:\n\nThe number of people who are writing software now.. who are even "
                            },
                            {
                                "type": "text",
                                "text": "able",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to write software.. has grown much, much faster than the number of people who are able to make their own hardware.\n\nMake of that what you will."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564079072.309400",
        "client_msg_id": "bc0eaa47-ee44-48f6-9cba-077061e5a296",
        "text": "There are some nice UI ideas in this one. Thanks for the link!\n\nI don't quite see the Luna connection, though. Care to elaborate?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564045476.298900",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pMX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are some nice UI ideas in this one. Thanks for the link!\n\nI don't quite see the Luna connection, though. Care to elaborate?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFS53UWE5",
        "type": "message",
        "ts": "1564079198.309600",
        "client_msg_id": "d25f5017-84e7-4282-9033-1fbb7323087e",
        "text": "<@UCGAK10LS> This is pretty interesting due to the inspirations they're taking (Houdini) and from the target application (realtime interactive graphics and others). On top of this, it's a tool which they clearly use day-to-day, which is great!\n\nIt seems like it's more on the dataflow side, compared to a pure-functional language approach like Luna, but still pretty interesting! :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a88832bbbfe7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-12\/1359700849458_a88832bbbfe7c26df530_72.jpg",
            "first_name": "John",
            "real_name": "John Austin",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "kleptine",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563899980.265700",
        "parent_user_id": "UFS53UWE5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "42fiJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " This is pretty interesting due to the inspirations they're taking (Houdini) and from the target application (realtime interactive graphics and others). On top of this, it's a tool which they clearly use day-to-day, which is great!\n\nIt seems like it's more on the dataflow side, compared to a pure-functional language approach like Luna, but still pretty interesting! "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1564079990.309800",
        "client_msg_id": "d6773c8e-8e91-4102-9441-191e370fe6d0",
        "text": "On Excel: wouldn't it be right over to the right in terms of state?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564006215.294100",
        "parent_user_id": "UJTHWNH2T",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VF2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On Excel: wouldn't it be right over to the right in terms of state?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5TCAFTD3",
        "type": "message",
        "ts": "1564080896.310000",
        "client_msg_id": "a746ff23-d6e0-4e30-9903-49440015f411",
        "text": "I guess it just reminds me of any node and wire tool. Not really Luna specifically",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7c31dc735c6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-09-11\/433781465829_7c31dc735c6c1257fe1f_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Krouse",
            "display_name": "stevekrouse",
            "team": "T5TCAFTA9",
            "name": "stevekrouse",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564045476.298900",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3wSl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess it just reminds me of any node and wire tool. Not really Luna specifically"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564081016.310200",
        "client_msg_id": "0d71aa18-7a48-4f2e-87db-ae4b782dd335",
        "text": "Haha. Yeah, they do all have a pretty unexciting sameness to them.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564045476.298900",
        "parent_user_id": "U5TCAFTD3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0X5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Haha. Yeah, they do all have a pretty unexciting sameness to them."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL2SJ88Q3",
        "type": "message",
        "ts": "1564081848.310400",
        "client_msg_id": "ef6f1181-c40b-4a1f-bdef-e157e300e5c2",
        "text": "&gt; but you still need to use JS APIs to do any useful work, and I don't believe there's any plan to change that\n\nCurious where you source that... Everything I've read makes it sound like the current limitations that require js are meant to be temporary until wasm matures a bit more, not inherent to the design",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ea40cf1a7c83",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-24\/8076913595155_ea40cf1a7c836d55cf1c_72.png",
            "first_name": "Andrew",
            "real_name": "Andrew Beyer",
            "display_name": "abeyer",
            "team": "T5TCAFTA9",
            "name": "beyer.andrew",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/mqwR",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but you still need to use JS APIs to do any useful work, and I don't believe there's any plan to change that"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nCurious where you source that... Everything I've read makes it sound like the current limitations that require js are meant to be temporary until wasm matures a bit more, not inherent to the design"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564084100.310600",
        "client_msg_id": "4c13ccea-1f6a-4fb4-9b08-32c549b3a3e4",
        "text": "Here's a quote from <http:\/\/webassembly.org|webassembly.org>\n\n&gt; WebAssembly modules will be able to call into and out of the JavaScript context and access browser functionality through the same Web APIs accessible from JavaScript.\n\nI should have said \"Web APIs\" instead of \"JS APIs\". Basically, the APIs that expose browser functionality to your code. Those APIs are designed around JS semantics, so there's probably no escaping some dissonance if you're trying to run a very pure, safe language inside WASM but still actually make something that people can use.\n\n(Yes, this is not that different from running a pure, safe language on top of any other platform designed for C or POSIX or what have you.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wvT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's a quote from "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/webassembly.org",
                                "text": "webassembly.org"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "WebAssembly modules will be able to call into and out of the JavaScript context and access browser functionality through the same Web APIs accessible from JavaScript."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nI should have said \"Web APIs\" instead of \"JS APIs\". Basically, the APIs that expose browser functionality to your code. Those APIs are designed around JS semantics, so there's probably no escaping some dissonance if you're trying to run a very pure, safe language inside WASM but still actually make something that people can use.\n\n(Yes, this is not that different from running a pure, safe language on top of any other platform designed for C or POSIX or what have you.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564084166.311000",
        "client_msg_id": "2f0424e6-96d0-4b28-bbbf-e4a81f91d1c7",
        "text": "I've never heard any mention that there'd be a move to design Web APIs primarily for WASM. I can't point to anything specific, just the impression I got time and again following the \"extensible web manifesto\" crowd.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9InA+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've never heard any mention that there'd be a move to design Web APIs primarily for WASM. I can't point to anything specific, just the impression I got time and again following the \"extensible web manifesto\" crowd."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULTSNR8LF",
        "type": "message",
        "ts": "1564084167.311200",
        "client_msg_id": "8958eba9-7b1a-4f9f-92d8-4505c3321618",
        "text": "Hi all, thanks for the invite <@U5TCAFTD3>!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbf9758a8150",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/fbf9758a8150cef0eea447876cd48346.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "",
            "real_name": "Robert Hall",
            "display_name": "Robert Hall",
            "team": "T5TCAFTA9",
            "name": "thebookofrobert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564084167.311200",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1564084294.313000",
        "reply_users": [
            "UC2A2ARPT",
            "ULTSNR8LF"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1564084279.312800"
            },
            {
                "user": "ULTSNR8LF",
                "ts": "1564084294.313000"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1564084294.313000",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wg0Hw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi all, thanks for the invite "
                            },
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": "!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564084279.312800",
        "client_msg_id": "f67a49a9-4288-4142-9f06-a469737955fa",
        "text": "Hi Robert! You should hop over to <#CC2JRGVLK|introduce-yourself> and tell us your backstory.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564084167.311200",
        "parent_user_id": "ULTSNR8LF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "u2a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi Robert! You should hop over to "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CC2JRGVLK"
                            },
                            {
                                "type": "text",
                                "text": " and tell us your backstory."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULTSNR8LF",
        "type": "message",
        "ts": "1564084294.313000",
        "client_msg_id": "4e017a9a-679c-4ebb-b2aa-28a6965508c7",
        "text": "oh, noted!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbf9758a8150",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/fbf9758a8150cef0eea447876cd48346.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "",
            "real_name": "Robert Hall",
            "display_name": "Robert Hall",
            "team": "T5TCAFTA9",
            "name": "thebookofrobert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564084167.311200",
        "parent_user_id": "ULTSNR8LF",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "laKzJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh, noted!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL2SJ88Q3",
        "type": "message",
        "ts": "1564085056.313300",
        "client_msg_id": "7f356450-b409-489d-9528-ca922d98aae8",
        "text": "Maybe I'm overly optimistic, but it seems like it would be a huge waste to define a shared language-agnostic runtime and _not_ start to use that as the fundamental specification of new apis.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ea40cf1a7c83",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-24\/8076913595155_ea40cf1a7c836d55cf1c_72.png",
            "first_name": "Andrew",
            "real_name": "Andrew Beyer",
            "display_name": "abeyer",
            "team": "T5TCAFTA9",
            "name": "beyer.andrew",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h\/99",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe I'm overly optimistic, but it seems like it would be a huge waste to define a shared language-agnostic runtime and "
                            },
                            {
                                "type": "text",
                                "text": "not",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " start to use that as the fundamental specification of new apis."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564085224.313500",
        "client_msg_id": "22f2f4fb-ec02-4a41-ad67-3ac7c6a84ac1",
        "text": "I can see features designed to offer high leverage to both JS programmers and WASM programmers. For instance, when doing Web Audio, you'd want JS programmers to be able to use a browser built-in reverb or compressor, and WASM programmers to be able to request and return raw audio sample data (in a typed arraybuffer or some such).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rlG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I can see features designed to offer high leverage to both JS programmers and WASM programmers. For instance, when doing Web Audio, you'd want JS programmers to be able to use a browser built-in reverb or compressor, and WASM programmers to be able to request and return raw audio sample data (in a typed arraybuffer or some such)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564085325.313700",
        "client_msg_id": "747e3f79-1295-4044-a506-8f4cabb2e8b8",
        "text": "But I don't know that all, or even most, features that it makes sense to add to the browser would so cleanly have a foot in both camps.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QgL7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But I don't know that all, or even most, features that it makes sense to add to the browser would so cleanly have a foot in both camps."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL2SJ88Q3",
        "type": "message",
        "ts": "1564085367.313900",
        "client_msg_id": "9462d9b3-5d74-4dfd-835c-880ba0ed17b8",
        "text": "Sure, no one's going to build a new web API anytime soon that doesn't have a js binding... But I don't see why we shouldn't start separating the specification of the API itself from the specification of languge specific bindings to it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ea40cf1a7c83",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-24\/8076913595155_ea40cf1a7c836d55cf1c_72.png",
            "first_name": "Andrew",
            "real_name": "Andrew Beyer",
            "display_name": "abeyer",
            "team": "T5TCAFTA9",
            "name": "beyer.andrew",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y2s7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sure, no one's going to build a new web API anytime soon that doesn't have a js binding... But I don't see why we shouldn't start separating the specification of the API itself from the specification of languge specific bindings to it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL2SJ88Q3",
        "type": "message",
        "ts": "1564085505.314100",
        "client_msg_id": "bd184a38-b716-45b4-8b09-6174821b9162",
        "text": "Depends on who you ask I suppose... But I've certainly heard plenty of people who wholeheartedly hope that the day you can write your web frontend without ever thinking about js isn't too far off. They certainly see the value in every web API having first class wasm support",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ea40cf1a7c83",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-24\/8076913595155_ea40cf1a7c836d55cf1c_72.png",
            "first_name": "Andrew",
            "real_name": "Andrew Beyer",
            "display_name": "abeyer",
            "team": "T5TCAFTA9",
            "name": "beyer.andrew",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z5ety",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Depends on who you ask I suppose... But I've certainly heard plenty of people who wholeheartedly hope that the day you can write your web frontend without ever thinking about js isn't too far off. They certainly see the value in every web API having first class wasm support"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564085805.314300",
        "client_msg_id": "d4a0cc77-fa99-4138-9809-3479d162923b",
        "text": "Yeah, I'd love to see it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z6vL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I'd love to see it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJTHWNH2T",
        "type": "message",
        "ts": "1564094995.314500",
        "client_msg_id": "ccd4fd72-1643-4ced-8a60-0be15843328f",
        "text": "<@UC2A2ARPT> <https:\/\/github.com\/WebAssembly\/webidl-bindings\/blob\/master\/proposals\/webidl-bindings\/Explainer.md>\n\n&gt; The proposal describes adding a new mechanism to WebAssembly for reliably avoiding unnecessary overhead when calling, or being called, through a Web IDL interface.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g540add01944",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b540add019442ca4a6f3acf8a99024b1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0023-72.png",
            "first_name": "",
            "real_name": "Deklan Webster",
            "display_name": "Deklan Webster",
            "team": "T5TCAFTA9",
            "name": "deklanw",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZdK=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/WebAssembly\/webidl-bindings\/blob\/master\/proposals\/webidl-bindings\/Explainer.md"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The proposal describes adding a new mechanism to WebAssembly for reliably avoiding unnecessary overhead when calling, or being called, through a Web IDL interface."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564097489.318700",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1564097696.000000"
        },
        "client_msg_id": "dc0d3709-bf56-45e7-8730-eeaa22c50feb",
        "text": "Something like that would definitely help bridge the gap between WASM and JS, but that's still not the same as designing web platform APIs with WASM as the primary target.\n\nThere are also all sorts of downsides to WASM compared to JS that we're glossing over — for instance, JS is interpreted and the download, parse, and execute stages happen concurrently whenever possible for the sake of perceived performance. You can't do that with WASM.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Y0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Something like that would definitely help bridge the gap between WASM and JS, but that's still not the same as designing web platform APIs with WASM as the primary target.\n\nThere are also all sorts of downsides to WASM compared to JS that we're glossing over — for instance, JS is interpreted and the download, parse, and execute stages happen concurrently whenever possible for the sake of perceived performance. You can't do that with WASM."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564097662.318900",
        "client_msg_id": "2de44382-de8e-490b-b36f-ab8e76aa70b6",
        "text": "Regardless, the fact that WASM exists as an alternative doesn't address the argument that JS is an \"intrinsically fragile\" language, and thus that it's folly to base Future Of Programming tools on JS.\n\nWhy can't all the following be true?\n• JS is a loose, dynamic, even _sloppy_ language\n• You can build valuable systems atop JS\n• You can include support for JS in your Future-Programming tool, and that can be a good thing",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lWg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regardless, the fact that WASM exists as an alternative doesn't address the argument that JS is an \"intrinsically fragile\" language, and thus that it's folly to base Future Of Programming tools on JS.\n\nWhy can't all the following be true?\n• JS is a loose, dynamic, even "
                            },
                            {
                                "type": "text",
                                "text": "sloppy",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " language\n• You can build valuable systems atop JS\n• You can include support for JS in your Future-Programming tool, and that can be a good thing"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564097751.319300",
        "client_msg_id": "7b8ce4ae-4b56-4504-8217-10f04b563722",
        "text": "Why does the first point (or other similar) render the following points (or other similar) invalid?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FM3to",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why does the first point (or other similar) render the following points (or other similar) invalid?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1564099296.320200",
        "client_msg_id": "8562b9a7-ed82-407f-959c-ec0f65cf304f",
        "text": "What to people think of tools that try to solve \"the designer to developer handoff problem\"? I.e., today usually designers create a static mock-up and hand it off to a developer to implement, but why can't the designer's design tool just output something usable that doesn't need a developer to \"translate\" it?\n\nHere are some recent tools that try to solve this problem:\n\n- Webflow <https:\/\/webflow.com>\n- Framer X <https:\/\/www.framer.com\/>\n\nHere are some older tools that try to solve this problem:\n\n- Interface Builder <https:\/\/en.wikipedia.org\/wiki\/Interface_Builder>\n- DreamWeaver <https:\/\/adobe.com\/products\/dreamweaver>\n- Quartz Composer <https:\/\/en.wikipedia.org\/wiki\/Quartz_Composer>\n- Origami Studio <https:\/\/origami.design\/>\n\nAre there other important ones I'm missing?\n\nInterface Builder dates from 1988, the same year as Adobe Photoshop, so we've had a long time to work on this problem, but I wouldn't say any of these tools have been very successful. What makes this problem so difficult? Are there tools that tried to do this before Interface Builder and DreamWeaver? How did they fare?\n\nWhat's the most successful piece of software to ever try to do this? I'd say it's a toss-up between DreamWeaver and Interface Builder, is there anything more successful I'm missing?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "reply_count": 23,
        "reply_users_count": 8,
        "latest_reply": "1564169344.338500",
        "reply_users": [
            "UFB8STN7K",
            "UH85W1ML1",
            "UHWC9PXBL",
            "UE0ETTCG7",
            "UEQ6M68H0",
            "UC2A2ARPT",
            "UKJGU23KP",
            "UJNJQD2AC"
        ],
        "replies": [
            {
                "user": "UFB8STN7K",
                "ts": "1564100175.320500"
            },
            {
                "user": "UFB8STN7K",
                "ts": "1564100252.320700"
            },
            {
                "user": "UH85W1ML1",
                "ts": "1564100323.321000"
            },
            {
                "user": "UH85W1ML1",
                "ts": "1564100516.321300"
            },
            {
                "user": "UH85W1ML1",
                "ts": "1564100538.321500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1564103674.322200"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1564106678.326600"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1564115375.326900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564120285.327200"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1564148325.330600"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1564154656.331300"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1564155494.331700"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1564155603.332200"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564156936.332400"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1564158726.333500"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1564158780.333700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564160135.333900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564160288.334100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564160468.334300"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1564163326.334800"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1564163590.335600"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1564165085.337700"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1564169344.338500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N\/U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What to people think of tools that try to solve \"the designer to developer handoff problem\"? I.e., today usually designers create a static mock-up and hand it off to a developer to implement, but why can't the designer's design tool just output something usable that doesn't need a developer to \"translate\" it?\n\nHere are some recent tools that try to solve this problem:\n\n- Webflow "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/webflow.com"
                            },
                            {
                                "type": "text",
                                "text": "\n- Framer X "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.framer.com\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nHere are some older tools that try to solve this problem:\n\n- Interface Builder "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Interface_Builder"
                            },
                            {
                                "type": "text",
                                "text": "\n- DreamWeaver "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/adobe.com\/products\/dreamweaver"
                            },
                            {
                                "type": "text",
                                "text": "\n- Quartz Composer "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Quartz_Composer"
                            },
                            {
                                "type": "text",
                                "text": "\n- Origami Studio "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/origami.design\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nAre there other important ones I'm missing?\n\nInterface Builder dates from 1988, the same year as Adobe Photoshop, so we've had a long time to work on this problem, but I wouldn't say any of these tools have been very successful. What makes this problem so difficult? Are there tools that tried to do this before Interface Builder and DreamWeaver? How did they fare?\n\nWhat's the most successful piece of software to ever try to do this? I'd say it's a toss-up between DreamWeaver and Interface Builder, is there anything more successful I'm missing?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-2",
                "users": [
                    "UJVEPCVT6",
                    "UJK8MKYAZ"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UL2SJ88Q3",
        "type": "message",
        "ts": "1564099501.320300",
        "client_msg_id": "59727754-be66-46b4-8e0b-6a65a66508cd",
        "text": "Yeah, I'm certainly not disagreeing those general points.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ea40cf1a7c83",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-11-24\/8076913595155_ea40cf1a7c836d55cf1c_72.png",
            "first_name": "Andrew",
            "real_name": "Andrew Beyer",
            "display_name": "abeyer",
            "team": "T5TCAFTA9",
            "name": "beyer.andrew",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "38Ywi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I'm certainly not disagreeing those general points."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1564100175.320500",
        "client_msg_id": "18ea99dd-c6f4-4b78-9da4-515bb3748de8",
        "text": "This problem could be viewed of as an instance of the broader tension between programming and direct manipulation. You want to use a tool like DreamWeaver, or Photoshop, or Blender, or Premiere Pro, or … in the UI provided, but you also want to capture some abstract constraints and formulas between objects in your scene. “These two divs should be centered and spaced 25% apart, and have the same width” “The nav should have the same color as the footer.”\n\nHowever, direct manipulation tools rarely give you the way to express these constraints or formulas, since that would be complicated, and require visualizing a program to users in an intuitive way. It suffers from the same problems that visual programming languages more generally (paging the expert <@UC2A2ARPT>). Work in the PL community has started to approach this problem of “prodirect manipulation”, specifically Ravi Chugh and co: <https:\/\/ravichugh.github.io\/sketch-n-sketch\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1x=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This problem could be viewed of as an instance of the broader tension between programming and direct manipulation. You want to use a tool like DreamWeaver, or Photoshop, or Blender, or Premiere Pro, or … in the UI provided, but you also want to capture some abstract constraints and formulas between objects in your scene. “These two divs should be centered and spaced 25% apart, and have the same width” “The nav should have the same color as the footer.”\n\nHowever, direct manipulation tools rarely give you the way to express these constraints or formulas, since that would be complicated, and require visualizing a program to users in an intuitive way. It suffers from the same problems that visual programming languages more generally (paging the expert "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": "). Work in the PL community has started to approach this problem of “prodirect manipulation”, specifically Ravi Chugh and co: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/ravichugh.github.io\/sketch-n-sketch\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE0ETTCG7",
                    "UD31LGQKB",
                    "UA14TGLTC",
                    "UC2A2ARPT"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1564100252.320700",
        "client_msg_id": "0b616206-fe35-46f3-b469-47ae21c6c9d6",
        "text": "Ravi’s work takes the extreme approach of showing the user the raw textual program side by side with the direct manipulation UI. But you could imagine a world where the program visualization would be more intuitive to non-programmers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vTP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ravi’s work takes the extreme approach of showing the user the raw textual program side by side with the direct manipulation UI. But you could imagine a world where the program visualization would be more intuitive to non-programmers."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UH85W1ML1",
        "type": "message",
        "ts": "1564100323.321000",
        "client_msg_id": "6a7b0f7c-63f8-4b18-a809-d212b008597f",
        "text": "- IBM Maquetta: <http:\/\/maqetta.org\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2c0e4a3979e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529852667013_2c0e4a3979e8e92c4924_72.jpg",
            "first_name": "",
            "real_name": "Vitorio Miliano",
            "display_name": "vitorio",
            "team": "T5TCAFTA9",
            "name": "vito_futureofcoding",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "attachments": [
            {
                "title": "Maqetta",
                "title_link": "http:\/\/maqetta.org\/",
                "text": "Maqetta - Visual authoring of HTML5 user interfaces - in the browser",
                "fallback": "Maqetta",
                "from_url": "http:\/\/maqetta.org\/",
                "service_icon": "http:\/\/maqetta.org\/favicon.ico",
                "service_name": "maqetta.org",
                "id": 1,
                "original_url": "http:\/\/maqetta.org\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hY4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "- IBM Maquetta: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/maqetta.org\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UH85W1ML1",
        "type": "message",
        "ts": "1564100516.321300",
        "client_msg_id": "4b31e141-a9db-4950-910e-4e6daa39aad1",
        "text": "- React Studio: <https:\/\/reactstudio.com\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2c0e4a3979e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529852667013_2c0e4a3979e8e92c4924_72.jpg",
            "first_name": "",
            "real_name": "Vitorio Miliano",
            "display_name": "vitorio",
            "team": "T5TCAFTA9",
            "name": "vito_futureofcoding",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pbx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "- React Studio: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/reactstudio.com\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UH85W1ML1",
        "type": "message",
        "ts": "1564100538.321500",
        "client_msg_id": "ac8c6172-f36c-4ad7-b5fb-7337bbf20230",
        "text": "- PageDraw: <https:\/\/pagedraw.io\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2c0e4a3979e8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-28\/8529852667013_2c0e4a3979e8e92c4924_72.jpg",
            "first_name": "",
            "real_name": "Vitorio Miliano",
            "display_name": "vitorio",
            "team": "T5TCAFTA9",
            "name": "vito_futureofcoding",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "attachments": [
            {
                "service_name": "Pagedraw",
                "title": "Pagedraw — Compile UI Mockups to React Code",
                "title_link": "https:\/\/pagedraw.io\/",
                "text": "Design your web UI, then use the design directly from code. No more time wasted translating mockups to JSX and CSS. Using Pagedraw is like adding another React developer to your team.",
                "fallback": "Pagedraw: Pagedraw — Compile UI Mockups to React Code",
                "image_url": "https:\/\/ucarecdn.com\/7bbddae0-feed-4db9-80fb-8188f941bf23\/banner.png",
                "from_url": "https:\/\/pagedraw.io\/",
                "image_width": 718,
                "image_height": 250,
                "image_bytes": 410937,
                "service_icon": "https:\/\/pagedraw.io\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/pagedraw.io\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gZ0v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "- PageDraw: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/pagedraw.io\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1564103674.322200",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1564103689.000000"
        },
        "client_msg_id": "0E407F7A-3236-445C-8C26-68B3EF311945",
        "text": "- sketch systems <https:\/\/sketch.systems>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AP7Ca",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "- sketch systems "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/sketch.systems"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1564106034.322500",
        "client_msg_id": "a6dea806-de06-4f0d-aca6-03f0e4e20ddc",
        "text": "look up WASI if you want to know what the future of WASM without JS glue looks like",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564077713.308100",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ir+X9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "look up WASI if you want to know what the future of WASM without JS glue looks like"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1564106678.326600",
        "client_msg_id": "4EAF366C-B24C-4566-A9A4-831EB69ED1E3",
        "text": "<@UFB8STN7K> Great point about the difficulty of representing relationships in direct manipulation tools. Another problem is once you’ve defined one of these relationships, what happens if you then want to move an object in a way that conflicts with the relationship? (E.g., can you drag the two divs defined as 25% apart closer together?)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xhI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": " Great point about the difficulty of representing relationships in direct manipulation tools. Another problem is once you’ve defined one of these relationships, what happens if you then want to move an object in a way that conflicts with the relationship? (E.g., can you drag the two divs defined as 25% apart closer together?)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1564115375.326900",
        "client_msg_id": "cb2b090c-e6ac-44ae-aa68-32a250296916",
        "text": "This is a very interesting topic, very close to my heart. My own Beads project is about creating an executable specification language. The basic concept is a language so concise and precise that it is the replacement for a purely descriptive document, and since it handles autosizing well, it forms the specification of how the layouts change with different orientations and sizes. Apple's SwiftUI does similar things, however, Beads is platform independent (Desktop, Mobile, Web) and not part of Apple's walled garden.  However, Beads doesn't have a fancy graphical aid helper modules yet, and so far in my interviews with designers, the majority of them don't want to consider all the fine details that programmers must consider. So i think for a very long time, no matter how nice the tools get for developers, the handoff problem will continue. I do believe that in the future using \"executable spec\" types of tooling, that the designer and programmer will work more closely together instead of sequentially, as the final product can be built in one step instead of 2; the designer can do the layouts, prep the art, and the programmer can inject that into the business and screen logic, and produce a product in record time.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a9H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a very interesting topic, very close to my heart. My own Beads project is about creating an executable specification language. The basic concept is a language so concise and precise that it is the replacement for a purely descriptive document, and since it handles autosizing well, it forms the specification of how the layouts change with different orientations and sizes. Apple's SwiftUI does similar things, however, Beads is platform independent (Desktop, Mobile, Web) and not part of Apple's walled garden.  However, Beads doesn't have a fancy graphical aid helper modules yet, and so far in my interviews with designers, the majority of them don't want to consider all the fine details that programmers must consider. So i think for a very long time, no matter how nice the tools get for developers, the handoff problem will continue. I do believe that in the future using \"executable spec\" types of tooling, that the designer and programmer will work more closely together instead of sequentially, as the final product can be built in one step instead of 2; the designer can do the layouts, prep the art, and the programmer can inject that into the business and screen logic, and produce a product in record time."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-2",
                "users": [
                    "UJVEPCVT6",
                    "UE0ETTCG7",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1564120285.327200",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1564120942.000000"
        },
        "client_msg_id": "75af71a4-c4a5-4237-ba16-004bdb6381d6",
        "text": "Re Edward's comment:\n&gt; the designer and programmer will work more closely together instead of sequentially\n\nThis is also the direction I can imagine things going.\n\nWhen reflecting on the tools that exist now, which took a job that previously required programming skill and turned it into a job that didn't... what often happened is that these tools _created\/demanded an all new skill_, something that bridged a gap between programming and the domain.\n\nFor instance, computer animation is a relatively new field with specialized skills like: character modeler, rigger, texture artist, pose-to-pose animator, particle\/effects artist. All of these jobs used to be done by traditional programmers working closely with traditional artists, and then the programmers created specialized tools, and the artists forged these new skills so that they could apply their artistic ability directly to that domain using these new tools.\n\nThe same thing happened with indie games (Unity, Unreal, GameMaker), and electronic music (Max\/MSP, Ableton Live, even modular synthesis), and not least of all — spreadsheets!\n\nWe often talk about making tools that allow people to use a computer \"without learning to code\". But the existing successful cases of that, to me, appear to be the cases where programmers made tools that required non-programmers to learn a freshly-invented skill — a skill that ends up being less foreign than programming, a skill designed to be similar to their existing skillset, but an all new skill nonetheless.\n\nSo (back to Edward's point) I do see a bright future for bringing the designer and the programmer closer together — by making tools that allow the designer, after learning a few new complementary skills, to do things themselves that they previously relied on the programmer to do.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1564099296.320200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "auRy\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Re Edward's comment:"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the designer and programmer will work more closely together instead of sequentially"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nThis is also the direction I can imagine things going.\n\nWhen reflecting on the tools that exist now, which took a job that previously required programming skill and turned it into a job that didn't... what often happened is that these tools "
                            },
                            {
                                "type": "text",
                                "text": "created\/demanded an all new skill",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", something that bridged a gap between programming and the domain.\n\nFor instance, computer animation is a relatively new field with specialized skills like: character modeler, rigger, texture artist, pose-to-pose animator, particle\/effects artist. All of these jobs used to be done by traditional programmers working closely with traditional artists, and then the programmers created specialized tools, and the artists forged these new skills so that they could apply their artistic ability directly to that domain using these new tools.\n\nThe same thing happened with indie games (Unity, Unreal, GameMaker), and electronic music (Max\/MSP, Ableton Live, even modular synthesis), and not least of all — spreadsheets!\n\nWe often talk about making tools that allow people to use a computer \"without learning to code\". But the existing successful cases of that, to me, appear to be the cases where programmers made tools that required non-programmers to learn a freshly-invented skill — a skill that ends up being less foreign than programming, a skill designed to be similar to their existing skillset, but an all new skill nonetheless.\n\nSo (back to Edward's point) I do see a bright future for bringing the designer and the programmer closer together — by making tools that allow the designer, after learning a few new complementary skills, to do things themselves that they previously relied on the programmer to do."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-2",
                "users": [
                    "UJVEPCVT6",
                    "UE0ETTCG7",
                    "UJNJQD2AC"
                ],
                "count": 3
            },
            {
                "name": "point_up",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            },
            {
                "name": "brain",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    }
]