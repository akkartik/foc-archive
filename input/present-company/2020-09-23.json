[
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1600858050.001100",
        "client_msg_id": "09433314-C538-491E-A144-6B9522BA5FD0",
        "text": "<https:\/\/www.kilobitspersecond.com\/2020\/09\/22\/people-expect-technology-to-suck\/|https:\/\/www.kilobitspersecond.com\/2020\/09\/22\/people-expect-technology-to-suck\/> this article hits home for me",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600858050.001100",
        "reply_count": 5,
        "reply_users_count": 5,
        "latest_reply": "1600886297.026300",
        "reply_users": [
            "UA14TGLTC",
            "UJ6LDMMN0",
            "U013ZLJARC7",
            "UHWC9PXBL",
            "U016VUZGUUQ"
        ],
        "replies": [
            {
                "user": "UA14TGLTC",
                "ts": "1600861149.001900"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1600865447.002400"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1600868502.003000"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1600874332.025600"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1600886297.026300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "kbps",
                "title": "People expect technology to suck",
                "title_link": "https:\/\/www.kilobitspersecond.com\/2020\/09\/22\/people-expect-technology-to-suck\/",
                "text": "A few jobs ago, I was helping someone with a small tech issue, standing over their shoulder at their computer. The screen was unbelievably dark; I’m not exaggerating when I say it looked to be near 0% brightness. For all I knew, this person had some vision sensitivity or just a basic personal preference that […]",
                "fallback": "kbps: People expect technology to suck",
                "from_url": "https:\/\/www.kilobitspersecond.com\/2020\/09\/22\/people-expect-technology-to-suck\/",
                "id": 1,
                "original_url": "https:\/\/www.kilobitspersecond.com\/2020\/09\/22\/people-expect-technology-to-suck\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zZN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.kilobitspersecond.com\/2020\/09\/22\/people-expect-technology-to-suck\/",
                                "text": "https:\/\/www.kilobitspersecond.com\/2020\/09\/22\/people-expect-technology-to-suck\/"
                            },
                            {
                                "type": "text",
                                "text": " this article hits home for me"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "U013ZLJARC7",
                    "U016VUZGUUQ",
                    "UBSMEUXAA"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1600861149.001900",
        "client_msg_id": "bb83fe51-75ff-492e-8772-f3e501152cb6",
        "text": "Wht re you tlking bout?  My McBook is mzing!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600858050.001100",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nEMK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wht re you tlking bout?  My McBook is mzing!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UJ6LDMMN0",
                    "UHWC9PXBL",
                    "U019CPED6T1",
                    "UCUSW7WVD",
                    "UFB8STN7K"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1600865447.002400",
        "client_msg_id": "1d574cdf-674f-4b0d-8e83-9c5fac0a182c",
        "text": "I guess that it is the nature of technology to both help and \"suck\". From the start people must have this in mind, especially when designing\/building things. As engineer, we often are more focusing on bringing more and more \"help\", which brings it loads of friction too if we don't take care.\n\nMaybe, it would be better if designers\/engineers are focusing on lowering friction before adding any helping feature.\n\nI plead guilty on this...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600858050.001100",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+nYgo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess that it is the nature of technology to both help and \"suck\". From the start people must have this in mind, especially when designing\/building things. As engineer, we often are more focusing on bringing more and more \"help\", which brings it loads of friction too if we don't take care.\n\nMaybe, it would be better if designers\/engineers are focusing on lowering friction before adding any helping feature.\n\nI plead guilty on this..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1600868355.002700",
        "client_msg_id": "49cdd0e7-a943-4d58-b470-22c6b5a5a0c1",
        "text": "<@UPMFG2571> +1 to what <@UA14TGLTC> and <@UJBAJNFLK> said. I'll add that <https:\/\/en.wikipedia.org\/wiki\/The_Art_of_the_Metaobject_Protocol|The Art of the Metaobject Protocol> is a good place to read more about advanced object systems that have things like updating of instances when class prototypes are changed, as Konrad described.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600365145.039700",
        "parent_user_id": "UPMFG2571",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ngRLB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UPMFG2571"
                            },
                            {
                                "type": "text",
                                "text": " +1 to what "
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " said. I'll add that "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/The_Art_of_the_Metaobject_Protocol",
                                "text": "The Art of the Metaobject Protocol"
                            },
                            {
                                "type": "text",
                                "text": " is a good place to read more about advanced object systems that have things like updating of instances when class prototypes are changed, as Konrad described."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1600868502.003000",
        "client_msg_id": "c1c6dca9-aa07-4c4b-923c-76251d93478d",
        "text": "I'll add this longer form discussion of how poorly most sectors are served that Paul Ford dropped yesterday: <https:\/\/www.wired.com\/story\/power-paradox-bad-software\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600858050.001100",
        "parent_user_id": "UHWC9PXBL",
        "attachments": [
            {
                "service_name": "Wired",
                "title": "The Power and Paradox of Bad Software",
                "title_link": "https:\/\/www.wired.com\/story\/power-paradox-bad-software\/",
                "text": "The software industry makes amazing tools for itself, while doctors and scientists are stuck with old code. Tech needs to quit hacking and start listening.",
                "fallback": "Wired: The Power and Paradox of Bad Software",
                "image_url": "https:\/\/media.wired.com\/photos\/5f63fbaf470e71528f4f887b\/191:100\/w_1280,c_limit\/mind-gredade-ford-bad-software.jpg?mbid=social_retweet",
                "from_url": "https:\/\/www.wired.com\/story\/power-paradox-bad-software\/",
                "image_width": 478,
                "image_height": 250,
                "image_bytes": 237576,
                "service_icon": "https:\/\/www.wired.com\/verso\/static\/wired\/assets\/favicon.ccc13c90b928e0b02eaafcfb05864c93a0136dd0.ico",
                "id": 1,
                "original_url": "https:\/\/www.wired.com\/story\/power-paradox-bad-software\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WJ0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'll add this longer form discussion of how poorly most sectors are served that Paul Ford dropped yesterday: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.wired.com\/story\/power-paradox-bad-software\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL",
                    "UAJ9DV971",
                    "UJBAJNFLK",
                    "UA14TGLTC",
                    "UML4ZEKDK"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1600874332.025600",
        "client_msg_id": "DA97D69B-E5A0-4843-9493-427754E2D7C5",
        "text": "i guess my take on this is that the xerox parc vision was for computers to be curiosity enablers: things that gave us the ability to tinker together little models and tools on a lark, that (because they were stored on a hard drive) could be returned to and watered and grown until the curiosities become mature studies that could be shared and act as the starting point for the curiosities of others or stand alone as parts of your intellectual experience that you returned to regularly for fruit. \n\ninstead what we got was computers as curiosity *dis*ablers. weird bureaucracy contraptions that have let people like aetna and uber and facebook design increasingly arcane, complicated, and secret rules for their customers, employees, and users (respectively) to follow, in order for them to deliver further incentives so obscure that they might as well be random (perhaps this is intentional as it makes the a\/b test “more scientific”) across a population of people being basically factory farmed for their output based on the barest and least qualitatively sophisticated metrics imaginable. \n\nif you happen to live inside one of these systems (the hallmark of this is a weird circumstance that you’ve been forced or tricked into: do you want medical treatment? do you want to make a bunch of money with flexible hours? do you want to know what your friends are thinking about?) your experience is specifically determined by an inability to change or have control over any aspect of the experience. that would be detrimental—every one of these companies’ business models depends on its ability to *change behavior* (don’t go to this doctor; give up on your claim; be at this corner in three minutes; buy this—I mean, here’s someone you should be friends with who happens to be skinnier than you and post about this great supplement). \n\nIf you can change your experience, you can use the tool in a different way, and it’s harder to get you to comply with the needs of the company. Instead, apps like this reward behaving as expected, but more importantly punish deviation—you don’t get a reward, you lose track of where you were, you get returned to the start of the process and lose your place etc. punishing deviation punishes curiosity. &lt;\/rant&gt;",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600858050.001100",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xyZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i guess my take on this is that the xerox parc vision was for computers to be curiosity enablers: things that gave us the ability to tinker together little models and tools on a lark, that (because they were stored on a hard drive) could be returned to and watered and grown until the curiosities become mature studies that could be shared and act as the starting point for the curiosities of others or stand alone as parts of your intellectual experience that you returned to regularly for fruit. \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "instead what we got was computers as curiosity "
                            },
                            {
                                "type": "text",
                                "text": "dis",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "ablers. weird bureaucracy contraptions that have let people like aetna and uber and facebook design increasingly arcane, complicated, and secret rules for their customers, employees, and users (respectively) to follow, in order for them to deliver further incentives so obscure that they might as well be random (perhaps this is intentional as it makes the a\/b test “more scientific”) across a population of people being basically factory farmed for their output based on the barest and least qualitatively sophisticated metrics imaginable. \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "if you happen to live inside one of these systems (the hallmark of this is a weird circumstance that you’ve been forced or tricked into: do you want medical treatment? do you want to make a bunch of money with flexible hours? do you want to know what your friends are thinking about?) your experience is specifically determined by an inability to change or have control over any aspect of the experience. that would be detrimental—every one of these companies’ business models depends on its ability to "
                            },
                            {
                                "type": "text",
                                "text": "change behavior",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (don’t go to this doctor; give up on your claim; be at this corner in three minutes; buy this—I mean, here’s someone you should be friends with who happens to be skinnier than you and post about this great supplement). \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "If you can change your experience, you can use the tool in a different way, and it’s harder to get you to comply with the needs of the company. Instead, apps like this reward behaving as expected, but more importantly punish deviation—you don’t get a reward, you lose track of where you were, you get returned to the start of the process and lose your place etc. punishing deviation punishes curiosity. <\/rant>"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01A1C2K8MP",
                    "U013ZLJARC7",
                    "UA14TGLTC",
                    "UML4ZEKDK"
                ],
                "count": 4
            },
            {
                "name": "cake",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1600886297.026300",
        "client_msg_id": "e08bdcfc-49db-47f7-ae19-761129843ecc",
        "text": "<@U013ZLJARC7> that warrants a top-level post. ;)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600858050.001100",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pxJGq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " that warrants a top-level post. ;)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1600907616.041000",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1600907687.000000"
        },
        "client_msg_id": "BE0393E9-082C-404C-9E82-BEEAACFF3495",
        "text": "i think this is an excellent talk, even if it deals primarily with c++ (a language i’ve sworn never to work in): <https:\/\/youtu.be\/W2tWOdzgXHA|https:\/\/youtu.be\/W2tWOdzgXHA> \ni know a common and solid, (or to talk like <@UCUSW7WVD>, steelman) criticism of a language like APL is that it’s great as long as your problem can be elegantly posed as array manipulation. this talk (to be glib) is about how an enormous amount of production c++ code can be reduced to a few library functions (primarily rotate lol). it’s making me think we shouldn’t necessarily evaluate programming languages or libraries by how flexibly they admit extremely divergent domain languages on the immediate syntax level—maybe there’s a test for a language or library’ whose *semantics* are comfortable with abstracting (with very precise slices or joinery) domain-specific stuff back into the language’s native functions and data types with minimal effort. \n\nfeels like an old timey hacker news take but i mean it in a new light, where rather than insisting that everyone’s framework should actually be written in lisp, or c, there may be some abstractions that you can build a language around that map to most of the stuff that people do in the 21st century. something appealingly physical about rotate to me. maybe that’s why i’ve been so into apl (for collections) rebol (for scoping) and forth (for ordering) lately. sorry if basically a diary entry isn’t appropriate for slack. i don’t really know how i’d turn this thought into a blog post lmao",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600907616.041000",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1600909322.041300",
        "reply_users": [
            "UFB8STN7K"
        ],
        "replies": [
            {
                "user": "UFB8STN7K",
                "ts": "1600909322.041300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "GoingNative 2013 C++ Seasoning",
                "title_link": "https:\/\/youtu.be\/W2tWOdzgXHA",
                "author_name": "25msr",
                "author_link": "https:\/\/www.youtube.com\/user\/25msr",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/W2tWOdzgXHA\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: GoingNative 2013 C++ Seasoning",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/W2tWOdzgXHA?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/W2tWOdzgXHA",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/W2tWOdzgXHA"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZE3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i think this is an excellent talk, even if it deals primarily with c++ (a language i’ve sworn never to work in): "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/W2tWOdzgXHA",
                                "text": "https:\/\/youtu.be\/W2tWOdzgXHA"
                            },
                            {
                                "type": "text",
                                "text": " \ni know a common and solid, (or to talk like "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": ", steelman) criticism of a language like APL is that it’s great as long as your problem can be elegantly posed as array manipulation. this talk (to be glib) is about how an enormous amount of production c++ code can be reduced to a few library functions (primarily rotate lol). it’s making me think we shouldn’t necessarily evaluate programming languages or libraries by how flexibly they admit extremely divergent domain languages on the immediate syntax level—maybe there’s a test for a language or library’ whose "
                            },
                            {
                                "type": "text",
                                "text": "semantics",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " are comfortable with abstracting (with very precise slices or joinery) domain-specific stuff back into the language’s native functions and data types with minimal effort. \n\nfeels like an old timey hacker news take but i mean it in a new light, where rather than insisting that everyone’s framework should actually be written in lisp, or c, there may be some abstractions that you can build a language around that map to most of the stuff that people do in the 21st century. something appealingly physical about rotate to me. maybe that’s why i’ve been so into apl (for collections) rebol (for scoping) and forth (for ordering) lately. sorry if basically a diary entry isn’t appropriate for slack. i don’t really know how i’d turn this thought into a blog post lmao"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U012RSHGTFY"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1600909322.041300",
        "client_msg_id": "7309c422-4f32-4650-9cae-8fd52549afca",
        "text": "Higher-order functions are imo the best example of a critical-yet-general language feature for concisely expressing domain-specific abstractions. “No raw loops” is another way of saying ” have a proper higher-order API for your collections”.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600907616.041000",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f=b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Higher-order functions are imo the best example of a critical-yet-general language feature for concisely expressing domain-specific abstractions. “No raw loops” is another way of saying ” have a proper higher-order API for your collections”."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    }
]