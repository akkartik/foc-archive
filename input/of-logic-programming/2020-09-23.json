[
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1600866033.001700",
        "client_msg_id": "ce862af0-0429-482a-976f-9647b33bd33f",
        "text": "Odoyle rules is an implementation of a rules engine that can run in browsers which could offer more understandable semantics and better performance at the abstraction layer its tackling. It's not a new concept but I believe the novel feature of not disguighishing between rules and queries is an important step for the different viewing options i discuss above.\n\n\nHere is a link from <https:\/\/github.com\/CoNarrative\/precept|precept >\nanother logic on the frontend library that, as you say, explains how logic\/rules compete with what react does.\n\n&gt;  Using a rule engine allows us to know exactly what changes from one state to the next. This means we don't need React's diff algorithm or the concept of subscriptions. If we declare views as the consequences of rules, we can automatically point update them when the facts they care about change.\nAnd richer discussion on <https:\/\/www.reddit.com\/r\/Clojure\/comments\/bqh0z4\/virtual_dom_is_pure_overhead\/|reddit >\n\n<https:\/\/www.reddit.com\/r\/Clojure\/comments\/bqh0z4\/virtual_dom_is_pure_overhead\/eo4gyuj?utm_source=share&amp;utm_medium=web2x&amp;context=3>\n\n&gt;  So it would seem a RETE network would be one way to achieve this?\n\n\n\nBut the question i would ask is, if your only concern is what is achievable via programming, then why discuss logic programming at all? Logic programming offers nothing new in terms of end results. What it offers is a mental model and decades of research in algorithms on how to fit problems into it.\n\nGiven all that, I would still use a none logic based front end framework\/library today. Why? because the ecosystem built around them isn't as rich. I'm worried that's  because little to no discussion is generated around merging these two fields.\n\n\nThe browser application ecosystem is ripe with places where applications of decades old algorithms and models could have huge impacts on peoples lives today. The future of programming is going to read more like math from a decade ago, we don't need to discover it, its already there, we need to apply it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600779847.064300",
        "parent_user_id": "UJNJQD2AC",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "CoNarrative\/precept",
                "title_link": "https:\/\/github.com\/CoNarrative\/precept",
                "text": "A declarative programming framework. Contribute to CoNarrative\/precept development by creating an account on GitHub.",
                "fallback": "GitHub: CoNarrative\/precept",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/1686350?s=400&v=4",
                "from_url": "https:\/\/github.com\/CoNarrative\/precept",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/CoNarrative\/precept"
            },
            {
                "service_name": "reddit",
                "title": "Virtual DOM is pure overhead",
                "title_link": "https:\/\/www.reddit.com\/r\/Clojure\/comments\/bqh0z4\/virtual_dom_is_pure_overhead\/",
                "text": "Posted in r\/Clojure by u\/yogthos • 48 points and 36 comments",
                "fallback": "reddit: Virtual DOM is pure overhead",
                "thumb_url": "https:\/\/b.thumbs.redditmedia.com\/r3SE3f_Pyjpb0d9iPWBUGYnXZBqsoAXQuCywH2ux0yE.jpg",
                "from_url": "https:\/\/www.reddit.com\/r\/Clojure\/comments\/bqh0z4\/virtual_dom_is_pure_overhead\/",
                "thumb_width": 140,
                "thumb_height": 70,
                "service_icon": "http:\/\/www.redditstatic.com\/desktop2x\/img\/favicon\/apple-icon-57x57.png",
                "id": 2,
                "original_url": "https:\/\/www.reddit.com\/r\/Clojure\/comments\/bqh0z4\/virtual_dom_is_pure_overhead\/"
            },
            {
                "service_name": "reddit",
                "title": "Virtual DOM is pure overhead",
                "title_link": "https:\/\/www.reddit.com\/r\/Clojure\/comments\/bqh0z4\/virtual_dom_is_pure_overhead\/eo4gyuj?utm_source=share&utm_medium=web2x&context=3",
                "text": "Posted in r\/Clojure by u\/yogthos • 50 points and 36 comments",
                "fallback": "reddit: Virtual DOM is pure overhead",
                "thumb_url": "https:\/\/b.thumbs.redditmedia.com\/r3SE3f_Pyjpb0d9iPWBUGYnXZBqsoAXQuCywH2ux0yE.jpg",
                "from_url": "https:\/\/www.reddit.com\/r\/Clojure\/comments\/bqh0z4\/virtual_dom_is_pure_overhead\/eo4gyuj?utm_source=share&utm_medium=web2x&context=3",
                "thumb_width": 140,
                "thumb_height": 70,
                "service_icon": "http:\/\/www.redditstatic.com\/desktop2x\/img\/favicon\/apple-icon-57x57.png",
                "id": 3,
                "original_url": "https:\/\/www.reddit.com\/r\/Clojure\/comments\/bqh0z4\/virtual_dom_is_pure_overhead\/eo4gyuj?utm_source=share&amp;utm_medium=web2x&amp;context=3"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GZU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Odoyle rules is an implementation of a rules engine that can run in browsers which could offer more understandable semantics and better performance at the abstraction layer its tackling. It's not a new concept but I believe the novel feature of not disguighishing between rules and queries is an important step for the different viewing options i discuss above.\n\n\nHere is a link from "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/CoNarrative\/precept",
                                "text": "precept "
                            },
                            {
                                "type": "text",
                                "text": "\nanother logic on the frontend library that, as you say, explains how logic\/rules compete with what react does.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " Using a rule engine allows us to know exactly what changes from one state to the next. This means we don't need React's diff algorithm or the concept of subscriptions. If we declare views as the consequences of rules, we can automatically point update them when the facts they care about change."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nAnd richer discussion on "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.reddit.com\/r\/Clojure\/comments\/bqh0z4\/virtual_dom_is_pure_overhead\/",
                                "text": "reddit "
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.reddit.com\/r\/Clojure\/comments\/bqh0z4\/virtual_dom_is_pure_overhead\/eo4gyuj?utm_source=share&utm_medium=web2x&context=3"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " So it would seem a RETE network would be one way to achieve this?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\n\n\nBut the question i would ask is, if your only concern is what is achievable via programming, then why discuss logic programming at all? Logic programming offers nothing new in terms of end results. What it offers is a mental model and decades of research in algorithms on how to fit problems into it.\n\nGiven all that, I would still use a none logic based front end framework\/library today. Why? because the ecosystem built around them isn't as rich. I'm worried that's  because little to no discussion is generated around merging these two fields.\n\n\nThe browser application ecosystem is ripe with places where applications of decades old algorithms and models could have huge impacts on peoples lives today. The future of programming is going to read more like math from a decade ago, we don't need to discover it, its already there, we need to apply it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1600884082.007100",
        "client_msg_id": "0e9c227d-312b-4347-9eb2-4f6542eba907",
        "text": "What do folks think about situational calculus? <http:\/\/artint.info\/html\/ArtInt_335.html>\n\nSpecifically I'm interested in ideas and projects where this has been used in \"high level programing\". One example is that I specify I want to \"add a message to a room\". This is my goal. This requires planning, e.g. looking at the current _situation_ I see that the _message is on client, room is a database on server._ Then I determine the sequence of smaller steps (_send message to server_, _append message to db_). Often we do the planning in our heads and write out the plan by hand, but can situational calculus help us use the computer to do this planning if we specify the high level goals? It could even provide multiple altenrnative plans and maybe we could choose? Have you seen examples of such use?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600884082.007100",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1600934027.000100",
        "reply_users": [
            "U8A5MS6R1",
            "UDKTZSD6H",
            "UCGAK10LS",
            "U013ZLJARC7"
        ],
        "replies": [
            {
                "user": "U8A5MS6R1",
                "ts": "1600884159.007300"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1600893324.007700"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1600896431.008400"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1600900379.010200"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1600934027.000100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xzQWn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What do folks think about situational calculus? "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/artint.info\/html\/ArtInt_335.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nSpecifically I'm interested in ideas and projects where this has been used in \"high level programing\". One example is that I specify I want to \"add a message to a room\". This is my goal. This requires planning, e.g. looking at the current "
                            },
                            {
                                "type": "text",
                                "text": "situation",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " I see that the "
                            },
                            {
                                "type": "text",
                                "text": "message is on client, room is a database on server.",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " Then I determine the sequence of smaller steps ("
                            },
                            {
                                "type": "text",
                                "text": "send message to server",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "append message to db",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "). Often we do the planning in our heads and write out the plan by hand, but can situational calculus help us use the computer to do this planning if we specify the high level goals? It could even provide multiple altenrnative plans and maybe we could choose? Have you seen examples of such use?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UHWC9PXBL",
                    "UBSMEUXAA"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1600884159.007300",
        "client_msg_id": "f5fc98de-ca05-4baf-af9f-9d45dd31cd65",
        "text": "Inspired by this tweet <https:\/\/twitter.com\/coreload\/status\/1300949388970213376?s=20>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600884082.007100",
        "parent_user_id": "U8A5MS6R1",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/coreload|@coreload>: <https:\/\/twitter.com\/chatur_shalabh|@chatur_shalabh> Yeah, I'm interested in a domain model that incorporates planning, events, actions independent of host context, programming languages, etc. An example: Yagi is a lightweight interpreter for McCarthy's situation calculus with a system-specific backend API.\n\n<https:\/\/drive.google.com\/file\/d\/165ZPgzIV4zwUNyCJLFvpkvKrLzdcr-4g\/view?usp=drivesdk>",
                "ts": 1599005479,
                "author_name": "🌊 🇺🇸",
                "author_link": "https:\/\/twitter.com\/coreload\/status\/1300949388970213376",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1138681582762389505\/P8LxpqOV_normal.jpg",
                "author_subname": "@coreload",
                "text": "<https:\/\/twitter.com\/chatur_shalabh|@chatur_shalabh> Yeah, I'm interested in a domain model that incorporates planning, events, actions independent of host context, programming languages, etc. An example: Yagi is a lightweight interpreter for McCarthy's situation calculus with a system-specific backend API.\n\n<https:\/\/drive.google.com\/file\/d\/165ZPgzIV4zwUNyCJLFvpkvKrLzdcr-4g\/view?usp=drivesdk>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/coreload\/status\/1300949388970213376?s=20",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/coreload\/status\/1300949388970213376?s=20",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1bpeY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Inspired by this tweet "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/coreload\/status\/1300949388970213376?s=20"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1600893324.007700",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1600893363.000000"
        },
        "client_msg_id": "724eeb98-7382-47ec-b2e0-0c66612fe64e",
        "text": "Would you happen to know of any studies, or your own thoughts on how Situational Calculus compares with Prolog or Datalog + time? Because, I think much of the dynamics that happen with the Prolog + time would directly port over to a system that does this. A comparative study I think would shine some light on how exactly the primitives differ, illuminating both in the process.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600884082.007100",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Eg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would you happen to know of any studies, or your own thoughts on how Situational Calculus compares with Prolog or Datalog + time? Because, I think much of the dynamics that happen with the Prolog + time would directly port over to a system that does this. A comparative study I think would shine some light on how exactly the primitives differ, illuminating both in the process."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1600896431.008400",
        "client_msg_id": "a28c3005-41b7-44bf-913b-1f6acf58a19a",
        "text": "My logic programming is pretty weak so I don't really know (and read the following commentary with that in mind). It seems reasonable to me that Prolog could also achieve the same goal above, and the question could have been formulated in those terms as well. In fact an implementation of Situational Calculus - GOLOG (<https:\/\/en.wikipedia.org\/wiki\/GOLOG>) - is implemented in Prolog.\n\nI went with Situational Calculus because it seems to have a stronger notion of state (situation = state + path_to_the_state) and seems to have a closer model to what I'm thinking of. Prolog seems to be more about deriving new facts and asking \"is this fact reachable\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600884082.007100",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z947",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My logic programming is pretty weak so I don't really know (and read the following commentary with that in mind). It seems reasonable to me that Prolog could also achieve the same goal above, and the question could have been formulated in those terms as well. In fact an implementation of Situational Calculus - GOLOG ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/GOLOG"
                            },
                            {
                                "type": "text",
                                "text": ") - is implemented in Prolog.\n\nI went with Situational Calculus because it seems to have a stronger notion of state (situation = state + path_to_the_state) and seems to have a closer model to what I'm thinking of. Prolog seems to be more about deriving new facts and asking \"is this fact reachable\"."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDKTZSD6H"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1600900379.010200",
        "client_msg_id": "6BFD8055-071C-4602-8EC4-E6F06BDF97FA",
        "text": "I think Datalog + Dedalus provides a more general solution to modelling state changes than this calculus (at a glance).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600884082.007100",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2BB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think Datalog + Dedalus provides a more general solution to modelling state changes than this calculus (at a glance)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    }
]