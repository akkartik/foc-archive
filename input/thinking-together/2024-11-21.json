[
    {
        "user": "U07KR4BMKNW",
        "type": "message",
        "ts": "1732179249.123119",
        "client_msg_id": "8e7b022a-c282-4b44-b405-b12da87d0fd7",
        "text": "To me the best data structure is... function. A closure to be more specific. You can model any other data structures with functions. An expression of the form `user.email` can be understood as `email(user)` or `user(email)`. Obviously, `email` can be defined as `const email = (user) =&gt; user(email)`. Similarly, `obj.foo(x, y)` translates to `obj(foo)(x, y)` or `foo(obj)(x, y)`",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2a947ead3389",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-09-03\/7668845581365_2a947ead33895d0c5a20_72.png",
            "first_name": "Pavel",
            "real_name": "Pavel Mikhailovskii",
            "display_name": "Pavel Mikhailovskii",
            "team": "T5TCAFTA9",
            "name": "pavel.mikhailovskii",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732010694.344219",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YmIgO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To me the best data structure is... function. A closure to be more specific. You can model any other data structures with functions. An expression of the form "
                            },
                            {
                                "type": "text",
                                "text": "user.email",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " can be understood as "
                            },
                            {
                                "type": "text",
                                "text": "email(user)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "text",
                                "text": "user(email)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Obviously, "
                            },
                            {
                                "type": "text",
                                "text": "email",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " can be defined as "
                            },
                            {
                                "type": "text",
                                "text": "const email = (user) => user(email)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Similarly, "
                            },
                            {
                                "type": "text",
                                "text": "obj.foo(x, y)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " translates to "
                            },
                            {
                                "type": "text",
                                "text": "obj(foo)(x, y)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "text",
                                "text": "foo(obj)(x, y)",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "ok_hand",
                "users": [
                    "U02E4DAQGSZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1732222165.497629",
        "client_msg_id": "b19a831f-b33d-4f49-b1ea-2fd20cf432da",
        "text": "Bret Victor's\n\n<https:\/\/worrydream.com\/process\/|PROCESS>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732222165.497629",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1732600997.255539",
        "reply_users": [
            "U03R0B9U1GD",
            "U05SU27S1M2",
            "UBKNXPBAB"
        ],
        "replies": [
            {
                "user": "U03R0B9U1GD",
                "ts": "1732226804.702129"
            },
            {
                "user": "U05SU27S1M2",
                "ts": "1732278318.793449"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1732600997.255539"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+4DKY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Bret Victor's\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/worrydream.com\/process\/",
                                "text": "PROCESS"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03R0B9U1GD",
        "type": "message",
        "ts": "1732226804.702129",
        "client_msg_id": "bea04dc6-ad8a-4e8f-91f1-0c2be2f923eb",
        "text": "note: the final section got added very recently. i wrote about it here if anyone's interested\n<https:\/\/www.todepond.com\/wikiblogarden\/london\/canon\/chaos\/no-escape\/|https:\/\/www.todepond.com\/wikiblogarden\/london\/canon\/chaos\/no-escape\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "78c476adad42",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-08-26\/3992499177765_78c476adad42ab6cfe32_72.png",
            "first_name": "Lu",
            "real_name": "Lu Wilson",
            "display_name": "TodePond",
            "team": "T5TCAFTA9",
            "name": "l2wilson94",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732222165.497629",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PE76a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "note: the final section got added very recently. i wrote about it here if anyone's interested\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.todepond.com\/wikiblogarden\/london\/canon\/chaos\/no-escape\/",
                                "text": "https:\/\/www.todepond.com\/wikiblogarden\/london\/canon\/chaos\/no-escape\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U07BD7U4S4R",
        "type": "message",
        "ts": "1732230633.231099",
        "edited": {
            "user": "U07BD7U4S4R",
            "ts": "1732230691.000000"
        },
        "client_msg_id": "fbee2f21-a485-43d1-a39b-800d19de3857",
        "text": "Hickey used this quote to contrast building your project from 666 different-purpose maps (which all share `assoc` `update` `keys` `vals` `dissoc` `pr-str` `=` `empty?` `merge` `merge-with` and other functions)\nwith building it from 666 different c#\/java classes, which each require their own implementations of everything, and exponential explosion of custom code if you need them to interact, none of which could be reused elsewhere even in the same project.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d0343f70ca57",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-04\/7377091009748_d0343f70ca57c18eeb41_72.png",
            "first_name": "misha",
            "real_name": "misha",
            "display_name": "misha",
            "team": "T5TCAFTA9",
            "name": "misha.akovantsev",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732010694.344219",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b2bN4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hickey used this quote to contrast building your project from 666 different-purpose maps (which all share "
                            },
                            {
                                "type": "text",
                                "text": "assoc",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "update",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "keys",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "vals",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "dissoc",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "pr-str",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "=",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "empty?",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "merge",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "merge-with",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and other functions)\nwith building it from 666 different c#\/java classes, which each require their own implementations of everything, and exponential explosion of custom code if you need them to interact, none of which could be reused elsewhere even in the same project."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "U05BRNRAC4V"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U07BD7U4S4R",
        "type": "message",
        "ts": "1732231575.939409",
        "client_msg_id": "a103bef8-5c8a-4f3b-b283-34a1f041f0ea",
        "text": "&gt; it is a good idea. We have to go further now. We should be implementing our functions or algorithms on top of abstractions, not data structures\n<https:\/\/youtu.be\/cPNkH-7PRTk?t=2243>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d0343f70ca57",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-04\/7377091009748_d0343f70ca57c18eeb41_72.png",
            "first_name": "misha",
            "real_name": "misha",
            "display_name": "misha",
            "team": "T5TCAFTA9",
            "name": "misha.akovantsev",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732010694.344219",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "from_url": "https:\/\/youtu.be\/cPNkH-7PRTk?t=2243",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/cPNkH-7PRTk\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/cPNkH-7PRTk?start=2243&feature=oembed&start=2243&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen title=\"Clojure for Lisp Programmers Part 1 - Rich Hickey\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "id": 1,
                "original_url": "https:\/\/youtu.be\/cPNkH-7PRTk?t=2243",
                "fallback": "YouTube Video: Clojure for Lisp Programmers Part 1 - Rich Hickey",
                "title": "Clojure for Lisp Programmers Part 1 - Rich Hickey",
                "title_link": "https:\/\/youtu.be\/cPNkH-7PRTk?t=2243",
                "author_name": "ClojureTV",
                "author_link": "https:\/\/www.youtube.com\/@ClojureTV",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nnEQ+",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it is a good idea. We have to go further now. We should be implementing our functions or algorithms on top of abstractions, not data structures"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/cPNkH-7PRTk?t=2243"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U02E4DAQGSZ"
                ],
                "count": 1
            },
            {
                "name": "+1::skin-tone-4",
                "users": [
                    "UBN9AFS0N"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U07BD7U4S4R",
        "type": "message",
        "ts": "1732231835.750469",
        "client_msg_id": "bf2e87c5-4dbd-47ba-aa9b-94131934c3ef",
        "text": "another use in a different context, where idea is: if you share known datastructure as an \"api\" – client has way more options how to interact with it:\n<https:\/\/akovantsev.github.io\/corpus\/hickey#,ten%20data,tRoVyblAGrs,1042,0:17:22to_have_ten_ten_data_structures_with_ten_functions_each_and_that's_super_true_I_think_people_are_learning_in_very_tiny_increments_but_I_believe_that_quite|https:\/\/akovantsev.github.io\/corpus\/hickey#,ten%20data,tRoVyblAGrs,1042,0:17:22to_have_ten_ten[…]ng_in_very_tiny_increments_but_I_believe_that_quite>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d0343f70ca57",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-04\/7377091009748_d0343f70ca57c18eeb41_72.png",
            "first_name": "misha",
            "real_name": "misha",
            "display_name": "misha",
            "team": "T5TCAFTA9",
            "name": "misha.akovantsev",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732010694.344219",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IH5xN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "another use in a different context, where idea is: if you share known datastructure as an \"api\" – client has way more options how to interact with it:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/akovantsev.github.io\/corpus\/hickey#,ten%20data,tRoVyblAGrs,1042,0:17:22to_have_ten_ten_data_structures_with_ten_functions_each_and_that's_super_true_I_think_people_are_learning_in_very_tiny_increments_but_I_believe_that_quite",
                                "text": "https:\/\/akovantsev.github.io\/corpus\/hickey#,ten%20data,tRoVyblAGrs,1042,0:17:22to_have_ten_ten[…]ng_in_very_tiny_increments_but_I_believe_that_quite"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]