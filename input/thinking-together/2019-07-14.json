[
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1563088804.256200",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1563101150.000000"
        },
        "client_msg_id": "1f26aa37-7214-439a-a4f9-183a4db319ed",
        "text": "I'm starting to doubt that named\/non-positional params + first-class functions would even be a real problem, since in many cases where you're passing functions as arguments they need to be bespoke anyway and so the \"wiring\" of names comes for free as you're defining them. Agree or disagree? How often does one pass a premade library function as an argument? It's hard for me to predict how often this would come up without writing real code under this constraint. I wonder if there's some way to measure this in real code bases.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ief",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm starting to doubt that named\/non-positional params + first-class functions would even be a real problem, since in many cases where you're passing functions as arguments they need to be bespoke anyway and so the \"wiring\" of names comes for free as you're defining them. Agree or disagree? How often does one pass a premade library function as an argument? It's hard for me to predict how often this would come up without writing real code under this constraint. I wonder if there's some way to measure this in real code bases."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1563089712.256500",
        "client_msg_id": "8b3e1c51-748d-4cc4-a51e-6eaea3659b8a",
        "text": "Lamdu. There a function call with multiple arguments is just a syntax-sugar for a parameters record.\nThe concern you raise is real and we haven’t quite addressed it yet but I believe that it will also be solved with some projectional syntax sugar.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563013870.229000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5yj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lamdu. There a function call with multiple arguments is just a syntax-sugar for a parameters record.\nThe concern you raise is real and we haven’t quite addressed it yet but I believe that it will also be solved with some projectional syntax sugar."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "hushed",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1563098012.256800",
        "client_msg_id": "411138d4-c984-42aa-b326-481a8f3892ba",
        "text": "Interesting! I'll keep my eye on your progress :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563013870.229000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "N3f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting! I'll keep my eye on your progress "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1563101098.257000",
        "client_msg_id": "b8c9f7eb-ed2c-4560-bb72-a19d086a74fa",
        "text": "<@U79HM6726> Under what circumstances do you bump into this problem when writing lamdu code? Does it come up often?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563013870.229000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PzB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U79HM6726"
                            },
                            {
                                "type": "text",
                                "text": " Under what circumstances do you bump into this problem when writing lamdu code? Does it come up often?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1563102704.258700",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1563102725.000000"
        },
        "client_msg_id": "f54e5d9a-0b9e-44c1-b7eb-3e74325dd5e7",
        "text": "Ah sorry about that, looks like I shared an earlier treatment of the language oriented on describing it's mathematical model. Here's a later work, that focuses on how non-positional parameters, what they call \"Forms\" enable compositionality: <http:\/\/scg.unibe.ch\/archive\/papers\/Ache01aTour.pdf>\nAlso this paper seems very relevant to the discussion here. Explicit namespaces: <http:\/\/scg.unibe.ch\/archive\/papers\/Ache00bExplicitNamespaces.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563013870.229000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=OLc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah sorry about that, looks like I shared an earlier treatment of the language oriented on describing it's mathematical model. Here's a later work, that focuses on how non-positional parameters, what they call \"Forms\" enable compositionality: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/scg.unibe.ch\/archive\/papers\/Ache01aTour.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\nAlso this paper seems very relevant to the discussion here. Explicit namespaces: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/scg.unibe.ch\/archive\/papers\/Ache00bExplicitNamespaces.pdf"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1563102727.259200",
        "client_msg_id": "96232a2e-12ff-4ed0-b65e-300603b205cc",
        "text": "<@UDKTZSD6H> thank you :slightly_smiling_face: I'll have a read",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563013870.229000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Zni",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDKTZSD6H"
                            },
                            {
                                "type": "text",
                                "text": " thank you "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " I'll have a read"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1563105356.259600",
        "client_msg_id": "31e16713-0086-4f5f-a23e-46eca16fe39d",
        "text": "<@UCGAK10LS> actually now that you ask, we already solve some of the problem with syntax sugar",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563013870.229000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/ya",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " actually now that you ask, we already solve some of the problem with syntax sugar"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "<@UCGAK10LS> See this example -\nIn the implementation of `sum`, `fold` wants a “binary operator” function that takes two parameters - an “accumulator” and an “item”. In Haskell, which is based on positional arguments, I’d simply pass the operator “+”. But in Lamdu I can’t because the parameters of “+” are not called “accumulator” and “item”. So instead I use a lambda which uses “+”. However it gets sugared as a “lightweight lambda”, with underlines under the lambda symbol and under its parameters where used. This isn’t too heavyweight and it also gives us helpful places to display the intermediate values of everything (when display of evaluation results is enabled)",
        "files": [
            {
                "id": "FLE1PVAQ5",
                "mode": "tombstone"
            }
        ],
        "upload": true,
        "user": "U79HM6726",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tvu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " See this example -\nIn the implementation of "
                            },
                            {
                                "type": "text",
                                "text": "sum",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "fold",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " wants a “binary operator” function that takes two parameters - an “accumulator” and an “item”. In Haskell, which is based on positional arguments, I’d simply pass the operator “+”. But in Lamdu I can’t because the parameters of “+” are not called “accumulator” and “item”. So instead I use a lambda which uses “+”. However it gets sugared as a “lightweight lambda”, with underlines under the lambda symbol and under its parameters where used. This isn’t too heavyweight and it also gives us helpful places to display the intermediate values of everything (when display of evaluation results is enabled)"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1563105819.259800",
        "client_msg_id": "f157881f-8844-4980-823a-70b2e89f8590",
        "thread_ts": "1563105819.259800",
        "reply_count": 13,
        "reply_users_count": 3,
        "latest_reply": "1563144057.276600",
        "reply_users": [
            "UCGAK10LS",
            "U79HM6726",
            "UJNJQD2AC"
        ],
        "replies": [
            {
                "user": "UCGAK10LS",
                "ts": "1563106480.260100"
            },
            {
                "user": "U79HM6726",
                "ts": "1563106738.260300"
            },
            {
                "user": "U79HM6726",
                "ts": "1563107819.262400"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1563108529.264100"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1563108608.264300"
            },
            {
                "user": "U79HM6726",
                "ts": "1563108772.264500"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1563108905.264700"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1563108970.264900"
            },
            {
                "user": "U79HM6726",
                "ts": "1563109059.265300"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1563143861.275800"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1563143931.276000"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1563144049.276400"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1563144057.276600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1563106480.260100",
        "client_msg_id": "60f1da6e-6df2-4971-96db-db09e8031e3c",
        "text": "Oh cool. Does the sugar happen automatically? Does the programmer still type the full lambda before it gets simplified? Seems like an interesting feature. I'd imagine that for larger functions the lack of an explicit parameter list might harm readability, but at that point the sugar is probably unnecessary anyway.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563105819.259800",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dWHT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oh cool. Does the sugar happen automatically? Does the programmer still type the full lambda before it gets simplified? Seems like an interesting feature. I'd imagine that for larger functions the lack of an explicit parameter list might harm readability, but at that point the sugar is probably unnecessary anyway."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1563106738.260300",
        "client_msg_id": "5f7e0ad9-f418-4f63-98db-ef8deb55c743",
        "text": "The sugar happens automatically when the code matches a certain pattern (all parameters are in use is one condition). The conditions are such that it doesn’t tend to happen for larger functions",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563105819.259800",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LLj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The sugar happens automatically when the code matches a certain pattern (all parameters are in use is one condition). The conditions are such that it doesn’t tend to happen for larger functions"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "<@UCGAK10LS>\nTo demonstrate the concept of “projectional syntax sugar” a bit more - here’s a simple example:\nThe record below is equivalent to `{prev: num, next}` in JavaScript or `{prev = num, next}` in Haskell with `NamedFieldPuns` - the “next” field is set to the value of the variable with the same name -",
        "files": [
            {
                "id": "FLFSGHM1V",
                "mode": "tombstone"
            }
        ],
        "upload": true,
        "user": "U79HM6726",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q8yrQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": "\nTo demonstrate the concept of “projectional syntax sugar” a bit more - here’s a simple example:\nThe record below is equivalent to "
                            },
                            {
                                "type": "text",
                                "text": "{prev: num, next}",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in JavaScript or "
                            },
                            {
                                "type": "text",
                                "text": "{prev = num, next}",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " in Haskell with "
                            },
                            {
                                "type": "text",
                                "text": "NamedFieldPuns",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " - the “next” field is set to the value of the variable with the same name -"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1563107036.260900",
        "client_msg_id": "296b9907-70a6-4acb-a210-9ac67c3419fe",
        "thread_ts": "1563107036.260900",
        "reply_count": 12,
        "reply_users_count": 4,
        "latest_reply": "1563171994.279300",
        "reply_users": [
            "U79HM6726",
            "UCGAK10LS",
            "U78TZ437S",
            "UJNJQD2AC"
        ],
        "replies": [
            {
                "user": "U79HM6726",
                "ts": "1563107078.261200"
            },
            {
                "user": "U79HM6726",
                "ts": "1563107118.261600"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1563107251.262000"
            },
            {
                "user": "U79HM6726",
                "ts": "1563107479.262200"
            },
            {
                "user": "U78TZ437S",
                "ts": "1563107927.262800"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1563108060.263000"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1563108080.263200"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1563108112.263500"
            },
            {
                "user": "U79HM6726",
                "ts": "1563108125.263700"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1563145759.277700"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1563145814.277900"
            },
            {
                "user": "U79HM6726",
                "ts": "1563171994.279300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "If I change the name of the “next” variable to “hi” the record becomes with the non-sugared syntax.",
        "files": [
            {
                "id": "FLDH3581J",
                "mode": "tombstone"
            }
        ],
        "upload": true,
        "user": "U79HM6726",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eqj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If I change the name of the “next” variable to “hi” the record becomes with the non-sugared syntax."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1563107078.261200",
        "client_msg_id": "e6f1246b-2330-462b-9442-c9804ea9cdfe",
        "thread_ts": "1563107036.260900",
        "parent_user_id": "U79HM6726",
        "reactions": [
            {
                "name": "exploding_head",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1563107118.261600",
        "client_msg_id": "33ae373f-0474-44cc-a4f4-de379385ae7f",
        "text": "btw afaik “Projectional Syntactical Sugar” is a unique feature in Lamdu which me and <@U78TZ437S> invented. If it exists anywhere else I’d love to hear about it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563107036.260900",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qD5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "btw afaik “Projectional Syntactical Sugar” is a unique feature in Lamdu which me and "
                            },
                            {
                                "type": "user",
                                "user_id": "U78TZ437S"
                            },
                            {
                                "type": "text",
                                "text": " invented. If it exists anywhere else I’d love to hear about it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1563107251.262000",
        "client_msg_id": "471e44f5-902f-49a1-908e-39008e06900f",
        "text": "I guess you could consider it the same thing as the \"code folding\" feature that many IDEs provide",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563107036.260900",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1GA57",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess you could consider it the same thing as the \"code folding\" feature that many IDEs provide"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1563107479.262200",
        "client_msg_id": "03a4fd82-0ac5-4aa7-94f6-98468a50137b",
        "text": "To me folding feels different. It’s a mode of viewing and is maybe more related to turning type or value annotations on or off - it doesn’t affect the code but how you view it. In Lamdu if the code fits the pattern then it will always be displayed sugared.\n\nCaveat: the syntactical sugars are toggle-able in the configuration file and perhaps in a gamified tutorial in the future the sugars will be enabled one by one as you learn them. Btw some basic stuff like “if expressions” are just syntax sugar for pattern matching",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563107036.260900",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ApUMz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To me folding feels different. It’s a mode of viewing and is maybe more related to turning type or value annotations on or off - it doesn’t affect the code but how you view it. In Lamdu if the code fits the pattern then it will always be displayed sugared.\n\nCaveat: the syntactical sugars are toggle-able in the configuration file and perhaps in a gamified tutorial in the future the sugars will be enabled one by one as you learn them. Btw some basic stuff like “if expressions” are just syntax sugar for pattern matching"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Btw here is the same example with syntax sugars disabled.\nAll functions (including the “..” or “+” operators) get a single argument which is a record, constructed by adding fields one by one to the empty record. Instead of “sum” having a parameter in the LHS it equals to a lambda, etc",
        "files": [
            {
                "id": "FLFSKGXQF",
                "mode": "tombstone"
            }
        ],
        "upload": true,
        "user": "U79HM6726",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ObTb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Btw here is the same example with syntax sugars disabled.\nAll functions (including the “..” or “+” operators) get a single argument which is a record, constructed by adding fields one by one to the empty record. Instead of “sum” having a parameter in the LHS it equals to a lambda, etc"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1563107819.262400",
        "client_msg_id": "dd188595-6951-4020-989c-251117edea2f",
        "thread_ts": "1563105819.259800",
        "parent_user_id": "U79HM6726",
        "reactions": [
            {
                "name": "fearful",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U78TZ437S",
        "type": "message",
        "ts": "1563107927.262800",
        "client_msg_id": "beac6ffa-4c53-441d-9217-14f9cf96edfc",
        "text": "Code folding only hides things whereas sugar does less trivial changes to how things are shown when they match a pattern, like the dual of macros",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga3a20a76a69",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/da3a20a76a69532fa83e790e89cb4c6c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "Eyal",
            "real_name": "Eyal Lotem",
            "display_name": "eyal",
            "team": "T5TCAFTA9",
            "name": "eyal.lotem",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563107036.260900",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dcsra",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Code folding only hides things whereas sugar does less trivial changes to how things are shown when they match a pattern, like the dual of macros"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1563108060.263000",
        "client_msg_id": "38bc6215-8869-4923-8bb6-3bae4c7901dc",
        "text": "Sure, but it's the same principle: take the source code and display it slightly differently",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563107036.260900",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NhevK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sure, but it's the same principle: take the source code and display it slightly differently"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1563108080.263200",
        "client_msg_id": "8612fdf3-f0e1-4aa4-86e8-6595362738ec",
        "text": "I'd say code folding is \"simple\" sugaring whereas this is more advanced",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563107036.260900",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YrzbQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd say code folding is \"simple\" sugaring whereas this is more advanced"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1563108112.263500",
        "client_msg_id": "99b85b40-8d00-4e73-9792-03e7b6c43fa4",
        "text": "and in the case of Lamdu the source code is the AST",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563107036.260900",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YLy46",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and in the case of Lamdu the source code is the AST"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1563108125.263700",
        "client_msg_id": "e9b0dfc2-7a8b-4d2a-bbd3-def7160779fa",
        "text": "However code folding tries to give you more choices while we try to reduce choices",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563107036.260900",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hfwX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "However code folding tries to give you more choices while we try to reduce choices"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1563108529.264100",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1563109129.000000"
        },
        "client_msg_id": "5a82b603-f537-4aaf-9b86-97dbf45eb766",
        "text": "Why do you represent records this way? Seems like it introduces an ordering amongst fields.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563105819.259800",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4DBq9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why do you represent records this way? Seems like it introduces an ordering amongst fields."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1563108608.264300",
        "client_msg_id": "12d11746-43a6-4e9b-be9f-850d1be27f56",
        "text": "Also seems to preclude the possibility of having a \"merge\" operator for two records?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563105819.259800",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k4iy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also seems to preclude the possibility of having a \"merge\" operator for two records?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1563108772.264500",
        "client_msg_id": "49118fc0-24b0-4760-8534-63f0450095ee",
        "text": "<@UCGAK10LS> Perhaps “merge” is the way to go, and I’m interested in compelling examples for it.\n\nHowever with “merge” you still have the same ordering freedom where you can either construct a full record or merge many small ones where you have freedom in their ordering.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563105819.259800",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Hx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": " Perhaps “merge” is the way to go, and I’m interested in compelling examples for it.\n\nHowever with “merge” you still have the same ordering freedom where you can either construct a full record or merge many small ones where you have freedom in their ordering."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1563108905.264700",
        "client_msg_id": "f6f5898c-fd79-4bb6-a801-371c007cab39",
        "text": "Unless \"merge\" is an operator from a set of sets to a set :stuck_out_tongue:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563105819.259800",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0FA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Unless \"merge\" is an operator from a set of sets to a set "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1563108970.264900",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1563109022.000000"
        },
        "client_msg_id": "3456612f-aab3-4110-af22-8d783399a5b8",
        "text": "I have no familiarity with language implementation but I tend to (over)think about conceptual simplicity :shrug:. Merge seems naturally to be an operation on a set of sets (or a labelled set I guess... I think there's a mathematical term for it).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563105819.259800",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gs6W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have no familiarity with language implementation but I tend to (over)think about conceptual simplicity "
                            },
                            {
                                "type": "emoji",
                                "name": "shrug",
                                "unicode": "1f937"
                            },
                            {
                                "type": "text",
                                "text": ". Merge seems naturally to be an operation on a set of sets (or a labelled set I guess... I think there's a mathematical term for it)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1563109059.265300",
        "client_msg_id": "a228a9de-091f-4370-80ac-30a48d5532cf",
        "text": "Yeah it appears like a nice idea. Iirc there is some language that has it. But it’s probably more complicated to make type-inference work for it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563105819.259800",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dr5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah it appears like a nice idea. Iirc there is some language that has it. But it’s probably more complicated to make type-inference work for it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1563121360.271000",
        "edited": {
            "user": "UKJGU23KP",
            "ts": "1563122127.000000"
        },
        "client_msg_id": "b343a073-79f5-42b4-80fe-fdbddca69492",
        "text": "Something that happens to me when I’m working with an api is that I’ll need to construct a `Foo`. To do that, I need a `Bar`, a `Baz` and a `Frob`, so then I have to figure out how to construct each of those. Maybe `Bar` is available from a local variable, I have a getter for a `Baz`, but I have to build the `Frob` out of some other bits I have.\n\nI had the idea of a tool that constructs various recipes for getting to your target type based on the local variables and functions you have in scope. Sort of a multi-stage autocomplete. Do any of you know if this is an idea that’s been explored?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563121360.271000",
        "reply_count": 21,
        "reply_users_count": 8,
        "latest_reply": "1563219442.306600",
        "reply_users": [
            "UHWC9PXBL",
            "UKJGU23KP",
            "UFZFETUH1",
            "UCUSW7WVD",
            "UJNJQD2AC",
            "UFEQUBNNT",
            "U5STGTB3J",
            "UL3EE9WR1"
        ],
        "replies": [
            {
                "user": "UHWC9PXBL",
                "ts": "1563122939.272600"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1563123094.272800"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1563123171.273000"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1563124666.273200"
            },
            {
                "user": "UFZFETUH1",
                "ts": "1563128842.273400"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1563129387.273600"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1563142081.275000"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1563142911.275400"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1563142944.275600"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1563168711.278900"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1563194992.283200"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1563195073.283400"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1563195151.283700"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1563196179.292000"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1563198029.292500"
            },
            {
                "user": "UFEQUBNNT",
                "ts": "1563206313.300500"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1563206708.302300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1563207633.302700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1563217138.305800"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1563218071.306400"
            },
            {
                "user": "UL3EE9WR1",
                "ts": "1563219442.306600"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lU8y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Something that happens to me when I’m working with an api is that I’ll need to construct a "
                            },
                            {
                                "type": "text",
                                "text": "Foo",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". To do that, I need a "
                            },
                            {
                                "type": "text",
                                "text": "Bar",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", a "
                            },
                            {
                                "type": "text",
                                "text": "Baz",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and a "
                            },
                            {
                                "type": "text",
                                "text": "Frob",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", so then I have to figure out how to construct each of those. Maybe "
                            },
                            {
                                "type": "text",
                                "text": "Bar",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is available from a local variable, I have a getter for a "
                            },
                            {
                                "type": "text",
                                "text": "Baz",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", but I have to build the "
                            },
                            {
                                "type": "text",
                                "text": "Frob",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " out of some other bits I have.\n\nI had the idea of a tool that constructs various recipes for getting to your target type based on the local variables and functions you have in scope. Sort of a multi-stage autocomplete. Do any of you know if this is an idea that’s been explored?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1563122939.272600",
        "client_msg_id": "28719860-0C6D-4D74-9FDD-E232F3B95445",
        "text": "the closest I can think of is haskell's hoogle search. wouldn't be surprised if jetbrains has some prior art in this area ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563121360.271000",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qq1=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the closest I can think of is haskell's hoogle search. wouldn't be surprised if jetbrains has some prior art in this area"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1563123094.272800",
        "client_msg_id": "49703442-bb33-483c-99ae-57972451de55",
        "text": "I’m a big Hoogle user, hadn’t even made the connection.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563121360.271000",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LFwg=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m a big Hoogle user, hadn’t even made the connection."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1563123171.273000",
        "client_msg_id": "49958ce2-9686-4b98-8ca6-b2161b29c339",
        "text": "I *think* but am not sure that Intellij’s autocompletion is context aware enough that if you’re just making one step, it’ll propose a method that you have the right arguments for. But I don’t think it’ll help if there are multiple hops.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563121360.271000",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pUFm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I "
                            },
                            {
                                "type": "text",
                                "text": "think",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " but am not sure that Intellij’s autocompletion is context aware enough that if you’re just making one step, it’ll propose a method that you have the right arguments for. But I don’t think it’ll help if there are multiple hops."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1563124666.273200",
        "client_msg_id": "8ce25298-954e-4b51-8990-15b9de2dba79",
        "text": "This gave me the good idea to search academic work that references hoogle.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563121360.271000",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1bSF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This gave me the good idea to search academic work that references hoogle."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFZFETUH1",
        "type": "message",
        "ts": "1563128842.273400",
        "client_msg_id": "03a1226a-23d4-4503-8d71-f3a9d8f880b0",
        "text": "I think you should take a look at tools like <https:\/\/github.com\/augustss\/djinn>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga72dfb84ee3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8a72dfb84ee31009c2810f7f590d4ff8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Philipp Krüger",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "philipp.krueger1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563121360.271000",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bVjrG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think you should take a look at tools like "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/augustss\/djinn"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1563129387.273600",
        "client_msg_id": "250edb81-8981-4b3a-b6e2-52da8879a2d4",
        "text": "Thanks, that does look interesting",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563121360.271000",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tsBV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks, that does look interesting"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1563140544.273900",
        "client_msg_id": "48aaff1c-f420-4be9-9f37-af7be902af5a",
        "text": "<@UCGAK10LS>\n\n&gt; \"a function named f with parameters x and y\",  whereas the function named g that you intend to pass as an argument has parameters a and b, so then you have to make a wrapper function around it\n\nWhy do you need to make a wrapper?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563013870.229000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GBr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGAK10LS"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"a function named f with parameters x and y\",  whereas the function named g that you intend to pass as an argument has parameters a and b, so then you have to make a wrapper function around it"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nWhy do you need to make a wrapper?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1563141326.274100",
        "edited": {
            "user": "UJNJQD2AC",
            "ts": "1563141353.000000"
        },
        "client_msg_id": "381a0483-e981-46a2-90bc-4322c99eab11",
        "text": "a concert examples of what your describing:\n\n```\n(defn foo [{:keys [f m]}] (f m))\n\n(defn g [{:keys [a b]}] [a b])\n\n(foo {:f g\n      :m {:a 1 :b 2}})\n;; =&gt; [1 2]\n```",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563013870.229000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/O\/B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "a concert examples of what your describing:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(defn foo [{:keys [f m]}] (f m))\n\n(defn g [{:keys [a b]}] [a b])\n\n(foo {:f g\n      :m {:a 1 :b 2}})\n;; => [1 2]\n"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1563141630.274400",
        "client_msg_id": "fe9cabc8-806d-4ee4-8aa9-c31073201f16",
        "text": "are we calling `{f g :m ...` a wrapper?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563013870.229000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PBlLz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "are we calling "
                            },
                            {
                                "type": "text",
                                "text": "{f g :m ...",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " a wrapper?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1563141781.274600",
        "client_msg_id": "075a7b6a-ef18-4430-b949-2bef6cccce10",
        "text": "In  a small example that might seem like overhead, but in general its not. The caller function is describing things in one context, the arguments are named\/mapped to it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563013870.229000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Klqb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In  a small example that might seem like overhead, but in general its not. The caller function is describing things in one context, the arguments are named\/mapped to it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1563141843.274800",
        "client_msg_id": "3c913f6f-3fd9-47d2-bdb2-448e4641b156",
        "text": "You can put syntax sugar ontop of this, but then it requires readers to know that they have changed context, so the usefulness there will be... situational?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563013870.229000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FC4jI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You can put syntax sugar ontop of this, but then it requires readers to know that they have changed context, so the usefulness there will be... situational?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1563142081.275000",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1563142203.000000"
        },
        "client_msg_id": "4bc4b521-a0be-422d-85d3-df806dba178d",
        "text": "Java has the Guice framework and its notion of `Provider`. But using it only convinced me that tooling here is deeply counter-productive. Making it easy to construct nouns only digs you deeper into the Kingdom of Nouns.[1] Soon things suck just as much as before, except now your old approaches to manage the problem no longer work. No, the solution lies in the other direction, in treating huge graphs of objects as a _code smell_ that indicates bad design.\n\n[1] <https:\/\/steve-yegge.blogspot.com\/2006\/03\/execution-in-kingdom-of-nouns.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563121360.271000",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0fpfw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Java has the Guice framework and its notion of "
                            },
                            {
                                "type": "text",
                                "text": "Provider",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". But using it only convinced me that tooling here is deeply counter-productive. Making it easy to construct nouns only digs you deeper into the Kingdom of Nouns.[1] Soon things suck just as much as before, except now your old approaches to manage the problem no longer work. No, the solution lies in the other direction, in treating huge graphs of objects as a "
                            },
                            {
                                "type": "text",
                                "text": "code smell",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that indicates bad design.\n\n[1] "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/steve-yegge.blogspot.com\/2006\/03\/execution-in-kingdom-of-nouns.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1563142911.275400",
        "client_msg_id": "e5a365c3-0565-4beb-85cd-86c75f601d2b",
        "text": "It's not clear to me what your asking. Could you provide a concrete example?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563121360.271000",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XI50",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's not clear to me what your asking. Could you provide a concrete example?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1563142944.275600",
        "client_msg_id": "6aa2f3e5-3701-443e-b020-90909d39943d",
        "text": "The implementation details might overlap a bit and each might have it's own set of issues.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563121360.271000",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rmys",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The implementation details might overlap a bit and each might have it's own set of issues."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1563143861.275800",
        "edited": {
            "user": "UJNJQD2AC",
            "ts": "1563144540.000000"
        },
        "client_msg_id": "66b51619-d545-45e2-8c79-1c3ccb879bcc",
        "text": "The issue would seem to be that order and names don't matter to us as readers when it comes to addition. Addition is an abstraction layer high enough already.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563105819.259800",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9g6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The issue would seem to be that order and names don't matter to us as readers when it comes to addition. Addition is an abstraction layer high enough already."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1563143931.276000",
        "edited": {
            "user": "UJNJQD2AC",
            "ts": "1563144509.000000"
        },
        "client_msg_id": "4c4a7531-07bd-4f45-b668-ea6a90bfc84f",
        "text": "(reduce + 0 [1 2 3])",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563105819.259800",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Db\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(reduce + 0 [1 2 3])"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1563144049.276400",
        "client_msg_id": "417d5e92-3856-4fbc-a78b-a6d562d7e3c8",
        "text": "Other implantations of fold could benefit from the names though",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563105819.259800",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WMA9+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Other implantations of fold could benefit from the names though"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1563144057.276600",
        "client_msg_id": "56f878e7-5f4d-4192-bd15-75e241f09948",
        "text": "Again, it's contextual I think",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563105819.259800",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x7BA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Again, it's contextual I think"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1563145759.277700",
        "client_msg_id": "b4557286-2ecd-4de3-a2fa-86d610421945",
        "text": "What does \"the dual of macros\" mean?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563107036.260900",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YTS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What does \"the dual of macros\" mean?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1563145814.277900",
        "edited": {
            "user": "UJNJQD2AC",
            "ts": "1563145824.000000"
        },
        "client_msg_id": "34e38f78-6ef7-4912-9cc0-9ed6b825651a",
        "text": "How is code folding giving you more choices?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563107036.260900",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q4jjq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How is code folding giving you more choices?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1563168711.278900",
        "edited": {
            "user": "UFEQUBNNT",
            "ts": "1563168891.000000"
        },
        "client_msg_id": "6f714438-dea7-4582-a7f6-1587f529ca05",
        "text": "<http:\/\/up.csail.mit.edu\/other-pubs\/sloppy-programming.pdf>\n\n&gt; The second interface is an extension to autocomplete, where the system replaces keywords in a text editor with syntactically correct code. This interface is aimed more at expert programmers using an integrated development environment (IDE). As an example of this interface, imagine that a programmer wants to add the next line of text from a stream to a list, using Java. A sloppy completion interface would let them enter \"add line\" and the system might suggest something like \"lines.add(in.readLine())\".\n\nMaybe skip down to the “Quack Eclipse Plugin” heading.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563121360.271000",
        "parent_user_id": "UKJGU23KP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tl9Bu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/up.csail.mit.edu\/other-pubs\/sloppy-programming.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The second interface is an extension to autocomplete, where the system replaces keywords in a text editor with syntactically correct code. This interface is aimed more at expert programmers using an integrated development environment (IDE). As an example of this interface, imagine that a programmer wants to add the next line of text from a stream to a list, using Java. A sloppy completion interface would let them enter \"add line\" and the system might suggest something like \"lines.add(in.readLine())\"."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nMaybe skip down to the “Quack Eclipse Plugin” heading."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "hushed",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1563171994.279300",
        "client_msg_id": "4e0f8f3a-6ae9-4eec-8cce-cb4291dfb553",
        "text": "<@UJNJQD2AC> The choices code folding gives the reader is whether to view things expanded or collapsed",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563107036.260900",
        "parent_user_id": "U79HM6726",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M9ZER",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJNJQD2AC"
                            },
                            {
                                "type": "text",
                                "text": " The choices code folding gives the reader is whether to view things expanded or collapsed"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1563172102.279500",
        "client_msg_id": "19a135fb-b903-46e9-9858-bf68eb86ef7a",
        "text": "<@UJNJQD2AC> the syntax sugar I showed doesn’t hide the conversion, it just displays it very succinctly",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1563013870.229000",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VxT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJNJQD2AC"
                            },
                            {
                                "type": "text",
                                "text": " the syntax sugar I showed doesn’t hide the conversion, it just displays it very succinctly"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]