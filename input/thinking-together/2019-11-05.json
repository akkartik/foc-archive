[
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1572946096.125500",
        "client_msg_id": "25e24d1f-3250-4a91-bb6d-5f63f2055418",
        "text": "well I think we lurch backwards and forwards: things get stodgy then something comes along to make it snappy again. examples: cvs (snappy), then clearcase\/subversion\/etc (omg) then git (snappy!!); Netscape\/IE (stodgy), firefox\/chrome snappy!, then firefox went stodgy, but I understand they're making a comeback too.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572759144.037500",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VlJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "well I think we lurch backwards and forwards: things get stodgy then something comes along to make it snappy again. examples: cvs (snappy), then clearcase\/subversion\/etc (omg) then git (snappy!!); Netscape\/IE (stodgy), firefox\/chrome snappy!, then firefox went stodgy, but I understand they're making a comeback too."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1572946160.125700",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1572946185.000000"
        },
        "client_msg_id": "da31d252-041e-487c-a984-090444f30e32",
        "text": "node snappy, then npm etc etc stodgy then yarn snappy then npm not so bad",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572759144.037500",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ru26k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "node snappy, then npm etc etc stodgy then yarn snappy then npm not so bad"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1572946205.126000",
        "client_msg_id": "86de7966-e905-4b21-859c-0e036183dc42",
        "text": "but I'd rather we just binned the whole stack and started over tbh",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572759144.037500",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wcka+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but I'd rather we just binned the whole stack and started over tbh"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1572946273.126200",
        "client_msg_id": "32651181-99ce-4fc9-86ff-261c4eb6bdb3",
        "text": "I keep having to replace my phone when it goes stodgy, but I understand that's by design :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572759144.037500",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pMmn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I keep having to replace my phone when it goes stodgy, but I understand that's by design "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1572957931.127300",
        "client_msg_id": "58356329-e87f-4fad-83c3-69622f16dca3",
        "text": "<@ULM3U6275>: you're right, <@UC2A2ARPT> is right. The early Macintosh was painfully slow: minutes to start an app. But with no pre-emptive multitasking, no virtual memory, no L1\/L2 cache, and synchronous execution of CPU instructions, it was a real-time system. With careful coding, you could *guarantee* that the latency of certain selected UI gestures involving the mouse or keyboard was below the perceptual threshold. And I definitely *noticed* when this ceased to be the case.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572759144.037500",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9Iz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "ULM3U6275"
                            },
                            {
                                "type": "text",
                                "text": ": you're right, "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " is right. The early Macintosh was painfully slow: minutes to start an app. But with no pre-emptive multitasking, no virtual memory, no L1\/L2 cache, and synchronous execution of CPU instructions, it was a real-time system. With careful coding, you could "
                            },
                            {
                                "type": "text",
                                "text": "guarantee",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that the latency of certain selected UI gestures involving the mouse or keyboard was below the perceptual threshold. And I definitely "
                            },
                            {
                                "type": "text",
                                "text": "noticed",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " when this ceased to be the case."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "ULM3U6275"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1572958346.132600",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1572958844.000000"
        },
        "client_msg_id": "f8da034c-de65-4a70-b2a0-d67389033f9f",
        "text": "<https:\/\/en.wikipedia.org\/wiki\/Constraint_programming>\n*Temporal concurrent constraint programming (TCC) and non-deterministic temporal concurrent constraint programming (MJV) are variants of constraint programming that can deal with time.*\n\nI am really interested in that. Do you know any material on it?\n\nI feel like a lot of boilerplate code today is about wiring\/hardcoding the *temporal constraints* into our codebase. When we want to make sure something works we create the control flow ourselves step by step. Instead, *the computer could help us find the “basic” declarative constraints* we need and *it could generate one (of many) control flow and the correspondent glue code as “implementation”.*\n\nI am really into this idea, I’d really like to explore this, because I realized I just can’t program without that. It feels incredibly lame.\n\n(I am aware of the non-temporal use cases.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "reply_count": 17,
        "reply_users_count": 4,
        "latest_reply": "1572969635.137700",
        "reply_users": [
            "UN57U8V53",
            "UP28ETUSE",
            "UL3CJ7YKC",
            "UHDQ62M4P"
        ],
        "replies": [
            {
                "user": "UN57U8V53",
                "ts": "1572960576.133400"
            },
            {
                "user": "UN57U8V53",
                "ts": "1572960658.133600"
            },
            {
                "user": "UN57U8V53",
                "ts": "1572960716.133800"
            },
            {
                "user": "UP28ETUSE",
                "ts": "1572961216.134100"
            },
            {
                "user": "UP28ETUSE",
                "ts": "1572961477.134600"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1572965191.135100"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1572965322.135300"
            },
            {
                "user": "UN57U8V53",
                "ts": "1572967792.135600"
            },
            {
                "user": "UN57U8V53",
                "ts": "1572967917.135800"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1572968305.136000"
            },
            {
                "user": "UN57U8V53",
                "ts": "1572968525.136200"
            },
            {
                "user": "UN57U8V53",
                "ts": "1572968551.136400"
            },
            {
                "user": "UN57U8V53",
                "ts": "1572968581.136600"
            },
            {
                "user": "UN57U8V53",
                "ts": "1572968651.136800"
            },
            {
                "user": "UN57U8V53",
                "ts": "1572968752.137200"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1572969355.137500"
            },
            {
                "user": "UN57U8V53",
                "ts": "1572969635.137700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vRzE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Constraint_programming"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Temporal concurrent constraint programming (TCC) and non-deterministic temporal concurrent constraint programming (MJV) are variants of constraint programming that can deal with time.",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nI am really interested in that. Do you know any material on it?\n\nI feel like a lot of boilerplate code today is about wiring\/hardcoding the "
                            },
                            {
                                "type": "text",
                                "text": "temporal constraints",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " into our codebase. When we want to make sure something works we create the control flow ourselves step by step. Instead, "
                            },
                            {
                                "type": "text",
                                "text": "the computer could help us find the “basic” declarative constraints",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " we need and "
                            },
                            {
                                "type": "text",
                                "text": "it could generate one (of many) control flow and the correspondent glue code as “implementation”.",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nI am really into this idea, I’d really like to explore this, because I realized I just can’t program without that. It feels incredibly lame.\n\n(I am aware of the non-temporal use cases.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1572960576.133400",
        "client_msg_id": "5c5af9dc-f594-4c62-887e-d0b1f467d484",
        "text": "Haskell is pretty much this due to laziness",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tqb=O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Haskell is pretty much this due to laziness"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1572960658.133600",
        "client_msg_id": "6b26e191-589f-41c8-a7a7-df7c0ee822b7",
        "text": "It takes the \"lazy\" path of using lazy evaluation to do this, and Simon wrote a great book on optimising performance so memory and stack are better optimized",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MnUZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It takes the \"lazy\" path of using lazy evaluation to do this, and Simon wrote a great book on optimising performance so memory and stack are better optimized"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1572960716.133800",
        "edited": {
            "user": "UN57U8V53",
            "ts": "1572960771.000000"
        },
        "client_msg_id": "aea5709e-44c2-4c4b-93ef-b70450e3e5e8",
        "text": "There was some research on trying to do men\/stack optimization automatically, but each function would need to document if\/how it evaluated it's arguments\/results and that was rather messy",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ETU04",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There was some research on trying to do men\/stack optimization automatically, but each function would need to document if\/how it evaluated it's arguments\/results and that was rather messy"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UP28ETUSE",
        "type": "message",
        "ts": "1572961216.134100",
        "client_msg_id": "72b9a27b-bbdc-47ea-86ed-2f829f9a015d",
        "text": "<@UL3CJ7YKC> I think I'm facing similar problems at my day job (where we have to control electrical assets), but I can't say I had any epiphany with the research I've done so far. I can share the papers I've discovered, if you're interested.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7cefc64f7b1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7cefc64f7b1b53513625bf3487ecd16d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "Ionuț",
            "real_name": "Ionuț G. Stan",
            "display_name": "Ionuț G. Stan",
            "team": "T5TCAFTA9",
            "name": "ionut.g.stan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hZGJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UL3CJ7YKC"
                            },
                            {
                                "type": "text",
                                "text": " I think I'm facing similar problems at my day job (where we have to control electrical assets), but I can't say I had any epiphany with the research I've done so far. I can share the papers I've discovered, if you're interested."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UP28ETUSE",
        "type": "message",
        "ts": "1572961477.134600",
        "edited": {
            "user": "UP28ETUSE",
            "ts": "1572964532.000000"
        },
        "client_msg_id": "8ee7871d-f6a7-4580-bc58-7890c4fe902f",
        "text": "This is what I've gathered so far:\n- Temporal Reasoning and Constraint Programming — A Survey\n- Constraint Propagation Algorithms for Temporal Reasoning — A Revised Report\n- Deductive Temporal Reasoning with Constraints\n- A Relational Algebra as a Query Language for Temporal Datalog",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7cefc64f7b1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7cefc64f7b1b53513625bf3487ecd16d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "Ionuț",
            "real_name": "Ionuț G. Stan",
            "display_name": "Ionuț G. Stan",
            "team": "T5TCAFTA9",
            "name": "ionut.g.stan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5r9fz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is what I've gathered so far:\n- Temporal Reasoning and Constraint Programming — A Survey\n- Constraint Propagation Algorithms for Temporal Reasoning — A Revised Report\n- Deductive Temporal Reasoning with Constraints\n- A Relational Algebra as a Query Language for Temporal Datalog"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UD3AK9JRF"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1572963665.134800",
        "client_msg_id": "e0df32f0-553c-43ff-9224-9e94b2e4a4d7",
        "text": "great! now full but I added a waitlist section that people can signup for in case anyone with a slot can't make it...or perhaps that could be the seed for a future event if this works out",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572895346.110200",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hDaDT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "great! now full but I added a waitlist section that people can signup for in case anyone with a slot can't make it...or perhaps that could be the seed for a future event if this works out"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1572965191.135100",
        "client_msg_id": "61a9f034-2223-4a21-b8a2-e0238d01ef76",
        "text": "<@UP28ETUSE> Thanks a lot!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i6UX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UP28ETUSE"
                            },
                            {
                                "type": "text",
                                "text": " Thanks a lot!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1572965322.135300",
        "client_msg_id": "edd72e98-8ade-411e-b6c1-e670507e2054",
        "text": "<@UN57U8V53> How can the system (Haskell) help you figure out the which constraints we have to specify further?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oYKDt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UN57U8V53"
                            },
                            {
                                "type": "text",
                                "text": " How can the system (Haskell) help you figure out the which constraints we have to specify further?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1572967792.135600",
        "client_msg_id": "bf6ccc95-7e9f-4aef-8bd0-7f28322b1107",
        "text": "You specify the relationships via code (which creates a code graph rather than a tree).\nThen, you specify a starting point that takes expression(s) and it will iteratively reduce it (collapsing nodes in the graph along the way) to it's maximal reduction (via typed lambda calculus)\nThe most reduced form shows what constraints are free (usually bounded by types so caught at compile time)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fGx=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You specify the relationships via code (which creates a code graph rather than a tree).\nThen, you specify a starting point that takes expression(s) and it will iteratively reduce it (collapsing nodes in the graph along the way) to it's maximal reduction (via typed lambda calculus)\nThe most reduced form shows what constraints are free (usually bounded by types so caught at compile time)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1572967917.135800",
        "client_msg_id": "a76c0e1a-bfee-4202-bd8d-627c0cef6def",
        "text": "Idris feels a little better at this as data\/types are both programmable\/reducible (which is enabled by a \"conversation\" with the compiler cause ain't nobody get it right the first time)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7prm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Idris feels a little better at this as data\/types are both programmable\/reducible (which is enabled by a \"conversation\" with the compiler cause ain't nobody get it right the first time)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1572968305.136000",
        "client_msg_id": "df62deed-d580-4076-99d5-e3b09372a81d",
        "text": "<@UN57U8V53> I am glad you have mentioned Idris, because I wanted to mention it in my response (but deleted to focus on your thoughts) ! :smile:\n\nTo me Dependent Types seems somehow necessary for that.\n\nI think you know much more about that topic, I am only led by my intuition not science. :smile:\n\nIs it the time to start learning Idris? I did not find Temporal Logic (especially beyond Linear Temporal Logic) implemented as a lib in Idris. I assume that would be necessary.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B\/E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UN57U8V53"
                            },
                            {
                                "type": "text",
                                "text": " I am glad you have mentioned Idris, because I wanted to mention it in my response (but deleted to focus on your thoughts) ! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "\n\nTo me Dependent Types seems somehow necessary for that.\n\nI think you know much more about that topic, I am only led by my intuition not science. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "\n\nIs it the time to start learning Idris? I did not find Temporal Logic (especially beyond Linear Temporal Logic) implemented as a lib in Idris. I assume that would be necessary."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1572968525.136200",
        "client_msg_id": "325e2a7c-ae8f-478e-bcc4-f93e53a47bb5",
        "text": "On a different note, for constraint solvers (SMT), knowing which constraints are \"at fault\" is pretty expensive. I'm currently learning enough math to figure out exactly how topoi work so I can more fully understand the stuff Spivak\/Fong talk about in the last chapter of 7 sketches (safety proofs in temporal logic). I know basic constraint theory has a bunch of techniques to find locally constrained and locally overconstrained submodels in a model of that's helpful.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7Vt\/o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On a different note, for constraint solvers (SMT), knowing which constraints are \"at fault\" is pretty expensive. I'm currently learning enough math to figure out exactly how topoi work so I can more fully understand the stuff Spivak\/Fong talk about in the last chapter of 7 sketches (safety proofs in temporal logic). I know basic constraint theory has a bunch of techniques to find locally constrained and locally overconstrained submodels in a model of that's helpful."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1572968551.136400",
        "client_msg_id": "16256820-889f-4dc5-a2ad-f28b69d6aba6",
        "text": "Time is \"just\" another dimension",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wtz\/I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Time is \"just\" another dimension"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1572968581.136600",
        "client_msg_id": "398d74a6-ee99-4418-a498-f9685e952a4c",
        "text": "Annoyingly so because it's usually not reversible",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b3ylt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Annoyingly so because it's usually not reversible"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1572968651.136800",
        "client_msg_id": "b255b0c6-7022-4ad3-b4dc-57919d527f08",
        "text": "Good, very accessible book on constraint theory basics is \"Constraint Theory\" by Friedman and Phan",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nhs\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good, very accessible book on constraint theory basics is \"Constraint Theory\" by Friedman and Phan"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UL3CJ7YKC",
                    "UNB12DNTU"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1572968752.137200",
        "client_msg_id": "3a82ef4c-fdb6-48c5-a99d-cbf905e20e24",
        "text": "Idris is super fun and definitely worth working through Type Driven Development :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UGx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Idris is super fun and definitely worth working through Type Driven Development :)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1572969355.137500",
        "client_msg_id": "715c6867-92cd-41f2-8b74-bb3baa136bff",
        "text": "cool.. this seems like FRP fused with constraint programming.. putting two crazy paradigms together gets you..?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tid9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "cool.. this seems like FRP fused with constraint programming.. putting two crazy paradigms together gets you..?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1572969635.137700",
        "client_msg_id": "88a5023f-26cb-4534-b16a-8b3a30eeec3b",
        "text": "AFAIK, it means you have a model where you break continuous time into discrete chunks which, when possible, is usually simplifying. Example from what little I know of molecular\/chemical modeling: finding the largest time step where you get the correct result is really nice for performance (and hard).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572958346.132600",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fzyD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "AFAIK, it means you have a model where you break continuous time into discrete chunks which, when possible, is usually simplifying. Example from what little I know of molecular\/chemical modeling: finding the largest time step where you get the correct result is really nice for performance (and hard)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1572973063.138000",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1572973195.000000"
        },
        "client_msg_id": "9dbb8bef-d110-4cdc-8c4e-806ceb744a9e",
        "text": "Thanks <@UJN1TAYEQ> — exactly my point. I have a Mac SE in my closet, and I pull it out every once in a while when I want to be reminded what the old days were like. You press a key and the resulting action often (but not always) happens faster than on my i9 MBP. (Now, I just gotta find a copy of Hypercard somewhere...)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572759144.037500",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d5iaW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " — exactly my point. I have a Mac SE in my closet, and I pull it out every once in a while when I want to be reminded what the old days were like. You press a key and the resulting action often (but not always) happens faster than on my i9 MBP. (Now, I just gotta find a copy of Hypercard somewhere...)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPVBV34EL",
        "type": "message",
        "ts": "1572983170.139000",
        "client_msg_id": "00737bbe-00a0-4379-9cc9-54ee7213034d",
        "text": "Thanks <@UMVFWPZ36> Looking forward",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "259a1e56ad2e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/811814014976_259a1e56ad2e11fe3d56_72.jpg",
            "first_name": "",
            "real_name": "Shubhadeep Roychowdhury",
            "display_name": "Shubhadeep Roychowdhury",
            "team": "T5TCAFTA9",
            "name": "shubhadeeproychowdhur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572895346.110200",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "184M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "UMVFWPZ36"
                            },
                            {
                                "type": "text",
                                "text": " Looking forward"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1572984982.139200",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1572985120.000000"
        },
        "client_msg_id": "bf192e20-8a47-47f1-8391-a9ac0396dc38",
        "text": "I took a moment to open a terminal and several text editors on OSX and couldn’t detect and lag between pressing a key and seeing it displayed. I also don’t notice any lag in Slack. Am I less sensitive to the lag or have I just become accustomed to it?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572759144.037500",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Z6vF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I took a moment to open a terminal and several text editors on OSX and couldn’t detect and lag between pressing a key and seeing it displayed. I also don’t notice any lag in Slack. Am I less sensitive to the lag or have I just become accustomed to it?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1572986160.139500",
        "client_msg_id": "d0fc85ee-b0e5-4870-a400-b6e6e3748718",
        "text": "For me, the lag gets worse the longer my machine has been running since boot, and the more programs are loaded into memory. Switching to a program I haven't interacted for a while, I'll see some lag that resolves once the code for the interaction has been loaded into cache. At some point, the lag grows past an inflexion point, and the only thing to do is reboot. Note that I have \"only\" 4GB of RAM, and I would probably have less lag with more memory.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572759144.037500",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n\/qc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For me, the lag gets worse the longer my machine has been running since boot, and the more programs are loaded into memory. Switching to a program I haven't interacted for a while, I'll see some lag that resolves once the code for the interaction has been loaded into cache. At some point, the lag grows past an inflexion point, and the only thing to do is reboot. Note that I have \"only\" 4GB of RAM, and I would probably have less lag with more memory."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1572987046.140300",
        "client_msg_id": "F59E7004-2B4B-44EB-BB86-125FCD143698",
        "text": "Seems like some of you here will enjoy this: <https:\/\/danluu.com\/input-lag\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572759144.037500",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "evg3e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Seems like some of you here will enjoy this: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/danluu.com\/input-lag\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1572987162.140500",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1572988757.000000"
        },
        "client_msg_id": "38d99a85-84f1-49e1-b69a-aa92a3ebf351",
        "text": "<@U5STGTB3J> I linked that exact article slightly higher up in the thread. Nice!\n\n<@ULM3U6275> I think I'm atypically sensitive to input lag for two reasons. One is that I play a lot of different video games on a lot of different devices, and I've learned how to detect things like \"I need to hit the buttons on this console a hair earlier than normal because this TV is adding what feels like 50ms input lag\" — and I often do things in games that require or reward frame-perfect timing at 60 Hz, so I'm used to the feel of 16ms increments (this is pretty common among gamers, though they might lack the technical language to articulate it). For two, I play and record music, so I'm used to feeling rhythms \"straight\" or \"in the pocket\" or \"early\" or \"late\", which amounts to a +\/- 20-100ms difference depending on the groove. I have a friend who can consistently place the feel of his drumming about 10ms ahead of the beat, which sounds amazing and confounds me.\n\nSo in this light, the motion-to-photon measured by Dan Luu being _at best_ 30ms is shameful. Why can't we have 3ms motion to photon for something as simple as text editing? The speed of light is 299,792 m\/ms. That's a lot of wire. And 3ms is only 10x ahead of where we were in the 80s, so if our hardware is really \"10k times better\", that should be easy. I think this puts the lie to the claim that HW is that much better. It's not — it's just increased in certain measurements by that much. Whether those measurements are useful, or matter, to things like programming tool design.. is arguable.\n\nOn a practical level, I don't usually notice the input lag in most native Mac apps. But I do notice it in Electron apps, like Slack and Atom and Hyper, as those often introduce a frame or two of extra latency. Mouse lag is often much worse than keyboard lag, too, so much so that I'm willing to bet you've noticed it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572759144.037500",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U1O6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " I linked that exact article slightly higher up in the thread. Nice!\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "ULM3U6275"
                            },
                            {
                                "type": "text",
                                "text": " I think I'm atypically sensitive to input lag for two reasons. One is that I play a lot of different video games on a lot of different devices, and I've learned how to detect things like \"I need to hit the buttons on this console a hair earlier than normal because this TV is adding what feels like 50ms input lag\" — and I often do things in games that require or reward frame-perfect timing at 60 Hz, so I'm used to the feel of 16ms increments (this is pretty common among gamers, though they might lack the technical language to articulate it). For two, I play and record music, so I'm used to feeling rhythms \"straight\" or \"in the pocket\" or \"early\" or \"late\", which amounts to a +\/- 20-100ms difference depending on the groove. I have a friend who can consistently place the feel of his drumming about 10ms ahead of the beat, which sounds amazing and confounds me.\n\nSo in this light, the motion-to-photon measured by Dan Luu being "
                            },
                            {
                                "type": "text",
                                "text": "at best",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " 30ms is shameful. Why can't we have 3ms motion to photon for something as simple as text editing? The speed of light is 299,792 m\/ms. That's a lot of wire. And 3ms is only 10x ahead of where we were in the 80s, so if our hardware is really \"10k times better\", that should be easy. I think this puts the lie to the claim that HW is that much better. It's not — it's just increased in certain measurements by that much. Whether those measurements are useful, or matter, to things like programming tool design.. is arguable.\n\nOn a practical level, I don't usually notice the input lag in most native Mac apps. But I do notice it in Electron apps, like Slack and Atom and Hyper, as those often introduce a frame or two of extra latency. Mouse lag is often much worse than keyboard lag, too, so much so that I'm willing to bet you've noticed it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1572988162.141500",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1572988556.000000"
        },
        "client_msg_id": "e27a1826-bb8d-478a-9748-5811a92cc956",
        "text": "Here's what we're up against — 3d games are doing relatively insane amounts of work in 8ms, but it still takes upwards of 50-100ms to get that work out to your eyeballs: <http:\/\/www.chioka.in\/what-is-motion-to-photon-latency\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572759144.037500",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YHXVn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's what we're up against — 3d games are doing relatively insane amounts of work in 8ms, but it still takes upwards of 50-100ms to get that work out to your eyeballs: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.chioka.in\/what-is-motion-to-photon-latency\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMWF81HTP",
        "type": "message",
        "ts": "1573026523.142900",
        "client_msg_id": "bb24ed18-cce8-4773-a9eb-55873625670f",
        "text": "Croquet looks pretty neat. I used to do a decent amount of VR development, having built a prototype remote whiteboard system. Interacting with other developers in the community also doing social VR stuff, there was a shared desire for good, high-level multiplayer state management solution, so I could see Croquet fulfilling a big need there.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4022671f3400",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-03\/775814402657_4022671f340032b9eb75_72.jpg",
            "first_name": "yoshiki",
            "real_name": "yoshiki",
            "display_name": "yoshiki",
            "team": "T5TCAFTA9",
            "name": "yoshikischmitz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572480548.381300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yWna",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Croquet looks pretty neat. I used to do a decent amount of VR development, having built a prototype remote whiteboard system. Interacting with other developers in the community also doing social VR stuff, there was a shared desire for good, high-level multiplayer state management solution, so I could see Croquet fulfilling a big need there."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMWF81HTP",
        "type": "message",
        "ts": "1573026738.143100",
        "client_msg_id": "71274a7b-d1e2-4e31-b174-758a4d68a6d4",
        "text": "I wonder how Croquet will stack up against NormalVR's NormCore[0]. Product-wise Croquet seems like it targets a broader set of usecases, with NormCore providing more VR-specific features out of the box.\n\n[0] <https:\/\/normcore.io\/?utm_source=normalvr.com>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4022671f3400",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-03\/775814402657_4022671f340032b9eb75_72.jpg",
            "first_name": "yoshiki",
            "real_name": "yoshiki",
            "display_name": "yoshiki",
            "team": "T5TCAFTA9",
            "name": "yoshikischmitz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1572480548.381300",
        "parent_user_id": "U8A5MS6R1",
        "attachments": [
            {
                "title": "Normcore",
                "title_link": "https:\/\/normcore.io\/?utm_source=normalvr.com",
                "text": "Add multiplayer to any Unity app and scale automatically, with voice chat, networked physics, persistent rooms, and more.",
                "fallback": "Normcore",
                "from_url": "https:\/\/normcore.io\/?utm_source=normalvr.com",
                "service_icon": "https:\/\/normcore.io\/favicon.ico",
                "service_name": "normcore.io",
                "id": 1,
                "original_url": "https:\/\/normcore.io\/?utm_source=normalvr.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e6B2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wonder how Croquet will stack up against NormalVR's NormCore[0]. Product-wise Croquet seems like it targets a broader set of usecases, with NormCore providing more VR-specific features out of the box.\n\n[0] "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/normcore.io\/?utm_source=normalvr.com"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]