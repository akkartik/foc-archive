[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1594191939.066800",
        "client_msg_id": "0c7250c9-2fb5-4294-8886-4c7a0e16bd1f",
        "text": "This recent blog post gives a good idea of what makes GToolkit different. It's written for people with some Pharo background, but I suppose most people here will get the gist even without that.  <https:\/\/blog.feenk.com\/glamorous-toolkit-and-pharo-5aufgcequ38az2s0dj0t1nu0f\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1593677610.126000",
        "parent_user_id": "UJFN50C00",
        "attachments": [
            {
                "title": "Glamorous Toolkit and Pharo",
                "title_link": "https:\/\/blog.feenk.com\/glamorous-toolkit-and-pharo-5aufgcequ38az2s0dj0t1nu0f\/",
                "text": "Glamorous Toolkit is built in Pharo, and it enables people to work with Pharo systems. Nevertheless, its goal is distinct from that of Pharo and so is its realization.",
                "fallback": "Glamorous Toolkit and Pharo",
                "from_url": "https:\/\/blog.feenk.com\/glamorous-toolkit-and-pharo-5aufgcequ38az2s0dj0t1nu0f\/",
                "service_name": "blog.feenk.com",
                "id": 1,
                "original_url": "https:\/\/blog.feenk.com\/glamorous-toolkit-and-pharo-5aufgcequ38az2s0dj0t1nu0f\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PNUx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This recent blog post gives a good idea of what makes GToolkit different. It's written for people with some Pharo background, but I suppose most people here will get the gist even without that.  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/blog.feenk.com\/glamorous-toolkit-and-pharo-5aufgcequ38az2s0dj0t1nu0f\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1594196717.067400",
        "client_msg_id": "f537ad6d-eac5-4ab8-8922-6d8d09e62485",
        "text": "<@UFQQ3P867> thanks for bringing up the Deutsch limit.  I don't know about others, but when a whole page of text is in front of me, I certainly cannot parse out 50 items at once.  It may be dense, but it is no more clear than zooming out on a diagram (or a mechanical assembly).  As for the quote, \"Well, this is all fine and well, but the problem with visual programming languages is that you can’t have more than 50 visual primitives on the screen at the same time. How are you going to write an operating system?\"  Is he trolling us?  I mean I have handy here a project of... ~20,000 LoC.  I can't see all of that at once.*  A dozen people are working on it.  I'm sure there are horrors to be found that a decent visualization would reveal — both at the level of basic formatting, style, structuring and at the deeper level of knotted up semantics, conditionals, wrapping something up only to unwrap it elsewhere.  The usual suspects.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5vD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFQQ3P867"
                            },
                            {
                                "type": "text",
                                "text": " thanks for bringing up the Deutsch limit.  I don't know about others, but when a whole page of text is in front of me, I certainly cannot parse out 50 items at once.  It may be dense, but it is no more clear than zooming out on a diagram (or a mechanical assembly).  As for the quote, \"Well, this is all fine and well, but the problem with visual programming languages is that you can’t have more than 50 visual primitives on the screen at the same time. How are you going to write an operating system?\"  Is he trolling us?  I mean I have handy here a project of... ~20,000 LoC.  I can't see all of that at once.*  A dozen people are working on it.  I'm sure there are horrors to be found that a decent visualization would reveal — both at the level of basic formatting, style, structuring and at the deeper level of knotted up semantics, conditionals, wrapping something up only to unwrap it elsewhere.  The usual suspects."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UHWC9PXBL",
                    "UC2A2ARPT",
                    "UFQQ3P867"
                ],
                "count": 3
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1594196776.067600",
        "client_msg_id": "41824889-ee08-43c8-8df2-0465d276b253",
        "text": "* Text search works great though.  So that's something visual tools could benefit from.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zjWF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "* Text search works great though.  So that's something visual tools could benefit from."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "So when people on social media notice how social media fails, even in not too advanced ways, is it our fault as programmers? Designers? Who designs Cultural myths like Apps and social media designs like “feeds” and threads ? ",
        "files": [
            {
                "id": "F016REHPCEP",
                "mode": "tombstone"
            }
        ],
        "upload": true,
        "user": "UJFN50C00",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ncgt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So when people on social media notice how social media fails, even in not too advanced ways, is it our fault as programmers? Designers? Who designs Cultural myths like Apps and social media designs like “feeds” and threads ? "
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1594214426.071200",
        "edited": {
            "user": "UJFN50C00",
            "ts": "1594220339.000000"
        },
        "client_msg_id": "6D56277E-0509-4617-8AC4-8CAF839C5DD1",
        "thread_ts": "1594214426.071200",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1594218710.074400",
        "reply_users": [
            "UDQBTJ211",
            "UT60XSVCN",
            "UR482RFPY"
        ],
        "replies": [
            {
                "user": "UDQBTJ211",
                "ts": "1594216249.073400"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1594216360.073600"
            },
            {
                "user": "UT60XSVCN",
                "ts": "1594218276.073900"
            },
            {
                "user": "UT60XSVCN",
                "ts": "1594218337.074100"
            },
            {
                "user": "UR482RFPY",
                "ts": "1594218710.074400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UR482RFPY"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1594215349.071500",
        "client_msg_id": "2cc45bfe-09bb-4ce4-ac2b-0a7c29b890c6",
        "text": "We shouldn't discuss the Deutsch limit without also discussing APL\/J\/K. In the communities that use these languages, dense code is highly valued. Because this allows you to put a large program on the screen in its entirety, and read it without scrolling. APL was invented in the late 1950's, and there has been 60 years of work on achieving ever higher code densities. So now you can put the logic from 10,000 lines of C++ code in two pages and read it without scrolling. The claim is that once you surmount the steep learning curve, you become more productive. You can write a page of C code in a few keystrokes. There is less use of libraries: the attitude is that if the name of a library function is more keystrokes than inline coding the same logic using language primitives, then you should use language primitives instead.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Upp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We shouldn't discuss the Deutsch limit without also discussing APL\/J\/K. In the communities that use these languages, dense code is highly valued. Because this allows you to put a large program on the screen in its entirety, and read it without scrolling. APL was invented in the late 1950's, and there has been 60 years of work on achieving ever higher code densities. So now you can put the logic from 10,000 lines of C++ code in two pages and read it without scrolling. The claim is that once you surmount the steep learning curve, you become more productive. You can write a page of C code in a few keystrokes. There is less use of libraries: the attitude is that if the name of a library function is more keystrokes than inline coding the same logic using language primitives, then you should use language primitives instead."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL",
                    "UFQQ3P867"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1594215531.071700",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1594218200.000000"
        },
        "client_msg_id": "e8b7450f-b808-49c8-9498-eaa36910d0e9",
        "text": "I think there is an opportunity to combine the ideas from APL with visual programming and projectional editing. I like the idea of a \"zoom out to APL\" feature. Dense APL-style code would have a less steep learning curve, and be more accessible, if it was just one of several different code views that you could select among. I also find the APL operator symbols beautiful and suggestive: icons instead of words.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TDTdX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think there is an opportunity to combine the ideas from APL with visual programming and projectional editing. I like the idea of a \"zoom out to APL\" feature. Dense APL-style code would have a less steep learning curve, and be more accessible, if it was just one of several different code views that you could select among. I also find the APL operator symbols beautiful and suggestive: icons instead of words."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1594216249.073400",
        "client_msg_id": "2a279d13-0ea4-4a54-a418-8faacdf8fd65",
        "text": "The issue here is that comment threads are a phenomenally complicated type of conversation with no equivalent in the real world",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594214426.071200",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9Z9tJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The issue here is that comment threads are a phenomenally complicated type of conversation with no equivalent in the real world"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UR482RFPY",
                    "ULM3U6275",
                    "UUK6Y29R8"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1594216360.073600",
        "client_msg_id": "4ebe058d-ffe6-4b48-a946-973c4874cb79",
        "text": "If you pick a leaf node, you can read it fine as a linear conversation from the root. If you start with the root you're screwed",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594214426.071200",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8SMi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you pick a leaf node, you can read it fine as a linear conversation from the root. If you start with the root you're screwed"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UR482RFPY",
                    "UR08YDGHW"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UT60XSVCN",
        "type": "message",
        "ts": "1594218276.073900",
        "client_msg_id": "e77799d9-3f9e-4619-b11b-4302f1ec040e",
        "text": "_Twitter_ comment threads are, sure, but that's a choice they made for who knows what reason. Pretty much every other major web forum has clearer comment threads and are generally not all that ambiguous",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbc3e6041047",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bc3e6041047849518d1b042f0a29d5af.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "S.M Mukarram Nainar",
            "display_name": "S.M Mukarram Nainar",
            "team": "T5TCAFTA9",
            "name": "nainars",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594214426.071200",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c2i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Twitter",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " comment threads are, sure, but that's a choice they made for who knows what reason. Pretty much every other major web forum has clearer comment threads and are generally not all that ambiguous"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UT60XSVCN",
        "type": "message",
        "ts": "1594218337.074100",
        "client_msg_id": "58d5c427-251a-4bfc-b72d-6aeecdf96efd",
        "text": "Here's a project I saw recently, it tries to reify the underlying graph: <https:\/\/man.sr.ht\/~whereswaldon\/arborchat\/|https:\/\/man.sr.ht\/~whereswaldon\/arborchat\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbc3e6041047",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bc3e6041047849518d1b042f0a29d5af.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "S.M Mukarram Nainar",
            "display_name": "S.M Mukarram Nainar",
            "team": "T5TCAFTA9",
            "name": "nainars",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594214426.071200",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gc59l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's a project I saw recently, it tries to reify the underlying graph: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/man.sr.ht\/~whereswaldon\/arborchat\/",
                                "text": "https:\/\/man.sr.ht\/~whereswaldon\/arborchat\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UR482RFPY",
                    "UAVCC2X70"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UR482RFPY",
        "type": "message",
        "ts": "1594218710.074400",
        "client_msg_id": "b7acda43-6c8a-4571-9959-5996039ea3d5",
        "text": "Twitter comments are especially complicated now because they went from being trees to being potentially cyclic graphs (if you consider both quote-tweets and replies to be edges). A pet project of mine is a tool for visualizing the tree portion of the graph (i.e. ignoring the quote tweet edges): <http:\/\/treeverse.app|treeverse.app>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0c567409952",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0c5674099527c19ca0eccac4f2309515.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Paul Butler",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "paulgb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594214426.071200",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "amU8h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Twitter comments are especially complicated now because they went from being trees to being potentially cyclic graphs (if you consider both quote-tweets and replies to be edges). A pet project of mine is a tool for visualizing the tree portion of the graph (i.e. ignoring the quote tweet edges): "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/treeverse.app",
                                "text": "treeverse.app"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UDQBTJ211",
                    "ULM3U6275",
                    "U013ZLJARC7",
                    "UPU0YJ1CM",
                    "UUK6Y29R8"
                ],
                "count": 6
            },
            {
                "name": "grimacing",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1594220517.076400",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1594266121.000000"
        },
        "client_msg_id": "66F1C747-80C3-48C8-8C06-80E4762C4A1A",
        "text": "I recently tweeted a reflection on the Deutsch Limit: <https:\/\/twitter.com\/spiralganglion\/status\/1272613075292532736|https:\/\/twitter.com\/spiralganglion\/status\/1272613075292532736>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vvvta",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I recently tweeted a reflection on the Deutsch Limit: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/spiralganglion\/status\/1272613075292532736",
                                "text": "https:\/\/twitter.com\/spiralganglion\/status\/1272613075292532736"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "ULK0Z4MPV",
                    "UHWC9PXBL"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UHWC9PXBL",
                    "UFQQ3P867"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1594224989.078800",
        "client_msg_id": "8DDA21C2-EB34-4005-836F-FDFAF62E09C1",
        "text": "WOW makespace looks ridiculously cool and relevant to my interests thank you for sharing it!! ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594131292.451400",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jke",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "WOW makespace looks ridiculously cool and relevant to my interests thank you for sharing it!! "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1594224997.079200",
        "client_msg_id": "9430DBDF-FB94-49D1-AE3C-3D19A5B422A2",
        "text": "IMO deserves its own thread",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594131292.451400",
        "parent_user_id": "UJFN50C00",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NNOd9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "IMO deserves its own thread"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0",
                    "UAVCC2X70",
                    "UPVBV34EL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1594225619.081600",
        "client_msg_id": "A55B1673-3036-48BD-9F47-CFCC47855ADD",
        "text": "APL also has a great sense of using positioning and punning to deliver more information <@UJN1TAYEQ> . glad to see it brought up in combination. also, some of the symbols are IMO just plain visual genius (eg: tally)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LgM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "APL also has a great sense of using positioning and punning to deliver more information "
                            },
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " . glad to see it brought up in combination. also, some of the symbols are IMO just plain visual genius (eg: tally)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1594225694.083600",
        "client_msg_id": "09600089-5FEF-42A0-9D2D-AEEC808D5A33",
        "text": "actually, now that i think about it, the insistence on REPL-driven development and properly formatted tables are two more marks in the “APL has stuff to offer visual programming environments” column ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594060589.389400",
        "parent_user_id": "U016LEA3J1H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hdkl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "actually, now that i think about it, the insistence on REPL-driven development and properly formatted tables are two more marks in the “APL has stuff to offer visual programming environments” column "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1594231900.084600",
        "client_msg_id": "ae89efd2-64ec-4231-8ffa-3ff672356c89",
        "text": "While I agree that one should understand what effect a given change should have, that is not the same as knowing if it is the change one will have wanted to have made after considering it in context, possibly alongside a number of other experimental changes. In general, any theory of programming that assumes we know our destination before we've begun our journey rules out many areas of human endeavor.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594010464.369300",
        "parent_user_id": "UMWF81HTP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ijX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "While I agree that one should understand what effect a given change should have, that is not the same as knowing if it is the change one will have wanted to have made after considering it in context, possibly alongside a number of other experimental changes. In general, any theory of programming that assumes we know our destination before we've begun our journey rules out many areas of human endeavor."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UMWF81HTP"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1594240980.085300",
        "edited": {
            "user": "U5STGTB3J",
            "ts": "1594241001.000000"
        },
        "client_msg_id": "BA25DF1C-0713-47F1-81D2-C20E1CB1270B",
        "text": "&gt; What if, instead of lowering source code down for the purpose of execution, we raised source code for the purpose of understanding?\n&gt; \n&gt; What if we took the lessons of the semantic web and applied them to source code?\n&gt; \n&gt; \n<https:\/\/nshipster.com\/as-we-may-code\/|https:\/\/nshipster.com\/as-we-may-code\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594240980.085300",
        "reply_count": 7,
        "reply_users_count": 5,
        "latest_reply": "1594285721.137200",
        "reply_users": [
            "UE1JQM9HQ",
            "UCUSW7WVD",
            "U013ZLJARC7",
            "U5STGTB3J",
            "UN9SCH5RD"
        ],
        "replies": [
            {
                "user": "UE1JQM9HQ",
                "ts": "1594241612.085600"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1594253006.086900"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1594280386.117700"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1594282954.120300"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1594283395.123900"
            },
            {
                "user": "UN9SCH5RD",
                "ts": "1594285475.136800"
            },
            {
                "user": "UN9SCH5RD",
                "ts": "1594285721.137200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "NSHipster",
                "title": "As We May Code",
                "title_link": "https:\/\/nshipster.com\/as-we-may-code\/",
                "text": "What if, instead of lowering source code down for the purpose of execution, we raised it for the purpose of understanding?",
                "fallback": "NSHipster: As We May Code",
                "thumb_url": "https:\/\/nshipster.com\/logo.png",
                "fields": [
                    {
                        "title": "Category",
                        "value": "Miscellaneous",
                        "short": true
                    }
                ],
                "ts": 1594105200,
                "from_url": "https:\/\/nshipster.com\/as-we-may-code\/",
                "thumb_width": 500,
                "thumb_height": 500,
                "service_icon": "https:\/\/nshipster.com\/apple-touch-icon.png",
                "id": 1,
                "original_url": "https:\/\/nshipster.com\/as-we-may-code\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hlw",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What if, instead of lowering source code down for the purpose of execution, we raised source code for the purpose of understanding?\n\nWhat if we took the lessons of the semantic web and applied them to source code?"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/nshipster.com\/as-we-may-code\/",
                                "text": "https:\/\/nshipster.com\/as-we-may-code\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1594241612.085600",
        "client_msg_id": "2be141e0-58fc-4059-9f91-5c35c9a824fc",
        "text": "Interesting article. It’s interesting to note that it is written as an invitation to imagine a better world. There really isn’t any need to imagine representing code as data and adding semantics to it by reasoning about it as data. That future is already here.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594240980.085300",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vKod",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Interesting article. It’s interesting to note that it is written as an invitation to imagine a better world. There really isn’t any need to imagine representing code as data and adding semantics to it by reasoning about it as data. That future is already here."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "UHWC9PXBL",
                    "UU45NNMHT",
                    "UD3AK9JRF",
                    "U016HU16BS6",
                    "UA14TGLTC",
                    "UJBAJNFLK",
                    "U013ZLJARC7",
                    "U5STGTB3J",
                    "UFLN9JFRT"
                ],
                "count": 10
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1594253006.086900",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1594253152.000000"
        },
        "client_msg_id": "7f3da900-1602-4a54-8a9a-df43efacad2b",
        "text": "The premise feels overblown for the rest of the content. Generating RDF triples from source code is not raising. At best it is flattening (not lowering). The distinction becomes clearer if cast in terms of information content. Lowering takes away information. Not lowering is feasible. But raising is _adding_ information. What can we do to add information that the code doesn't already contain? That's a really hard problem that the article doesn't address.\n\nFor starters, mining just the code has limited value because there are many properties of a program that someone reading it can (laboriously) deduce that don't actually exist in software. You may know things about the production environment or expected inputs based on past experience. You may inspect runtime using a debugger.\n\nBottomline: the premise is a well-known holy grail akin to \"world peace\", and the rest of the content is doable\/novel but of far more limited utility.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594240980.085300",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Io4l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The premise feels overblown for the rest of the content. Generating RDF triples from source code is not raising. At best it is flattening (not lowering). The distinction becomes clearer if cast in terms of information content. Lowering takes away information. Not lowering is feasible. But raising is "
                            },
                            {
                                "type": "text",
                                "text": "adding",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " information. What can we do to add information that the code doesn't already contain? That's a really hard problem that the article doesn't address.\n\nFor starters, mining just the code has limited value because there are many properties of a program that someone reading it can (laboriously) deduce that don't actually exist in software. You may know things about the production environment or expected inputs based on past experience. You may inspect runtime using a debugger.\n\nBottomline: the premise is a well-known holy grail akin to \"world peace\", and the rest of the content is doable\/novel but of far more limited utility."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1594255230.095900",
        "edited": {
            "user": "ULK0Z4MPV",
            "ts": "1594256107.000000"
        },
        "client_msg_id": "0f5e01af-786a-4a32-b484-db3768ca79e1",
        "text": "Does anyone have database recommendations for user generated data structures? I'm currently using postgres and it's feeling a little inadequate. For example, a user might have simple formula like `10 + 5` which I store as a string, and I have a `numberCache` column storing `15` for querying. But a formula can also be a string, or a date, so now I need a `stringCache` column and a `boolCache` column. And then there's user input `if statements` which I haven't thought about yet and may need to calculate on the fly.\n\nI have dynamic types, and dynamic relationships, and I'm wrangling postgres into shape, but I can't help but feel there must be something better suited? I was thinking of playing with something more schema-less like mongoDB. Any advice would be appreciated!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594255230.095900",
        "reply_count": 19,
        "reply_users_count": 8,
        "latest_reply": "1594914289.409900",
        "reply_users": [
            "UR482RFPY",
            "UCUSW7WVD",
            "ULK0Z4MPV",
            "UC2A2ARPT",
            "UEQ6M68H0",
            "U013ZLJARC7",
            "UN9SCH5RD",
            "U016LEA3J1H"
        ],
        "replies": [
            {
                "user": "UR482RFPY",
                "ts": "1594257532.096300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1594258355.096500"
            },
            {
                "user": "ULK0Z4MPV",
                "ts": "1594264021.096700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1594266330.097200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1594267349.097500"
            },
            {
                "user": "ULK0Z4MPV",
                "ts": "1594268497.097700"
            },
            {
                "user": "ULK0Z4MPV",
                "ts": "1594268644.098000"
            },
            {
                "user": "ULK0Z4MPV",
                "ts": "1594268807.098200"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1594268848.098400"
            },
            {
                "user": "ULK0Z4MPV",
                "ts": "1594269192.098700"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1594280703.118000"
            },
            {
                "user": "UN9SCH5RD",
                "ts": "1594284660.136600"
            },
            {
                "user": "U016LEA3J1H",
                "ts": "1594299098.138300"
            },
            {
                "user": "ULK0Z4MPV",
                "ts": "1594305401.149100"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1594313366.161000"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1594313897.161700"
            },
            {
                "user": "ULK0Z4MPV",
                "ts": "1594317837.164200"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1594326695.166800"
            },
            {
                "user": "ULK0Z4MPV",
                "ts": "1594914289.409900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sea",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does anyone have database recommendations for user generated data structures? I'm currently using postgres and it's feeling a little inadequate. For example, a user might have simple formula like "
                            },
                            {
                                "type": "text",
                                "text": "10 + 5",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " which I store as a string, and I have a "
                            },
                            {
                                "type": "text",
                                "text": "numberCache",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " column storing "
                            },
                            {
                                "type": "text",
                                "text": "15",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for querying. But a formula can also be a string, or a date, so now I need a "
                            },
                            {
                                "type": "text",
                                "text": "stringCache",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " column and a "
                            },
                            {
                                "type": "text",
                                "text": "boolCache",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " column. And then there's user input "
                            },
                            {
                                "type": "text",
                                "text": "if statements",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " which I haven't thought about yet and may need to calculate on the fly.\n\nI have dynamic types, and dynamic relationships, and I'm wrangling postgres into shape, but I can't help but feel there must be something better suited? I was thinking of playing with something more schema-less like mongoDB. Any advice would be appreciated!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UR482RFPY",
        "type": "message",
        "ts": "1594257532.096300",
        "client_msg_id": "dcdafbcb-28b2-48f2-82d6-bda26302510e",
        "text": "What about using a JSON type in postgres? <https:\/\/www.postgresql.org\/docs\/10\/datatype-json.html|https:\/\/www.postgresql.org\/docs\/10\/datatype-json.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0c567409952",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0c5674099527c19ca0eccac4f2309515.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0005-72.png",
            "first_name": "",
            "real_name": "Paul Butler",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "paulgb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594255230.095900",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yG=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What about using a JSON type in postgres? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.postgresql.org\/docs\/10\/datatype-json.html",
                                "text": "https:\/\/www.postgresql.org\/docs\/10\/datatype-json.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1594258355.096500",
        "client_msg_id": "00353437-acfc-480a-8269-d7cccc50048b",
        "text": "I'd need more information about what you're trying to do. \"User generated data structures\" doesn't seem like a well-posed category that one can make generalizations about. For example, why would you want to cache the result of `10 + 5`? Repeatedly recomputing it would be almost certainly cheaper than a database lookup. If it _is_ worth caching, the first choice of cache is in memory, which would again be much faster than a database lookup. Do you have millions of users running billions of programs a day? If not, a simple program without a database or caching would likely be sufficient for your purposes.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594255230.095900",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V0K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd need more information about what you're trying to do. \"User generated data structures\" doesn't seem like a well-posed category that one can make generalizations about. For example, why would you want to cache the result of "
                            },
                            {
                                "type": "text",
                                "text": "10 + 5",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "? Repeatedly recomputing it would be almost certainly cheaper than a database lookup. If it "
                            },
                            {
                                "type": "text",
                                "text": "is",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " worth caching, the first choice of cache is in memory, which would again be much faster than a database lookup. Do you have millions of users running billions of programs a day? If not, a simple program without a database or caching would likely be sufficient for your purposes."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1594264021.096700",
        "client_msg_id": "1e1deb8d-4c36-4dc7-b01d-50238417e729",
        "text": "Yes, you're right, maybe I'm overthinking it and should just compute on the fly. The most complex user inputs might have many dependencies. ie. `v1 = 100`, `v2 = v1+50`, `v3 = v1 + v2` - but I wouldn't expect a chain greater than 20-30 dependencies. It's just important the data is queryable &amp; aggregatable in the future. And I wouldn't be aggregating more than than 10,000 items\n\nI find postgres json columns aren't very great for queries that go more then 1 level deep but maybe I can make things as flat as possible.\n\nThanks for your help!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594255230.095900",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j4o3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, you're right, maybe I'm overthinking it and should just compute on the fly. The most complex user inputs might have many dependencies. ie. "
                            },
                            {
                                "type": "text",
                                "text": "v1 = 100",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "v2 = v1+50",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "text",
                                "text": "v3 = v1 + v2",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " - but I wouldn't expect a chain greater than 20-30 dependencies. It's just important the data is queryable & aggregatable in the future. And I wouldn't be aggregating more than than 10,000 items\n\nI find postgres json columns aren't very great for queries that go more then 1 level deep but maybe I can make things as flat as possible.\n\nThanks for your help!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1594266330.097200",
        "client_msg_id": "8c84d00d-832e-4819-b50f-821b7c78e1d5",
        "text": "I find the syntax of Postgres JSON really frustrating to work with. I also have mixed feelings about schemaless, but it does seem like a slightly better fit for this kind of a use case, assuming you go with something that lets you do your queries and aggregations in the DB rather than the client.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594255230.095900",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JeB4s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I find the syntax of Postgres JSON really frustrating to work with. I also have mixed feelings about schemaless, but it does seem like a slightly better fit for this kind of a use case, assuming you go with something that lets you do your queries and aggregations in the DB rather than the client."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "ULK0Z4MPV"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1594267349.097500",
        "client_msg_id": "8ae65479-78b4-4c5a-842f-92f58edc29e5",
        "text": "<@ULK0Z4MPV> I'm still curious to hear more about an app where the database has code expressions.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594255230.095900",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Atu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "ULK0Z4MPV"
                            },
                            {
                                "type": "text",
                                "text": " I'm still curious to hear more about an app where the database has code expressions."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1594268497.097700",
        "client_msg_id": "e798b331-1eea-43b5-93d9-1b7469e3a7ab",
        "text": "I'm building an interactive gantt chart tool. A quick 2 min overview here <https:\/\/youtu.be\/Anv8-3sZFVE>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594255230.095900",
        "parent_user_id": "ULK0Z4MPV",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Gantt Week 1",
                "title_link": "https:\/\/youtu.be\/Anv8-3sZFVE",
                "author_name": "Coincraft",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCCiOKnUhV48EjhXhh9TdPDw",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/Anv8-3sZFVE\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Gantt Week 1",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/Anv8-3sZFVE?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/Anv8-3sZFVE",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/Anv8-3sZFVE"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ArRZN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm building an interactive gantt chart tool. A quick 2 min overview here "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/Anv8-3sZFVE"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1594268644.098000",
        "client_msg_id": "ac045a26-ad9a-4da3-8dd9-a0c7fa82491e",
        "text": "A user will have many `tasks` and `resources` . A task has various properties (including custom properties) same with resources. A task property may be dependant on other tasks and resources.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594255230.095900",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w+L",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A user will have many "
                            },
                            {
                                "type": "text",
                                "text": "tasks",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "resources",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " . A task has various properties (including custom properties) same with resources. A task property may be dependant on other tasks and resources."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1594268807.098200",
        "client_msg_id": "9a8463bf-8586-4d97-8c0c-c105e10073f6",
        "text": "All properties can be formulas, stored as strings. The idea is to try to be very excel-like and the user could theoretically use this for any time \/ scheduling based calculations.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594255230.095900",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rdz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "All properties can be formulas, stored as strings. The idea is to try to be very excel-like and the user could theoretically use this for any time \/ scheduling based calculations."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1594268848.098400",
        "client_msg_id": "871f1399-bfe7-4120-ab03-5862979a3353",
        "text": "For building an interactive gantt chart tool, my Beads language would offer a RAM database that has number, string, image, sound, records, pointers, etc., and will greatly simplify the tricky issue of resizing your interface to fit different screen resolutions your software will be run on. Desktop resolutions are around 100 dpi, but mobile can reach 500, and any drawing in pixels will not work well, nor will calculating sizes in points work in all cases, as the physical screen sizes vary quite a bit as well. In a Gantt chart program, the majority of the code will be related to drawing, not calculating dates.\n\nBut you might be happier using an OpenGL foundation because you may want to zoom smoothly in real time, and nothing zooms more beautifully than 3D rendered stuff which of course can just move the camera to zoom without rebuilding anything.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594255230.095900",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8Mv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For building an interactive gantt chart tool, my Beads language would offer a RAM database that has number, string, image, sound, records, pointers, etc., and will greatly simplify the tricky issue of resizing your interface to fit different screen resolutions your software will be run on. Desktop resolutions are around 100 dpi, but mobile can reach 500, and any drawing in pixels will not work well, nor will calculating sizes in points work in all cases, as the physical screen sizes vary quite a bit as well. In a Gantt chart program, the majority of the code will be related to drawing, not calculating dates.\n\nBut you might be happier using an OpenGL foundation because you may want to zoom smoothly in real time, and nothing zooms more beautifully than 3D rendered stuff which of course can just move the camera to zoom without rebuilding anything."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULK0Z4MPV",
        "type": "message",
        "ts": "1594269192.098700",
        "client_msg_id": "1332dd7a-cb24-44bc-90b3-8ac5c8488569",
        "text": "<@UEQ6M68H0> thanks but I have no issues with drawing for the time being. Hopefully I can test out beads when I have a spare moment though :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "84fdccb39d9b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-07\/1111736156419_84fdccb39d9b31c2626b_72.jpg",
            "first_name": "",
            "real_name": "Ryan King",
            "display_name": "Ryan King",
            "team": "T5TCAFTA9",
            "name": "ryan.king1809",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594255230.095900",
        "parent_user_id": "ULK0Z4MPV",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "104ti",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " thanks but I have no issues with drawing for the time being. Hopefully I can test out beads when I have a spare moment though :)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1594276999.116700",
        "client_msg_id": "A4EC4C36-E086-40A4-BA42-0AF67EBC450F",
        "text": "One way to categorize FoC projects is to consider the following spectrum. (Go with me here — resist the urge to treat this as a multidimensional space.)\n\nIn the center, we have projects that resemble typical programming languages. These tools are designed with particular semantics that the programmer will employ to structure their problem solving. They are general purpose. They don't have much regard for the particular kinds of problems being solved. This is your Java, Clojure, Vulkan, brainfuck, etc.\n\nOff to one side, you have programming tools that have both tightly defined semantics and a focus on solving particular kinds of problems. These are specialized. This is Excel, Notion, Max\/MSP, OpenGL, bash, etc.\n\nOff to the other side, we have programming tools that, while they still have semantics, don't expect you to work entirely within those semantics. They have even less regard for the problem domain. These are tools that expect you to first build some new tools from or within them, then solve your problem with those tools. This is Racket, and arguably REST, RDF, stored procedures in a DB, and other things.\n\nNow my question: are you building an FoC project that falls into the latter category? If so, talk about that a bit. What's the rationale?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1594276999.116700",
        "reply_count": 32,
        "reply_users_count": 8,
        "latest_reply": "1596695765.211200",
        "reply_users": [
            "UJ6LDMMN0",
            "U5STGTB3J",
            "UHWC9PXBL",
            "UC2A2ARPT",
            "U8A5MS6R1",
            "UJBAJNFLK",
            "UAVCC2X70",
            "UD6EXQVM0"
        ],
        "replies": [
            {
                "user": "UJ6LDMMN0",
                "ts": "1594279127.117000"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1594279299.117300"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1594284474.136400"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594305652.154500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594306507.156500"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1594320047.165200"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1594320744.165400"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1594323540.165800"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1594327121.171800"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594328099.177200"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1594328614.177700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594328665.178000"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594328925.178700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594329032.178900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1594334928.184900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1594337039.185300"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594337232.186200"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594337301.188000"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1594338052.188200"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1594339192.188500"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1594339575.188700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594341054.189800"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1594341234.190100"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1594361293.193900"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1594367200.194300"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1594371117.194600"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1594388063.199100"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1595119543.469400"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1595126486.470100"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1595154713.478900"
            },
            {
                "user": "UD6EXQVM0",
                "ts": "1596309793.061300"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1596695765.211200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/r0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One way to categorize FoC projects is to consider the following spectrum. (Go with me here — resist the urge to treat this as a multidimensional space.)\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "In the center, we have projects that resemble typical programming languages. These tools are designed with particular semantics that the programmer will employ to structure their problem solving. They are general purpose. They don't have much regard for the particular kinds of problems being solved. This is your Java, Clojure, Vulkan, brainfuck, etc.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Off to one side, you have programming tools that have both tightly defined semantics and a focus on solving particular kinds of problems. These are specialized. This is Excel, Notion, Max\/MSP, OpenGL, bash, etc.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Off to the other side, we have programming tools that, while they still have semantics, don't expect you to work entirely within those semantics. They have even less regard for the problem domain. These are tools that expect you to first build some new tools from or within them, then solve your problem with those tools. This is Racket, and arguably REST, RDF, stored procedures in a DB, and other things.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Now my question: are you building an FoC project that falls into the latter category? If so, talk about that a bit. What's the rationale?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]