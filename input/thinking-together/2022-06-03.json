[
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1654267882.614669",
        "client_msg_id": "cd614d7e-2f95-4325-b79e-06d588d32935",
        "text": "\"enforce the code to follow project standards\" — Ah, my long neglected friend Aspect-oriented Programming!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1653835046.268739",
        "parent_user_id": "U03J1HP9C0G",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yAiU1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"enforce the code to follow project standards\" — Ah, my long neglected friend Aspect-oriented Programming!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03J1HP9C0G",
        "type": "message",
        "ts": "1654269872.351349",
        "client_msg_id": "c5f65ab9-b66c-49d0-97c5-524a1ddc7a3e",
        "text": "Nice; didn't know that this could be addressed with aop, but it seems this concept is loosing interest for a while now. It also seems to concern only a part of the issue. What I mean is that we should be able to describe standards in one place no matter which part of the project the standard talks about. E.g. we may want to define standard file names and file structure, standardize method names, enforce documentation, force standard syntax, check for ineffective implementations of standard constructs (like bad regexes), and so on.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "fd3b904fdc45",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-05-27\/3589814658547_fd3b904fdc456648ecb2_72.jpg",
            "first_name": "Václav",
            "real_name": "Václav Blažej",
            "display_name": "Václav Blažej",
            "team": "T5TCAFTA9",
            "name": "vaclavblazej",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1653835046.268739",
        "parent_user_id": "U03J1HP9C0G",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rXLgo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice; didn't know that this could be addressed with aop, but it seems this concept is loosing interest for a while now. It also seems to concern only a part of the issue. What I mean is that we should be able to describe standards in one place no matter which part of the project the standard talks about. E.g. we may want to define standard file names and file structure, standardize method names, enforce documentation, force standard syntax, check for ineffective implementations of standard constructs (like bad regexes), and so on."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1654270146.427809",
        "client_msg_id": "1d534d17-ed7c-476d-a465-173c3ea8493b",
        "text": "Check out <https:\/\/www.archunit.org|https:\/\/www.archunit.org>. For example <https:\/\/github.com\/TNG\/ArchUnit-Examples\/blob\/main\/example-junit5\/src\/test\/java\/com\/tngtech\/archunit\/exampletest\/junit5\/CodingRulesTest.java|https:\/\/github.com\/TNG\/ArchUnit-Examples\/blob\/main\/example-junit5\/src\/test\/java\/com\/tngtech\/archunit\/exampletest\/junit5\/CodingRulesTest.java>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1653835046.268739",
        "parent_user_id": "U03J1HP9C0G",
        "attachments": [
            {
                "from_url": "https:\/\/www.archunit.org\/",
                "service_icon": "https:\/\/www.archunit.org\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/www.archunit.org",
                "fallback": "ArchUnit: Unit test your Java architecture",
                "text": "Start enforcing your architecture within 30 minutes using the test setup you already have.",
                "title": "Unit test your Java architecture",
                "title_link": "https:\/\/www.archunit.org\/",
                "service_name": "ArchUnit"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mPM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Check out "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.archunit.org",
                                "text": "https:\/\/www.archunit.org"
                            },
                            {
                                "type": "text",
                                "text": ". For example "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/TNG\/ArchUnit-Examples\/blob\/main\/example-junit5\/src\/test\/java\/com\/tngtech\/archunit\/exampletest\/junit5\/CodingRulesTest.java",
                                "text": "https:\/\/github.com\/TNG\/ArchUnit-Examples\/blob\/main\/example-junit5\/src\/test\/java\/com\/tngtech\/archunit\/exampletest\/junit5\/CodingRulesTest.java"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03J1HP9C0G",
        "type": "message",
        "ts": "1654271589.432869",
        "client_msg_id": "a912cf2c-f3c6-4e80-9727-e5b9a86a7d80",
        "text": "very nice :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "fd3b904fdc45",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-05-27\/3589814658547_fd3b904fdc456648ecb2_72.jpg",
            "first_name": "Václav",
            "real_name": "Václav Blažej",
            "display_name": "Václav Blažej",
            "team": "T5TCAFTA9",
            "name": "vaclavblazej",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1653835046.268739",
        "parent_user_id": "U03J1HP9C0G",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PU\/y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "very nice "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U9C92716C",
        "type": "message",
        "ts": "1654273886.060269",
        "client_msg_id": "e9a77134-1171-48fe-99d6-2fe40be8d94e",
        "text": "<@UCUSW7WVD> always enjoy seeing your thought process. i get a lot of mileage out of ‘computers as externalized modeling &amp; simulation devices.’ note that this is distinct from the actual models they externalize\/simulate, the actual systems being modeled, and the actual systems they inhabit, not to mention the strong priors imposed throughout by the ‘ur-system’ (physics) &amp; the ‘ur-platform’ (biology). conflation of these is rampant",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6bd6fe3fcf91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-20\/1137095139906_6bd6fe3fcf91b6f41781_72.jpg",
            "first_name": "",
            "real_name": "Dalton Banks",
            "display_name": "daltonb",
            "team": "T5TCAFTA9",
            "name": "dalton",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652721674.729339",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1UGyz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " always enjoy seeing your thought process. i get a lot of mileage out of ‘computers as externalized modeling & simulation devices.’ note that this is distinct from the actual models they externalize\/simulate, the actual systems being modeled, and the actual systems they inhabit, not to mention the strong priors imposed throughout by the ‘ur-system’ (physics) & the ‘ur-platform’ (biology). conflation of these is rampant"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "wacky sketches in Vim\n\n(to me this is thinking-together)",
        "files": [
            {
                "id": "F03HT0FS8SK",
                "mode": "hidden_by_limit"
            },
            {
                "id": "F03HT0HQJ3Z",
                "mode": "hidden_by_limit"
            },
            {
                "id": "F03JXBC7S48",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U9C92716C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "96g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "wacky sketches in Vim\n\n(to me this is thinking-together)"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1654274700.595999",
        "client_msg_id": "f27a39b9-7c29-4f63-976b-a17f2973ac75",
        "thread_ts": "1654274700.595999",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1654288622.417509",
        "reply_users": [
            "UCUSW7WVD",
            "U9C92716C"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1654278612.294809"
            },
            {
                "user": "U9C92716C",
                "ts": "1654287989.938899"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1654288622.417509"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "hushed",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03DNFDFYDA",
        "type": "message",
        "ts": "1654278470.320989",
        "client_msg_id": "c577d83b-89f0-4c05-8e61-1f313f43daa5",
        "text": "This is the first attempt I’ve seen to implement Functional Relational Programming (cf. Out of the Tar Pit) that looks serious! <https:\/\/www.cell-lang.net\/index.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f58a6508f111",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-29\/3447576657367_f58a6508f11105e0d0be_72.png",
            "first_name": "Alex",
            "real_name": "Alex Cruise",
            "display_name": "Alex Cruise",
            "team": "T5TCAFTA9",
            "name": "alex867",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654278470.320989",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1654282772.793749",
        "reply_users": [
            "U03E4LY27FS",
            "U02U0AS3J49"
        ],
        "replies": [
            {
                "user": "U03E4LY27FS",
                "ts": "1654278721.745189"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1654282439.494509"
            },
            {
                "user": "U03E4LY27FS",
                "ts": "1654282772.793749"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/www.cell-lang.net\/index.html",
                "id": 1,
                "original_url": "https:\/\/www.cell-lang.net\/index.html",
                "fallback": "The Cell Programming Language",
                "text": "The Cell Programming Language",
                "title": "The Cell Programming Language",
                "title_link": "https:\/\/www.cell-lang.net\/index.html",
                "service_name": "cell-lang.net"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mN0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is the first attempt I’ve seen to implement Functional Relational Programming (cf. Out of the Tar Pit) that looks serious! "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.cell-lang.net\/index.html"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1654278612.294809",
        "client_msg_id": "9bdb6afd-e431-4d7b-b7cd-61156ea9b612",
        "text": "What is it?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654274700.595999",
        "parent_user_id": "U9C92716C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GMP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What is it?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03E4LY27FS",
        "type": "message",
        "ts": "1654278721.745189",
        "edited": {
            "user": "U03E4LY27FS",
            "ts": "1654278765.000000"
        },
        "client_msg_id": "95a85314-2401-46e6-babc-9ec4c74a3949",
        "text": "From the FAQ:\n\n```But in many cases pure computation is only a (relatively small) part of what software does. Most applications are stateful: they sit there, idle or semi-idle, and wait for some sort of input from the external world. When that happens they change their state in response (and usually also perform some I\/O). Think, for example, of desktop, web or mobile application, which respond to user input, or some types of server applications, which respond to requests issued by the client across the network.```\nA lovely summary of this. I feel like a TON of languages and development tools try to pretend that state isn’t a thing. That there isn’t a giant array of bytes sitting around waiting to be messed with in memory somewhere, and that The System(tm) will handle everything correctly. Very prevalent in my main domain, which has been iOS \/ Android development for… well, too long, heh. This seems interesting to me!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "98f0011b77c6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-28\/3450316621254_98f0011b77c61bbc241b_72.jpg",
            "first_name": "Ivan",
            "real_name": "Ivan Lugo",
            "display_name": "Ivan Lugo",
            "team": "T5TCAFTA9",
            "name": "iheartlappy486",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654278470.320989",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hIya",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "From the FAQ:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But in many cases pure computation is only a (relatively small) part of what software does. Most applications are stateful: they sit there, idle or semi-idle, and wait for some sort of input from the external world. When that happens they change their state in response (and usually also perform some I\/O). Think, for example, of desktop, web or mobile application, which respond to user input, or some types of server applications, which respond to requests issued by the client across the network."
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A lovely summary of this. I feel like a TON of languages and development tools try to pretend that state isn’t a thing. That there isn’t a giant array of bytes sitting around waiting to be messed with in memory somewhere, and that The System(tm) will handle everything correctly. Very prevalent in my main domain, which has been iOS \/ Android development for… well, too long, heh. This seems interesting to me!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1654282439.494509",
        "client_msg_id": "06a28305-7fc8-4fcd-a8a1-906f55e3579b",
        "text": "This seems very promising in the smart contracts space, where everything is data structures reacting to events. I just wonder whether the code generation can be made to explain itself.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654278470.320989",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bj1+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This seems very promising in the smart contracts space, where everything is data structures reacting to events. I just wonder whether the code generation can be made to explain itself."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03E4LY27FS",
        "type": "message",
        "ts": "1654282772.793749",
        "client_msg_id": "c17f4d82-a540-41d5-91c7-d271d7ae06ee",
        "text": "I like to imagine that DNA is somehow self-generating, self-documenting code - if only we figured out how to compile the docs :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "98f0011b77c6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-28\/3450316621254_98f0011b77c61bbc241b_72.jpg",
            "first_name": "Ivan",
            "real_name": "Ivan Lugo",
            "display_name": "Ivan Lugo",
            "team": "T5TCAFTA9",
            "name": "iheartlappy486",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654278470.320989",
        "parent_user_id": "U03DNFDFYDA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+SJA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like to imagine that DNA is somehow self-generating, self-documenting code - if only we figured out how to compile the docs "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U9C92716C",
        "type": "message",
        "ts": "1654287989.938899",
        "edited": {
            "user": "U9C92716C",
            "ts": "1654288762.000000"
        },
        "client_msg_id": "3dd508f7-5d4a-4d7f-bf2b-33fecf00db84",
        "text": "thanks for the comment. i’m a bit reluctant to answer ‘what’ directly, since\n• i’m interested in what you make of them without much framing\n• as ‘sketches’ they really are open for interpretation\/insight\nbut thanks for asking; here’s a bit more orientation &amp; i can elaborate more if you want\n• these are three sketches from a broader set, just to give the flavor of them\n• each one is just a unicode text file open in a Vim editor. anything ‘special’ beyond basic navigation is annotated in the file.\n• a general theme is me trying to get a better grasp on the spatial &amp; physical nature of text editing\n• sketch #1 is about embedding multiple spatial dims in a single vertical dim. no macros are involved, i’m just using “*” and “#” to ‘jump to next\/prev match’ on different labels to ‘move’ in ‘view space’ along spatially embedded axes. each ‘frame’ is found in a different part of the file.\n• sketch #2 is roughly about ‘direct manipulation’ of code\/data\/environment. idk if you’re familiar with Vim, but all editor commands can be recorded as plaintext macros &amp; replayed on command. i’m just going a step further and saving macros in the doc\/executing them from the doc\n• sketch #3 is a birds eye view of an afternoon prototyping session; gives some sense of the ‘sketchbook’ feel of the approach\n• overall, this approach (i.e., sketching directly in Vim plaintext) is the first concrete instance where i can recognize a semblance of the inchoate thing i’ve been incubating. it also captures more ‘computer nature’ than some of the pen &amp; tablet experiments i’ve seen, though that’s def a place i want to converge on at some point",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6bd6fe3fcf91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-05-20\/1137095139906_6bd6fe3fcf91b6f41781_72.jpg",
            "first_name": "",
            "real_name": "Dalton Banks",
            "display_name": "daltonb",
            "team": "T5TCAFTA9",
            "name": "dalton",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654274700.595999",
        "parent_user_id": "U9C92716C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aVpJg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "thanks for the comment. i’m a bit reluctant to answer ‘what’ directly, since\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "i’m interested in what you make of them without much framing"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "as ‘sketches’ they really are open for interpretation\/insight"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but thanks for asking; here’s a bit more orientation & i can elaborate more if you want\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "these are three sketches from a broader set, just to give the flavor of them"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "each one is just a unicode text file open in a Vim editor. anything ‘special’ beyond basic navigation is annotated in the file."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "a general theme is me trying to get a better grasp on the spatial & physical nature of text editing"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "sketch #1 is about embedding multiple spatial dims in a single vertical dim. no macros are involved, i’m just using “*” and “#” to ‘jump to next\/prev match’ on different labels to ‘move’ in ‘view space’ along spatially embedded axes. each ‘frame’ is found in a different part of the file."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "sketch #2 is roughly about ‘direct manipulation’ of code\/data\/environment. idk if you’re familiar with Vim, but all editor commands can be recorded as plaintext macros & replayed on command. i’m just going a step further and saving macros in the doc\/executing them from the doc"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "sketch #3 is a birds eye view of an afternoon prototyping session; gives some sense of the ‘sketchbook’ feel of the approach"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "overall, this approach (i.e., sketching directly in Vim plaintext) is the first concrete instance where i can recognize a semblance of the inchoate thing i’ve been incubating. it also captures more ‘computer nature’ than some of the pen & tablet experiments i’ve seen, though that’s def a place i want to converge on at some point"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1654288622.417509",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1654288633.000000"
        },
        "client_msg_id": "f9795156-35ae-4527-8aba-090b73743174",
        "text": "Looks super tantalizing!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654274700.595999",
        "parent_user_id": "U9C92716C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9wqpN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Looks super tantalizing!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U9C92716C"
                ],
                "count": 1
            }
        ]
    }
]