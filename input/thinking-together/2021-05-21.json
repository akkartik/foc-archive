[
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1621594055.010900",
        "edited": {
            "user": "U5STGTB3J",
            "ts": "1621594122.000000"
        },
        "client_msg_id": "450fae5f-21ca-4d28-a527-d2171f7e6da4",
        "text": "&gt; being “half-assed” compared to the perfect solution often allows for more freedom of movement on axes that may be far more important to the audience\nThere’s the notion of designing something only as far as you need to, which I’ve been exploring as one of the main themes in Christopher Alexander’s work. Ryan Singer calls it “design latitude”. It’s what pattern languages really are about: describing a design only as far as you need to in that context, leaving all the lower-level implementation details as open as possible.\n\nIn software we nowadays default to spell everything out as detailed as possible. Partly because we have to; that CPU isn’t going to do anything until you present it with some proper stream of instructions, so you’re required to fill in all the blanks somehow, even if you haven’t figured those out in the design yet. Or — what a concept — if you’d prefer not to fill these details in, but leave it to others downstream to do that.\n\nBeing able to distinguish the decisions that you need to make now from the ones you want to leave open, is something our tools today are really bad at helping us with. They usually push us towards deciding everything, even if we don’t want to.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621455059.002300",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f6n",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "being “half-assed” compared to the perfect solution often allows for more freedom of movement on axes that may be far more important to the audience"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThere’s the notion of designing something only as far as you need to, which I’ve been exploring as one of the main themes in Christopher Alexander’s work. Ryan Singer calls it “design latitude”. It’s what pattern languages really are about: describing a design only as far as you need to in that context, leaving all the lower-level implementation details as open as possible.\n\nIn software we nowadays default to spell everything out as detailed as possible. Partly because we have to; that CPU isn’t going to do anything until you present it with some proper stream of instructions, so you’re required to fill in all the blanks somehow, even if you haven’t figured those out in the design yet. Or — what a concept — if you’d prefer not to fill these details in, but leave it to others downstream to do that.\n\nBeing able to distinguish the decisions that you need to make now from the ones you want to leave open, is something our tools today are really bad at helping us with. They usually push us towards deciding everything, even if we don’t want to."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1621596000.011200",
        "client_msg_id": "bf2b21a1-6db8-4208-b09c-fd69f7be926c",
        "text": "I totally agree, design should be done in the form of specifications (which can be incomplete), not implementation (which has to be executable). Better yet, aim for _composable_ specifications. That has worked out very well in mathematical descriptions (see <https:\/\/blog.khinsen.net\/posts\/2020\/12\/10\/the-structure-and-interpretation-of-scientific-models\/>).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621455059.002300",
        "parent_user_id": "UMVFWPZ36",
        "attachments": [
            {
                "title": "The structure and interpretation of scientific models",
                "title_link": "https:\/\/blog.khinsen.net\/posts\/2020\/12\/10\/the-structure-and-interpretation-of-scientific-models\/",
                "text": "It is often said that science rests on two pillars, experiment and theory. Which has lead some to propose one or two additional pillars for the computing age: simulation and data analysis. However, the _real_ two pillars of science are observations and mo...",
                "fallback": "The structure and interpretation of scientific models",
                "from_url": "https:\/\/blog.khinsen.net\/posts\/2020\/12\/10\/the-structure-and-interpretation-of-scientific-models\/",
                "service_name": "blog.khinsen.net",
                "id": 1,
                "original_url": "https:\/\/blog.khinsen.net\/posts\/2020\/12\/10\/the-structure-and-interpretation-of-scientific-models\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UOSB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I totally agree, design should be done in the form of specifications (which can be incomplete), not implementation (which has to be executable). Better yet, aim for "
                            },
                            {
                                "type": "text",
                                "text": "composable",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " specifications. That has worked out very well in mathematical descriptions (see "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/blog.khinsen.net\/posts\/2020\/12\/10\/the-structure-and-interpretation-of-scientific-models\/"
                            },
                            {
                                "type": "text",
                                "text": ")."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1621596831.011500",
        "client_msg_id": "c94b4e26-74e8-4484-b7ac-c438018c69bd",
        "text": "<@UJBAJNFLK> How does incompleteness work with specifications? I thought they’re only incomplete in the sense that they are a model and not reality, so they might just completely miss certain aspects (or deliberately leave them out), but they still need to be fully coherent and precise within themselves.\n\nI don’t know enough about that to judge whether I perhaps mean a different kind of incomplete. Alexander is pretty clever in pattern languages, where he uses ambiguity of language to choose words that create the right picture in our mind’s eye, but such that _we_ (the “user”) fill in the blanks and not _him_ (the designer). It feels like there’s a (subtle?) difference there in that an incomplete specification misses something completely (or chooses to leave it out), whereas a pattern language very deliberately describes something, but in a way that is intentionally ambiguous. I’m having a hard time squaring precision of specifications with ambiguity.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621455059.002300",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HYnLU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " How does incompleteness work with specifications? I thought they’re only incomplete in the sense that they are a model and not reality, so they might just completely miss certain aspects (or deliberately leave them out), but they still need to be fully coherent and precise within themselves.\n\nI don’t know enough about that to judge whether I perhaps mean a different kind of incomplete. Alexander is pretty clever in pattern languages, where he uses ambiguity of language to choose words that create the right picture in our mind’s eye, but such that "
                            },
                            {
                                "type": "text",
                                "text": "we",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (the “user”) fill in the blanks and not "
                            },
                            {
                                "type": "text",
                                "text": "him",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (the designer). It feels like there’s a (subtle?) difference there in that an incomplete specification misses something completely (or chooses to leave it out), whereas a pattern language very deliberately describes something, but in a way that is intentionally ambiguous. I’m having a hard time squaring precision of specifications with ambiguity."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1621603513.011700",
        "client_msg_id": "ddfd86df-c394-425a-9173-17282a679e03",
        "text": "Take mathematical equations, which are specifications for their solutions. More specifically, equations are _constraints_ on the solutions. You can compose as many such constraints as you want. At worst, you overconstrain the solution to the point that there is no solution any more. Which means that your specifications\/constraints are incoherent. But that is detectable and thus avoidable.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621455059.002300",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LQn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Take mathematical equations, which are specifications for their solutions. More specifically, equations are "
                            },
                            {
                                "type": "text",
                                "text": "constraints",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " on the solutions. You can compose as many such constraints as you want. At worst, you overconstrain the solution to the point that there is no solution any more. Which means that your specifications\/constraints are incoherent. But that is detectable and thus avoidable."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1621605223.011900",
        "client_msg_id": "de12cf2e-99c0-4804-9390-b06b8fb4eb8a",
        "text": "Ah yes, that makes sense. I was already thinking in the direction of type systems, which allow you to express such arbitrary constraints on  values, making them just as specific as you need\/want them.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621455059.002300",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uwo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah yes, that makes sense. I was already thinking in the direction of type systems, which allow you to express such arbitrary constraints on  values, making them just as specific as you need\/want them."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1621614487.012400",
        "client_msg_id": "ed62e241-9ece-40aa-9261-aabd5248d3c0",
        "text": "Yes, that's a good start. Next would be constraints on relations between values. Both same-time (e.g. two arguments to a function) and different-time (e.g. input and output of a function).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621455059.002300",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B=X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, that's a good start. Next would be constraints on relations between values. Both same-time (e.g. two arguments to a function) and different-time (e.g. input and output of a function)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1621616233.012800",
        "client_msg_id": "399d1451-977b-4fdc-9173-8bcc23782369",
        "text": "<@UJBAJNFLK> I agree we want curated bidi links. I didn't mean to say \"we can do bidi links already\" but rather \"bidi links can be extracted, with some effort, from uni directional links\" and perhaps this idea can be used to build curated lists.\n\nOne big shortcoming of the web is there is no link-content stability. The link represents a way to get the content, not the content itself. A unique link should always give you the \"same thing\". In some cases this might mean the latest version of that thing, but prior versions should be linked to the latest one as well. OTOH, the original author of some content should not be required to fund availability of their stable content on some server for perpetuity.\n\nPerhaps we want a system where authors publish stable content links but availability is provided by other organizations. For large globally relevant content, large publicly funded organizations could fund availability (~wikipedia). However smaller communities could form their own organizations and fund availability of content relevant to and curated by them. As things become more relevant, content would get pinned into the zones of more and more orgs, small and large. As they become less relevant, many orgs might stop persisting the content, but archival orgs like newspapers and <http:\/\/archive.org|archive.org> might take them on. I believe IPFS (and maybe DAT?) or something similar can be a foundation of what I am describing.\n\nThis is only part of the problem though. In IPFS for instance, a link will give me a blob of bytes but making sense of it is still left to me. What's the guarantee I'll be able to assemble the perfect combination of programs that extract meaning from that blob? In 5 years? In 50 years? How can we enrich the system to do this easily and reliably?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621455059.002300",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r1edT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " I agree we want curated bidi links. I didn't mean to say \"we can do bidi links already\" but rather \"bidi links can be extracted, with some effort, from uni directional links\" and perhaps this idea can be used to build curated lists.\n\nOne big shortcoming of the web is there is no link-content stability. The link represents a way to get the content, not the content itself. A unique link should always give you the \"same thing\". In some cases this might mean the latest version of that thing, but prior versions should be linked to the latest one as well. OTOH, the original author of some content should not be required to fund availability of their stable content on some server for perpetuity.\n\nPerhaps we want a system where authors publish stable content links but availability is provided by other organizations. For large globally relevant content, large publicly funded organizations could fund availability (~wikipedia). However smaller communities could form their own organizations and fund availability of content relevant to and curated by them. As things become more relevant, content would get pinned into the zones of more and more orgs, small and large. As they become less relevant, many orgs might stop persisting the content, but archival orgs like newspapers and "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/archive.org",
                                "text": "archive.org"
                            },
                            {
                                "type": "text",
                                "text": " might take them on. I believe IPFS (and maybe DAT?) or something similar can be a foundation of what I am describing.\n\nThis is only part of the problem though. In IPFS for instance, a link will give me a blob of bytes but making sense of it is still left to me. What's the guarantee I'll be able to assemble the perfect combination of programs that extract meaning from that blob? In 5 years? In 50 years? How can we enrich the system to do this easily and reliably?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1621628961.013400",
        "client_msg_id": "de1c384f-3343-42cb-a6d9-1286eeebcbb1",
        "text": "Another good quote from a few months ago on HN (<https:\/\/news.ycombinator.com\/item?id=26034000>):\n\nSpeed has a moral dimension: to be fast is to be in tune with the facts of the world as it truly is, as the Atman has provided, without illusion.\nSpeed has a social dimension: to make the user wait unnecessarily is to express disrespect, even contempt.\nSpeed has an architectural dimension: to be fast, the operations have to match the parts of the system and their relationships.\nSpeed has a spiritual dimension: to achieve speed demands that you humble yourself before the structures of the machine as it truly is, not some comfortable abstraction.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621628961.013400",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1621640648.016100",
        "reply_users": [
            "UCUSW7WVD"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1621640648.016100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p1+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another good quote from a few months ago on HN ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=26034000"
                            },
                            {
                                "type": "text",
                                "text": "):\n\nSpeed has a moral dimension: to be fast is to be in tune with the facts of the world as it truly is, as the Atman has provided, without illusion.\nSpeed has a social dimension: to make the user wait unnecessarily is to express disrespect, even contempt.\nSpeed has an architectural dimension: to be fast, the operations have to match the parts of the system and their relationships.\nSpeed has a spiritual dimension: to achieve speed demands that you humble yourself before the structures of the machine as it truly is, not some comfortable abstraction."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "Lately, I have been thinking about how to do some programming without screens.\nI came up with a representation of `Nodes &amp; wires` with Lego's.\nIf each function and constant has it's own color, I can represent the `average` function like this.\n\n- Does anyone has experience with OpenCV or computer vision, so that I can create code from the above images?\n- Any thougths on how to make use of 3D? (There's a slight use of 3D in an image in the thread but I think the third dimension is underused)",
        "files": [
            {
                "id": "F022QRU5JNP",
                "mode": "hidden_by_limit"
            },
            {
                "id": "F0229SAR97Z",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6b12",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lately, I have been thinking about how to do some programming without screens.\nI came up with a representation of "
                            },
                            {
                                "type": "text",
                                "text": "Nodes & wires",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " with Lego's.\nIf each function and constant has it's own color, I can represent the "
                            },
                            {
                                "type": "text",
                                "text": "average",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " function like this.\n\n- Does anyone has experience with OpenCV or computer vision, so that I can create code from the above images?\n- Any thougths on how to make use of 3D? (There's a slight use of 3D in an image in the thread but I think the third dimension is underused)"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1621632431.013800",
        "thread_ts": "1621632431.013800",
        "reply_count": 12,
        "reply_users_count": 3,
        "latest_reply": "1622081636.027000",
        "reply_users": [
            "U85HCL7JP",
            "UMVFWPZ36",
            "U01JNTE35QS"
        ],
        "replies": [
            {
                "user": "U85HCL7JP",
                "ts": "1621632699.013900"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1621633975.014200"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1621634009.014500"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1621634033.014700"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1621634068.014900"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1621634195.015100"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1621634201.015400"
            },
            {
                "user": "U01JNTE35QS",
                "ts": "1621650772.016900"
            },
            {
                "user": "U01JNTE35QS",
                "ts": "1621650877.017100"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1622062070.025800"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1622062299.026000"
            },
            {
                "user": "U01JNTE35QS",
                "ts": "1622081636.027000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UMVFWPZ36",
                    "U021MR7BK2Q",
                    "UCUSW7WVD",
                    "U013866H7LY",
                    "UA14TGLTC",
                    "UC2A2ARPT",
                    "UJBAJNFLK",
                    "UJ6LDMMN0",
                    "U023V63MF6V",
                    "U01GV0YCYAG",
                    "U01TBS7N9GS",
                    "U012RSHGTFY"
                ],
                "count": 12
            }
        ]
    },
    {
        "text": "Trying something a bit more complex like an `XOR` function, I get into the problem of wires crossing. I think wires could be made explicit with colors",
        "files": [
            {
                "id": "F02338N427K",
                "mode": "hidden_by_limit"
            },
            {
                "id": "F02338NA3Q9",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jor0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Trying something a bit more complex like an "
                            },
                            {
                                "type": "text",
                                "text": "XOR",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " function, I get into the problem of wires crossing. I think wires could be made explicit with colors"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1621632699.013900",
        "edited": {
            "user": "U85HCL7JP",
            "ts": "1621634374.000000"
        },
        "thread_ts": "1621632431.013800",
        "parent_user_id": "U85HCL7JP",
        "reactions": [
            {
                "name": "exploding_head",
                "users": [
                    "U021MR7BK2Q"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1621633975.014200",
        "client_msg_id": "d7161ffc-ce27-4c48-9fd7-2234b95c3fb0",
        "text": "There are some very active LEGO subreddits (<https:\/\/www.reddit.com\/r\/lego\/>)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621632431.013800",
        "parent_user_id": "U85HCL7JP",
        "attachments": [
            {
                "service_name": "reddit",
                "title": "LEGO - News from a Studded World • r\/lego",
                "title_link": "https:\/\/www.reddit.com\/r\/lego\/",
                "text": "Reports, news, pics, videos, discussions and documentation from a studded world. \/r\/lego is about all things LEGO®.",
                "fallback": "reddit: LEGO - News from a Studded World • r\/lego",
                "thumb_url": "https:\/\/styles.redditmedia.com\/t5_2qhm7\/styles\/bannerBackgroundImage_adxl81riyoz61.png",
                "from_url": "https:\/\/www.reddit.com\/r\/lego\/",
                "thumb_width": 5371,
                "thumb_height": 400,
                "service_icon": "http:\/\/www.redditstatic.com\/desktop2x\/img\/favicon\/apple-icon-57x57.png",
                "id": 1,
                "original_url": "https:\/\/www.reddit.com\/r\/lego\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rwN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are some very active LEGO subreddits ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.reddit.com\/r\/lego\/"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1621634009.014500",
        "client_msg_id": "8fe39f43-a8c0-438e-b8c3-6f8a5574532a",
        "text": "One idea is to start with LDraw or similar (<https:\/\/www.ldraw.org\/>)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621632431.013800",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iv8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One idea is to start with LDraw or similar ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.ldraw.org\/"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1621634033.014700",
        "client_msg_id": "22f4de91-a68c-4236-b6e8-796530f0e776",
        "text": "And work on nailing your 3D language virtually",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621632431.013800",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x9B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And work on nailing your 3D language virtually"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1621634068.014900",
        "client_msg_id": "009933bc-ac66-407b-ad18-bc1cec079f91",
        "text": "There are likely CV packages out there for converting a photo of LEGO into an LDraw file",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621632431.013800",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VPHP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are likely CV packages out there for converting a photo of LEGO into an LDraw file"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1621634195.015100",
        "client_msg_id": "fcb4af52-59db-499d-bc1e-58ff830a693c",
        "text": "Another good one: <https:\/\/www.reddit.com\/r\/DigitalLego\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621632431.013800",
        "parent_user_id": "U85HCL7JP",
        "attachments": [
            {
                "service_name": "reddit",
                "title": "Digital LEGO • r\/DigitalLego",
                "title_link": "https:\/\/www.reddit.com\/r\/DigitalLego\/",
                "text": "Sharing and discussing LEGO ® builds made in the computer (e.g. Bricklink <http:\/\/Stud.io|Stud.io>, Lego Digital Designer).",
                "fallback": "reddit: Digital LEGO • r\/DigitalLego",
                "thumb_url": "https:\/\/styles.redditmedia.com\/t5_1mqmiq\/styles\/bannerBackgroundImage_eqy37f1gt9931.jpg",
                "from_url": "https:\/\/www.reddit.com\/r\/DigitalLego\/",
                "thumb_width": 912,
                "thumb_height": 210,
                "service_icon": "http:\/\/www.redditstatic.com\/desktop2x\/img\/favicon\/apple-icon-57x57.png",
                "id": 1,
                "original_url": "https:\/\/www.reddit.com\/r\/DigitalLego\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FwJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another good one: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.reddit.com\/r\/DigitalLego\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1621634201.015400",
        "client_msg_id": "0e42ca04-ea47-475c-8a58-913cb6f89392",
        "text": "this may be relevant: <https:\/\/www.brickfanatics.com\/reddit-user-builds-app-that-can-recognise-lego-bricks\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621632431.013800",
        "parent_user_id": "U85HCL7JP",
        "attachments": [
            {
                "service_name": "Brick Fanatics",
                "title": "Reddit user builds app that can recognise LEGO bricks",
                "title_link": "https:\/\/www.brickfanatics.com\/reddit-user-builds-app-that-can-recognise-lego-bricks\/",
                "text": "A tech-savvy redditor has designed an app that can scan and identify LEGO bricks. If you've ever sorted through a",
                "fallback": "Brick Fanatics: Reddit user builds app that can recognise LEGO bricks",
                "thumb_url": "https:\/\/www.brickfanatics.com\/wp-content\/uploads\/LEGO-brick-scanner-featured.jpeg",
                "ts": 1602508176,
                "from_url": "https:\/\/www.brickfanatics.com\/reddit-user-builds-app-that-can-recognise-lego-bricks\/",
                "thumb_width": 800,
                "thumb_height": 445,
                "service_icon": "https:\/\/www.brickfanatics.com\/wp-content\/uploads\/cropped-fav-180x180.jpeg",
                "id": 1,
                "original_url": "https:\/\/www.brickfanatics.com\/reddit-user-builds-app-that-can-recognise-lego-bricks\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qhyL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this may be relevant: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.brickfanatics.com\/reddit-user-builds-app-that-can-recognise-lego-bricks\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1621640648.016100",
        "client_msg_id": "634199ac-2f9b-42f6-9e04-7cb163454fcc",
        "text": "Deserves a place on my favorites: <https:\/\/news.ycombinator.com\/favorites?id=akkartik&amp;comments=t|https:\/\/news.ycombinator.com\/favorites?id=akkartik&amp;comments=t>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621628961.013400",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dCBgh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Deserves a place on my favorites: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/favorites?id=akkartik&comments=t",
                                "text": "https:\/\/news.ycombinator.com\/favorites?id=akkartik&comments=t"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01JNTE35QS",
        "type": "message",
        "ts": "1621650772.016900",
        "client_msg_id": "324a41fe-9005-4269-8956-fc771f4711c8",
        "text": "If you are using color coded bricks you can likely just do it using image thresholding and maybe a hough transform for initial alignment. OpenCV would be overkill in this case.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "97155db555c2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-01-13\/1631845309525_97155db555c2091ecd20_72.jpg",
            "first_name": "",
            "real_name": "Vijay Chakravarthy",
            "display_name": "Vijay Chakravarthy",
            "team": "T5TCAFTA9",
            "name": "vchakrav",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621632431.013800",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ccz=R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you are using color coded bricks you can likely just do it using image thresholding and maybe a hough transform for initial alignment. OpenCV would be overkill in this case."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01JNTE35QS",
        "type": "message",
        "ts": "1621650877.017100",
        "client_msg_id": "3e3ff4be-9f4c-426c-a028-03495806b228",
        "text": "On a related note, I assume you have looked at the dynamicland stuff in some detail?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "97155db555c2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-01-13\/1631845309525_97155db555c2091ecd20_72.jpg",
            "first_name": "",
            "real_name": "Vijay Chakravarthy",
            "display_name": "Vijay Chakravarthy",
            "team": "T5TCAFTA9",
            "name": "vchakrav",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621632431.013800",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U4S5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On a related note, I assume you have looked at the dynamicland stuff in some detail?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1621658862.018400",
        "client_msg_id": "f7504e12-8b36-432b-99f0-57d00483fccb",
        "text": "A big problem of the Web is indeed that it has no notion of \"lifetime\". There is no way to ensure persistence, nor erasure of information.\n\nContent-addressing as in IPFS (not DAT, which is based on UUIDs for sharing mutable data) is a very useful ingredient for better information management. Preserving the semantics of data is a much harder problem, one that people (including myself) are actively working on in the context of preserving digital scientific knowledge. 5 years is doable today. If you aim for 50 years, there are techniques that make it possible under reasonable assumptions, such as the continued existence of virtual x86 machines.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1621455059.002300",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p57",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A big problem of the Web is indeed that it has no notion of \"lifetime\". There is no way to ensure persistence, nor erasure of information.\n\nContent-addressing as in IPFS (not DAT, which is based on UUIDs for sharing mutable data) is a very useful ingredient for better information management. Preserving the semantics of data is a much harder problem, one that people (including myself) are actively working on in the context of preserving digital scientific knowledge. 5 years is doable today. If you aim for 50 years, there are techniques that make it possible under reasonable assumptions, such as the continued existence of virtual x86 machines."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]