[
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1555407081.005200",
        "client_msg_id": "75a348a4-2e35-47d0-bc08-ab0f975a547b",
        "text": "Thanks, Kartik. :slightly_smiling_face: The medium matters…",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555272961.002600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xgu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks, Kartik. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " The medium matters…"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1555408234.005400",
        "client_msg_id": "76d235ec-cbeb-4180-9052-f101d170e2e7",
        "text": "Miles, my thinking is that it's the sequencing of `.getAddress().getCountry()`. Even if `getCountry(person)` does the same thing internally, that code is now separate, which is what makes the second example simpler. Someone editing `getCountry(person)` only needs to worry about whether getting the country is the right thing to do, and isn't distracted by the details of how it's done.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555272961.002600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OW8K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Miles, my thinking is that it's the sequencing of "
                            },
                            {
                                "type": "text",
                                "text": ".getAddress().getCountry()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Even if "
                            },
                            {
                                "type": "text",
                                "text": "getCountry(person)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " does the same thing internally, that code is now separate, which is what makes the second example simpler. Someone editing "
                            },
                            {
                                "type": "text",
                                "text": "getCountry(person)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " only needs to worry about whether getting the country is the right thing to do, and isn't distracted by the details of how it's done."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UF71PR58X",
        "type": "message",
        "ts": "1555409183.005600",
        "edited": {
            "user": "UF71PR58X",
            "ts": "1555409229.000000"
        },
        "client_msg_id": "3922d8bc-e4f6-490e-8254-b67eb2b8e65d",
        "text": "Tom, there are some differences there which I'm finding confusing, but which don't seem to be relevant to the point you're making in your second sentence. Does the comparison hold up if we use the same call syntax in both cases, ie. compare `person.getAddress().getCountry()` vs. `person.getAddressCountry()` or `getCountry(getAddress(person))` vs. `getAddressCountry(person)`.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ga7e159fad28",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8a7e159fad28f672ca794fb7f2bf7f0f.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Miles Sabin",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "miles",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555272961.002600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rll9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Tom, there are some differences there which I'm finding confusing, but which don't seem to be relevant to the point you're making in your second sentence. Does the comparison hold up if we use the same call syntax in both cases, ie. compare "
                            },
                            {
                                "type": "text",
                                "text": "person.getAddress().getCountry()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " vs. "
                            },
                            {
                                "type": "text",
                                "text": "person.getAddressCountry()",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "text",
                                "text": "getCountry(getAddress(person))",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " vs. "
                            },
                            {
                                "type": "text",
                                "text": "getAddressCountry(person)",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDQKHNP51",
        "type": "message",
        "ts": "1555418947.006700",
        "client_msg_id": "9f639c02-dfea-410e-a3bc-84eef396a714",
        "text": "I feel like I’m preaching to the quire, but I wrote my thoughts on the ideal development toolset. any kind of feedback is appreciated :slightly_smiling_face:\n<http:\/\/elbear.com\/my-ideal-developer-toolset.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3074e1515db",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b3074e1515db1a3d79acf5d954eac0d1.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "Lucian Ursu",
            "display_name": "elbear",
            "team": "T5TCAFTA9",
            "name": "lucian.ursu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555418947.006700",
        "reply_count": 10,
        "reply_users_count": 6,
        "latest_reply": "1558046844.045800",
        "reply_users": [
            "UF5PAGQQ4",
            "UAL7940NM",
            "UH84GQ3CZ",
            "UEQ6M68H0",
            "UDQKHNP51",
            "UC6997THT"
        ],
        "replies": [
            {
                "user": "UF5PAGQQ4",
                "ts": "1555421461.006900"
            },
            {
                "user": "UAL7940NM",
                "ts": "1555422646.011900"
            },
            {
                "user": "UH84GQ3CZ",
                "ts": "1555474514.015700"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1555484535.015900"
            },
            {
                "user": "UDQKHNP51",
                "ts": "1555490848.016700"
            },
            {
                "user": "UAL7940NM",
                "ts": "1555498669.016900"
            },
            {
                "user": "UDQKHNP51",
                "ts": "1555501676.017100"
            },
            {
                "user": "UC6997THT",
                "ts": "1556703412.002400"
            },
            {
                "user": "UC6997THT",
                "ts": "1556703694.002700"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1558046844.045800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jM7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel like I’m preaching to the quire, but I wrote my thoughts on the ideal development toolset. any kind of feedback is appreciated "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/elbear.com\/my-ideal-developer-toolset.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAL7940NM",
                    "UGXH0HCSF",
                    "UFEQUBNNT"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UF5PAGQQ4",
        "type": "message",
        "ts": "1555421461.006900",
        "client_msg_id": "a4cee7d0-31c8-44d0-acc9-f8e18b09eddb",
        "text": "never knew that “quire” was a legit spelling!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g99a3fab7a1a",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/299a3fab7a1a2d6644455dedae9fce0a.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Stathis Sideris",
            "display_name": "Stathis",
            "team": "T5TCAFTA9",
            "name": "sideris",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555418947.006700",
        "parent_user_id": "UDQKHNP51",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m=R5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "never knew that “quire” was a legit spelling!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "exploding_head",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1555422606.011200",
        "client_msg_id": "325D1EC1-AD42-42C3-9E5B-EC898CB4F04C",
        "text": "I think so. I was originally imagining using the flexibility of getCountry() coming from an arbitrary module compared to .getAddress(), but I don’t think adding that was necessary.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555272961.002600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3K4eD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think so. I was originally imagining using the flexibility of getCountry() coming from an arbitrary module compared to .getAddress(), but I don’t think adding that was necessary."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1555422646.011900",
        "client_msg_id": "ac65757e-be14-4d87-802e-75e9f0a4fe6e",
        "text": "Hi Lucian, I read through your post and agree with almost all points. A couple of (random) thoughts:\n- Input Validation: Only allowing valid code makes editing cumbersome. There's been a lot of AST-based Structure Editors in the past that failed because refactorings that can easily be done in a text editor feel awkward in these structure editors. So while I think that structure editors have a lot to offer (see your other points for example), it's important to allow temporarily invalid states.\n- Semantic Highlighting: There's a project called Tree Sitter which aims to improve highlighting in Github's editors. It's an incremental parser basically.\n- Compilation: You describe compiling as an action manually triggered by the user. What do you think of automatic re-compilation? My current take on this is that the environment shouldn't have a manual \"Compile\" button but instead re-compile incrementally as I'm editing.\n- Deployment: This section could use more words. Setting up deployment on all technologies you mentioned involves a significant amount of knowledge \/ work and is non-trivial for both developers and users. In my opinion, deploying should be as easy as clicking on a \"publish\" button (without requiring any configuration beforehand), using an app should be as easy as opening a website and \"installing\" it should be as easy as pinning a tab in your browser.\n- Regarding your future plans, do you want to use an existing programming language or invent your own? Do you already know other projects in this area (like Lamdu, Hazel, Unison, Subtext, ...)?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555418947.006700",
        "parent_user_id": "UDQKHNP51",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xLrTZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi Lucian, I read through your post and agree with almost all points. A couple of (random) thoughts:\n- Input Validation: Only allowing valid code makes editing cumbersome. There's been a lot of AST-based Structure Editors in the past that failed because refactorings that can easily be done in a text editor feel awkward in these structure editors. So while I think that structure editors have a lot to offer (see your other points for example), it's important to allow temporarily invalid states.\n- Semantic Highlighting: There's a project called Tree Sitter which aims to improve highlighting in Github's editors. It's an incremental parser basically.\n- Compilation: You describe compiling as an action manually triggered by the user. What do you think of automatic re-compilation? My current take on this is that the environment shouldn't have a manual \"Compile\" button but instead re-compile incrementally as I'm editing.\n- Deployment: This section could use more words. Setting up deployment on all technologies you mentioned involves a significant amount of knowledge \/ work and is non-trivial for both developers and users. In my opinion, deploying should be as easy as clicking on a \"publish\" button (without requiring any configuration beforehand), using an app should be as easy as opening a website and \"installing\" it should be as easy as pinning a tab in your browser.\n- Regarding your future plans, do you want to use an existing programming language or invent your own? Do you already know other projects in this area (like Lamdu, Hazel, Unison, Subtext, ...)?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-6",
                "users": [
                    "UCKRZS3DZ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1555422810.014600",
        "client_msg_id": "2A9F41A1-4306-4D56-B9F5-9B2480693DCC",
        "text": "Now you’ve reminded me of when Rails devs discovered the Law of Demeter and started evicting all expressions from their code that used two periods in a row. :laughing: It’s like that! Is Rich’s talk older than that?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555272961.002600",
        "parent_user_id": "UFEQUBNNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H+t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Now you’ve reminded me of when Rails devs discovered the Law of Demeter and started evicting all expressions from their code that used two periods in a row. "
                            },
                            {
                                "type": "emoji",
                                "name": "laughing",
                                "unicode": "1f606"
                            },
                            {
                                "type": "text",
                                "text": " It’s like that! Is Rich’s talk older than that?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UH84GQ3CZ",
        "type": "message",
        "ts": "1555474514.015700",
        "client_msg_id": "2e6cf71a-7d3b-487a-915c-1c4814bda6db",
        "text": "some disorganized thoughts\n- allowing only correct syntax is doable (I've written such editors), it's hard to make the UI pleasant. We need more people prototyping structure editors and trying things out.\n- allowing only correct semantics is a different ballgame, depending on what you mean by that it moves your idea closer to a proof assistant. My intuition is that convincing the computer at each stage that your types are correct, is a massive burden.\n- I think you can think bigger on imports. Why do we need import statements at all? Index every function in the package repository for autocomplete. Create a stable link to the selected function, locally or remotely.\n- Creating a docker image doesn't solve much. Docker is kind of an ostrich mentality IMO - dependencies are hard, let's pretend they don't exist or don't matter. I'm of the exact opposite point of view, we should throw away the punchcard-era fiction that our programs are isolated input-output machines, instead concepts like persistence, error recovery, distribution, versioning should all be first class in the language. A \"program\" should encompass all elements of the system that it needs to function, and should be able to update itself without an extra-linguistic \"deployment\" system..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "590662e8a2ae",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-16\/610501525696_590662e8a2ae7b2c73e9_72.jpg",
            "first_name": "",
            "real_name": "Jason Priestley",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jasonhpriestley",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555418947.006700",
        "parent_user_id": "UDQKHNP51",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ObT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "some disorganized thoughts\n- allowing only correct syntax is doable (I've written such editors), it's hard to make the UI pleasant. We need more people prototyping structure editors and trying things out.\n- allowing only correct semantics is a different ballgame, depending on what you mean by that it moves your idea closer to a proof assistant. My intuition is that convincing the computer at each stage that your types are correct, is a massive burden.\n- I think you can think bigger on imports. Why do we need import statements at all? Index every function in the package repository for autocomplete. Create a stable link to the selected function, locally or remotely.\n- Creating a docker image doesn't solve much. Docker is kind of an ostrich mentality IMO - dependencies are hard, let's pretend they don't exist or don't matter. I'm of the exact opposite point of view, we should throw away the punchcard-era fiction that our programs are isolated input-output machines, instead concepts like persistence, error recovery, distribution, versioning should all be first class in the language. A \"program\" should encompass all elements of the system that it needs to function, and should be able to update itself without an extra-linguistic \"deployment\" system.."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]