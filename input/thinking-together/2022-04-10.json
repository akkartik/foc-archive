[
    {
        "user": "U02AK2Z5JR1",
        "type": "message",
        "ts": "1649635341.501189",
        "client_msg_id": "7223F8AC-1254-492D-9EE0-93E09B3F9EE0",
        "text": "Has anyone heard of anyone trying to build end-user-modifiable apps with Electron? For those who are up for working in JS, it seems like you could have the same Electron app both run code and allow you to edit the code that's run in-app. Could even use VS Code's editor.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3d4925d09aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3d4925d09aa1681314bb99939d733d05.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Josh",
            "real_name": "Josh Justice",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "josh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1649635341.501189",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1649712872.238899",
        "reply_users": [
            "UC2A2ARPT",
            "U02AK2Z5JR1",
            "UEBG0NPDK"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1649638134.664349"
            },
            {
                "user": "U02AK2Z5JR1",
                "ts": "1649672837.125779"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1649712872.238899"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lGViq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Has anyone heard of anyone trying to build end-user-modifiable apps with Electron? For those who are up for working in JS, it seems like you could have the same Electron app both run code and allow you to edit the code that's run in-app. Could even use VS Code's editor."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1649638134.664349",
        "client_msg_id": "6fd48c2e-0ccb-47b6-9ae8-de977950818a",
        "text": "I mean, the project that birthed Electron — the Atom text editor — was designed to be modified by the user in a _bunch_ of ways, depending on their technical ability and interest:\n• download plugins to add readymade behaviour\n• make new plugins by coding against the high-level APIs, or by directly manipulating the DOM\n• add custom keyboard shortcuts\n• add custom scripts (that can be run by shortcuts, or on events)\n• add custom CSS\nThis might not seem so special, but today, _even after they worked to drastically narrow the extent to which you can mess with Atom's rendering (for the sake of perf)_, it's still wildly more customizable than other Electron-based apps, including VS Code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1649635341.501189",
        "parent_user_id": "U02AK2Z5JR1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=Ak",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I mean, the project that birthed Electron — the Atom text editor — was designed to be modified by the user in a "
                            },
                            {
                                "type": "text",
                                "text": "bunch",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of ways, depending on their technical ability and interest:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "download plugins to add readymade behaviour"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "make new plugins by coding against the high-level APIs, or by directly manipulating the DOM"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "add custom keyboard shortcuts"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "add custom scripts (that can be run by shortcuts, or on events)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "add custom CSS"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis might not seem so special, but today, "
                            },
                            {
                                "type": "text",
                                "text": "even after they worked to drastically narrow the extent to which you can mess with Atom's rendering (for the sake of perf)",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", it's still wildly more customizable than other Electron-based apps, including VS Code."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1649638610.465629",
        "client_msg_id": "50901d8c-2432-43ab-a3f9-8151fb8d2c81",
        "text": "Yeah, that's something we ran into with Crosscut and didn't really engage with. The freedom to draw \"whatever\" at the concrete level is really pleasing; being able to manipulate the \"whatever\" using a dynamic system is appealing. But having vector math be the _only_ way to do that dynamic manipulation is such a narrow channel through which to work — it's very unlikely to match the character of the \"whatever\" you drew.\n\nI'd like to lean away from geometric representation entirely. That means no vector math — probably no math at all. I want to see what _that_ dynamic \/ programming system might look like.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1649362262.813219",
        "parent_user_id": "U035QJ14NN9",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nlq\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, that's something we ran into with Crosscut and didn't really engage with. The freedom to draw \"whatever\" at the concrete level is really pleasing; being able to manipulate the \"whatever\" using a dynamic system is appealing. But having vector math be the "
                            },
                            {
                                "type": "text",
                                "text": "only",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " way to do that dynamic manipulation is such a narrow channel through which to work — it's very unlikely to match the character of the \"whatever\" you drew.\n\nI'd like to lean away from geometric representation entirely. That means no vector math — probably no math at all. I want to see what "
                            },
                            {
                                "type": "text",
                                "text": "that",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " dynamic \/ programming system might look like."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U035QJ14NN9"
                ],
                "count": 1
            },
            {
                "name": "face_with_head_bandage",
                "users": [
                    "UFPRPSA4S"
                ],
                "count": 1
            }
        ]
    }
]