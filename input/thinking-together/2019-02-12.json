[
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1549958924.013500",
        "client_msg_id": "534d0cb1-d554-4912-8c2c-362540716ecc",
        "text": "Thanks for the kind words. Indeed, Glamorous Toolkit embodies a new approach to developing software that we call moldable development. It's not only a tool, but a new way of thinking about software.\n\nThe root of it comes from the realization that software is shapeless, but we as humans need a form, a shape, to reason about anything. The shape of software is provided by the tools we use. This makes tools be essential. However, until now, our tools were dominated by the shape of the input format. That is why most IDEs show text because that happens to be the input format. Or when a visual representation is offered, it is tied to the visual input language (such as in dataflow interfaces).\n\nSoftware is at least data, if not live objects. As such, we can put any shape on that data. And it turns out that if we control that shape, we can dramatically affect both our performance, and our enjoyment. That is why we built an environment that is moldable first.\n\nAnd the idea of moldable development is to build a tool for every problem we encounter. To make this practical, the cost of tools must be cheap. We target minutes cheap and the construction of the tools can happen live as you program. Interestingly, this results in explainable software whose details that can literally be understood by non-technical people. I gave a talk a year ago about how this works using the old generation of GT: <https:\/\/www.youtube.com\/watch?v=tbQVIrca6CA>\n\nGlamorous Toolkit also comes with a couple of engines. Perhaps the most interesting one is the one that replaces TDD with example-driven development. Examples have assertions, like tests, but they also return an object. This little change has significant implications in that the object can be used as documentation especially when combined with custom views.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1549949576.011100",
        "parent_user_id": "UAVCC2X70",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Approachable Software",
                "title_link": "https:\/\/www.youtube.com\/watch?v=tbQVIrca6CA",
                "author_name": "esugboard",
                "author_link": "https:\/\/www.youtube.com\/user\/esugboard",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/tbQVIrca6CA\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Approachable Software",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/tbQVIrca6CA?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=tbQVIrca6CA",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=tbQVIrca6CA"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mXmBu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the kind words. Indeed, Glamorous Toolkit embodies a new approach to developing software that we call moldable development. It's not only a tool, but a new way of thinking about software.\n\nThe root of it comes from the realization that software is shapeless, but we as humans need a form, a shape, to reason about anything. The shape of software is provided by the tools we use. This makes tools be essential. However, until now, our tools were dominated by the shape of the input format. That is why most IDEs show text because that happens to be the input format. Or when a visual representation is offered, it is tied to the visual input language (such as in dataflow interfaces).\n\nSoftware is at least data, if not live objects. As such, we can put any shape on that data. And it turns out that if we control that shape, we can dramatically affect both our performance, and our enjoyment. That is why we built an environment that is moldable first.\n\nAnd the idea of moldable development is to build a tool for every problem we encounter. To make this practical, the cost of tools must be cheap. We target minutes cheap and the construction of the tools can happen live as you program. Interestingly, this results in explainable software whose details that can literally be understood by non-technical people. I gave a talk a year ago about how this works using the old generation of GT: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=tbQVIrca6CA"
                            },
                            {
                                "type": "text",
                                "text": "\n\nGlamorous Toolkit also comes with a couple of engines. Perhaps the most interesting one is the one that replaces TDD with example-driven development. Examples have assertions, like tests, but they also return an object. This little change has significant implications in that the object can be used as documentation especially when combined with custom views."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "UA14TGLTC",
                    "U8A5MS6R1"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1549958957.013800",
        "client_msg_id": "b04dad2f-d7f4-4bd1-a019-268d2556076f",
        "text": "Also, while I am often seen talking about it, it's really a long term team effort. You can see the current team here: <https:\/\/feenk.com>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1549949576.011100",
        "parent_user_id": "UAVCC2X70",
        "attachments": [
            {
                "title": "feenk",
                "title_link": "https:\/\/feenk.com\/",
                "text": "We reshape the Development eXperience",
                "fallback": "feenk",
                "from_url": "https:\/\/feenk.com\/",
                "service_icon": "https:\/\/feenk.com\/favicon.ico",
                "service_name": "feenk.com",
                "id": 1,
                "original_url": "https:\/\/feenk.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+s08",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, while I am often seen talking about it, it's really a long term team effort. You can see the current team here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/feenk.com"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1549961771.014100",
        "client_msg_id": "e3e1970d-ef2d-4403-9ac3-ab29124c7317",
        "text": "First, please do not apologize for making mistakes. We are all here to learn, and making mistakes is a natural part of that process. And in this case, please also consider that when someone does not understand an explanation, the main problem might lie with the explanation.\n\nThe work of Alexander had quite profound impact on my thinking. Smalltalk is the closest high-level programming model to the living structure idea (the other one would be assembler): you can only change a Smalltalk system from within the system. This paves the way to fine grained piecemeal evolution and it offers the environment for unfolding wholeness.\n\nHowever, as opposed to the real world, where the physical shape is tied with the physical thing, in the digital world that constraint does not exist and we can take advantage of that.\n\nA related concept that I find fascinating is that of habitability, coined by Richard Gabriel in Patterns of Software (<https:\/\/www.dreamsongs.com\/Files\/PatternsOfSoftware.pdf>): given that we spend most of our time inside a software system, it should follow that the software system should be habitable. Much like with the quality without a name concept of Alexander, habitability is not measurable. We need to feel it, and we recognize it when we find it.\n\nThe way we feel about things is linked with the way we perceive, and the way we perceive is related to the shape of things. That is why I find the shape to be essential, in particular when it comes with software.\n\nFrom the outside, Glamorous Toolkit is a tool. However, we see it as a language with which you can mold that shape continuously, in an ever living structure.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1527044282.000289",
        "parent_user_id": "UAVCC2X70",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kjq8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "First, please do not apologize for making mistakes. We are all here to learn, and making mistakes is a natural part of that process. And in this case, please also consider that when someone does not understand an explanation, the main problem might lie with the explanation.\n\nThe work of Alexander had quite profound impact on my thinking. Smalltalk is the closest high-level programming model to the living structure idea (the other one would be assembler): you can only change a Smalltalk system from within the system. This paves the way to fine grained piecemeal evolution and it offers the environment for unfolding wholeness.\n\nHowever, as opposed to the real world, where the physical shape is tied with the physical thing, in the digital world that constraint does not exist and we can take advantage of that.\n\nA related concept that I find fascinating is that of habitability, coined by Richard Gabriel in Patterns of Software ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.dreamsongs.com\/Files\/PatternsOfSoftware.pdf"
                            },
                            {
                                "type": "text",
                                "text": "): given that we spend most of our time inside a software system, it should follow that the software system should be habitable. Much like with the quality without a name concept of Alexander, habitability is not measurable. We need to feel it, and we recognize it when we find it.\n\nThe way we feel about things is linked with the way we perceive, and the way we perceive is related to the shape of things. That is why I find the shape to be essential, in particular when it comes with software.\n\nFrom the outside, Glamorous Toolkit is a tool. However, we see it as a language with which you can mold that shape continuously, in an ever living structure."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1549989925.014800",
        "client_msg_id": "0f993760-c80f-4bac-b59c-cae4294a1f22",
        "text": "Do we really _want_ a hub-and-spokes model? That sort of centralization is very \"cathedral\". Me, I prefer to embrace the distributed essence of the web, and say that a webring\/graph of interlinking sites is fine. Sure, you won't have all of these projects under one beautifully painted dome roof, but you also won't run into the problem of needing to decide what belongs and what doesn't (eg: I like to link to video games). And besides — nobody has time to actually read _all_ this stuff _and_ make programming tools of the future, right? (Not just me?)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1535985102.000100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H62XF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do we really "
                            },
                            {
                                "type": "text",
                                "text": "want",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " a hub-and-spokes model? That sort of centralization is very \"cathedral\". Me, I prefer to embrace the distributed essence of the web, and say that a webring\/graph of interlinking sites is fine. Sure, you won't have all of these projects under one beautifully painted dome roof, but you also won't run into the problem of needing to decide what belongs and what doesn't (eg: I like to link to video games). And besides — nobody has time to actually read "
                            },
                            {
                                "type": "text",
                                "text": "all",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " this stuff "
                            },
                            {
                                "type": "text",
                                "text": "and",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " make programming tools of the future, right? (Not just me?)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1549997330.015300",
        "client_msg_id": "b8f26406-83a4-4b9c-8a08-08a23eec0507",
        "text": "Hi <@UAVCC2X70>,\n\nThanks for the detailed response - the ideas are quite interesting and similar to things I've been thinking about.\n\nSounds like you're working towards a VM environment that works with a structural substrate that is lower level than any specific programing language but higher level than byte arrays. This substrate can represent any (tree like?) structure, but the meaning of any depends on the context it is evaluated in. Also the structures could be visualized many different ways and  visualizations could be shared between structures of many different kinds?\n\nYes the ideas do have an overlap with the Smalltalk systems - they are VMs with persistent objects, as <@UE1JQM9HQ> pointed out. Yet there are differences - it seems you are proposing the nature of the substrate is list\/tree like, not classes\/methods\/objects? Also something like modeling a distributed app and then auto-partitioning it doesn't exist afaik. Yes, it could be built on Smalltalk but currently in ST the world you work with is still your local VM and nothing else. We'd need a network of VMs that can talk to each other easily and ship the software substrate around. Ideally this network would be presented as one unified world (MPORG style).  Once you log in to this world, you have quick access to all the elements that exist and you could even 'view source' on any part of the tool itself to quickly jump to visualization (text or non-text) for the underlying structure that represents it. You could then modify it in place and publish it. Provenance on these elements would be automatically maintained. I don't think ST is quite there yet. For instance, how do you enumerate all the classes that exist? How do you create a new object? You can't just browse to a class and click a 'new instance' button - it takes a little reading, learning and writing code to do these things. Tudor said \"the main problem might lie with the explanation\" - this is true. But also do we need explanation? What does Pharo look like when you launch it? Does it even look like a collection of objects, or classes? Ideally the richer UIs would automatically be generated based on the structure they are trying to visualize, or some annotation (yes gtoolkit is getting closer.. :smile: ).\n\nStill, I think the biggest boost will come from this 'network of VMs' -  we really want one shared world where we can easily share our ideas and artifacts. Consider how clunky it is to share a new class\/object I create in ST compared to how easy it is to share a web-app that I publish. There are a lot of unexplored ideas here.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1527044282.000289",
        "parent_user_id": "UAVCC2X70",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ea5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi "
                            },
                            {
                                "type": "user",
                                "user_id": "UAVCC2X70"
                            },
                            {
                                "type": "text",
                                "text": ",\n\nThanks for the detailed response - the ideas are quite interesting and similar to things I've been thinking about.\n\nSounds like you're working towards a VM environment that works with a structural substrate that is lower level than any specific programing language but higher level than byte arrays. This substrate can represent any (tree like?) structure, but the meaning of any depends on the context it is evaluated in. Also the structures could be visualized many different ways and  visualizations could be shared between structures of many different kinds?\n\nYes the ideas do have an overlap with the Smalltalk systems - they are VMs with persistent objects, as "
                            },
                            {
                                "type": "user",
                                "user_id": "UE1JQM9HQ"
                            },
                            {
                                "type": "text",
                                "text": " pointed out. Yet there are differences - it seems you are proposing the nature of the substrate is list\/tree like, not classes\/methods\/objects? Also something like modeling a distributed app and then auto-partitioning it doesn't exist afaik. Yes, it could be built on Smalltalk but currently in ST the world you work with is still your local VM and nothing else. We'd need a network of VMs that can talk to each other easily and ship the software substrate around. Ideally this network would be presented as one unified world (MPORG style).  Once you log in to this world, you have quick access to all the elements that exist and you could even 'view source' on any part of the tool itself to quickly jump to visualization (text or non-text) for the underlying structure that represents it. You could then modify it in place and publish it. Provenance on these elements would be automatically maintained. I don't think ST is quite there yet. For instance, how do you enumerate all the classes that exist? How do you create a new object? You can't just browse to a class and click a 'new instance' button - it takes a little reading, learning and writing code to do these things. Tudor said \"the main problem might lie with the explanation\" - this is true. But also do we need explanation? What does Pharo look like when you launch it? Does it even look like a collection of objects, or classes? Ideally the richer UIs would automatically be generated based on the structure they are trying to visualize, or some annotation (yes gtoolkit is getting closer.. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " ).\n\nStill, I think the biggest boost will come from this 'network of VMs' -  we really want one shared world where we can easily share our ideas and artifacts. Consider how clunky it is to share a new class\/object I create in ST compared to how easy it is to share a web-app that I publish. There are a lot of unexplored ideas here."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1549997457.015600",
        "client_msg_id": "d106da25-4156-44dc-a57e-ebdb603f4f39",
        "text": "Thanks <@U8A5MS6R1>, that was very helpful for understanding this thread.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1527044282.000289",
        "parent_user_id": "UAVCC2X70",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/fm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": ", that was very helpful for understanding this thread."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1549997777.015900",
        "client_msg_id": "f86f548a-4fa1-4924-b70b-bbcbb6493daf",
        "text": "A more tightly scoped citation on <@UE1JQM9HQ>’s mention of ‘Habitability’: <http:\/\/akkartik.name\/post\/habitability>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1527044282.000289",
        "parent_user_id": "UAVCC2X70",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/tF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A more tightly scoped citation on "
                            },
                            {
                                "type": "user",
                                "user_id": "UE1JQM9HQ"
                            },
                            {
                                "type": "text",
                                "text": "’s mention of ‘Habitability’: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/post\/habitability"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5UN1ED7A",
        "type": "message",
        "ts": "1550004108.016300",
        "client_msg_id": "d929d691-8767-45d3-ac4d-de80737a48f7",
        "text": "Related collection: <http:\/\/presentations.dubberly.com\/data_authoring_environments.pdf> by <@UBQ50KQF8>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g67b65738930",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/c3a5e5ab2b539bd8f4fe45b7323b289c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "paraduct",
            "real_name": "paraduct",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "paraduct",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1502300144.828929",
        "parent_user_id": "U6KQ2S410",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pwt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Related collection: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/presentations.dubberly.com\/data_authoring_environments.pdf"
                            },
                            {
                                "type": "text",
                                "text": " by "
                            },
                            {
                                "type": "user",
                                "user_id": "UBQ50KQF8"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]