[
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1724236136.426989",
        "client_msg_id": "d737fed6-abc3-4f51-9241-54278d428e8e",
        "text": "over on the FBP slack (Flow-Based Programming) someone suggested using copy-on-write instead of copy ; this suggestion lingers in my mind but I haven't tried it yet ; aside: in general I've just stopped worrying about \"efficiency\", machines are so fast today that I don't need to care about implementation details, knowing that whatever I do can be production-engineered later to be a bit faster, \"getting it right\" is my foremost concern",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1724157392.101319",
        "parent_user_id": "U0123H7JRDM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qusvu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "over on the FBP slack (Flow-Based Programming) someone suggested using copy-on-write instead of copy ; this suggestion lingers in my mind but I haven't tried it yet ; aside: in general I've just stopped worrying about \"efficiency\", machines are so fast today that I don't need to care about implementation details, knowing that whatever I do can be production-engineered later to be a bit faster, \"getting it right\" is my foremost concern"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1724236586.093899",
        "client_msg_id": "f16a1ad9-f28c-4d92-afe1-8685ee0ad02f",
        "text": "I'm thinking on \"... either run in sync or async when it returns a promise to the flow-engine. ...\". From my perspective, the goal is to reach into a bowl full of Arduinos and put the code for each rectangle on the diagram onto its own Arduino. It's not clear (by this I mean: I don't know) whether a promise-based approach is realistic ... pondering ... I'd be interested in your thoughts ...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1724157392.101319",
        "parent_user_id": "U0123H7JRDM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EaDjY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm thinking on \"... either run in sync or async when it returns a promise to the flow-engine. ...\". From my perspective, the goal is to reach into a bowl full of Arduinos and put the code for each rectangle on the diagram onto its own Arduino. It's not clear (by this I mean: I don't know) whether a promise-based approach is realistic ... pondering ... I'd be interested in your thoughts ..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1724236958.707729",
        "client_msg_id": "996D3B85-FD10-4228-BD02-9A53DD02473A",
        "text": "My first thought is that in that scenario you always want to return a promise because you're (probably) dealing with hardware communication and want to return from the node when the needed communication is done. In my scenario I used it when a node needs to do fetches for example (the node that initiates the training in the neural network example fetches the mnist dataset).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1724157392.101319",
        "parent_user_id": "U0123H7JRDM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "srJDZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My first thought is that in that scenario you always want to return a promise because you're (probably) dealing with hardware communication and want to return from the node when the needed communication is done. In my scenario I used it when a node needs to do fetches for example (the node that initiates the training in the neural network example fetches the mnist dataset)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1724237028.099499",
        "client_msg_id": "1cceb4e1-5f57-491d-a47a-e0a216069e30",
        "text": "... how do you send a promise across a thin wire from one node to another? ...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1724157392.101319",
        "parent_user_id": "U0123H7JRDM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kEGMw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "... how do you send a promise across a thin wire from one node to another? ..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1724237130.514899",
        "client_msg_id": "B3EC230F-C7B8-44E2-B413-DBAED3F2551F",
        "text": "I meant the internal code implementation of the node. The information that is send over the wire should be serializable to json (in my case at least)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1724157392.101319",
        "parent_user_id": "U0123H7JRDM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aa6OZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I meant the internal code implementation of the node. The information that is send over the wire should be serializable to json (in my case at least)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1724237438.335859",
        "client_msg_id": "12f5793b-c67d-4812-8698-1770492dfb93",
        "text": "Have you thought about what the information sent across a wire needs to be? (I don't mean to derail you, if you haven't thought about it, then there is no need to spend lots of time trying to answer)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1724157392.101319",
        "parent_user_id": "U0123H7JRDM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WKmhn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you thought about what the information sent across a wire needs to be? (I don't mean to derail you, if you haven't thought about it, then there is no need to spend lots of time trying to answer)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1724237665.962249",
        "client_msg_id": "31E3288E-04BD-452F-9FA0-0D8734D73559",
        "text": "Currently it varies per node\/node port, and I can specify some constraints so that only node-ports that can receive that data can connect to each other. That implementation is still limited and I want to expand on it further in the future",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1724157392.101319",
        "parent_user_id": "U0123H7JRDM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uze6g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Currently it varies per node\/node port, and I can specify some constraints so that only node-ports that can receive that data can connect to each other. That implementation is still limited and I want to expand on it further in the future"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "They may be totally invisible in the video but objects in Automat now drop shadows! They're drawn using fairly sophisticated procedures that were developed a copule of years ago for Google's Material Design system. Each object actually drops two different shadows - one coming from environmental light (a.k.a. ambient occlusion) and one from directional light (which is modelled as a disk with the same width as window and is positioned in 3d space roughly in front of the title bar). The cool thing about those shadows is that they're not using either shadow maps nor gaussian blurs (except concave shapes). The library takes some shape (vector contour of the object dropping shadow) + parameters of the light and computes a physically based analytical shadow mesh that is then drawn in the background. This manages to render fairly realistic shadows even while elevation of objects is being dynamically changed.",
        "files": [
            {
                "id": "F07HPHT904E",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U06SS0DHZD1",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SM0x+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "They may be totally invisible in the video but objects in Automat now drop shadows! They're drawn using fairly sophisticated procedures that were developed a copule of years ago for Google's Material Design system. Each object actually drops two different shadows - one coming from environmental light (a.k.a. ambient occlusion) and one from directional light (which is modelled as a disk with the same width as window and is positioned in 3d space roughly in front of the title bar). The cool thing about those shadows is that they're not using either shadow maps nor gaussian blurs (except concave shapes). The library takes some shape (vector contour of the object dropping shadow) + parameters of the light and computes a physically based analytical shadow mesh that is then drawn in the background. This manages to render fairly realistic shadows even while elevation of objects is being dynamically changed."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1724249914.103409",
        "client_msg_id": "80edc043-ac3f-4643-9552-044223cee10c",
        "thread_ts": "1724249914.103409",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1724252770.759749",
        "reply_users": [
            "UC2A2ARPT",
            "U06SS0DHZD1"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1724251887.715209"
            },
            {
                "user": "U06SS0DHZD1",
                "ts": "1724252770.759749"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U0123H7JRDM",
                    "U85HCL7JP"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1724251887.715209",
        "client_msg_id": "A32D61A0-B291-41AB-83D3-5C6733626DBA",
        "text": "Do you have a link to that shadow meshing library? I'd love to read more about it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1724249914.103409",
        "parent_user_id": "U06SS0DHZD1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8WH5H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do you have a link to that shadow meshing library? I'd love to read more about it"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06SS0DHZD1",
        "type": "message",
        "ts": "1724252770.759749",
        "client_msg_id": "b514e539-97fe-4d92-91a2-264a07b175b4",
        "text": "Sure: <https:\/\/skia.googlesource.com\/skia\/+\/2e551697dc56\/src\/utils\/SkShadowUtils.cpp|https:\/\/skia.googlesource.com\/skia\/+\/2e551697dc56\/src\/utils\/SkShadowUtils.cpp> \nThere is very little to read about it unfortunately and the official documentation is just dire. I've found about it at some Android Developer podcast some years ago (can't really tell which one unfortunately) where its author described it in more detail. I've had good experiences contacting the library authors through <mailto:skia-discuss@google.com|skia-discuss@google.com> - if you're interested in digging deeper. Here is one code sample (should be editable): <https:\/\/fiddle.skia.org\/c\/4fe859580ed911500608c35928d92d72|https:\/\/fiddle.skia.org\/c\/4fe859580ed911500608c35928d92d72>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "287ba5559ee1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-04-04\/6922823105585_287ba5559ee1cedd6b98_72.png",
            "first_name": "Marek",
            "real_name": "Marek Rogalski",
            "display_name": "maf",
            "team": "T5TCAFTA9",
            "name": "mafikpl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1724249914.103409",
        "parent_user_id": "U06SS0DHZD1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eFzVM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sure: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/skia.googlesource.com\/skia\/+\/2e551697dc56\/src\/utils\/SkShadowUtils.cpp",
                                "text": "https:\/\/skia.googlesource.com\/skia\/+\/2e551697dc56\/src\/utils\/SkShadowUtils.cpp"
                            },
                            {
                                "type": "text",
                                "text": " \nThere is very little to read about it unfortunately and the official documentation is just dire. I've found about it at some Android Developer podcast some years ago (can't really tell which one unfortunately) where its author described it in more detail. I've had good experiences contacting the library authors through "
                            },
                            {
                                "type": "link",
                                "url": "mailto:skia-discuss@google.com",
                                "text": "skia-discuss@google.com"
                            },
                            {
                                "type": "text",
                                "text": " - if you're interested in digging deeper. Here is one code sample (should be editable): "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/fiddle.skia.org\/c\/4fe859580ed911500608c35928d92d72",
                                "text": "https:\/\/fiddle.skia.org\/c\/4fe859580ed911500608c35928d92d72"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]