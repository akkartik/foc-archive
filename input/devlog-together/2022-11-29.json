[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1669711087.096809",
        "client_msg_id": "1d0dae03-dd92-45a0-ae1c-2521d847aaaf",
        "text": "Are you sure the problem was memory use and not some crazy quadratic complexity algorithm that starts to choke the process when you have more than N items?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661835473.383259",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fOb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you sure the problem was memory use and not some crazy quadratic complexity algorithm that starts to choke the process when you have more than N items?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1669711163.096799",
        "client_msg_id": "c7b938cb-c5ed-4a45-9480-d4203117d542",
        "text": "(N.B. Whether or not memory was the cause of the slowdown, the observation that GC is just one strategy for deallocation is correct.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661835473.383259",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "aBA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(N.B. Whether or not memory was the cause of the slowdown, the observation that GC is just one strategy for deallocation is correct.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1669712331.483739",
        "client_msg_id": "962072b2-2316-4b66-a46a-10bc8052d94e",
        "text": "Hmm, no I can't completely exclude a CPU bottleneck. I tend to assume GC if a program has non-deterministic pauses.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661835473.383259",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/AM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hmm, no I can't completely exclude a CPU bottleneck. I tend to assume GC if a program has non-deterministic pauses."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1669718202.205249",
        "client_msg_id": "8584eca0-f71e-42e8-813a-bda0d5a30bb3",
        "text": "Maybe I'm not understanding the situation :thinking_face: It seemed like you were loading your full dataset into some structure in memory (presumably a table, given the language). If you don't then get rid of that table, what would trigger GC?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661835473.383259",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QsQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe I'm not understanding the situation "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            },
                            {
                                "type": "text",
                                "text": " It seemed like you were loading your full dataset into some structure in memory (presumably a table, given the language). If you don't then get rid of that table, what would trigger GC?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1669733667.335219",
        "client_msg_id": "745cc525-8b62-42dd-8541-0ee81d0de018",
        "text": "Yeah there's a few things I'm leaving out.\n\n1. My programs in dynamic languages (and hopefully those of others) are just constantly generating a slow trickle of garbage. Cons cells in Lisp, lists in Python, tables in Lua, they're just so darned convenient, I use them everywhere.\n2. I've made other caching decisions. For example, rendering the prose requires translating strings into LÃ–VE's Text objects (which I imagine contain font glyphs). I don't want to perform this computation on every frame, so I try to save the text objects. But keeping them around for the entire data set is prohibitive. So I keep them for just currently rendered text and recreate them as needed on events like the viewport panning or edits. That adds to the constant churn of garbage.\n3. I do edit the data set and add new notes to it. So the surface is just naturally growing from day to day. Perhaps I should just spring clean my equivalent of 'browser tabs' more often. I think I started on this because the absolute numbers seemed so small, but it's totally reasonable for a minimalist program to limit the amount of data on surface.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661835473.383259",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x+6Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah there's a few things I'm leaving out.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "My programs in dynamic languages (and hopefully those of others) are just constantly generating a slow trickle of garbage. Cons cells in Lisp, lists in Python, tables in Lua, they're just so darned convenient, I use them everywhere."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I've made other caching decisions. For example, rendering the prose requires translating strings into LÃ–VE's Text objects (which I imagine contain font glyphs). I don't want to perform this computation on every frame, so I try to save the text objects. But keeping them around for the entire data set is prohibitive. So I keep them for just currently rendered text and recreate them as needed on events like the viewport panning or edits. That adds to the constant churn of garbage."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I do edit the data set and add new notes to it. So the surface is just naturally growing from day to day. Perhaps I should just spring clean my equivalent of 'browser tabs' more often. I think I started on this because the absolute numbers seemed so small, but it's totally reasonable for a minimalist program to limit the amount of data on surface."
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1669743203.175719",
        "client_msg_id": "6ee92e5c-d6b9-4bfa-9e91-777ed63ee51d",
        "text": "(I just noticed the video at the top of this thread has somehow gotten deleted. Fat finger? Slack shredders approaching? Anyways, you can see it at <https:\/\/spectra.video\/w\/051fef50-a121-40c0-bf3c-ee0730fb4a07>)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1661835473.383259",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "from_url": "https:\/\/spectra.video\/w\/051fef50-a121-40c0-bf3c-ee0730fb4a07",
                "thumb_url": "https:\/\/spectra.video\/lazy-static\/previews\/024727b5-b63f-4dcb-b16c-20ed0ef4f010.jpg",
                "thumb_width": 850,
                "thumb_height": 480,
                "image_url": "https:\/\/spectra.video\/lazy-static\/previews\/024727b5-b63f-4dcb-b16c-20ed0ef4f010.jpg",
                "image_width": 850,
                "image_height": 480,
                "image_bytes": 98115,
                "service_icon": "https:\/\/spectra.video\/client\/assets\/images\/icons\/icon-144x144.png",
                "id": 1,
                "original_url": "https:\/\/spectra.video\/w\/051fef50-a121-40c0-bf3c-ee0730fb4a07",
                "fallback": "Spectra: 2022-08-29: Search, hyperlinks and cross-links in Pensieve.love",
                "text": "I just created a Peertube channel. To mark the occasion, here's a short video of me using my note-taking app using a couple of recent features I haven't mentioned before.",
                "title": "2022-08-29: Search, hyperlinks and cross-links in Pensieve.love",
                "title_link": "https:\/\/spectra.video\/w\/051fef50-a121-40c0-bf3c-ee0730fb4a07",
                "service_name": "Spectra"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Yr=yA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(I just noticed the video at the top of this thread has somehow gotten deleted. Fat finger? Slack shredders approaching? Anyways, you can see it at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/spectra.video\/w\/051fef50-a121-40c0-bf3c-ee0730fb4a07"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]