[
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1558597512.086500",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1558911638.000000"
        },
        "client_msg_id": "c8bee981-efe3-4b17-9d1a-cb356ebaaf91",
        "text": "Unicode exemplifies the tyranny of committees staffed with people who don't care how much damage they do as they erect their perfectly hypercomplex edifice. It started out nice, hey, let's stop overloading code points in the 256 char range. They quickly add a bunch of characters and things are okay, but then they continue to add more and more obscure alphabets, then they go off the rails are add the \"astral\" set of characters beyond UTF16, and turn it into an icon database, which changes every year, sure to break on older operating systems. Unicode was not designed to be an art database, yet that is their current intention, with multiple flavors of coloration as they make it more and more ridiculously complicated. I wish they would stop, or at least only revise it once every 10 years like the census.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1558597512.086500",
        "reply_count": 3,
        "reply_users_count": 2,
        "latest_reply": "1567827948.049800",
        "reply_users": [
            "UAVCC2X70",
            "UD6EXQVM0"
        ],
        "replies": [
            {
                "user": "UAVCC2X70",
                "ts": "1558904150.002300"
            },
            {
                "user": "UD6EXQVM0",
                "ts": "1567827815.049600"
            },
            {
                "user": "UD6EXQVM0",
                "ts": "1567827948.049800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tti",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Unicode exemplifies the tyranny of committees staffed with people who don't care how much damage they do as they erect their perfectly hypercomplex edifice. It started out nice, hey, let's stop overloading code points in the 256 char range. They quickly add a bunch of characters and things are okay, but then they continue to add more and more obscure alphabets, then they go off the rails are add the \"astral\" set of characters beyond UTF16, and turn it into an icon database, which changes every year, sure to break on older operating systems. Unicode was not designed to be an art database, yet that is their current intention, with multiple flavors of coloration as they make it more and more ridiculously complicated. I wish they would stop, or at least only revise it once every 10 years like the census."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UD6EXQVM0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1558599387.086600",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1558599458.000000"
        },
        "client_msg_id": "4d6b0674-8334-42e1-b4d7-b558bf3b5ba7",
        "text": "I did a comparison once where i turned off the compiler flags for instructions past the Pentium, which is a very simplistic set of instructions, and it didn't affect the performance in either storage or speed more than 1%. So my assertion that most of the latest intel instructions are near worthless stands. For hand-coded assembler work, they can occasionally come in handy (my product had 1% assembler for key bitmap rotation\/scaling library functions). There is simply no excuse for some of the latest Intel instructions which one cannot even understand what they do, obviously intended to slow down cloners. Each baffling instruction will chew up precious engineering time at the clone companies, which cannot match Intel's vast labor pool. The only instruction i really like of the last 10 years is the true random number generator they added. We have wanted real random numbers for decades, and now we finally have them. You have to admit that VGF2P8AFFINEINVQB as an opcode is absurd, and how many programmers out of a million will ever use the Galois Field Affine Transformation Inverse instruction?. Intel is spinning their wheels in the sand, with 10x the number of engineers they had to develop the Pentium which was their big winner. They seem to be making things unnecessarily complicated, and their security holes are embarrassing. I like Intel chips, they are well made and stand behind their product, but the post Andy Grove era is not a pretty picture. How about ditching IEEE floating point for DEC64 if you want to make some actual progress? 0.1 + 0.2 does not equal 0.3 still, and if they listened to programmers instead of strategizing to paralyze AMD and Chinese cloners, we might get somewhere.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1558420574.077800",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hkgc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I did a comparison once where i turned off the compiler flags for instructions past the Pentium, which is a very simplistic set of instructions, and it didn't affect the performance in either storage or speed more than 1%. So my assertion that most of the latest intel instructions are near worthless stands. For hand-coded assembler work, they can occasionally come in handy (my product had 1% assembler for key bitmap rotation\/scaling library functions). There is simply no excuse for some of the latest Intel instructions which one cannot even understand what they do, obviously intended to slow down cloners. Each baffling instruction will chew up precious engineering time at the clone companies, which cannot match Intel's vast labor pool. The only instruction i really like of the last 10 years is the true random number generator they added. We have wanted real random numbers for decades, and now we finally have them. You have to admit that VGF2P8AFFINEINVQB as an opcode is absurd, and how many programmers out of a million will ever use the Galois Field Affine Transformation Inverse instruction?. Intel is spinning their wheels in the sand, with 10x the number of engineers they had to develop the Pentium which was their big winner. They seem to be making things unnecessarily complicated, and their security holes are embarrassing. I like Intel chips, they are well made and stand behind their product, but the post Andy Grove era is not a pretty picture. How about ditching IEEE floating point for DEC64 if you want to make some actual progress? 0.1 + 0.2 does not equal 0.3 still, and if they listened to programmers instead of strategizing to paralyze AMD and Chinese cloners, we might get somewhere."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1558621919.086900",
        "client_msg_id": "fb419b02-6bed-4706-b9a7-e24e5de1aad1",
        "text": "&gt; I did a comparison once where i turned off the compiler flags for instructions past the Pentium... and it didn't affect the performance in either storage or speed more than 1%.\n\nOver what programs in what domain? Could other domains have different needs?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1558420574.077800",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BIsW",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I did a comparison once where i turned off the compiler flags for instructions past the Pentium... and it didn't affect the performance in either storage or speed more than 1%."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nOver what programs in what domain? Could other domains have different needs?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1558627013.105700",
        "client_msg_id": "7B6043CD-AA43-4B2E-96BF-2D2F5BEBA760",
        "text": "Or you could see Unicode as a case study of how to build and maintain an international, cultural, technological building block that enables communication across cultures and deals with the challenges that come with it. Including complexities introduced when actively trying to deal with diversity and taking cultural bias out of a technology.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1558627013.105700",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1558680642.000500",
        "reply_users": [
            "UJK8MKYAZ",
            "UEQ6M68H0"
        ],
        "replies": [
            {
                "user": "UJK8MKYAZ",
                "ts": "1558629786.107200"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1558680642.000500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CbHQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Or you could see Unicode as a case study of how to build and maintain an international, cultural, technological building block that enables communication across cultures and deals with the challenges that come with it. Including complexities introduced when actively trying to deal with diversity and taking cultural bias out of a technology."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UETJZ9V0T",
                    "UCUSW7WVD",
                    "UCGAK10LS",
                    "UBKNXPBAB",
                    "UAL7940NM",
                    "UEQ7QL15F",
                    "UDJ2TKB99",
                    "UDQBTJ211"
                ],
                "count": 8
            },
            {
                "name": "heart",
                "users": [
                    "UC6997THT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1558629635.107000",
        "client_msg_id": "4c70394c-57f8-4f65-b119-03dd199f84b5",
        "text": "<https:\/\/www.hillelwayne.com\/post\/alan-kay\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1558629635.107000",
        "reply_count": 4,
        "reply_users_count": 2,
        "latest_reply": "1558974536.003500",
        "reply_users": [
            "UAVCC2X70",
            "U8A5MS6R1"
        ],
        "replies": [
            {
                "user": "UAVCC2X70",
                "ts": "1558908694.002500"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1558909598.002700"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1558909657.002900"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1558974536.003500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "Hillel Wayne",
                "title": "Alan Kay Did Not Invent Objects • Hillel Wayne",
                "title_link": "https:\/\/www.hillelwayne.com\/post\/alan-kay\/",
                "text": "People keep claiming that modern OOP languages aren’t “really OOP” because they don’t follow Alan Kay’s definition of “OOP”. I can see the logic here, even if I disagree the conclusion. More recently I’ve seen people start claiming that Kay invented objects entirely. This is factually incorrect. Alan Kay did not invent objects. They come from Simula, which the Smalltalk-72 manual cites as a major inspiration (pg 117). The famous 1981 Byte magazine issue that popularized Smalltalk and OOP explicitly says “the fundamental idea of objects, messages, and classes came from SIMULA.",
                "fallback": "Hillel Wayne: Alan Kay Did Not Invent Objects • Hillel Wayne",
                "ts": 1558483200,
                "from_url": "https:\/\/www.hillelwayne.com\/post\/alan-kay\/",
                "service_icon": "https:\/\/www.hillelwayne.com\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/www.hillelwayne.com\/post\/alan-kay\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gvdm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.hillelwayne.com\/post\/alan-kay\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F",
                    "UAVCC2X70",
                    "UJUQESQ1Z"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1558629786.107200",
        "client_msg_id": "447005e5-5bf7-447c-9e04-6c21b520a5a7",
        "text": "Harmonizing unity and diversity is a deep paradox. Skeptics call it an oxymoron. I've heard some philosophers call it an outright contradiction. Christians call it our most sacred mystery. In any case, it's definitely not something that _just happens_, if it ever happens at all.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1558627013.105700",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "twN3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Harmonizing unity and diversity is a deep paradox. Skeptics call it an oxymoron. I've heard some philosophers call it an outright contradiction. Christians call it our most sacred mystery. In any case, it's definitely not something that "
                            },
                            {
                                "type": "text",
                                "text": "just happens",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", if it ever happens at all."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1558680642.000500",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1558680798.000000"
        },
        "client_msg_id": "2b37a84f-2f7b-4e0c-9486-a2efe51c5413",
        "text": "Unicode is turning into an art database. It is a not a good way to do this. They should have instead created a master database of icon art, in vector format, so that everyone can share in a worldwide collection of art. It started from Japanese cellphone practices, which were non-standard graphics put into Unicode, and now is out of control. Each machine and OS now has to update their font tables constantly, and because the graphics are company specific, they aren't guaranteed to communicate uniformly. Huge amount of duplicated effort and why limit all clip art to a few hundred new per year? This is shared artwork, not letters in a writing system. Unicode was never intended to be a clip-art database. Big mistake.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1558627013.105700",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5VI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Unicode is turning into an art database. It is a not a good way to do this. They should have instead created a master database of icon art, in vector format, so that everyone can share in a worldwide collection of art. It started from Japanese cellphone practices, which were non-standard graphics put into Unicode, and now is out of control. Each machine and OS now has to update their font tables constantly, and because the graphics are company specific, they aren't guaranteed to communicate uniformly. Huge amount of duplicated effort and why limit all clip art to a few hundred new per year? This is shared artwork, not letters in a writing system. Unicode was never intended to be a clip-art database. Big mistake."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1558681112.000800",
        "client_msg_id": "1ad1eee0-e2aa-423a-b289-ef686099f0df",
        "text": "It was a huge 120k line interactive graphics program that did pretty much everything you can do: image processing, sound, interactive bitmap graphics, printing, tons of functionality (the Discus CD labeler). Since one has to support machines without all the fancy instructions, because intel has a crazy-quilt of availability, you end up avoiding them anyway. No evidence that creating a crazy-quilt of instructions has any effect on general performance; mass-market software developers like me don't waste time optimizing for fractional marketshare device features.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1558420574.077800",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E7Ir",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It was a huge 120k line interactive graphics program that did pretty much everything you can do: image processing, sound, interactive bitmap graphics, printing, tons of functionality (the Discus CD labeler). Since one has to support machines without all the fancy instructions, because intel has a crazy-quilt of availability, you end up avoiding them anyway. No evidence that creating a crazy-quilt of instructions has any effect on general performance; mass-market software developers like me don't waste time optimizing for fractional marketshare device features."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]