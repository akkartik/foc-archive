[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1666508703.932009",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1666508871.000000"
        },
        "client_msg_id": "ed5e6934-789f-4352-b857-f73c101c3365",
        "text": "As so often, I wonder to what degree this discussion is related to the abstraction level of the concept \"software\".\n\nIn my field of work (research in physics and chemistry), there is a long tradition of reflection on our work practices. At the extreme, a few physicists end up writing books about this reflection (such as <https:\/\/www.cambridge.org\/fr\/academic\/subjects\/general-science\/popular-science\/reliable-knowledge-exploration-grounds-belief-science?format=PB&amp;isbn=9780521406703|this one>, which is very good but a bit old by now). Away from this extreme, discussions about our methodology happen all the time, be it at lunch or at conferences. And since nowadays we all use computers, the use of software has become part of this discussion. But we don't discuss software in the abstract, we discuss the creation, maintenance, and use specifically of the software we use.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1666479699.789429",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HWFz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As so often, I wonder to what degree this discussion is related to the abstraction level of the concept \"software\".\n\nIn my field of work (research in physics and chemistry), there is a long tradition of reflection on our work practices. At the extreme, a few physicists end up writing books about this reflection (such as "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.cambridge.org\/fr\/academic\/subjects\/general-science\/popular-science\/reliable-knowledge-exploration-grounds-belief-science?format=PB&isbn=9780521406703",
                                "text": "this one"
                            },
                            {
                                "type": "text",
                                "text": ", which is very good but a bit old by now). Away from this extreme, discussions about our methodology happen all the time, be it at lunch or at conferences. And since nowadays we all use computers, the use of software has become part of this discussion. But we don't discuss software in the abstract, we discuss the creation, maintenance, and use specifically of the software we use."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02028JHX37",
        "type": "message",
        "ts": "1666538360.766079",
        "client_msg_id": "31c6a56d-1cd5-4400-887d-9c2cbb2d8912",
        "text": "<@UK3LH8CF5> Exactly as you say: we need to focus on the “big picture” view of a given program, in order to reflect on its constitution\/composition\/architecture and employed methodologies.\n\nBut I can’t see why you think this is antithetic to focusing on structures\/patterns embedded in the code? I think it can help; it’s the first step to understand the program. Of course, this assumes that the primary goal is utilitarian (the program should work). However, I think this comes hand in hand with the more “aesthetic” appreciation of software.\n\nI don’t know about other people, but two properties of (some) programs I find very beautiful is _emergence_ and _reflectivity_. In other words, the fact that a composition of a few simple programs can generate complex behaviour, and that there are (many) programs generate a whole new world inside them (and that they’re embedded in these worlds). In most (all?) “art heavily depending on software”\/“software being art” I’ve seen, it was especially emergence that “made it artistic” (I’m not counting surface design).\n\nAs one quickly realizes, these two properties make software very complex, so in order not to be stuck just blindly experimenting, one needs to employ some tools to understand programs (and finding structures and patterns is the most basic form of that; it shouldn’t be overlooked).\n\n(Blind experiments can be good (to test the boundaries of the current theory), but imagine composing music just by pushing random keys on the piano. That’s no way to be much productive, even artistic. Without (music) theory, there would be no Bach.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdf13e3ce9df",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/df13e3ce9dfc39e2f387bd3d6e87b952.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "",
            "real_name": "Jan Ruzicka",
            "display_name": "Jan Ruzicka",
            "team": "T5TCAFTA9",
            "name": "jan.ruzicka01",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1666479699.789429",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cjd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": " Exactly as you say: we need to focus on the “big picture” view of a given program, in order to reflect on its constitution\/composition\/architecture and employed methodologies.\n\nBut I can’t see why you think this is antithetic to focusing on structures\/patterns embedded in the code? I think it can help; it’s the first step to understand the program. Of course, this assumes that the primary goal is utilitarian (the program should work). However, I think this comes hand in hand with the more “aesthetic” appreciation of software.\n\nI don’t know about other people, but two properties of (some) programs I find very beautiful is "
                            },
                            {
                                "type": "text",
                                "text": "emergence",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "reflectivity",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". In other words, the fact that a composition of a few simple programs can generate complex behaviour, and that there are (many) programs generate a whole new world inside them (and that they’re embedded in these worlds). In most (all?) “art heavily depending on software”\/“software being art” I’ve seen, it was especially emergence that “made it artistic” (I’m not counting surface design).\n\nAs one quickly realizes, these two properties make software very complex, so in order not to be stuck just blindly experimenting, one needs to employ some tools to understand programs (and finding structures and patterns is the most basic form of that; it shouldn’t be overlooked).\n\n(Blind experiments can be good (to test the boundaries of the current theory), but imagine composing music just by pushing random keys on the piano. That’s no way to be much productive, even artistic. Without (music) theory, there would be no Bach.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1666569330.342799",
        "client_msg_id": "58A30A02-C151-4315-8618-0F6561AA7795",
        "text": "Structures could provoke someone to reflect. I just don’t think they will given our history with them. Structures can also be a shortcut. A way not to have to think. Instead we can rely on the structure as a substitute for understanding. I think this is exactly what we’ve done with patterns and why they’ve failed both in software and in architecture. \n\nI love your description of reflection and emergence and if this were the level of specificity of structures imagined I’d be all for it. But it seems from the talk (which I did attend in person and got to briefly talk with Zach afterwards about) that the imagined discussion is much more practical and hands on.\n\nHonestly I just find structures as proposed a bit boring. What is interesting to me about software is less what various programs have in common and more about the particularities of a program. But also what isn’t in the program proper. What is in between the lines. \n\nFinally I will say I think there is a vast over emphasis on interfaces and I perhaps am reading into this that same emphasis. I think interfaces are some of the least interesting things to consider in programs and our over-emphasis on them has caused a lot of bad styles of programming. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1666479699.789429",
        "parent_user_id": "U0378MDUG1Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BpjG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Structures could provoke someone to reflect"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " I just "
                            },
                            {
                                "type": "text",
                                "text": "don’t"
                            },
                            {
                                "type": "text",
                                "text": " think they will given our history with them"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Structures can also be a shortcut"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " A way not to have to think"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Instead we can rely on the structure as a substitute for understanding"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " I think this is exactly what "
                            },
                            {
                                "type": "text",
                                "text": "we’ve"
                            },
                            {
                                "type": "text",
                                "text": " done with patterns and why "
                            },
                            {
                                "type": "text",
                                "text": "they’ve"
                            },
                            {
                                "type": "text",
                                "text": " failed both in software and in architecture"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " \n\nI love your description of reflection and emergence and if this were the level of specificity of structures imagined "
                            },
                            {
                                "type": "text",
                                "text": "I’d"
                            },
                            {
                                "type": "text",
                                "text": " be all for it"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " But it seems from the talk (which I did attend in person and got to briefly talk with Zach afterwards about) that the imagined discussion is much more practical and hands on"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": "\n\nHonestly I just find structures as proposed a bit boring"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " What is interesting to me about software is less what various programs have in common and more about the particularities of a program"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "B"
                            },
                            {
                                "type": "text",
                                "text": "ut also what "
                            },
                            {
                                "type": "text",
                                "text": "isn’t"
                            },
                            {
                                "type": "text",
                                "text": " in the program proper"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " What is in between the lines"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " \n\nFinally I will say I think there is a vast over emphasis on interface"
                            },
                            {
                                "type": "text",
                                "text": "s"
                            },
                            {
                                "type": "text",
                                "text": " and I perhaps am reading into this that same emphasis"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " I think interfaces are some of the least interesting things to consider in programs and our over-emphasis on them has caused a lot of bad styles of programming"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPVBV34EL",
        "type": "message",
        "ts": "1666581831.891179",
        "client_msg_id": "72d9d143-524f-4e4e-8bac-0150719d358c",
        "text": "An informal comparison of several programming languages - <https:\/\/github.com\/losvedir\/transit-lang-cmp>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "259a1e56ad2e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/811814014976_259a1e56ad2e11fe3d56_72.jpg",
            "first_name": "",
            "real_name": "Shubhadeep Roychowdhury",
            "display_name": "Shubhadeep Roychowdhury",
            "team": "T5TCAFTA9",
            "name": "shubhadeeproychowdhur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1666581831.891179",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1666592474.634639",
        "reply_users": [
            "U0296ACR13M"
        ],
        "replies": [
            {
                "user": "U0296ACR13M",
                "ts": "1666592474.634639"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zyz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "An informal comparison of several programming languages - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/losvedir\/transit-lang-cmp"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0296ACR13M",
                    "U02MXPT5UDC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U0296ACR13M",
        "type": "message",
        "ts": "1666592474.634639",
        "edited": {
            "user": "U0296ACR13M",
            "ts": "1666592503.000000"
        },
        "client_msg_id": "bdbfd21a-8d62-4795-bf0d-f7f296f4cccb",
        "text": "Always fun to see these, but the C# version could probably be a lot faster. I left an issue describing possible optimizations: <https:\/\/github.com\/losvedir\/transit-lang-cmp\/issues\/12>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "59de929720a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-09-08\/4075674207584_59de929720a2fe0a13d8_72.jpg",
            "first_name": "",
            "real_name": "Jarno Montonen",
            "display_name": "Jarno Montonen",
            "team": "T5TCAFTA9",
            "name": "jarno.montonen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1666581831.891179",
        "parent_user_id": "UPVBV34EL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6FLzg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Always fun to see these, but the C# version could probably be a lot faster. I left an issue describing possible optimizations: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/losvedir\/transit-lang-cmp\/issues\/12"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UPVBV34EL"
                ],
                "count": 1
            }
        ]
    }
]