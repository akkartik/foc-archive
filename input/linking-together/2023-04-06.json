[
    {
        "user": "U04E5QAD6DD",
        "type": "message",
        "ts": "1680786565.555119",
        "client_msg_id": "247bd9a2-74ec-4e16-b706-3335f19ebc6e",
        "text": "The last couple podcasts connecting with _programmer_ productivity reminded me of this article trying to trace software's impact — or not — on overall productivity. It's main claim is that software, so far,  has not had the expected impact on overall productivity, and that the challenge is that it is _hard_ and _expensive_ to model the real world within the constraints of programming. (Maybe you read it differently!) It seems to me that this is one big challenge with end-user programming, too: many people don't want to think beforehand about all the exceptions to a rule that happen in real life, since real life allows you to address those exceptions on-the-fly.\n\n<https:\/\/web.archive.org\/web\/20221206161753\/https:\/\/austinvernon.eth.link\/blog\/softwareisprocess.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e3e6bba2ae45",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-06\/5085861186081_e3e6bba2ae4575d17358_72.jpg",
            "first_name": "David",
            "real_name": "David Alan Hjelle",
            "display_name": "David Alan Hjelle",
            "team": "T5TCAFTA9",
            "name": "dahjelle_futureofcodi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1680786565.555119",
        "reply_count": 4,
        "reply_users_count": 1,
        "latest_reply": "1681046224.328229",
        "reply_users": [
            "U015S8EC3B5"
        ],
        "replies": [
            {
                "user": "U015S8EC3B5",
                "ts": "1681045808.422819"
            },
            {
                "user": "U015S8EC3B5",
                "ts": "1681045982.047619"
            },
            {
                "user": "U015S8EC3B5",
                "ts": "1681046199.634239"
            },
            {
                "user": "U015S8EC3B5",
                "ts": "1681046224.328229"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2H1E\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The last couple podcasts connecting with "
                            },
                            {
                                "type": "text",
                                "text": "programmer",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " productivity reminded me of this article trying to trace software's impact — or not — on overall productivity. It's main claim is that software, so far,  has not had the expected impact on overall productivity, and that the challenge is that it is "
                            },
                            {
                                "type": "text",
                                "text": "hard",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "text",
                                "text": "expensive",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to model the real world within the constraints of programming. (Maybe you read it differently!) It seems to me that this is one big challenge with end-user programming, too: many people don't want to think beforehand about all the exceptions to a rule that happen in real life, since real life allows you to address those exceptions on-the-fly.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/web.archive.org\/web\/20221206161753\/https:\/\/austinvernon.eth.link\/blog\/softwareisprocess.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U050XKVAGKF",
                    "UJBAJNFLK"
                ],
                "count": 2
            },
            {
                "name": "eyes",
                "users": [
                    "U04MTMF6Y4W"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "USJ9LD0E4",
        "type": "message",
        "ts": "1680836348.917679",
        "edited": {
            "user": "USJ9LD0E4",
            "ts": "1680836573.000000"
        },
        "client_msg_id": "fdf14f91-5468-4dcd-a8fa-31daa18e426d",
        "text": "<https:\/\/github.com\/hyperfiddle\/electric|Electric Clojure> (previously called “Photon”) is pretty exciting, it “fully abstracts over client\/server state sync at the programming language layer” which I found a bit hard to get my head around but <https:\/\/electric-examples-app.fly.dev\/|this new example site> does a great job of explaining the idea. One of the interesting things I’ve seen made with it is this <https:\/\/github.com\/lumberdev\/tesserae\/tree\/master|Clojure spreadsheet> app.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "467eec5533b7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-21\/1361648344759_467eec5533b7281db15a_72.jpg",
            "first_name": "Tom",
            "real_name": "Tom Hutchinson",
            "display_name": "Tom Hutchinson",
            "team": "T5TCAFTA9",
            "name": "futureofcoding249",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G2mG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/hyperfiddle\/electric",
                                "text": "Electric Clojure"
                            },
                            {
                                "type": "text",
                                "text": " (previously called “Photon”) is pretty exciting, it “fully abstracts over client\/server state sync at the programming language layer” which I found a bit hard to get my head around but "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/electric-examples-app.fly.dev\/",
                                "text": "this new example site"
                            },
                            {
                                "type": "text",
                                "text": " does a great job of explaining the idea. One of the interesting things I’ve seen made with it is this "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/lumberdev\/tesserae\/tree\/master",
                                "text": "Clojure spreadsheet"
                            },
                            {
                                "type": "text",
                                "text": " app."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "fire",
                "users": [
                    "U04KZ8A9WCT",
                    "U04QL567693",
                    "U04QV8SD54G",
                    "U04QB9V2RNG"
                ],
                "count": 4
            }
        ]
    }
]