[
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1650611239.084779",
        "client_msg_id": "3e01d0a1-7698-46c3-8240-96e025e3720c",
        "text": "Hoo boy, <https:\/\/en.wikipedia.org\/wiki\/The_Origin_of_Consciousness_in_the_Breakdown_of_the_Bicameral_Mind|that's one sweet title>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650606742.911189",
        "parent_user_id": "USH01JEDQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IkMz=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hoo boy, "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/The_Origin_of_Consciousness_in_the_Breakdown_of_the_Bicameral_Mind",
                                "text": "that's one sweet title"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U03C0DRJB8B",
        "type": "message",
        "ts": "1650614070.709259",
        "client_msg_id": "2fd0db22-012c-4668-9b92-a77c9607a79a",
        "text": "Quote from the article: \"And in my darkest moments, I can imagine a 2015 in which everyone is constantly connected to a global network of computers, but the whole system is designed to show us ads and spy on us.\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g93d566cc26b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/93d566cc26b230c553c197c4cd8ac6e4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "Pit",
            "real_name": "Pit Capitain",
            "display_name": "Pit Capitain",
            "team": "T5TCAFTA9",
            "name": "pit",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650606742.911189",
        "parent_user_id": "USH01JEDQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Umn8Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Quote from the article: \"And in my darkest moments, I can imagine a 2015 in which everyone is constantly connected to a global network of computers, but the whole system is designed to show us ads and spy on us.\""
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "disappointed",
                "users": [
                    "UC2A2ARPT",
                    "UCGR73CAY",
                    "U03CEGR3HSL",
                    "UJFN50C00"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1650617996.919539",
        "client_msg_id": "2333c947-75c6-4d09-a92d-5077c7b71127",
        "text": "Wow I never saw this before it's really good! I'll definitely give it a go",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650580496.430299",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fq+o",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wow I never saw this before it's really good! I'll definitely give it a go"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1650618023.261639",
        "client_msg_id": "1a4a0c3a-8c5c-433a-8516-ffddb424824d",
        "text": "<https:\/\/github.com\/katharosada\/splootcode|https:\/\/github.com\/katharosada\/splootcode>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650580496.430299",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jQtM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/katharosada\/splootcode",
                                "text": "https:\/\/github.com\/katharosada\/splootcode"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1650631208.579159",
        "client_msg_id": "a0c9f736-4126-4ee6-aa38-d163f44be9e3",
        "text": "Marijn Haverbeke is also working on a re-implementation of Tree Sitter for JavaScript, called lezer. I believe it is how they plan on writing syntax highlighters for CodeMirror 6",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1648551260.703229",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6aV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Marijn Haverbeke is also working on a re-implementation of Tree Sitter for JavaScript, called lezer. I believe it is how they plan on writing syntax highlighters for CodeMirror 6"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U01ULEWACPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1650648548.790239",
        "client_msg_id": "a0e9f9d5-7ba2-4979-b964-f61c6bd275ef",
        "text": "VERY impressive. I'm using Blockly for declarative logic programming, (speaking at the Blockly conference in 2 weeks) and I've been looking for a way to integrate this kind of text-completion method on top of the drag-and-drop interface. You've solved that problem completely. I only wish I knew how to duplicate the REPL experience in the language I'm using. Need to research that. Are languages and blocks modularized out in SplootCode, so I could theoretically create the blocks and code generation tools necessary to do logic programming (without the run\/feedback features)? And just out of curiosity, have you considered the possibility of bi-directional translation, to ease people into being able to type the code themselves? TIA!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650580496.430299",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X6V8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "VERY impressive. I'm using Blockly for declarative logic programming, (speaking at the Blockly conference in 2 weeks) and I've been looking for a way to integrate this kind of text-completion method on top of the drag-and-drop interface. You've solved that problem completely. I only wish I knew how to duplicate the REPL experience in the language I'm using. Need to research that. Are languages and blocks modularized out in SplootCode, so I could theoretically create the blocks and code generation tools necessary to do logic programming (without the run\/feedback features)? And just out of curiosity, have you considered the possibility of bi-directional translation, to ease people into being able to type the code themselves? TIA!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01A0KANUUU",
        "type": "message",
        "ts": "1650653204.712139",
        "client_msg_id": "941234de-f2a9-45b4-ac68-f10a3cbc7320",
        "text": "<@UCUSW7WVD> Have you read that book? It's pretty wild",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gca7b3cd16bf",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ca7b3cd16bf67a61acaf224e2219929c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "",
            "real_name": "Eric Gade",
            "display_name": "Eric Gade",
            "team": "T5TCAFTA9",
            "name": "eric.gade",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650606742.911189",
        "parent_user_id": "USH01JEDQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DraW5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Have you read that book? It's pretty wild"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1650664992.350159",
        "client_msg_id": "8939bcea-0af4-4662-9876-c06a3ccd8d98",
        "text": "<@UCUSW7WVD> <@U01A0KANUUU> - Nice to see others who've read it. I always think of it when I see eyes on ancient things! As I recall, it didn't mention Easter Island? If true, very odd.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650606742.911189",
        "parent_user_id": "USH01JEDQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "chvp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "user",
                                "user_id": "U01A0KANUUU"
                            },
                            {
                                "type": "text",
                                "text": " - Nice to see others who've read it. I always think of it when I see eyes on ancient things! As I recall, it didn't mention Easter Island? If true, very odd."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01A0KANUUU"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1650665093.735819",
        "edited": {
            "user": "UE6EFEPTQ",
            "ts": "1650665110.000000"
        },
        "client_msg_id": "16d87608-7f67-4a5d-9960-546eab5938c8",
        "text": "(the title is why I'm in this thread, not the topic, sorry!)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650606742.911189",
        "parent_user_id": "USH01JEDQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tRZpH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(the title is why I'm in this thread, not the topic, sorry!)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01NWARGPNC",
        "type": "message",
        "ts": "1650667040.565649",
        "client_msg_id": "19f0abf1-9fd7-4256-aacf-0e888556266d",
        "text": "It's designed to have UI components that are reusable across different languages. So it can be adapted to another language, you need to implement a SplootNode subclass for each type of block (e.g. if, variable reference, operator) and implement a function or two that generate autocomplete suggestions for each node type. The nodetree then serialises to a nested Json object structure that you can use in your own compile\/execution.\n\nSo yeah, it is designed to be adapted to new languages but I've not put any effort into making this easy for people other than myself, and the APIs aren't stable. I can help answer questions if you're keen to give it a shot though!\n\nBecause the underlying tree structure is basically the python AST it can in theory do bi-directional translation and I have code for that which I used in my tests. I've only got a subset of python supported though so importing from text code is not good enough to include in the UI yet. Also it would never be good at round-tripping because it'd lose all formatting and some syntax choices that generate the same AST. It's not a specific goal of the project to roundtrip with text.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "beaca7f5eafb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-02-15\/1767152625025_beaca7f5eafb1b6233d0_72.png",
            "first_name": "Katie",
            "real_name": "Katie Bell",
            "display_name": "Katie Bell",
            "team": "T5TCAFTA9",
            "name": "katie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1650580496.430299",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zPakJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's designed to have UI components that are reusable across different languages. So it can be adapted to another language, you need to implement a SplootNode subclass for each type of block (e.g. if, variable reference, operator) and implement a function or two that generate autocomplete suggestions for each node type. The nodetree then serialises to a nested Json object structure that you can use in your own compile\/execution.\n\nSo yeah, it is designed to be adapted to new languages but I've not put any effort into making this easy for people other than myself, and the APIs aren't stable. I can help answer questions if you're keen to give it a shot though!\n\nBecause the underlying tree structure is basically the python AST it can in theory do bi-directional translation and I have code for that which I used in my tests. I've only got a subset of python supported though so importing from text code is not good enough to include in the UI yet. Also it would never be good at round-tripping because it'd lose all formatting and some syntax choices that generate the same AST. It's not a specific goal of the project to roundtrip with text."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]