[
    {
        "user": "UKFNXF0F9",
        "type": "message",
        "ts": "1599895386.289400",
        "client_msg_id": "76008bf2-07ce-4e3c-9c55-b01f11b341ad",
        "text": "global readability is a by product of global consensus.  It is harder now days to achieve   global consensus, because the skill and platform driving teams to be more and more narrowly focused. When everybody has ideas of how to organize, global readability is hard to achieve.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5651704a60f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/15651704a60f7ef1539f9b1fa2506188.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "taowen",
            "display_name": "taowen",
            "team": "T5TCAFTA9",
            "name": "taowen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599848967.277900",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1iR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "global readability is a by product of global consensus.  It is harder now days to achieve   global consensus, because the skill and platform driving teams to be more and more narrowly focused. When everybody has ideas of how to organize, global readability is hard to achieve."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1599895801.289600",
        "client_msg_id": "62059efd-5cf0-48c6-9789-f3fa98ed008d",
        "text": "Wow, GCC flags <@U01661S9F34>?  I do like the idea of ML being applied at high level \"moves\" than it often is.  I mean, for instance, allow for only valid application of inference rules rather than random term rewrites.  Let the system play over that space.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599805535.266400",
        "parent_user_id": "UFPRPSA4S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ogm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wow, GCC flags "
                            },
                            {
                                "type": "user",
                                "user_id": "U01661S9F34"
                            },
                            {
                                "type": "text",
                                "text": "?  I do like the idea of ML being applied at high level \"moves\" than it often is.  I mean, for instance, allow for only valid application of inference rules rather than random term rewrites.  Let the system play over that space."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "amiga-tick",
                "users": [
                    "U01661S9F34"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1599896434.289900",
        "client_msg_id": "ca9ac9b1-3ad7-4187-a25a-e8c14e1b5fc3",
        "text": "Code is pretty low level: it's hard to get an overview of it.  Low level consistency, in naming for instance, will give you insight into what's going on, and I think more importantly, those who write locally readable code are also more likely have a good architecture.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599848967.277900",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mxNG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Code is pretty low level: it's hard to get an overview of it.  Low level consistency, in naming for instance, will give you insight into what's going on, and I think more importantly, those who write locally readable code are also more likely have a good architecture."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1599906350.292600",
        "client_msg_id": "87dd9705-55f5-4afa-8a27-805c1f574878",
        "text": "I tried to write a narrative of how studies in universal algebra and category theory is providing a deep understanding of how programming languages are united\/distinct in the way they treat computational structures: <https:\/\/github.com\/prathyvsh\/morphisms-of-control-constructs>\n\nI am pretty new to this field and thought the story of this evolution is less told away from academic circles and started piecing together parts of the story as I read twitter feeds \/ blogposts \/ papers on it. If anyone here is knowledgeable in this, can you please provide some feedback on what I have missed or what needs polishing? Pretty sure that there could be some significant details I have missed out.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "reply_count": 30,
        "reply_users_count": 4,
        "latest_reply": "1600179362.445800",
        "reply_users": [
            "U5STGTB3J",
            "UDKTZSD6H",
            "UHWC9PXBL",
            "UFPPABQ7P"
        ],
        "replies": [
            {
                "user": "U5STGTB3J",
                "ts": "1599929525.295900"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1599937013.296200"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1599937481.296400"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1599937757.296900"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1599943950.309000"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1599945497.318900"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1599945871.323200"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1599948595.335800"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1599991924.362600"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1600008006.370000"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1600014389.373300"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1600118053.389200"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1600118540.395300"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1600118574.396000"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1600119732.398400"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1600119732.398600"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1600135136.415900"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1600135320.417700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1600135390.418600"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1600159410.433000"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1600159556.434800"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1600159644.436100"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1600166526.440800"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1600169155.442500"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1600169436.443100"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1600169639.443400"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1600169941.443800"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1600170418.444400"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1600170654.445000"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1600179362.445800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "prathyvsh\/morphisms-of-control-constructs",
                "title_link": "https:\/\/github.com\/prathyvsh\/morphisms-of-control-constructs",
                "text": "A story about how control constructs in programming languages display (homo\/iso)morphisms - prathyvsh\/morphisms-of-control-constructs",
                "fallback": "GitHub: prathyvsh\/morphisms-of-control-constructs",
                "from_url": "https:\/\/github.com\/prathyvsh\/morphisms-of-control-constructs",
                "thumb_url": "https:\/\/repository-images.githubusercontent.com\/294642667\/92c5f380-f457-11ea-8b89-fc0b43f1a286",
                "thumb_width": 375,
                "thumb_height": 250,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/prathyvsh\/morphisms-of-control-constructs"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xSz7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I tried to write a narrative of how studies in universal algebra and category theory is providing a deep understanding of how programming languages are united\/distinct in the way they treat computational structures: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/prathyvsh\/morphisms-of-control-constructs"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI am pretty new to this field and thought the story of this evolution is less told away from academic circles and started piecing together parts of the story as I read twitter feeds \/ blogposts \/ papers on it. If anyone here is knowledgeable in this, can you please provide some feedback on what I have missed or what needs polishing? Pretty sure that there could be some significant details I have missed out."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U016VUZGUUQ",
                    "UHWC9PXBL",
                    "UDQBTJ211"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1599910803.292900",
        "client_msg_id": "50ed2d69-6088-4242-8f2b-ed4f61ccb9ba",
        "text": "<@UMWF81HTP> Do you have any thoughts on preceding part?\n\n&gt; When you're using someone else's customizations you're always at the mercy of the creator's decisions. I don't think that wishing your tools worked differently is rare, that's a sentiment that I feel almost every computer user has,\nE.g., my observation is that developers tend to be frustrated with their tools (especially more experienced ones). Do you not find this to be the case?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599588394.135900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Yw2O",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UMWF81HTP"
                            },
                            {
                                "type": "text",
                                "text": " Do you have any thoughts on preceding part?\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When you're using someone else's customizations you're always at the mercy of the creator's decisions. I don't think that wishing your tools worked differently is rare, that's a sentiment that I feel almost every computer user has,"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nE.g., my observation is that developers tend to be frustrated with their tools (especially more experienced ones). Do you not find this to be the case?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1599910908.293100",
        "client_msg_id": "e856f358-a6d5-43fb-9c9c-8720ca190f66",
        "text": "(I guess I should add that VS Code appears to be the first very popular text editor that developers don't seem to be frustrated with, so perhaps my perspective is outdated.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599588394.135900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QaJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(I guess I should add that VS Code appears to be the first very popular text editor that developers don't seem to be frustrated with, so perhaps my perspective is outdated.)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1599929525.295900",
        "client_msg_id": "E349A242-C528-44D1-A897-7937C39AA046",
        "text": "I don’t know much about this and certainly a lot less than you do, but I am super interested in this and really appreciate you writing about it and putting together all these resources. So here’s my feedback: thank you and please keep going! :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dlV55",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don’t know much about this and certainly a lot less than you do, but I am super interested in this and really appreciate you writing about it and putting together all these resources. So here’s my feedback: thank you and please keep going! :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDKTZSD6H",
                    "U014FD1P1LZ"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1599937013.296200",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1599937865.000000"
        },
        "client_msg_id": "a22ddf56-be9f-4fc2-b3ee-9b791ad8fe4e",
        "text": "Thanks a lot for the encouragement! I just bumped into this after exploring random stuff related to PLT. A certain kind of recurrent idea here seems to me that there is something fundamental about computational structures (in a topology like sense) that we are all groping at in our daily lives.\n\nProgramming seems to me now to be an activity in creating some kind of &lt;*hypothesis*&gt;semiotic ground for manipulating Platonic forms&lt;\/*hypothesis*&gt;.\n\nI am trying to see if those things can be made first class in a visual fashion and PLT semantics looked to me like the place where I can dig in as I have some idea of PLs and a bit of logic knowledge. Also, there are a great community of people studying this deeply and communicating about it in this field. But it is filled up with waaaay too much jargon to repel most programming practitioners as the notations are dense and require an understanding of mathematics before approaching it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hWw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks a lot for the encouragement! I just bumped into this after exploring random stuff related to PLT. A certain kind of recurrent idea here seems to me that there is something fundamental about computational structures (in a topology like sense) that we are all groping at in our daily lives.\n\nProgramming seems to me now to be an activity in creating some kind of <"
                            },
                            {
                                "type": "text",
                                "text": "hypothesis",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ">semiotic ground for manipulating"
                            },
                            {
                                "type": "text",
                                "text": " ",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "Platonic forms<\/"
                            },
                            {
                                "type": "text",
                                "text": "hypothesis",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ">.\n\nI am trying to see if those things can be made first class in a visual fashion and PLT semantics looked to me like the place where I can dig in as I have some idea of PLs and a bit of logic knowledge. Also, there are a great community of people studying this deeply and communicating about it in this field. But it is filled up with waaaay too much jargon to repel most programming practitioners as the notations are dense and require an understanding of mathematics before approaching it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "This sort of aligns with a direction of using computation graph as a first class entity which I think some people here and in Twitter is about to embark on. This can be seen in Twitter convos in the form of RoamOS or as Codex lately proposed: <https:\/\/twitter.com\/codexeditor\/status\/1303985191912747009>\n\nThis would result in a computational would of structure, I think, close to the attached image. Where each context has a program inside it like in a graph editing tool which then becomes the ground for further computation. Think of modules referring each other and creating intermediate representations of computations in this stage, just before getting visualized out as UI elements in a pixel matrix.",
        "files": [
            {
                "id": "F01AY746RG9",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UDKTZSD6H",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=4\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This sort of aligns with a direction of using computation graph as a first class entity which I think some people here and in Twitter is about to embark on. This can be seen in Twitter convos in the form of RoamOS or as Codex lately proposed: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/codexeditor\/status\/1303985191912747009"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThis would result in a computational would of structure, I think, close to the attached image. Where each context has a program inside it like in a graph editing tool which then becomes the ground for further computation. Think of modules referring each other and creating intermediate representations of computations in this stage, just before getting visualized out as UI elements in a pixel matrix."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1599937481.296400",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1599938035.000000"
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H"
    },
    {
        "text": "But I think the links go deeper, and (un)fortunately semanticists, philosophers, and mathematicians working on specialized areas seems to be the ones with intimations of what these general structures could be like. Here is another image from Rocco Gangle’s work (He mixes Category Theory with philosophy to propose some kind of “diagrammatic immanence”). This but for programming is what I think is lurking inside the morphisms of control constructs.",
        "files": [
            {
                "id": "F01ARPQ2U9J",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UDKTZSD6H",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ENY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But I think the links go deeper, and (un)fortunately semanticists, philosophers, and mathematicians working on specialized areas seems to be the ones with intimations of what these general structures could be like. Here is another image from Rocco Gangle’s work (He mixes Category Theory with philosophy to propose some kind of “diagrammatic immanence”). This but for programming is what I think is lurking inside the morphisms of control constructs."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1599937757.296900",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1599938052.000000"
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H"
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1599943950.309000",
        "client_msg_id": "AB1C6E8E-0A14-4BBC-B21A-822060AA0454",
        "text": "Yes! I understand maybe half of what you’re saying, but that half feels true and important to me. I’ve been looking at linguistics, category theory, bidirectional transformations, parsers\/grammars, complexity theory, and Christopher Alexander’s work on Wholeness\/Life and his generative process of unfolding which I just recently started to understand as having parallels to Chomsky and grammars (search for Greg Bryant, if that sounds interesting). \n\nAll these things are very different disciplines but somehow I started to see strong parallels and connections which I totally believe can be expressed mathematically. And very likely we have already identified all the structures we need, we just need to make the connections explicit. Unfortunately, I often find it hard to describe and it makes total sense in my head, but then I’m struggling explaining it to others.\n\nIt looks like you’re onto something that ties into this and might help me find ways to explain some of these connections better.\n\nAnd that’s not even touching on all the exciting ways this might help us find better visual representations for programming systems!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FDKC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes! I understand maybe half of what you’re saying, but that half feels true and important to me. I’ve been looking at linguistics, category theory, bidirectional transformations, parsers\/grammars, complexity theory, and Christopher Alexander’s work on Wholeness\/Life and his generative process of unfolding which I just recently started to understand as having parallels to Chomsky and grammars (search for Greg Bryant, if that sounds interesting). \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "All these things are very different disciplines but somehow I started to see strong parallels and connections which I totally believe can be expressed mathematically. And very likely we have already identified all the structures we need, we just need to make the connections explicit. Unfortunately, I often find it hard to describe and it makes total sense in my head, but then I’m struggling explaining it to others.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "It looks like you’re onto something that ties into this and might help me find ways to explain some of these connections better.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "And that’s not even touching on all the exciting ways this might help us find better visual representations for programming systems!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UDKTZSD6H",
                    "UHWC9PXBL",
                    "UJBAJNFLK"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1599945497.318900",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1599945604.000000"
        },
        "client_msg_id": "9A726F8F-EDB6-4750-B914-DD1E260909E8",
        "text": "Exactly my thoughts! You put this better than I did. Christopher Alexander’s work was a big influence and he is a strong center of this kind of interdisciplinary thought. Much respect to him for his work. I need to look up Greg Bryant, thanks for the pointer!\n\nI am working on and off on my mathematical skills to see how I can represent these ideas well. This is why I started the research on notation to see how historically they have helped us in expressing that other realm that we have inside us: <https:\/\/github.com\/prathyvsh\/notation> I am pursuing it under a feel that there is a good ROI from having a good fitness between the content\/context relationship for the constructs you device to ground these forms.\n\nWill definitely share when I have some clarity on this. Thanks for the good words :v:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "prathyvsh\/notation",
                "title_link": "https:\/\/github.com\/prathyvsh\/notation",
                "text": "Repo to track the evolution of notation in arts and sciences - prathyvsh\/notation",
                "fallback": "GitHub: prathyvsh\/notation",
                "thumb_url": "https:\/\/avatars0.githubusercontent.com\/u\/760789?s=400&v=4",
                "from_url": "https:\/\/github.com\/prathyvsh\/notation",
                "thumb_width": 300,
                "thumb_height": 300,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/prathyvsh\/notation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Jb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Exactly my thoughts! You put this better than I did. Christopher Alexander’s work was a big influence and he is a strong center of this kind of interdisciplinary thought. Much respect to him for his work. I need to look up Greg Bryant, thanks for the pointer!\n\nI am working on and off on my mathematical skills to see how I can represent these ideas well. This is why I started the research on notation to see how historically they have helped us in expressing that other realm that we have inside us: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/prathyvsh\/notation"
                            },
                            {
                                "type": "text",
                                "text": " I am pursuing it under a feel that there is a good ROI from having a good fitness between the content\/context relationship for the constructs you device to ground these forms.\n\nWill definitely share when I have some clarity on this. Thanks for the good words "
                            },
                            {
                                "type": "emoji",
                                "name": "v",
                                "unicode": "270c-fe0f"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1599945871.323200",
        "client_msg_id": "2244EFC5-A447-4522-B7C2-1093786B82FB",
        "text": "Exciting. I’ll keep following you here and on Twitter.\n\nRe Greg Bryant start here: <https:\/\/www.youtube.com\/watch?v=X-5KG73fzJ4|https:\/\/www.youtube.com\/watch?v=X-5KG73fzJ4>\n\nThen read this whole blog in chronological order (it’s not as much content as it seems): <https:\/\/chomskyalexander.blogspot.com\/?m=1|https:\/\/chomskyalexander.blogspot.com\/?m=1>\n\nAnd feel free to ping me on anything related to this. I still have to dig through all what you posted but maybe there are chances to loosely collaborate.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Christopher Alexander and Beautiful Software — A conversation with Greg Bryant",
                "title_link": "https:\/\/www.youtube.com\/watch?v=X-5KG73fzJ4",
                "author_name": "Ryan Singer",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCj_rtKw-jjFZVjpbVo1J_sg",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/X-5KG73fzJ4\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Christopher Alexander and Beautiful Software — A conversation with Greg Bryant",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/X-5KG73fzJ4?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=X-5KG73fzJ4",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=X-5KG73fzJ4"
            },
            {
                "title": "Chomsky &amp; Alexander",
                "title_link": "https:\/\/chomskyalexander.blogspot.com\/?m=1",
                "text": "An attempt to integrate the current ideas and results of Noam Chomsky with those of Christopher Alexander. Earlier work by these two, a linguist and an architect, unintentionally had a huge positive effect upon computing, making integration a sensible approach towards resolving the countless difficult problems in our field.",
                "fallback": "Chomsky &amp; Alexander",
                "from_url": "https:\/\/chomskyalexander.blogspot.com\/?m=1",
                "service_icon": "https:\/\/chomskyalexander.blogspot.com\/favicon.ico",
                "service_name": "chomskyalexander.blogspot.com",
                "id": 2,
                "original_url": "https:\/\/chomskyalexander.blogspot.com\/?m=1"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BM+rC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Exciting. I’ll keep following you here and on Twitter.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Re Greg Bryant start here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=X-5KG73fzJ4",
                                "text": "https:\/\/www.youtube.com\/watch?v=X-5KG73fzJ4"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\nThen read this whole blog in chronological order (it’s not as much content as it seems): "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/chomskyalexander.blogspot.com\/?m=1",
                                "text": "https:\/\/chomskyalexander.blogspot.com\/?m=1"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "text",
                                "text": "And feel free to ping me on anything related to this. I still have to dig through all what you posted but maybe there are chances to loosely collaborate."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UDKTZSD6H"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1599948595.335800",
        "edited": {
            "user": "UHWC9PXBL",
            "ts": "1599949099.000000"
        },
        "client_msg_id": "9FB88A79-4BCA-4A02-8565-757F8AC9DDB5",
        "text": "i’m going to have to give this sincere focused time, but i wanted to reply before my initial reaction before i lost the references—i’ll come by and fill these out with hyperlinks later. i too feel like all of this programming language research is swimming in a dark cave, and in our hunting around i’ve got this suspicion that there’s a light switch not too far away. and that it has a lot to do with reifying the process of evaluation and letting users interact with it directly. in particular,  \n\n&gt; ...there is something fundamental about computational structures (in a topology like sense) that we are all groping at in our daily lives...\n&gt; \n&gt; I am trying to see if those things can be made first class in a visual fashion and PLT semantics looked to me like the place where I can dig in as I have some idea of PLs and a bit of logic knowledge. Also, there are a great community of people studying this deeply and communicating about it in this field. But it is filled up with waaaay too much jargon to repel most programming practitioners as the notations are dense and require an understanding of mathematics before approaching it.\n&gt; \n\nand\n\n&gt; All these things are very different disciplines but somehow I started to see strong parallels and connections which I totally believe can be expressed mathematically. And very likely we have already identified all the structures we need, we just need to make the connections explicit. Unfortunately, I often find it hard to describe and it makes total sense in my head, but then I’m struggling explaining it to others.\n&gt; \nresonate really strongly with me—better-worded versions of stuff i’d tried to explain to other people in the past\n\nthe aforementioned references im working with off the top of my head:\n\n• call by push value\n• ohm\/ometa \n• kernel\/vau\/f-expressions\n• partial evaluation\n• programming should eat itself\n• the work going on at red planet labs, alluded to by a few talks on the specter library for clojure\n• meander, another clojure library\n• the stuff rich hickey has started saying about functions having some knowledge about what they require to work properly (instead of specifying requirements on data structures directly)\n• towers of interpreters\n• f-algebras, recursion schemes\n• scoping and binding in the rebol programming language, APL\n• defunctionalization and refunctionalization\n• concatenative languages, because: the current continuation for them is always the state of the stack plus the rest of the tokens in the source, so you can always split a program at any point, pause it and restart it, and composition instead of application is the default action of putting two words next to each other. another way of looking at it is that every concatenative program always carries with it the context it’s operating in\/on. plus there’s this cool video i shared before: <https:\/\/youtu.be\/R3MNcA2dpts|https:\/\/youtu.be\/R3MNcA2dpts>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s7j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i’m going to have to give this sincere focused time, but i wanted to reply before my initial reaction before i lost the references—i’ll come by and fill these out with hyperlinks later. i too feel like all of this programming language research is swimming in a dark cave, and in our hunting around i’ve got this suspicion that there’s a light switch not too far away. and that it has a lot to do with reifying the process of evaluation and letting users interact with it directly. in particular,  \n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "...there is something fundamental about computational structures (in a topology like sense) that we are all groping at in our daily lives...\n\nI am trying to see if those things can be made first class in a visual fashion and PLT semantics looked to me like the place where I can dig in as I have some idea of PLs and a bit of logic knowledge. Also, there are a great community of people studying this deeply and communicating about it in this field. But it is filled up with waaaay too much jargon to repel most programming practitioners as the notations are dense and require an understanding of mathematics before approaching it.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nand\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "All these things are very different disciplines but somehow I started to see strong parallels and connections which I totally believe can be expressed mathematically. And very likely we have already identified all the structures we need, we just need to make the connections explicit. Unfortunately, I often find it hard to describe and it makes total sense in my head, but then I’m struggling explaining it to others.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nresonate really strongly with me—better-worded versions of stuff i’d tried to explain to other people in the past\n\nthe aforementioned references im working with off the top of my head:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "call by push value"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "ohm\/ometa "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "kernel\/vau\/f-expressions"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "partial evaluation"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "programming should eat itself"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "the work going on at red planet labs, alluded to by a few talks on the specter library for clojure"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "meander, another clojure library"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "the stuff rich hickey has started saying about functions having some knowledge about what they require to work properly (instead of specifying requirements on data structures directly)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "towers of interpreters"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "f-algebras, recursion schemes"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "scoping and binding in the rebol programming language, APL"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "defunctionalization and refunctionalization"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "concatenative languages, because: the current continuation for them is always the state of the stack plus the rest of the tokens in the source, so you can always split a program at any point, pause it and restart it, and composition instead of application is the default action of putting two words next to each other. another way of looking at it is that every concatenative program always carries with it the context it’s operating in\/on. plus there’s this cool video i shared before: "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/youtu.be\/R3MNcA2dpts",
                                        "text": "https:\/\/youtu.be\/R3MNcA2dpts"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5STGTB3J",
                    "UDKTZSD6H"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1599962216.338400",
        "edited": {
            "user": "UJNJQD2AC",
            "ts": "1599962496.000000"
        },
        "client_msg_id": "01ec29b8-9967-433e-bd72-5ce281bbbc87",
        "text": "What if it's important, for comprehension, that we be able to speak programming languages not just write them.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599962216.338400",
        "reply_count": 12,
        "reply_users_count": 7,
        "latest_reply": "1600036827.387400",
        "reply_users": [
            "UJNJQD2AC",
            "UFPPABQ7P",
            "UA14TGLTC",
            "UN57U8V53",
            "U018AQ13VF1",
            "UHWC9PXBL",
            "UCGAK10LS"
        ],
        "replies": [
            {
                "user": "UJNJQD2AC",
                "ts": "1599963553.338700"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1599994299.363200"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1599999332.364200"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1600000164.364400"
            },
            {
                "user": "UJNJQD2AC",
                "ts": "1600000317.364700"
            },
            {
                "user": "UN57U8V53",
                "ts": "1600001298.365000"
            },
            {
                "user": "UN57U8V53",
                "ts": "1600001456.365200"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1600006941.365600"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1600007110.366000"
            },
            {
                "user": "U018AQ13VF1",
                "ts": "1600013608.372600"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1600015025.380600"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1600036827.387400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BfD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What if it's important, for comprehension, that we be able to speak programming languages not just write them."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UN57U8V53",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1599963553.338700",
        "client_msg_id": "b10f14de-b52a-46fb-bc40-7039bc418445",
        "text": "Semi relevant article <https:\/\/medium.com\/@old_sound\/programming-languages-are-not-languages-c6f161a78c44|https:\/\/medium.com\/@old_sound\/programming-languages-are-not-languages-c6f161a78c44>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599962216.338400",
        "parent_user_id": "UJNJQD2AC",
        "attachments": [
            {
                "service_name": "Medium",
                "title": "Programming Languages are not Languages",
                "title_link": "https:\/\/medium.com\/@old_sound\/programming-languages-are-not-languages-c6f161a78c44",
                "text": "In my previous article I talked about how the metaphors used to present a problem, set the stage for how we are going to talk about the…",
                "fallback": "Medium: Programming Languages are not Languages",
                "image_url": "https:\/\/miro.medium.com\/max\/1200\/1*8x1xzfTcE-2WfgL3iEs7bA.png",
                "fields": [
                    {
                        "title": "Reading time",
                        "value": "7 min read",
                        "short": true
                    }
                ],
                "ts": 1535908358,
                "from_url": "https:\/\/medium.com\/@old_sound\/programming-languages-are-not-languages-c6f161a78c44",
                "image_width": 405,
                "image_height": 250,
                "image_bytes": 1018768,
                "service_icon": "https:\/\/cdn-images-1.medium.com\/fit\/c\/152\/152\/1*8I-HPL0bfoIzGied-dzOvA.png",
                "id": 1,
                "original_url": "https:\/\/medium.com\/@old_sound\/programming-languages-are-not-languages-c6f161a78c44"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TykDF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Semi relevant article "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/medium.com\/@old_sound\/programming-languages-are-not-languages-c6f161a78c44",
                                "text": "https:\/\/medium.com\/@old_sound\/programming-languages-are-not-languages-c6f161a78c44"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1599968875.339300",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1599968904.000000"
        },
        "client_msg_id": "a517689d-a258-483d-a4c3-a6683b886d30",
        "text": "Don't you also see experienced developers being more resigned to their tools? In fact, that's one way to diagnose all of us pushing back on you in this thread: we've been living with our chains so long that we've forgotten about them. That would certainly explain why we don't customize more.\n\nI had more customizations in 2001-2005, then I moved and changed a lot of stuff and just restarted my text editor settings from scratch. And they've never grown back to the sort of multi-megabyte state they were in then.\n\nBacking up to your previous comment to me (I wrote a response yesterday that the Slack app ate):\n\n&gt; I think you're misunderstanding me here, I'm specifically saying I don't always think automation is a good idea, I'm saying that it's the way I prefer to solve problems. It's an inclination that has more to do with me, than it does the problem.\nI don't understand the distinction you're making here. At least, what you're saying sounds like it answers your earlier question, \"how can doing things manually still be better than automating them in 2020?\"\n\nFunny thing is, I do a _lot_ to automate testing. In fact, one way to view my Mu project is as making the UI layer easy to test.\n\n&gt; I would love to hear more about this \"love of doing things manually\" though.\nWhen I do something manually I sleep soundly at night that I haven't created new tech debt for myself. I don't have something new I have to maintain, or try to read later to try to understand _just what_ I was thinking. Manual labor can be therapeutic, like gardening. All these things have nothing to do with the state of the underlying system. They're just about the mess _I_ make, and about taking care of my own state of mind.\n\nSometimes I do things manually for a few days even when I'm _sure_ I have to automate them eventually. Manual work keeps me close to the data and might give me some new insight. \"Being the computer\" helps me understand the problem before I try to solve it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599588394.135900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qOz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Don't you also see experienced developers being more resigned to their tools? In fact, that's one way to diagnose all of us pushing back on you in this thread: we've been living with our chains so long that we've forgotten about them. That would certainly explain why we don't customize more.\n\nI had more customizations in 2001-2005, then I moved and changed a lot of stuff and just restarted my text editor settings from scratch. And they've never grown back to the sort of multi-megabyte state they were in then.\n\nBacking up to your previous comment to me (I wrote a response yesterday that the Slack app ate):\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think you're misunderstanding me here, I'm specifically saying I don't always think automation is a good idea, I'm saying that it's the way I prefer to solve problems. It's an inclination that has more to do with me, than it does the problem."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't understand the distinction you're making here. At least, what you're saying sounds like it answers your earlier question, \"how can doing things manually still be better than automating them in 2020?\"\n\nFunny thing is, I do a "
                            },
                            {
                                "type": "text",
                                "text": "lot",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to automate testing. In fact, one way to view my Mu project is as making the UI layer easy to test.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would love to hear more about this \"love of doing things manually\" though."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When I do something manually I sleep soundly at night that I haven't created new tech debt for myself. I don't have something new I have to maintain, or try to read later to try to understand "
                            },
                            {
                                "type": "text",
                                "text": "just what",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " I was thinking. Manual labor can be therapeutic, like gardening. All these things have nothing to do with the state of the underlying system. They're just about the mess "
                            },
                            {
                                "type": "text",
                                "text": "I",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " make, and about taking care of my own state of mind.\n\nSometimes I do things manually for a few days even when I'm "
                            },
                            {
                                "type": "text",
                                "text": "sure",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " I have to automate them eventually. Manual work keeps me close to the data and might give me some new insight. \"Being the computer\" helps me understand the problem before I try to solve it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UP00ZLX6G",
                    "UHWC9PXBL"
                ],
                "count": 2
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1599969120.339600",
        "client_msg_id": "ac4deb19-7682-48d2-8482-c8e97e45d353",
        "text": "&gt; what a cool idea, a social networking platform based around sharing little interactive bits of code. Twitter x CodePen\nYou mean like <http:\/\/www.bashoneliners.com>?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599719973.216100",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "title": "bashoneliners.com | Bash One-Liners",
                "title_link": "http:\/\/www.bashoneliners.com\/",
                "text": "A collection of practical and well-explained Bash one-liners and shell script tips, tricks, snippets for GNU Linux, UNIX or BSD systems. Post your clever one-liners, search, login using SSO or Open ID. Open-source project, using Django, Python, jQuery, Git, GitHub, HTML5, Bootstrap from Twitter.",
                "fallback": "bashoneliners.com | Bash One-Liners",
                "from_url": "http:\/\/www.bashoneliners.com\/",
                "service_name": "bashoneliners.com",
                "id": 1,
                "original_url": "http:\/\/www.bashoneliners.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7fHCV",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "what a cool idea, a social networking platform based around sharing little interactive bits of code. Twitter x CodePen"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nYou mean like "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.bashoneliners.com"
                            },
                            {
                                "type": "text",
                                "text": "?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE0ETTCG7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMWF81HTP",
        "type": "message",
        "ts": "1599973383.340000",
        "edited": {
            "user": "UMWF81HTP",
            "ts": "1599973970.000000"
        },
        "client_msg_id": "cd82452a-d40e-4703-9cf2-7845d72b6c85",
        "text": "&gt;  E.g., my observation is that developers tend to be frustrated with their tools (especially more experienced ones). Do you not find this to be the case?\nI see pockets of people feeling frustrated and other pockets of people who aren't. It's difficult to summarize since I think the landscape is complex(like you said, experience plays a part). I agree though that not everyone is satisfied. I'll have to revisit this later when I have more to say.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4022671f3400",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-03\/775814402657_4022671f340032b9eb75_72.jpg",
            "first_name": "yoshiki",
            "real_name": "yoshiki",
            "display_name": "yoshiki",
            "team": "T5TCAFTA9",
            "name": "yoshikischmitz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599588394.135900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+iet",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " E.g., my observation is that developers tend to be frustrated with their tools (especially more experienced ones). Do you not find this to be the case?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I see pockets of people feeling frustrated and other pockets of people who aren't. It's difficult to summarize since I think the landscape is complex(like you said, experience plays a part). I agree though that not everyone is satisfied. I'll have to revisit this later when I have more to say."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "UE0ETTCG7"
                ],
                "count": 2
            }
        ]
    }
]