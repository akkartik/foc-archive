[
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1712136678.889999",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1712141058.000000"
        },
        "client_msg_id": "07ce1f3a-7a13-4362-804d-057ac2d92324",
        "text": "I got a simple idea to migrate the old newsletter posts to the \"blog\", here's the first one I have: <https:\/\/newsletter.futureofcoding.org\/posts\/future-of-coding-weekly-202001-week-3\/>\n\nI noticed that all links go through tinyletter but they still seem to work, example: <http:\/\/mail01.tinyletterapp.com\/marianoguerra\/future-of-coding-weekly-2020-01-week-3\/16109598-www.youtube.com\/watch?c=f8edef3a-2c5e-4af4-a34d-904e97c707cf|http:\/\/mail01.tinyletterapp.com\/marianoguerra\/future-of-coding-weekly-2020-01-week-3\/161[…]youtube.com\/watch?c=f8edef3a-2c5e-4af4-a34d-904e97c707cf>\n\nthere's not enough information to recover them from url itself but since they are still working I should resolve them to the originals as fast as possible in case that service is turned off too :confused:\n\nUpdate: I wrote <https:\/\/github.com\/marianoguerra\/future-of-coding-weekly\/blob\/gh-pages\/detinyletter.js|a script> to replace all redirect urls to the original ones, the post above is updated",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gnjd+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I got a simple idea to migrate the old newsletter posts to the \"blog\", here's the first one I have: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/newsletter.futureofcoding.org\/posts\/future-of-coding-weekly-202001-week-3\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI noticed that all links go through tinyletter but they still seem to work, example: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/mail01.tinyletterapp.com\/marianoguerra\/future-of-coding-weekly-2020-01-week-3\/16109598-www.youtube.com\/watch?c=f8edef3a-2c5e-4af4-a34d-904e97c707cf",
                                "text": "http:\/\/mail01.tinyletterapp.com\/marianoguerra\/future-of-coding-weekly-2020-01-week-3\/161[…]youtube.com\/watch?c=f8edef3a-2c5e-4af4-a34d-904e97c707cf"
                            },
                            {
                                "type": "text",
                                "text": "\n\nthere's not enough information to recover them from url itself but since they are still working I should resolve them to the originals as fast as possible in case that service is turned off too "
                            },
                            {
                                "type": "emoji",
                                "name": "confused",
                                "unicode": "1f615"
                            },
                            {
                                "type": "text",
                                "text": "\n\nUpdate: I wrote "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/marianoguerra\/future-of-coding-weekly\/blob\/gh-pages\/detinyletter.js",
                                "text": "a script"
                            },
                            {
                                "type": "text",
                                "text": " to replace all redirect urls to the original ones, the post above is updated"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UFEQUBNNT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1712142182.865579",
        "client_msg_id": "a4959cc7-56ca-4b73-935b-812ec97f51fd",
        "text": "happy to see the de-tinyletter script :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1712142182.865579",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1712150348.275769",
        "reply_users": [
            "UBN9AFS0N"
        ],
        "replies": [
            {
                "user": "UBN9AFS0N",
                "ts": "1712150348.275769"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uoJNQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "happy to see the de-tinyletter script "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1712150348.275769",
        "client_msg_id": "cd5e92e1-cddb-4793-8500-d5df3d97a51d",
        "text": "all I can say about it is that it works :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1712142182.865579",
        "parent_user_id": "U013ZLJARC7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Go4ia",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "all I can say about it is that it works "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "laughing",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1712177737.540509",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1712179840.000000"
        },
        "client_msg_id": "ee8d0634-d5be-4803-9032-b551080b20c4",
        "text": "Today, I'm trying to get function signatures for all the std lib stuff in JS… at runtime. Current attempt is converting various d.ts files from the typescript package (like, say, es5.d.ts) into a JSON file with just the bits I need. If that fails, I might try parsing the official WebIDL files (that are used to generate these d.ts files — at least, the dom ones).\n\nIf there's a much more obvious way to get this info, let me know. I basically just want something that, for a given function (eg: Array.prototype.splice), gives me some basic signature info (eg: 1-2 args with rest, first arg is called \"index\", optional second is called \"delete\", rest is \"items\"). If all else fails I'll just do .length on these functions, but I'd prefer to get names too.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1712177737.540509",
        "reply_count": 8,
        "reply_users_count": 3,
        "latest_reply": "1712324440.097339",
        "reply_users": [
            "UC2A2ARPT",
            "U013ZLJARC7",
            "U02QC0PPER3"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1712180472.130669"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1712180668.487919"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1712217108.872949"
            },
            {
                "user": "U02QC0PPER3",
                "ts": "1712264601.946159"
            },
            {
                "user": "U02QC0PPER3",
                "ts": "1712264664.162769"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1712265396.728159"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1712265484.380189"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1712324440.097339"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mc\/QB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Today, I'm trying to get function signatures for all the std lib stuff in JS… at runtime. Current attempt is converting various d.ts files from the typescript package (like, say, es5.d.ts) into a JSON file with just the bits I need. If that fails, I might try parsing the official WebIDL files (that are used to generate these d.ts files — at least, the dom ones).\n\nIf there's a much more obvious way to get this info, let me know. I basically just want something that, for a given function (eg: Array.prototype.splice), gives me some basic signature info (eg: 1-2 args with rest, first arg is called \"index\", optional second is called \"delete\", rest is \"items\"). If all else fails I'll just do .length on these functions, but I'd prefer to get names too."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Okay, we're in business. Add \"typescript compiler\" to the list of stuff going into Hest at runtime (along with \"physics engine\", \"gradient descent\", \"back propagation\", etc)",
        "files": [
            {
                "id": "F06SH1EDKUN",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "UC2A2ARPT",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eQrPF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Okay, we're in business. Add \"typescript compiler\" to the list of stuff going into Hest at runtime (along with \"physics engine\", \"gradient descent\", \"back propagation\", etc)"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1712180472.130669",
        "client_msg_id": "2494d9ca-8f2e-4162-9821-c24164e3b8f9",
        "thread_ts": "1712177737.540509",
        "parent_user_id": "UC2A2ARPT",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UMV4B97GT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1712180668.487919",
        "client_msg_id": "3481E6FF-7136-4540-809A-26FD63B39146",
        "text": "Yes, I know the above doesn't show the signature info I'm interested in. I got that working separately, but didn't have a good way to screenshot it. :shrug: ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1712177737.540509",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6LDcI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, I know the above doesn't show the signature info I'm interested in"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " I got that working separately, but didn't have a good way to screenshot it"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "shrug",
                                "unicode": "1f937"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ]
    }
]