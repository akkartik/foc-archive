[
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1533023000.000117",
        "client_msg_id": "e27fcae1-df74-4da1-b884-8962b407bd74",
        "text": "<@U5STGTB3J> this is the closest I've seen <https:\/\/twitter.com\/mfikes\/status\/1019233164273881088>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1532963038.000621",
        "parent_user_id": "U5STGTB3J",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/mfikes|@mfikes>: If you would like to give Graal.js a spin from a new REPL environment for ClojureScript instructions here. <https:\/\/gist.github.com\/mfikes\/e0dcb57f2d87afc905829f86111fb610>\n\nCalculating sum 1 to 100 with five languages in one REPL: <https:\/\/pbs.twimg.com\/media\/DiULKGRUcAARIoM.jpg>",
                "ts": 1531839097,
                "author_name": "Mike Fikes",
                "author_link": "https:\/\/twitter.com\/mfikes\/status\/1019233164273881088",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/909773383902142464\/0JAdYoeO_normal.jpg",
                "author_subname": "@mfikes",
                "text": "If you would like to give Graal.js a spin from a new REPL environment for ClojureScript instructions here. <https:\/\/gist.github.com\/mfikes\/e0dcb57f2d87afc905829f86111fb610>\n\nCalculating sum 1 to 100 with five languages in one REPL: <https:\/\/pbs.twimg.com\/media\/DiULKGRUcAARIoM.jpg>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/mfikes\/status\/1019233164273881088",
                "image_url": "https:\/\/pbs.twimg.com\/media\/DiULKGRUcAARIoM.jpg",
                "image_width": 575,
                "image_height": 244,
                "image_bytes": 31901,
                "id": 1,
                "original_url": "https:\/\/twitter.com\/mfikes\/status\/1019233164273881088",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bhrf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " this is the closest I've seen "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/mfikes\/status\/1019233164273881088"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1533023021.000165",
        "client_msg_id": "7b46294a-4b81-4b2f-bc5e-c1abd1d0e8c4",
        "text": "<https:\/\/www.graalvm.org\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1532963038.000621",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nmXd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.graalvm.org\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1533055703.000415",
        "client_msg_id": "175bd2bd-f228-4779-881a-cb1a42a4246f",
        "text": "Ah yes graal is pretty interesting. Transpiling\/compiling to the same lower level virtual machine - i.e. grall - might be another way to interop. But you may have to leave the ecosystem behind (may not port easily).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1532963038.000621",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i4=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah yes graal is pretty interesting. Transpiling\/compiling to the same lower level virtual machine - i.e. grall - might be another way to interop. But you may have to leave the ecosystem behind (may not port easily)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1533056141.000523",
        "client_msg_id": "4b77ac09-fbd6-408b-bf03-6f352ab5e369",
        "text": "<@U5STGTB3J> yes we have an incredible amount of reinvention - of the ecosystem and also of the ideas themselves. This is a strong 'system smell'. The prevalent ways of composition *require* a lot of reimplementation. Consider I can't just implement and share a simple idea - such as a sorter - and have everyone just reuse it. There is some generic programming within each language world, but why no system-wide generic programming? The more I think about this I feel the problem is the substrate - our current model of composition is poor and requires this kind of reimplementation. I think it has to do with pervasive early binding but still chewing on it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1532963038.000621",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tDT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " yes we have an incredible amount of reinvention - of the ecosystem and also of the ideas themselves. This is a strong 'system smell'. The prevalent ways of composition "
                            },
                            {
                                "type": "text",
                                "text": "require",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " a lot of reimplementation. Consider I can't just implement and share a simple idea - such as a sorter - and have everyone just reuse it. There is some generic programming within each language world, but why no system-wide generic programming? The more I think about this I feel the problem is the substrate - our current model of composition is poor and requires this kind of reimplementation. I think it has to do with pervasive early binding but still chewing on it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1533078727.000152",
        "client_msg_id": "e460c986-e439-4eb3-91d2-e89062f1f5d0",
        "text": "I am somewhat anti-text-streams\/files (see more here if interested: <https:\/\/shalabh.com\/programmable-systems\/files-and-file-formats.html>), so while I agree with the general sentiment of 'programs should easily talk to each other', I think text streams\/files are a poor way of doing that. Firstly, the format is transmitted out-of-band. Secondly there's no way to bind\/compose two programs connected via stream into a larger program for isolation or performance The Unix way seems to conflate the implemetation mechanims (stream of text vs function call vs in memory message passing vs inlining) with the semantics (one object sending a logical message to another).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1532963038.000621",
        "parent_user_id": "U5STGTB3J",
        "attachments": [
            {
                "title": "     Shalabh Chaturvedi – Files, Formats and Byte Arrays  ",
                "title_link": "https:\/\/shalabh.com\/programmable-systems\/files-and-file-formats.html",
                "text": "Posts and writings by shalabh",
                "fallback": "     Shalabh Chaturvedi – Files, Formats and Byte Arrays  ",
                "from_url": "https:\/\/shalabh.com\/programmable-systems\/files-and-file-formats.html",
                "service_name": "shalabh.com",
                "id": 1,
                "original_url": "https:\/\/shalabh.com\/programmable-systems\/files-and-file-formats.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xPf0t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am somewhat anti-text-streams\/files (see more here if interested: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/shalabh.com\/programmable-systems\/files-and-file-formats.html"
                            },
                            {
                                "type": "text",
                                "text": "), so while I agree with the general sentiment of 'programs should easily talk to each other', I think text streams\/files are a poor way of doing that. Firstly, the format is transmitted out-of-band. Secondly there's no way to bind\/compose two programs connected via stream into a larger program for isolation or performance The Unix way seems to conflate the implemetation mechanims (stream of text vs function call vs in memory message passing vs inlining) with the semantics (one object sending a logical message to another)."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]