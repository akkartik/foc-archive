[
    {
        "user": "U019PRL1BNU",
        "type": "message",
        "ts": "1604079401.115400",
        "edited": {
            "user": "U019PRL1BNU",
            "ts": "1604079437.000000"
        },
        "client_msg_id": "7a1633cd-fdcd-4122-85a7-c38f2310c834",
        "text": "This is a prototype I’ve been working on for browsing and reading code. The main ideas I’m exploring are spatial organization, abstracting away files, and path-aware browsing. It’s currently setup with the react-reconciler codebase and the linked canvas does a tiny tour of React hooks.\n\nI'd love any questions\/feedback. Would you use something like this? <https:\/\/code-explorer.bypaulshen.com\/?snapshot=9feb3d1a-b41e-44e6-adff-9b522414dc0b>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "748829849f84",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-10-10\/1444204670448_748829849f84c5e6d568_72.jpg",
            "first_name": "",
            "real_name": "Paul Shen",
            "display_name": "Paul Shen",
            "team": "T5TCAFTA9",
            "name": "paulshen0",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604079401.115400",
        "reply_count": 28,
        "reply_users_count": 9,
        "latest_reply": "1604885903.154300",
        "reply_users": [
            "UCUSW7WVD",
            "U019PRL1BNU",
            "UUQ2EQW21",
            "U8A5MS6R1",
            "UEBG0NPDK",
            "UG0EL18H3",
            "UHWC9PXBL",
            "U013ZLJARC7",
            "UF6RLAL7J"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1604080138.115700"
            },
            {
                "user": "U019PRL1BNU",
                "ts": "1604080277.115900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1604080339.116100"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1604081765.116500"
            },
            {
                "user": "U019PRL1BNU",
                "ts": "1604083954.117200"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1604089668.117600"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1604095244.117900"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1604095311.118500"
            },
            {
                "user": "UG0EL18H3",
                "ts": "1604095598.118700"
            },
            {
                "user": "U019PRL1BNU",
                "ts": "1604111641.119500"
            },
            {
                "user": "U019PRL1BNU",
                "ts": "1604112041.119700"
            },
            {
                "user": "U019PRL1BNU",
                "ts": "1604112722.120000"
            },
            {
                "user": "U019PRL1BNU",
                "ts": "1604113028.120200"
            },
            {
                "user": "UG0EL18H3",
                "ts": "1604119656.121400"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1604146618.121800"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1604147020.122000"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1604168461.125500"
            },
            {
                "user": "U019PRL1BNU",
                "ts": "1604192759.127300"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1604272639.132500"
            },
            {
                "user": "UF6RLAL7J",
                "ts": "1604309593.133900"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1604342470.137500"
            },
            {
                "user": "U019PRL1BNU",
                "ts": "1604342900.137700"
            },
            {
                "user": "U019PRL1BNU",
                "ts": "1604343189.138000"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1604498140.147400"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1604514041.148800"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1604700292.152300"
            },
            {
                "user": "UF6RLAL7J",
                "ts": "1604749972.152700"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1604885903.154300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "title": "Code explorer prototype",
                "title_link": "https:\/\/code-explorer.bypaulshen.com\/?snapshot=9feb3d1a-b41e-44e6-adff-9b522414dc0b",
                "text": "an exploration in reading and understanding code",
                "fallback": "Code explorer prototype",
                "image_url": "https:\/\/code-explorer.bypaulshen.com\/twitter.png",
                "from_url": "https:\/\/code-explorer.bypaulshen.com\/?snapshot=9feb3d1a-b41e-44e6-adff-9b522414dc0b",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 168689,
                "service_name": "code-explorer.bypaulshen.com",
                "id": 1,
                "original_url": "https:\/\/code-explorer.bypaulshen.com\/?snapshot=9feb3d1a-b41e-44e6-adff-9b522414dc0b"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3zG69",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a prototype I’ve been working on for browsing and reading code. The main ideas I’m exploring are spatial organization, abstracting away files, and path-aware browsing. It’s currently setup with the react-reconciler codebase and the linked canvas does a tiny tour of React hooks.\n\nI'd love any questions\/feedback. Would you use something like this? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/code-explorer.bypaulshen.com\/?snapshot=9feb3d1a-b41e-44e6-adff-9b522414dc0b"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "USH01JEDQ",
                    "UUQ2EQW21",
                    "U0123H7JRDM",
                    "UBSMEUXAA",
                    "UHWC9PXBL",
                    "UMYKGHYBA",
                    "UA14TGLTC",
                    "US6TKS2HW",
                    "UF6RLAL7J",
                    "US370TRJA"
                ],
                "count": 10
            },
            {
                "name": "star",
                "users": [
                    "USH01JEDQ"
                ],
                "count": 1
            },
            {
                "name": "heart_eyes",
                "users": [
                    "U8A5MS6R1",
                    "ULK0Z4MPV",
                    "UJ6LDMMN0",
                    "US6TKS2HW"
                ],
                "count": 4
            },
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "U013ZLJARC7"
                ],
                "count": 2
            },
            {
                "name": "fire",
                "users": [
                    "UG0EL18H3"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1604080138.115700",
        "client_msg_id": "2d93a4f4-54e6-4b99-b3d4-e3d57f289ad7",
        "text": "I've been thinking along similar lines.\n\nWhat do the lines between some of the boxes mean?\n\nAre the line numbers useful in this organization?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w+vJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been thinking along similar lines.\n\nWhat do the lines between some of the boxes mean?\n\nAre the line numbers useful in this organization?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U019PRL1BNU",
        "type": "message",
        "ts": "1604080277.115900",
        "client_msg_id": "182ff0c3-48a4-461b-a29e-78f18e9b6417",
        "text": "the lines are part of the path-aware browsing. when you go to definition or drag a symbol to open a new pane, it’ll draw a line from parent -&gt; child. By default, closing a pane will close all its children recursively.\n\nThat’s a good question about line numbers. One thing it tells you is that there’s more content above if it doesn’t start at 0 but that can be conveyed in a different way. Thanks!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "748829849f84",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-10-10\/1444204670448_748829849f84c5e6d568_72.jpg",
            "first_name": "",
            "real_name": "Paul Shen",
            "display_name": "Paul Shen",
            "team": "T5TCAFTA9",
            "name": "paulshen0",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t1IW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the lines are part of the path-aware browsing. when you go to definition or drag a symbol to open a new pane, it’ll draw a line from parent -> child. By default, closing a pane will close all its children recursively.\n\nThat’s a good question about line numbers. One thing it tells you is that there’s more content above if it doesn’t start at 0 but that can be conveyed in a different way. Thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1604080339.116100",
        "client_msg_id": "ccec622c-6810-4efd-b7d1-fea9ec076ba3",
        "text": "I see, so by 'path' you mean just the path of a specific browser session. Makes sense!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/k1qG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I see, so by 'path' you mean just the path of a specific browser session. Makes sense!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1604081765.116500",
        "client_msg_id": "b94f73f8-1033-48cc-bec0-3834e804cf3b",
        "text": "I've spent the last few weeks trying to clean up and refactor a hugely complex collection of code.  Tools like this are what I'm missing.  An easy way to make a pin board of the fragments I need to hold in my head, and the relations between them.  It's 2020 and tools still don't have good ways to do this!  I applaud your efforts!  Perhaps a usage video in <#C0120A3L30R|two-minute-week> ?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B+i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've spent the last few weeks trying to clean up and refactor a hugely complex collection of code.  Tools like this are what I'm missing.  An easy way to make a pin board of the fragments I need to hold in my head, and the relations between them.  It's 2020 and tools still don't have good ways to do this!  I applaud your efforts!  Perhaps a usage video in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "C0120A3L30R"
                            },
                            {
                                "type": "text",
                                "text": " ?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U019PRL1BNU",
        "type": "message",
        "ts": "1604083954.117200",
        "client_msg_id": "d391d030-b59b-4613-bd79-bba70b44de0f",
        "text": "<@UUQ2EQW21> thanks! i totally agree with your sentiment\n\nand i’ll try to make a video soon :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "748829849f84",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-10-10\/1444204670448_748829849f84c5e6d568_72.jpg",
            "first_name": "",
            "real_name": "Paul Shen",
            "display_name": "Paul Shen",
            "team": "T5TCAFTA9",
            "name": "paulshen0",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fH7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUQ2EQW21"
                            },
                            {
                                "type": "text",
                                "text": " thanks! i totally agree with your sentiment\n\nand i’ll try to make a video soon "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1604089668.117600",
        "client_msg_id": "5e46ebd9-c775-4a9b-bea7-22b58bd61dd3",
        "text": "This looks great! I really like these customizable 'slice viewers'. One suggestion I'd have is to connect the line to source window at the the corresponding location in the scroll bar, rather than the top title bar.\n\nBTW, have you seen <http:\/\/sourcetrail.com|sourcetrail.com>?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5xl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This looks great! I really like these customizable 'slice viewers'. One suggestion I'd have is to connect the line to source window at the the corresponding location in the scroll bar, rather than the top title bar.\n\nBTW, have you seen "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/sourcetrail.com",
                                "text": "sourcetrail.com"
                            },
                            {
                                "type": "text",
                                "text": "?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1604095244.117900",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1604095259.000000"
        },
        "client_msg_id": "4f7924c2-46b4-47a1-bd17-0cc4d3a114c7",
        "text": "Historical references that might be of interest down this vein:\n1. <http:\/\/cs.brown.edu\/~spr\/codebubbles\/|CodeBubbles> (here’s a good <https:\/\/www.youtube.com\/watch?v=PsPX0nElJ0k|video>)\n2. <https:\/\/www.youtube.com\/watch?v=3p9XUwIlhJg|Visual Studio Debugger Canvas>\n3. The original <https:\/\/vimeo.com\/40281991|Light Table concept> explored alternative layouts\nMe and a couple of other folks were behind 2 and 3, though for 2 they removed a lot of the coolest stuff for whatever reason. It’s really cool and a really neat way to debug, though when we tested it internally, people didn’t like it for writing. This introduced a hard divide between read time and write time and not being able to fluidly transition between the two caused people to rate their qualitative experience with the system fairly low.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QZJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Historical references that might be of interest down this vein:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "http:\/\/cs.brown.edu\/~spr\/codebubbles\/",
                                        "text": "CodeBubbles"
                                    },
                                    {
                                        "type": "text",
                                        "text": " (here’s a good "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/www.youtube.com\/watch?v=PsPX0nElJ0k",
                                        "text": "video"
                                    },
                                    {
                                        "type": "text",
                                        "text": ")"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/www.youtube.com\/watch?v=3p9XUwIlhJg",
                                        "text": "Visual Studio Debugger Canvas"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The original "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/vimeo.com\/40281991",
                                        "text": "Light Table concept"
                                    },
                                    {
                                        "type": "text",
                                        "text": " explored alternative layouts"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nMe and a couple of other folks were behind 2 and 3, though for 2 they removed a lot of the coolest stuff for whatever reason. It’s really cool and a really neat way to debug, though when we tested it internally, people didn’t like it for writing. This introduced a hard divide between read time and write time and not being able to fluidly transition between the two caused people to rate their qualitative experience with the system fairly low."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UA14TGLTC",
                    "U019PRL1BNU",
                    "US370TRJA"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1604095311.118500",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1604095705.000000"
        },
        "client_msg_id": "6d5ee93b-c48c-4613-85b6-0ce31b512c92",
        "text": "Another thing we ran into is that it ended up requiring a fair amount of manual gardening to make it useful and over time people seemed to spend _more_ of their effort on laying things out rather than getting better at it like we thought they would.\n\nThis is a beautiful looking implementation :slightly_smiling_face: To take it all the way, it’s worth thinking about how you’ll tackle the tragedy of the commons and fluidity problems. Find reasonable answers to those and you’ll have something really special!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2kNOk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another thing we ran into is that it ended up requiring a fair amount of manual gardening to make it useful and over time people seemed to spend "
                            },
                            {
                                "type": "text",
                                "text": "more",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of their effort on laying things out rather than getting better at it like we thought they would.\n\nThis is a beautiful looking implementation "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " To take it all the way, it’s worth thinking about how you’ll tackle the tragedy of the commons and fluidity problems. Find reasonable answers to those and you’ll have something really special!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "Super job, Paul! This made me really think that the abstraction level at which we usually think about “node-and-wire” programming (typically the AST level) might not be optimal for exploring codebases. Just sort of spewing my thoughts here, but perhaps it would be better to expose different representations at different “zoom levels”: for instance, if I zoomed into a file inside the code browser, it would turn into a graphical editor, but if I zoom out, I get a text representation. Or maybe it would be more reasonable to give the user a choice of which representation they wanted to see at a particular level of abstraction. It just seems like there is no “one size fits all” representation that can encompass all levels of abstraction.\n\nIt also made me think deeper about the notion of “incrementalism”, and how we might do well to embrace some of those ideas as a community: don’t get me wrong, there are some things that you can only do by taking a “greenfield” approach to development, but I think there is so much room for improving the status quo, that even “small” changes in representation with existing languages\/tools (in this case, JavaScript and the Monaco editor from VS Code) could have on the “near-term future of coding”.\n\nI think it would be really neat to explore breaking out the “show references” functionality into separate editor windows (or “blocks”) as well, something along the lines of what Dark has done in their editor  (image below).\n\nMaybe the “find references” command could draw temporary arrows to the files in the file explorer window, or highlight open windows that contain references to the item in question.\n\nFinally, I think this would be absolutely killer for doing collaborative code reviews\/pair programming. Stellar work!",
        "files": [
            {
                "id": "F01EF00GSBS",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UG0EL18H3",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PfflR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Super job, Paul! This made me really think that the abstraction level at which we usually think about “node-and-wire” programming (typically the AST level) might not be optimal for exploring codebases. Just sort of spewing my thoughts here, but perhaps it would be better to expose different representations at different “zoom levels”: for instance, if I zoomed into a file inside the code browser, it would turn into a graphical editor, but if I zoom out, I get a text representation. Or maybe it would be more reasonable to give the user a choice of which representation they wanted to see at a particular level of abstraction. It just seems like there is no “one size fits all” representation that can encompass all levels of abstraction.\n\nIt also made me think deeper about the notion of “incrementalism”, and how we might do well to embrace some of those ideas as a community: don’t get me wrong, there are some things that you can only do by taking a “greenfield” approach to development, but I think there is so much room for improving the status quo, that even “small” changes in representation with existing languages\/tools (in this case, JavaScript and the Monaco editor from VS Code) could have on the “near-term future of coding”.\n\nI think it would be really neat to explore breaking out the “show references” functionality into separate editor windows (or “blocks”) as well, something along the lines of what Dark has done in their editor  (image below).\n\nMaybe the “find references” command could draw temporary arrows to the files in the file explorer window, or highlight open windows that contain references to the item in question.\n\nFinally, I think this would be absolutely killer for doing collaborative code reviews\/pair programming. Stellar work!"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1604095598.118700",
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "US370TRJA"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U019PRL1BNU",
        "type": "message",
        "ts": "1604111641.119500",
        "client_msg_id": "d5d308ec-f20c-4347-a6a5-f701b7a0ff2a",
        "text": "Wow I’m blown away by the quality of responses. I’ve found the right place. Thank you all so much!\n\n<@U8A5MS6R1> drawing the path to the code line would be ideal. We’d have to listen to the scroll event but it might be doable. I’ll take a look at sourcetrail.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "748829849f84",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-10-10\/1444204670448_748829849f84c5e6d568_72.jpg",
            "first_name": "",
            "real_name": "Paul Shen",
            "display_name": "Paul Shen",
            "team": "T5TCAFTA9",
            "name": "paulshen0",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dd0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wow I’m blown away by the quality of responses. I’ve found the right place. Thank you all so much!\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " drawing the path to the code line would be ideal. We’d have to listen to the scroll event but it might be doable. I’ll take a look at sourcetrail."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U019PRL1BNU",
        "type": "message",
        "ts": "1604112041.119700",
        "edited": {
            "user": "U019PRL1BNU",
            "ts": "1604112119.000000"
        },
        "client_msg_id": "673828e1-1f08-4673-b2df-2b8be715ab05",
        "text": "<@UEBG0NPDK> I’ve been linked to code bubbles and debugger canvas so many times now. I think that’s great! The ideas clearly resonate with people and it’s something people want. All 3 products you linked to are packed with good ideas and I admire them all. (i don’t claim to be doing anything new)\n\nThat’s really good to know re mixed feedback. My current goal is to explore the best code reading experience (ala github). The write experience seems like it’d be a natural extension but I’m learning why files and text manipulation still reign supreme. We humans are so well-versed in it haha.\n\nI’d love to hear more about the “manual gardening” re debugger canvas. What did “getting better at it” mean in your head? Thanks for your advice!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "748829849f84",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-10-10\/1444204670448_748829849f84c5e6d568_72.jpg",
            "first_name": "",
            "real_name": "Paul Shen",
            "display_name": "Paul Shen",
            "team": "T5TCAFTA9",
            "name": "paulshen0",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fn4b",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": " I’ve been linked to code bubbles and debugger canvas so many times now. I think that’s great! The ideas clearly resonate with people and it’s something people want. All 3 products you linked to are packed with good ideas and I admire them all. (i don’t claim to be doing anything new)\n\nThat’s really good to know re mixed feedback. My current goal is to explore the best code reading experience (ala github). The write experience seems like it’d be a natural extension but I’m learning why files and text manipulation still reign supreme. We humans are so well-versed in it haha.\n\nI’d love to hear more about the “manual gardening” re debugger canvas. What did “getting better at it” mean in your head? Thanks for your advice!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U019PRL1BNU",
        "type": "message",
        "ts": "1604112722.120000",
        "client_msg_id": "2ecdfebf-e57b-4eee-a8af-3c6b0bc7fd61",
        "text": "<@UG0EL18H3> yeah! I love the idea of different lenses (e.g. zoom levels) on the same underlying. One thing I definitely want to explore is presenting the outline view somehow (high-level AST - e.g. functions, classes, etc.).\n\nI think your point of “incrementalism” is really important. When I hear “future of code” (or prompts like “what does coding look like in 10 years”), my mind jumps immediately to inventing PL and completely new tools. But you don’t need to convince me that if I tried to built an editor, even I wouldn’t end up using it. Actually another one of my projects was building something Dark-like (something I admire a lot) but with JS and monaco-editor panes on a canvas, very similar to the demo I linked to. Dark has so many good ideas and I love the exploration but I think it’s going to be hard to get people to learn a new language\/editor today. Honestly, the most “impactful” thing I could do is probably build a VSCode extension but I want the space to explore for now.\n\nThanks for the ideas and kind words! Imagine a Github browser and pull request UI that looks more like a canvas. That’s the direction I’m stumbling towards.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "748829849f84",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-10-10\/1444204670448_748829849f84c5e6d568_72.jpg",
            "first_name": "",
            "real_name": "Paul Shen",
            "display_name": "Paul Shen",
            "team": "T5TCAFTA9",
            "name": "paulshen0",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XLi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UG0EL18H3"
                            },
                            {
                                "type": "text",
                                "text": " yeah! I love the idea of different lenses (e.g. zoom levels) on the same underlying. One thing I definitely want to explore is presenting the outline view somehow (high-level AST - e.g. functions, classes, etc.).\n\nI think your point of “incrementalism” is really important. When I hear “future of code” (or prompts like “what does coding look like in 10 years”), my mind jumps immediately to inventing PL and completely new tools. But you don’t need to convince me that if I tried to built an editor, even I wouldn’t end up using it. Actually another one of my projects was building something Dark-like (something I admire a lot) but with JS and monaco-editor panes on a canvas, very similar to the demo I linked to. Dark has so many good ideas and I love the exploration but I think it’s going to be hard to get people to learn a new language\/editor today. Honestly, the most “impactful” thing I could do is probably build a VSCode extension but I want the space to explore for now.\n\nThanks for the ideas and kind words! Imagine a Github browser and pull request UI that looks more like a canvas. That’s the direction I’m stumbling towards."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UG0EL18H3",
                    "US370TRJA"
                ],
                "count": 2
            }
        ]
    },
    {
        "text": "my tabled hack of something Dark-like using JS + monaco",
        "files": [
            {
                "id": "F01E41XAJ3B",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "U019PRL1BNU",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7Ix7G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "my tabled hack of something Dark-like using JS + monaco"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1604113028.120200",
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU"
    },
    {
        "user": "UG0EL18H3",
        "type": "message",
        "ts": "1604119656.121400",
        "client_msg_id": "E7DCB894-D7A8-427D-B3BD-9F6F38563AA5",
        "text": "Take my money! :dollar::dollar::dollar:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "25cc47143833",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-08-01\/702360681283_25cc471438337c72e600_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Rabl",
            "display_name": "crabl",
            "team": "T5TCAFTA9",
            "name": "chris.rabl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IOLYT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Take my money! "
                            },
                            {
                                "type": "emoji",
                                "name": "dollar",
                                "unicode": "1f4b5"
                            },
                            {
                                "type": "emoji",
                                "name": "dollar",
                                "unicode": "1f4b5"
                            },
                            {
                                "type": "emoji",
                                "name": "dollar",
                                "unicode": "1f4b5"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]