[
    {
        "user": "U01DUNFS2N4",
        "type": "message",
        "ts": "1654605757.932489",
        "edited": {
            "user": "U01DUNFS2N4",
            "ts": "1654605790.000000"
        },
        "client_msg_id": "1ee61431-3bb4-4ae8-bd13-401081e91b47",
        "text": "A little late, but oh well. I think my deep goal is to make writing quality UI much easier. My thoughts are inherently visual, so I want all of my tools to be visual to help me think. That's only possible if the effort to write UI is greatly reduced, because I've only got so much time in a day.\n\nInteresting question. I hadn't thought about my goals in these terms before.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "487dc9587476",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-11-16\/1517848162945_487dc95874762ac0e044_72.jpg",
            "first_name": "Jarrett",
            "real_name": "Jarrett Atkinson",
            "display_name": "jatkins",
            "team": "T5TCAFTA9",
            "name": "jj_atkinson",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652941445.312379",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SLzIC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A little late, but oh well. I think my deep goal is to make writing quality UI much easier. My thoughts are inherently visual, so I want all of my tools to be visual to help me think. That's only possible if the effort to write UI is greatly reduced, because I've only got so much time in a day.\n\nInteresting question. I hadn't thought about my goals in these terms before."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03J1HP9C0G",
        "type": "message",
        "ts": "1654606915.995129",
        "client_msg_id": "82a170c2-3417-46d2-9b67-30ca8f1f6036",
        "text": "People here often talk about creating programming languages to make programming easier. Going one level of abstraction up. Does anyone work on making a way to create new programming languages easier?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "fd3b904fdc45",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-05-27\/3589814658547_fd3b904fdc456648ecb2_72.jpg",
            "first_name": "Václav",
            "real_name": "Václav Blažej",
            "display_name": "Václav Blažej",
            "team": "T5TCAFTA9",
            "name": "vaclavblazej",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654606915.995129",
        "reply_count": 10,
        "reply_users_count": 6,
        "latest_reply": "1654755891.210059",
        "reply_users": [
            "U03J1HP9C0G",
            "UAJKEBGP8",
            "U013ZLJARC7",
            "UGWUJUZHT",
            "U71PMQ1V0",
            "UDQBTJ211"
        ],
        "replies": [
            {
                "user": "U03J1HP9C0G",
                "ts": "1654606927.359069"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1654607229.432319"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1654611251.479949"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1654612286.533349"
            },
            {
                "user": "U71PMQ1V0",
                "ts": "1654613350.241989"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1654614248.004009"
            },
            {
                "user": "U03J1HP9C0G",
                "ts": "1654614528.238519"
            },
            {
                "user": "U03J1HP9C0G",
                "ts": "1654614539.431509"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1654617718.749729"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1654755891.210059"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XAJle",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "People here often talk about creating programming languages to make programming easier. Going one level of abstraction up. Does anyone work on making a way to create new programming languages easier?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03J1HP9C0G",
        "type": "message",
        "ts": "1654606927.359069",
        "client_msg_id": "ee16a2fb-2b8b-4d8f-a52e-3750c4ba25a2",
        "text": "Let me also bundle this up with: Are there any innovative tools which make creating new languages easier?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "fd3b904fdc45",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-05-27\/3589814658547_fd3b904fdc456648ecb2_72.jpg",
            "first_name": "Václav",
            "real_name": "Václav Blažej",
            "display_name": "Václav Blažej",
            "team": "T5TCAFTA9",
            "name": "vaclavblazej",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654606915.995129",
        "parent_user_id": "U03J1HP9C0G",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FCWT9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Let me also bundle this up with: Are there any innovative tools which make creating new languages easier?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1654607229.432319",
        "client_msg_id": "02afc713-fd40-4ece-bede-7e4010584c9b",
        "text": "there’s ohm\n\n• <https:\/\/github.com\/harc\/ohm>\n• <https:\/\/ohmjs.org\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654606915.995129",
        "parent_user_id": "U03J1HP9C0G",
        "attachments": [
            {
                "from_url": "https:\/\/ohmjs.org\/",
                "service_icon": "https:\/\/ohmjs.org\/img\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/ohmjs.org\/",
                "fallback": "Ohm: a user-friendly parsing toolkit for JavaScript and Typescript",
                "text": "Ohm is a parsing toolkit for JavaScript, consisting of a library and a domain-specific language. You can use it to parse custom file formats or quickly build parsers, interpreters, and compilers for programming languages.",
                "title": "Ohm: a user-friendly parsing toolkit for JavaScript and Typescript",
                "title_link": "https:\/\/ohmjs.org\/",
                "service_name": "ohmjs.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tq2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there’s ohm\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/github.com\/harc\/ohm"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "link",
                                        "url": "https:\/\/ohmjs.org\/"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT",
                    "UML4ZEKDK",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U03J1HP9C0G",
        "type": "message",
        "ts": "1654607247.848759",
        "client_msg_id": "e92ab7d6-2aa9-4a96-94c9-20f5dbbd7f31",
        "text": "Tied to the original topic and my answer about \"Universal communication\": I am also missing an easy way to work with simple data in most programming languages. Usually, you download a library which manages some conversion, but shouldn't this be built-in? As our abstractions get more abstract we need these atomic operations to move from instructions to wider area of operations.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "fd3b904fdc45",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-05-27\/3589814658547_fd3b904fdc456648ecb2_72.jpg",
            "first_name": "Václav",
            "real_name": "Václav Blažej",
            "display_name": "Václav Blažej",
            "team": "T5TCAFTA9",
            "name": "vaclavblazej",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1653835046.268739",
        "parent_user_id": "U03J1HP9C0G",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kre",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Tied to the original topic and my answer about \"Universal communication\": I am also missing an easy way to work with simple data in most programming languages. Usually, you download a library which manages some conversion, but shouldn't this be built-in? As our abstractions get more abstract we need these atomic operations to move from instructions to wider area of operations."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1654611251.479949",
        "client_msg_id": "a53b51bc-51d0-40b6-83ec-078289ab9b39",
        "text": "Yeah, that's one of the main ideas behind <https:\/\/en.wikipedia.org\/wiki\/Language-oriented_programming|Language-oriented Programming>. The best language in which to make other languages at the moment is that team's main research vehicle, <https:\/\/racket-lang.org|Racket>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654606915.995129",
        "parent_user_id": "U03J1HP9C0G",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gvv7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, that's one of the main ideas behind "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Language-oriented_programming",
                                "text": "Language-oriented Programming"
                            },
                            {
                                "type": "text",
                                "text": ". The best language in which to make other languages at the moment is that team's main research vehicle, "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/racket-lang.org",
                                "text": "Racket"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK",
                    "U03J1HP9C0G",
                    "U02E4DAQGSZ",
                    "UA14TGLTC",
                    "U014WA16VNJ"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1654612286.533349",
        "client_msg_id": "683ccd7d-72d3-40d4-8b3b-d49a9ee249be",
        "text": "The ability of PEG to specify matches of balanced brackets, allows one to think about languages differently, e.g. it is possible to imagine “language stacks” and “transpilers”.\n\nBelow, a simple grammar in Ohm-JS that skips over anything that isn’t a brace bracket...\n\n`main = matched main?`\n`matched =`\n  `| \"{\" main \"}\" -- nested`\n  `| anythingelse -- bottom`\n`anythingelse = ~\"{\" ~\"}\" any`",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654606915.995129",
        "parent_user_id": "U03J1HP9C0G",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HfOc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The ability of PEG to specify matches of balanced brackets, allows one to think about languages differently, e.g. it is possible to imagine “language stacks” and “transpilers”.\n\nBelow, a simple grammar in Ohm-JS that skips over anything that isn’t a brace bracket...\n\n"
                            },
                            {
                                "type": "text",
                                "text": "main = matched main?",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "matched =",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "  | \"{\" main \"}\" -- nested",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "  | anythingelse -- bottom",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "anythingelse = ~\"{\" ~\"}\" any",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U71PMQ1V0",
        "type": "message",
        "ts": "1654613350.241989",
        "client_msg_id": "3ff4cbc6-896c-4f7f-a9b6-4324d1ac35ef",
        "text": "Also <https:\/\/tratt.net\/laurie\/essays\/entries\/fast_enough_vms_in_fast_enough_time.html> and <https:\/\/www.graalvm.org\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "acf65c259768",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-09\/6320751143555_acf65c259768ce3a90a4_72.jpg",
            "first_name": "",
            "real_name": "Jamie Brandon",
            "display_name": "jamii",
            "team": "T5TCAFTA9",
            "name": "jamie",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654606915.995129",
        "parent_user_id": "U03J1HP9C0G",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q1qJz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/tratt.net\/laurie\/essays\/entries\/fast_enough_vms_in_fast_enough_time.html"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.graalvm.org\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1654614248.004009",
        "client_msg_id": "b783d0d1-67fa-48fb-a85a-3b066050817e",
        "text": "Also <https:\/\/www.jetbrains.com\/mps\/|https:\/\/www.jetbrains.com\/mps\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654606915.995129",
        "parent_user_id": "U03J1HP9C0G",
        "attachments": [
            {
                "from_url": "https:\/\/www.jetbrains.com\/mps\/",
                "image_url": "https:\/\/resources.jetbrains.com\/storage\/products\/mps\/img\/meta\/preview.png",
                "image_width": 400,
                "image_height": 250,
                "image_bytes": 101453,
                "service_icon": "https:\/\/www.jetbrains.com\/apple-touch-icon.png?r=1234",
                "id": 1,
                "original_url": "https:\/\/www.jetbrains.com\/mps\/",
                "fallback": "JetBrains: MPS: The Domain-Specific Language Creator by JetBrains",
                "text": "Use the MPS platform to create your own domain-specific language that speaks to your business needs.",
                "title": "MPS: The Domain-Specific Language Creator by JetBrains",
                "title_link": "https:\/\/www.jetbrains.com\/mps\/",
                "service_name": "JetBrains",
                "fields": [
                    {
                        "value": "Windows, macOS, Linux",
                        "title": "Platforms:",
                        "short": true
                    }
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3tS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.jetbrains.com\/mps\/",
                                "text": "https:\/\/www.jetbrains.com\/mps\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03J1HP9C0G",
        "type": "message",
        "ts": "1654614528.238519",
        "client_msg_id": "c6ababc4-1290-4427-9cea-d1cf59f8ce42",
        "text": "Thanks for many nice links (post more if possible). I wonder whether there is someone in this community who works on these or similar projects?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "fd3b904fdc45",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-05-27\/3589814658547_fd3b904fdc456648ecb2_72.jpg",
            "first_name": "Václav",
            "real_name": "Václav Blažej",
            "display_name": "Václav Blažej",
            "team": "T5TCAFTA9",
            "name": "vaclavblazej",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654606915.995129",
        "parent_user_id": "U03J1HP9C0G",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5JSnW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for many nice links (post more if possible). I wonder whether there is someone in this community who works on these or similar projects?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03J1HP9C0G",
        "type": "message",
        "ts": "1654614539.431509",
        "client_msg_id": "fa2ae4e0-0032-42fa-a489-a6e9c73fc8ed",
        "text": "Is there a way to make visual programming languages with any of these tools?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "fd3b904fdc45",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-05-27\/3589814658547_fd3b904fdc456648ecb2_72.jpg",
            "first_name": "Václav",
            "real_name": "Václav Blažej",
            "display_name": "Václav Blažej",
            "team": "T5TCAFTA9",
            "name": "vaclavblazej",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654606915.995129",
        "parent_user_id": "U03J1HP9C0G",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jXw9i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is there a way to make visual programming languages with any of these tools?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1654617718.749729",
        "client_msg_id": "d65c75f2-3087-403c-b842-cf61eae3494d",
        "text": "a) I build DaS (Diagrams as Syntax) languages using Ohm-JS + SWIPL (PROLOG). If I liked writing nested-loops and exhaustive search, I would skip PROLOG and just use JS\/Python\/whatever.\n\nb) I have very strong opinions about VPLs.  #1 is that I stay away from VPLs and go for the middle road - a hybrid of text+diagrams+overlapping (anti-grid-based languages, like just about all text-based languages).  SVG seems to have more than what is needed (rects, ellipses, lines, text, (x,y)).  #2 is that you need to think 0D+Simultaneity (AKA Concurrency (0D == zero dependency)) to draw sensible diagrams of programs.\n\nc) No, I don’t know of any IDE that makes VPL construction uncomplicated enough to use.  I roll my own.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654606915.995129",
        "parent_user_id": "U03J1HP9C0G",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5V9Jz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "a) I build DaS (Diagrams as Syntax) languages using Ohm-JS + SWIPL (PROLOG). If I liked writing nested-loops and exhaustive search, I would skip PROLOG and just use JS\/Python\/whatever.\n\nb) I have very strong opinions about VPLs.  #1 is that I stay away from VPLs and go for the middle road - a hybrid of text+diagrams+overlapping (anti-grid-based languages, like just about all text-based languages).  SVG seems to have more than what is needed (rects, ellipses, lines, text, (x,y)).  #2 is that you need to think 0D+Simultaneity (AKA Concurrency (0D == zero dependency)) to draw sensible diagrams of programs.\n\nc) No, I don’t know of any IDE that makes VPL construction uncomplicated enough to use.  I roll my own."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02PDVC9CNT",
        "type": "message",
        "ts": "1654624679.923069",
        "client_msg_id": "c9a2f6fa-0ab3-4dfb-bb5c-24536e282774",
        "text": "Listening back to old episodes, caught Jason Brennan talking about his work on Beach, and it got me wondering, is there any work in the world of notebook-esc environments that plays with the infinite absolutely spaced canvas concept we've seen so much of recently? Is there any merit to moving such a tool off the y axis? Been daydreaming about a spatial and federated tool somewhere between observable and obsidian",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "735e4c98d276",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-07\/2834416174224_735e4c98d276cb0b0122_72.jpg",
            "first_name": "yeT",
            "real_name": "yeT",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jacob.t.wright",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654624679.923069",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1654627370.096519",
        "reply_users": [
            "U016VUZGUUQ",
            "UAJKEBGP8"
        ],
        "replies": [
            {
                "user": "U016VUZGUUQ",
                "ts": "1654626727.886749"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1654627370.096519"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TXVip",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Listening back to old episodes, caught Jason Brennan talking about his work on Beach, and it got me wondering, is there any work in the world of notebook-esc environments that plays with the infinite absolutely spaced canvas concept we've seen so much of recently? Is there any merit to moving such a tool off the y axis? Been daydreaming about a spatial and federated tool somewhere between observable and obsidian"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1654626727.886749",
        "client_msg_id": "8560e0ea-2ed4-4075-9d26-c0d6afc96bbf",
        "text": "Consider the humble spreadsheet. :) My first thought was \"the y-axis sure is nice for showing dependency order, so you need to compensate for losing that\". In limited experience with IIRC Jupyter, I remember having to think a lot about cell dependencies and cache invalidation, which would have been prohibitive if the cells had been laid out in every direction. If all that stuff is automatic, then you can get away with making data flow less brutally visible.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654624679.923069",
        "parent_user_id": "U02PDVC9CNT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UwBh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Consider the humble spreadsheet. :) My first thought was \"the y-axis sure is nice for showing dependency order, so you need to compensate for losing that\". In limited experience with IIRC Jupyter, I remember having to think a lot about cell dependencies and cache invalidation, which would have been prohibitive if the cells had been laid out in every direction. If all that stuff is automatic, then you can get away with making data flow less brutally visible."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1654627370.096519",
        "client_msg_id": "5953d3d7-3e2c-4f3c-89fd-9db357462c7a",
        "text": "<http:\/\/natto.dev\/> kinda?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654624679.923069",
        "parent_user_id": "U02PDVC9CNT",
        "attachments": [
            {
                "from_url": "http:\/\/natto.dev\/",
                "image_url": "https:\/\/natto.dev\/twitter.png",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 25500,
                "service_icon": "https:\/\/natto.dev\/favicon.png",
                "id": 1,
                "original_url": "http:\/\/natto.dev\/",
                "fallback": "natto.dev - write JavaScript on a 2D canvas",
                "title": "natto.dev - write JavaScript on a 2D canvas",
                "title_link": "http:\/\/natto.dev\/",
                "service_name": "natto.dev"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7jFT5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/natto.dev\/"
                            },
                            {
                                "type": "text",
                                "text": " kinda?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "sunglasses",
                "users": [
                    "UA14TGLTC",
                    "U02PDVC9CNT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1654628604.485739",
        "client_msg_id": "622bc502-67cc-439b-88f3-c85b7c82e299",
        "text": "One knock against AOP in general is that it involves mutations to arbitrary points in a codebase, which is too much action at a distance particularly for large teams. It's just too easy to end up with spaghetti. However, I'm not sure anyone's tried using AOP just for checking without modifying the codebase as you suggest, <@UA14TGLTC> :thinking_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1653835046.268739",
        "parent_user_id": "U03J1HP9C0G",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Jnl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One knock against AOP in general is that it involves mutations to arbitrary points in a codebase, which is too much action at a distance particularly for large teams. It's just too easy to end up with spaghetti. However, I'm not sure anyone's tried using AOP just for checking without modifying the codebase as you suggest, "
                            },
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]