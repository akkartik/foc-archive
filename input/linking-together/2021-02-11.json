[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1613030466.106300",
        "client_msg_id": "47b98bbb-ae17-446a-b548-5b5de7b940a7",
        "text": "<@UCUSW7WVD> I think it's because libraries provide similar features in languages that people are otherwise more comfortable using.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1612950875.084700",
        "parent_user_id": "U013ZLJARC7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vjYMj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " I think it's because libraries provide similar features in languages that people are otherwise more comfortable using."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1613035064.107200",
        "client_msg_id": "30b438df-c369-4fac-ad72-7439ae7e575e",
        "text": "Libraries can also fit more easily into existing systems.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1612950875.084700",
        "parent_user_id": "U013ZLJARC7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lh\/TZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Libraries can also fit more easily into existing systems."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1613047245.107700",
        "client_msg_id": "86ad7a60-ab6d-4678-aa1f-070ab89948e0",
        "text": "The real point of the thing is how few moving parts there are if one uses the right primitives. There's no reason a library or DSL couldn't make it this easy in another language. (Though likely with longer names :joy_cat:.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1612950875.084700",
        "parent_user_id": "U013ZLJARC7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9z\/u\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The real point of the thing is how few moving parts there are if one uses the right primitives. There's no reason a library or DSL couldn't make it this easy in another language. (Though likely with longer names "
                            },
                            {
                                "type": "emoji",
                                "name": "joy_cat",
                                "unicode": "1f639"
                            },
                            {
                                "type": "text",
                                "text": ".)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UU509GSBU",
        "type": "message",
        "ts": "1613051531.108300",
        "client_msg_id": "7178477d-3df3-4f8a-b6ab-1882c655ac83",
        "text": "other cofounder here, I am also in the FoC community but a bit less active than <@UUB7RA7PF> - thank you all for your support and linking the post here :slightly_smiling_face: happy to get your feedback and answer any questions",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a9b0410662ae",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-26\/957013235346_a9b0410662aec0ac84bc_72.jpg",
            "first_name": "",
            "real_name": "Matija Sosic",
            "display_name": "Matija Sosic",
            "team": "T5TCAFTA9",
            "name": "matija.sosic",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1612994537.098500",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1cpV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "other cofounder here, I am also in the FoC community but a bit less active than "
                            },
                            {
                                "type": "user",
                                "user_id": "UUB7RA7PF"
                            },
                            {
                                "type": "text",
                                "text": " - thank you all for your support and linking the post here "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " happy to get your feedback and answer any questions"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1613070905.109000",
        "client_msg_id": "086d6e96-c67a-4d4d-adb6-460b01e0f360",
        "text": "this was so refreshing to read: <https:\/\/litestream.io\/blog\/why-i-built-litestream\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "reply_count": 44,
        "reply_users_count": 6,
        "latest_reply": "1613216003.136800",
        "reply_users": [
            "UEBG0NPDK",
            "UAJKEBGP8",
            "U01FAFPDFL4",
            "U01661S9F34",
            "U01KZQEQVUP",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UEBG0NPDK",
                "ts": "1613072679.109800"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1613074498.110100"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1613074538.110300"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1613074561.110500"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1613074580.110700"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1613074596.110900"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1613074615.111200"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613074681.111500"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1613074684.111700"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1613074699.111900"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1613074748.112100"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1613074766.112300"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613075020.112700"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613075104.112900"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613075137.113100"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613075152.113300"
            },
            {
                "user": "U01FAFPDFL4",
                "ts": "1613075841.118500"
            },
            {
                "user": "U01FAFPDFL4",
                "ts": "1613076006.121400"
            },
            {
                "user": "U01661S9F34",
                "ts": "1613076711.121700"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1613076998.122100"
            },
            {
                "user": "U01661S9F34",
                "ts": "1613082733.122700"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613082811.122900"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613083084.123100"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613083115.123300"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613083254.123500"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613083381.123900"
            },
            {
                "user": "U01661S9F34",
                "ts": "1613083710.124100"
            },
            {
                "user": "U01661S9F34",
                "ts": "1613083731.124300"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613083811.124700"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613083910.124900"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613083915.125100"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613083991.125300"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613084114.125500"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613084168.125700"
            },
            {
                "user": "U01661S9F34",
                "ts": "1613084279.125900"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613084363.126100"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613085090.126600"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613085146.126800"
            },
            {
                "user": "U01661S9F34",
                "ts": "1613085548.127100"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613085768.127600"
            },
            {
                "user": "UEBG0NPDK",
                "ts": "1613085802.127800"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1613088458.128200"
            },
            {
                "user": "U01KZQEQVUP",
                "ts": "1613212519.135900"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1613216003.136800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "Litestream",
                "title": "Why I Built Litestream",
                "title_link": "https:\/\/litestream.io\/blog\/why-i-built-litestream\/",
                "text": "Despite an exponential increase in computing power, our applications require more machines than ever because of architectural decisions made 25 years ago. You can eliminate much of your complexity and cost by using SQLite &amp; Litestream for your production applications.",
                "fallback": "Litestream: Why I Built Litestream",
                "image_url": "https:\/\/litestream.io\/images\/twitter-image.png",
                "ts": 1612915200,
                "from_url": "https:\/\/litestream.io\/blog\/why-i-built-litestream\/",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 245353,
                "service_icon": "https:\/\/litestream.io\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/litestream.io\/blog\/why-i-built-litestream\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wmj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this was so refreshing to read: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/litestream.io\/blog\/why-i-built-litestream\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1613071002.109200",
        "client_msg_id": "594ca3ab-594b-4c37-9910-bbaffa2e05b6",
        "text": "“I have no idea how to prove it, I just observed that it works”",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613004213.104400",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eg9wO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "“I have no idea how to prove it, I just observed that it works”"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1613071004.109400",
        "client_msg_id": "9a881ff4-0c8f-40c3-a18c-afdd2b318456",
        "text": "love it!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613004213.104400",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iq8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "love it!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1613071014.109600",
        "client_msg_id": "8cb6d367-575e-4829-9f0d-87f2267bd788",
        "text": "intuition first, hardened proof second",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613004213.104400",
        "parent_user_id": "UHWC9PXBL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Otur",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "intuition first, hardened proof second"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613072679.109800",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1613073524.000000"
        },
        "client_msg_id": "503b552b-9026-4e32-8b6d-fcc797890c7b",
        "text": "This echos my philosophy as well - almost no one is building a system that really requires more than one machine. The belief that we are has caused us to add so much incidental cruft that if you use industry best practices, you actually _do_ need multiple machines. Taking an extreme example, the entire write load of twitter is only ~6k tweets\/s, which can easily fit on a single machine. As another, there’s a great paper from the hyper folks that showed you could serve <http:\/\/www.vldb.org\/pvldb\/vol10\/p1921-schuele.pdf|all of the queries to wikipedia from a single instance>. If you use them well, computers are insanely fast. The problem is just that we use them really poorly and because of the incentives around software, we’re more likely to go with our first poor solution to a problem than taking the time to come to a good one. This is how we ended up with things like Hadoop which are millions of lines of code to run 100+ node clusters that <https:\/\/blog.acolyer.org\/2015\/06\/05\/scalability-but-at-what-cost\/|can’t beat a laptop>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lZK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This echos my philosophy as well - almost no one is building a system that really requires more than one machine. The belief that we are has caused us to add so much incidental cruft that if you use industry best practices, you actually "
                            },
                            {
                                "type": "text",
                                "text": "do",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " need multiple machines. Taking an extreme example, the entire write load of twitter is only ~6k tweets\/s, which can easily fit on a single machine. As another, there’s a great paper from the hyper folks that showed you could serve "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.vldb.org\/pvldb\/vol10\/p1921-schuele.pdf",
                                "text": "all of the queries to wikipedia from a single instance"
                            },
                            {
                                "type": "text",
                                "text": ". If you use them well, computers are insanely fast. The problem is just that we use them really poorly and because of the incentives around software, we’re more likely to go with our first poor solution to a problem than taking the time to come to a good one. This is how we ended up with things like Hadoop which are millions of lines of code to run 100+ node clusters that "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/blog.acolyer.org\/2015\/06\/05\/scalability-but-at-what-cost\/",
                                "text": "can’t beat a laptop"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U5STGTB3J",
                    "U01FAFPDFL4",
                    "UHWC9PXBL",
                    "UPD5QQW81",
                    "U013ZLJARC7",
                    "UML4ZEKDK",
                    "UA14TGLTC",
                    "UFEQUBNNT"
                ],
                "count": 8
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1613074498.110100",
        "client_msg_id": "5d183e69-e010-4306-aca8-c91280de39f4",
        "text": "*oh boy, this hits ^* ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "br6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh boy, this hits ^ ",
                                "style": {
                                    "bold": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1613074538.110300",
        "client_msg_id": "924639d0-e6c1-46a8-8d76-3c167aec7333",
        "text": "yeah theres a lot to be said here… I think the move fast \/ startup mindset of building “just enough” software quickly \/ inefficiently until the next set of scale hits (and new set of engineers can wrangle the PGbouncer ) has been the modus operandi",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qwqKx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah theres a lot to be said here… I think the move fast \/ startup mindset of building “just enough” software quickly \/ inefficiently until the next set of scale hits (and new set of engineers can wrangle the PGbouncer ) has been the modus operandi"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1613074561.110500",
        "client_msg_id": "9715052b-ed6a-411b-b316-67ff2319ada2",
        "text": "the counter to this thinking is Jonathan Blow (and others like ALan Kay ofc).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0l=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the counter to this thinking is Jonathan Blow (and others like ALan Kay ofc)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1613074580.110700",
        "edited": {
            "user": "UAJKEBGP8",
            "ts": "1613074800.000000"
        },
        "client_msg_id": "fada6e2d-b4d6-453c-a748-6bec91983ff3",
        "text": "Crave Cookie runs on Crystal + sqlite, &lt;$300 a month: <https:\/\/www.indiehackers.com\/podcast\/166-sam-eaton-of-crave-cookie>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9N3e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Crave Cookie runs on Crystal + sqlite, <$300 a month: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.indiehackers.com\/podcast\/166-sam-eaton-of-crave-cookie"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1613074596.110900",
        "client_msg_id": "9c98ae1e-f4f3-4efa-a6ce-62b41ebea79c",
        "text": "but this requires a slower, artisan attitude. Which is unfortunate…",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FgUKP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but this requires a slower, artisan attitude. Which is unfortunate…"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1613074615.111200",
        "client_msg_id": "ff8d155f-d1a1-4a90-b794-76f5677310a5",
        "text": "I’m more on the data science side of things, and the layers of abstraction I keep encountering there is absolutely bonkers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d2yL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m more on the data science side of things, and the layers of abstraction I keep encountering there is absolutely bonkers."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613074681.111500",
        "client_msg_id": "0412dd1f-25dc-4c3a-a53a-d80322ac2694",
        "text": "Yeah, the problem is that “fixing” this would require a whole lot of unlearning and re-education, which just isn’t likely to happen",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k4ZQL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, the problem is that “fixing” this would require a whole lot of unlearning and re-education, which just isn’t likely to happen"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1613074684.111700",
        "client_msg_id": "e4a04897-9a3b-44dd-a9ff-0d837f89000f",
        "text": "TL;DR my take is that systems software engineering is just software engineering turned into risk management",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/kEv9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "TL;DR my take is that systems software engineering is just software engineering turned into risk management"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1613074699.111900",
        "client_msg_id": "2288a447-4ad2-4486-ae7a-fdb031065e37",
        "text": "yup",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hAD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yup"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1613074748.112100",
        "client_msg_id": "a7642ca7-9df3-4f18-b1b0-d770d76f1982",
        "text": "ultimately, new inventions tailored to new use cases are probably the only way these types of things go away. E.g. you can’t build “the next Google” by replicating what Google does, but worse. You have to build the thing that replaces the need for <http:\/\/Google.com|Google.com> with a different solution",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yDwxI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ultimately, new inventions tailored to new use cases are probably the only way these types of things go away. E.g. you can’t build “the next Google” by replicating what Google does, but worse. You have to build the thing that replaces the need for "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/Google.com",
                                "text": "Google.com"
                            },
                            {
                                "type": "text",
                                "text": " with a different solution"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1613074766.112300",
        "client_msg_id": "910a82bf-9742-4503-9fe6-06109e4e9dbd",
        "text": "in many ways, true personal computing inventions could reduce the need for all this systems complexity (over time)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5Yn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "in many ways, true personal computing inventions could reduce the need for all this systems complexity (over time)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613075020.112700",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1613075378.000000"
        },
        "client_msg_id": "c3ca0c9b-f535-4169-9524-f1837fdb6569",
        "text": "My hope is to flip the problem on its head and show that part of the problem is we didn’t actually go high level enough. Languages like python still let you specify too many details and those details are what prevent us from creating compilers that output extremely high performance programs by default. We can’t expect everyone to magically become great systems programmers, but giving them tools where a single integer add takes ~30 instructions is hell of a handicap to start with.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qRSc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My hope is to flip the problem on its head and show that part of the problem is we didn’t actually go high level enough. Languages like python still let you specify too many details and those details are what prevent us from creating compilers that output extremely high performance programs by default. We can’t expect everyone to magically become great systems programmers, but giving them tools where a single integer add takes ~30 instructions is hell of a handicap to start with."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U016VUZGUUQ",
                    "UHWC9PXBL",
                    "UCGAK10LS",
                    "U013ZLJARC7",
                    "UA14TGLTC"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613075104.112900",
        "client_msg_id": "da3f764a-322c-4806-abd9-78685303c51f",
        "text": "Chris Lattner’s (LLVM, Swift) thesis actually talks a bit about this and his attempt to try and create a layout aware compiler",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fm6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Chris Lattner’s (LLVM, Swift) thesis actually talks a bit about this and his attempt to try and create a layout aware compiler"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613075137.113100",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1613075470.000000"
        },
        "client_msg_id": "4af3d280-930b-4871-9cc3-ae2a19dd6b69",
        "text": "rather than trying to convince anyone to unlearn stuff though, something like better compilers seems like a much more likely path to success",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "j21L2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "rather than trying to convince anyone to unlearn stuff though, something like better compilers seems like a much more likely path to success"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613075152.113300",
        "client_msg_id": "acf2d087-38ee-4343-9cf0-34b7daf2a01f",
        "text": "it has to just be the default somehow",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ybO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it has to just be the default somehow"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01FAFPDFL4",
        "type": "message",
        "ts": "1613075841.118500",
        "client_msg_id": "BBC31952-98CB-4D03-AB77-56DF0B19A88E",
        "text": "Well put <@UEBG0NPDK>  <@UAJKEBGP8>. I think this is a general problem of software development, not just “systems engineering”. Too much focus on trends \/ hypes \/ frameworks, which causes overcomplicated solutions for even the simplest cases",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a863c7a92962",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-01-31\/3025191075606_a863c7a92962a53b14dd_72.jpg",
            "first_name": "Yousef",
            "real_name": "Yousef El-Dardiry",
            "display_name": "Yousef El-Dardiry",
            "team": "T5TCAFTA9",
            "name": "yousefdardiry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vox7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well put "
                            },
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": "  "
                            },
                            {
                                "type": "user",
                                "user_id": "UAJKEBGP8"
                            },
                            {
                                "type": "text",
                                "text": ". I think this is a general problem of software development, not just “systems engineering”. Too much focus on trends \/ hypes \/ frameworks, which causes overcomplicated solutions for even the simplest cases"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01FAFPDFL4",
        "type": "message",
        "ts": "1613076006.121400",
        "client_msg_id": "B723B9A5-CD70-4A8B-B61A-3886CC7E9812",
        "text": "Thinking out loud: A higher level language would be a solution, but should probably work across the stack in order to really reduce complexity of entire applications",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a863c7a92962",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-01-31\/3025191075606_a863c7a92962a53b14dd_72.jpg",
            "first_name": "Yousef",
            "real_name": "Yousef El-Dardiry",
            "display_name": "Yousef El-Dardiry",
            "team": "T5TCAFTA9",
            "name": "yousefdardiry",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fxg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thinking out loud: A higher level language would be a solution, but should probably work across the stack in order to really reduce complexity of entire applications"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1613076711.121700",
        "edited": {
            "user": "U01661S9F34",
            "ts": "1613076743.000000"
        },
        "client_msg_id": "422858db-6da0-44dc-8eb6-4dc6cc9f8661",
        "text": "Fun related anecdote, the, original NASDAQ system ran on a single machine (using Java no less)! <https:\/\/signalsandthreads.com\/multicast-and-the-markets\/#2923>\nIt actually made things a lot easier for making sure transactions were correctly synchronized. Then you just had to make sure the network routed things well.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MZkG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Fun related anecdote, the, original NASDAQ system ran on a single machine (using Java no less)! "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/signalsandthreads.com\/multicast-and-the-markets\/#2923"
                            },
                            {
                                "type": "text",
                                "text": "\nIt actually made things a lot easier for making sure transactions were correctly synchronized. Then you just had to make sure the network routed things well."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "UAJKEBGP8",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1613076998.122100",
        "client_msg_id": "770a843a-69db-487d-8e07-3f7196922839",
        "text": "<@U01FAFPDFL4> yeah, I think the key really is having system level understand-ability. Even if a language was higher level but the abstractions it was built on are leaky \/ shaky, you’re in for trouble. Arguably Ruby \/ Python are higher level in some specific ways but systems understanding is poorer (hence the need for systems engineering \/ risk management \/ server-wrangling)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wy6Z6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01FAFPDFL4"
                            },
                            {
                                "type": "text",
                                "text": " yeah, I think the key really is having system level understand-ability. Even if a language was higher level but the abstractions it was built on are leaky \/ shaky, you’re in for trouble. Arguably Ruby \/ Python are higher level in some specific ways but systems understanding is poorer (hence the need for systems engineering \/ risk management \/ server-wrangling)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UPVBV34EL",
        "type": "message",
        "ts": "1613078478.122600",
        "client_msg_id": "0480fbb5-6d2a-4338-ab5b-e2933856ab1e",
        "text": "Open Problems in Communication and Computation [pdf] - <https:\/\/raganwald.com\/assets\/fractran\/open-problems-in-communication-and-computation-1987.pdf|https:\/\/raganwald.com\/assets\/fractran\/open-problems-in-communication-and-computation-1987.pdf>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "259a1e56ad2e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/811814014976_259a1e56ad2e11fe3d56_72.jpg",
            "first_name": "",
            "real_name": "Shubhadeep Roychowdhury",
            "display_name": "Shubhadeep Roychowdhury",
            "team": "T5TCAFTA9",
            "name": "shubhadeeproychowdhur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613078478.122600",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1613132344.130500",
        "reply_users": [
            "UPVBV34EL"
        ],
        "replies": [
            {
                "user": "UPVBV34EL",
                "ts": "1613132344.130500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Pxrcn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Open Problems in Communication and Computation [pdf] - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/raganwald.com\/assets\/fractran\/open-problems-in-communication-and-computation-1987.pdf",
                                "text": "https:\/\/raganwald.com\/assets\/fractran\/open-problems-in-communication-and-computation-1987.pdf"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1613082733.122700",
        "client_msg_id": "3b169819-d95c-488c-979f-bbd5a8d9828e",
        "text": "<@UEBG0NPDK>\n&gt; My hope is to flip the problem on its head and show that part of the problem is we didn’t actually go high level enough. Languages like python still let you specify too many details and those details are what prevent us from creating compilers that output extremely high performance programs by default.\nThis reminds me of the Haskell ethos a bit?\nA language designed to describe pure computation at an extremely high level, then let the compiler figure out efficient ways to run those computations. The language is so high level that it didn't support the very concept of side effects (causing them to invent\/discover the monad...)\n\nThe result is that the GHC compiler truly is a marvel of modern engineering. But (devils advocate time), It took 30 years of the most advanced CS research to get here, and it still has extremely unpredictable performance gotchas in some places.\n\nMaybe it's because I've been jaded by our current world, but I can't see \"higher level\" as a solution.\n\nMainly because \"creating compilers that output extremely high performance programs by default\" is actually a *really* hard problem for the general case. Part of the problem being: there is no single _general case._ \n\n<@UAJKEBGP8> makes the point, a higher level language often results in poorer systems understanding, not greater. Or to put it another way, all abstractions are leaky eventually... How do you handle it when the leaks happen?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RTa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEBG0NPDK"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My hope is to flip the problem on its head and show that part of the problem is we didn’t actually go high level enough. Languages like python still let you specify too many details and those details are what prevent us from creating compilers that output extremely high performance programs by default."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This reminds me of the Haskell ethos a bit?\nA language designed to describe pure computation at an extremely high level, then let the compiler figure out efficient ways to run those computations. The language is so high level that it didn't support the very concept of side effects (causing them to invent\/discover the monad...)\n\nThe result is that the GHC compiler truly is a marvel of modern engineering. But (devils advocate time), It took 30 years of the most advanced CS research to get here, and it still has extremely unpredictable performance gotchas in some places.\n\nMaybe it's because I've been jaded by our current world, but I can't see \"higher level\" as a solution.\n\nMainly because \"creating compilers that output extremely high performance programs by default\" is actually a "
                            },
                            {
                                "type": "text",
                                "text": "really",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " hard problem for the general case. Part of the problem being: there is no single "
                            },
                            {
                                "type": "text",
                                "text": "general case. ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UAJKEBGP8"
                            },
                            {
                                "type": "text",
                                "text": " makes the point, a higher level language often results in poorer systems understanding, not greater. Or to put it another way, all abstractions are leaky eventually... How do you handle it when the leaks happen?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613082811.122900",
        "client_msg_id": "d09711c3-8de7-48dd-a1bd-23ef088e5da8",
        "text": "Haskell focused much more on things that are counter to what would make something understandable and fast, e.g. laziness.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "28jRi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Haskell focused much more on things that are counter to what would make something understandable and fast, e.g. laziness."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "open_mouth",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613083084.123100",
        "client_msg_id": "f1e1c4cf-3563-4e8a-a5f0-dbb2621f9756",
        "text": "There are a handful of patterns we know to have very good performance by default, the question is can we you create a language that can be compiled to those patterns and whose idioms feel natural to the user, such that you’re not constantly trying to go around them (side effects in haskell being a good example).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qnXl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are a handful of patterns we know to have very good performance by default, the question is can we you create a language that can be compiled to those patterns and whose idioms feel natural to the user, such that you’re not constantly trying to go around them (side effects in haskell being a good example)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613083115.123300",
        "client_msg_id": "5c5800d7-f0fd-4ac9-8e98-4ef689cef61b",
        "text": "Another approach is to separate the specification from the layout ala relational DB world.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8\/wE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another approach is to separate the specification from the layout ala relational DB world."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613083254.123500",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1613083270.000000"
        },
        "client_msg_id": "03f40529-0d8f-436b-a919-8c645181eba5",
        "text": "the logic of a program doesn’t _have_ to bake in access paths, that’s just an artifact of the way our languages evolved. If we didn’t have pointers, arrays, etc, we could have the same kind of logical\/physical independence.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mBMc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the logic of a program doesn’t "
                            },
                            {
                                "type": "text",
                                "text": "have",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to bake in access paths, that’s just an artifact of the way our languages evolved. If we didn’t have pointers, arrays, etc, we could have the same kind of logical\/physical independence."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCGAK10LS"
                ],
                "count": 1
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UFEQUBNNT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613083381.123900",
        "client_msg_id": "5cfb9ab7-3f83-43a6-9e63-2c40e8b62fd5",
        "text": "A slightly less ambitious version of something like this is the DOTS effort in Unity, where following a relatively small set of conventions allows them to employ a specialized compiler to make your games _much_ faster than what they were on the traditional stack.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Heu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A slightly less ambitious version of something like this is the DOTS effort in Unity, where following a relatively small set of conventions allows them to employ a specialized compiler to make your games "
                            },
                            {
                                "type": "text",
                                "text": "much",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " faster than what they were on the traditional stack."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1613083710.124100",
        "client_msg_id": "d951f51a-a728-4e31-bfcb-938e2014a2e1",
        "text": "First, I have to *fan boy* out a little. I followed Eve for a long time, and I'm a fan of your work. :smile: Thank you. It's an honor to argue on the internet with you :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hImY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "First, I have to "
                            },
                            {
                                "type": "text",
                                "text": "fan boy",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " out a little. I followed Eve for a long time, and I'm a fan of your work. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " Thank you. It's an honor to argue on the internet with you "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UEBG0NPDK"
                ],
                "count": 1
            },
            {
                "name": "wave",
                "users": [
                    "UEBG0NPDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1613083731.124300",
        "client_msg_id": "69d23e5d-d364-456f-b1f2-ac844539f9a9",
        "text": "ok back on topic:\nSIMD intrinsics \/ vectorization is another low level example of this sort of thing.\nI think it works great when the scope is limited.\nThat's why I'm a fan of the \"DSL\" approach. Many tiny languages that are all good at different things but have a way to communicate.\nI don't want a swiss army knife, I want a tool box.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/7eE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ok back on topic:\nSIMD intrinsics \/ vectorization is another low level example of this sort of thing.\nI think it works great when the scope is limited.\nThat's why I'm a fan of the \"DSL\" approach. Many tiny languages that are all good at different things but have a way to communicate.\nI don't want a swiss army knife, I want a tool box."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613083811.124700",
        "client_msg_id": "fea45d44-a2f4-4e2d-9747-12896e76a87b",
        "text": "SIMD is actually a great example - it is _exceptionally_ difficult to automatically vectorize because the semantics of most languages force your layout to be exactly as you described it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k4NG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "SIMD is actually a great example - it is "
                            },
                            {
                                "type": "text",
                                "text": "exceptionally",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " difficult to automatically vectorize because the semantics of most languages force your layout to be exactly as you described it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613083910.124900",
        "client_msg_id": "dff14d48-a1ed-4b5d-a558-a4774bd04879",
        "text": "Imagine for a moment you had a compiler that could make layout choices based on the way data is actually used. E.g. in the case of something like a physics simulation where you’re constantly doing math over a series of objects with x, y, vx, vy, we could choose to store those as x[], y[], vx[], vy[]",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b4d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Imagine for a moment you had a compiler that could make layout choices based on the way data is actually used. E.g. in the case of something like a physics simulation where you’re constantly doing math over a series of objects with x, y, vx, vy, we could choose to store those as x[], y[], vx[], vy[]"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613083915.125100",
        "client_msg_id": "bfad8411-a7e7-4037-940b-aa4244f93260",
        "text": "now vectorization is trivial",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ejgaV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "now vectorization is trivial"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613083991.125300",
        "client_msg_id": "18e37673-1036-4654-9ffb-a482ddb58a8f",
        "text": "(the reality of something like that is actually even more interesting, to go as fast you possibly could, you’d actually want to tile them as something like xxxx,yyyy,vxvxvxvx,vyvyvy for better cache utilization)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VKmL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(the reality of something like that is actually even more interesting, to go as fast you possibly could, you’d actually want to tile them as something like xxxx,yyyy,vxvxvxvx,vyvyvy for better cache utilization)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613084114.125500",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1613084478.000000"
        },
        "client_msg_id": "97bf3f97-8496-4873-8e5f-78d890132b4c",
        "text": "doing that everywhere would be nuts, it’s so much incidental bookkeeping that no one in their right mind would do that transformation across their whole system and our compilers have their hands tied because layout is explicitly part of the semantics of systems languages.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UQ2a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "doing that everywhere would be nuts, it’s so much incidental bookkeeping that no one in their right mind would do that transformation across their whole system and our compilers have their hands tied because layout is explicitly part of the semantics of systems languages."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613084168.125700",
        "client_msg_id": "235ce219-4ba6-48b3-9c64-16d6cd4f4194",
        "text": "ideally you’d want something where you can mostly leave layout to the compiler, but provide a separate explicit specification of it if you really need to. (e.g. where layout has semantic meaning, like a tcp packet)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8Nw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ideally you’d want something where you can mostly leave layout to the compiler, but provide a separate explicit specification of it if you really need to. (e.g. where layout has semantic meaning, like a tcp packet)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1613084279.125900",
        "client_msg_id": "1d07176c-9446-40be-ae2d-ab4400bf1405",
        "text": "I see where you are heading. Something similar already happened for register allocation when we moved up from assembly language. You don't layout your own registers anymore. The compiler has fancy graph coloring algorithms that do it for you.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8XmZj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I see where you are heading. Something similar already happened for register allocation when we moved up from assembly language. You don't layout your own registers anymore. The compiler has fancy graph coloring algorithms that do it for you."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UEBG0NPDK",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613084363.126100",
        "edited": {
            "user": "UEBG0NPDK",
            "ts": "1613084400.000000"
        },
        "client_msg_id": "ebdd7bc9-d071-4d99-98c7-5a10dbb7e429",
        "text": "fwiw, I think the DSL approach is totally legit too and I would argue that there’s a pretty thin line between DSL and well architected library. The main issue you face going down the stable of languages route is that eventually you want to take something from your nice sound DSL and use it in your robot movement DSL - then what? How do you translate semantics across different languages? And can people internalize all the little differences between the two? Something like LISP is pretty close to that and the conventional wisdom quickly became “don’t use macros (the DSL creation feature) unless you absolutely have to.”",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O9c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "fwiw, I think the DSL approach is totally legit too and I would argue that there’s a pretty thin line between DSL and well architected library. The main issue you face going down the stable of languages route is that eventually you want to take something from your nice sound DSL and use it in your robot movement DSL - then what? How do you translate semantics across different languages? And can people internalize all the little differences between the two? Something like LISP is pretty close to that and the conventional wisdom quickly became “don’t use macros (the DSL creation feature) unless you absolutely have to.”"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613085090.126600",
        "client_msg_id": "2ff326d6-08ae-48e5-bcfb-a8d49236b3f8",
        "text": "Computational performance is such a fascinating topic to me and it took me a long time to realize that it’s actually much simpler in concept than I thought. To go fast, you just can’t do much stuff. All of those super fancy structures we’d read about in research papers? They were almost always slower because in the end the only cleverness that matters is the bit where the total amount of work you do is less. You were often saving 10% here and hiding an extra 20% over there without realizing it.\n\nWhat makes the problem so difficult is that we hide a bunch of the work under abstractions that go all the way down to the computer arch. Realistically you can never account for all of that, but you’d do better than 99% of the code that’s out there if you had something that could give you better layouts.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7x3h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Computational performance is such a fascinating topic to me and it took me a long time to realize that it’s actually much simpler in concept than I thought. To go fast, you just can’t do much stuff. All of those super fancy structures we’d read about in research papers? They were almost always slower because in the end the only cleverness that matters is the bit where the total amount of work you do is less. You were often saving 10% here and hiding an extra 20% over there without realizing it.\n\nWhat makes the problem so difficult is that we hide a bunch of the work under abstractions that go all the way down to the computer arch. Realistically you can never account for all of that, but you’d do better than 99% of the code that’s out there if you had something that could give you better layouts."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613085146.126800",
        "client_msg_id": "63a473a4-29b9-4f60-b677-02f9bba89806",
        "text": "so much of modern performance is bound to data movement",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tD\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "so much of modern performance is bound to data movement"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U01661S9F34",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1613085548.127100",
        "edited": {
            "user": "U01661S9F34",
            "ts": "1613085558.000000"
        },
        "client_msg_id": "64ed4641-a94b-44ed-97fe-7fea32922156",
        "text": "That's a totally fair criticism against the DSL \/ zoo of languages approach. I don't have a good answer there either, just a personal preference :slightly_smiling_face:\n\nI will point out that the \"smart compiler\" approach has limits as well.\n\n<https:\/\/www.swansontec.com\/sregisters.html|This article> is a bit specialized, but shows a practical example of automated where register allocation breaks down. Hardware engineers give preference to different registers for certain operations. It's hard to encode that into a modern compiler in an automatic way, t<https:\/\/signalsandthreads.com\/compiler-optimization\/#004327|hough both Intel and ARM spend a lot of time and money attempting to do so>. They often get \"good enough\" but it's never \"optimal\". Which is fine, but the problem is, because they are heuristic based, there is usually some input program that produces a terrible layout that completely destroys the performance, and then it's hard to fix without breaking other things.\n\nComputational performance is definitely a fascinating problem, with multiple approaches. :smile:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y1RqP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's a totally fair criticism against the DSL \/ zoo of languages approach. I don't have a good answer there either, just a personal preference "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI will point out that the \"smart compiler\" approach has limits as well.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.swansontec.com\/sregisters.html",
                                "text": "This article"
                            },
                            {
                                "type": "text",
                                "text": " is a bit specialized, but shows a practical example of automated where register allocation breaks down. Hardware engineers give preference to different registers for certain operations. It's hard to encode that into a modern compiler in an automatic way, t"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/signalsandthreads.com\/compiler-optimization\/#004327",
                                "text": "hough both Intel and ARM spend a lot of time and money attempting to do so"
                            },
                            {
                                "type": "text",
                                "text": ". They often get \"good enough\" but it's never \"optimal\". Which is fine, but the problem is, because they are heuristic based, there is usually some input program that produces a terrible layout that completely destroys the performance, and then it's hard to fix without breaking other things.\n\nComputational performance is definitely a fascinating problem, with multiple approaches. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613085768.127600",
        "client_msg_id": "ad670237-03dc-4ff3-8f66-0b0f53281388",
        "text": "Yeah, I think with something like layout it’s important that you can still manually specify it if you want. The problem with most automated approaches is that you can’t see into it or adjust it slightly without resorting to weird tricks like reordering completely unrelated things.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wWef=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I think with something like layout it’s important that you can still manually specify it if you want. The problem with most automated approaches is that you can’t see into it or adjust it slightly without resorting to weird tricks like reordering completely unrelated things."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "U01661S9F34",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UEBG0NPDK",
        "type": "message",
        "ts": "1613085802.127800",
        "client_msg_id": "ccf58069-6073-463a-9e0b-71403c9fdb75",
        "text": "This gets back to one of the biggest mental shifts we had after Eve which was that rather than focusing on simple, we should focus on “simple to understand”",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9e85c7bdd45b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-11-25\/487455880658_9e85c7bdd45b1d2d4721_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Granger",
            "display_name": "ibdknox",
            "team": "T5TCAFTA9",
            "name": "ibdknox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KGH\/Z",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This gets back to one of the biggest mental shifts we had after Eve which was that rather than focusing on simple, we should focus on “simple to understand”"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U01661S9F34",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1613088458.128200",
        "edited": {
            "user": "UAJKEBGP8",
            "ts": "1613088544.000000"
        },
        "client_msg_id": "3cde840c-a524-48ba-a17f-dac09ad139d2",
        "text": "&gt;  Computational performance is such a fascinating topic to me and it took me a long time to realize that it’s actually much simpler in concept than I thought. To go fast, you just can’t do much stuff. All of those super fancy structures we’d read about in research papers? They were almost always slower because in the end the only cleverness that matters is the bit where the total amount of work you do is less. You were often saving 10% here and hiding an extra 20% over there without realizing it.\nThis is a profound insight. I remember Jonthan Blow talking about just this in an older talk he gave: <https:\/\/youtu.be\/JjDsP5n2kSM?t=556> TL;DR lists are often fine! Start there, optimize only later \/ avoid premature optimization. *All data structures are fundamentally about optimization.*\n\nFun story of him looking at DOOM source code when it came out how he was chewed out by John Romero when Blow said asset loading was done sub-optimally (back when he wasn’t enlightened!)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613070905.109000",
        "parent_user_id": "UAJKEBGP8",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Jonathan Blow - How to program independent games -  CSUA Speech",
                "title_link": "https:\/\/youtu.be\/JjDsP5n2kSM?t=556",
                "author_name": "Alexandre Franco",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCALPBCryAkPlmukKlQcLG8w",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/JjDsP5n2kSM\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Jonathan Blow - How to program independent games -  CSUA Speech",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/JjDsP5n2kSM?start=556&feature=oembed&start=556&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/youtu.be\/JjDsP5n2kSM?t=556",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/JjDsP5n2kSM?t=556"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iPb\/",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " Computational performance is such a fascinating topic to me and it took me a long time to realize that it’s actually much simpler in concept than I thought. To go fast, you just can’t do much stuff. All of those super fancy structures we’d read about in research papers? They were almost always slower because in the end the only cleverness that matters is the bit where the total amount of work you do is less. You were often saving 10% here and hiding an extra 20% over there without realizing it."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThis is a profound insight. I remember Jonthan Blow talking about just this in an older talk he gave: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/JjDsP5n2kSM?t=556"
                            },
                            {
                                "type": "text",
                                "text": " TL;DR lists are often fine! Start there, optimize only later \/ avoid premature optimization. "
                            },
                            {
                                "type": "text",
                                "text": "All data structures are fundamentally about optimization.",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nFun story of him looking at DOOM source code when it came out how he was chewed out by John Romero when Blow said asset loading was done sub-optimally (back when he wasn’t enlightened!)"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]