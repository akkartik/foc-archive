[
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1555148603.000500",
        "client_msg_id": "06e0a387-28d3-4e8a-b4cc-1e7f48baca11",
        "text": "It is very hard to discuss the future without mentioning what exists. Also, most of the future has already been invented, and was merely ignored at the time. I can probably mention a dozen features that appeared previously, or at least were specified in detail, and somehow never got into the mainstream languages. It is highly arrogant to imagine for example that John Backus, Niklaus Wirth, and others didn't invent all sorts of things that are still considered \"future\". In fact you can make a stellar product just by going back at the past work that was glossed over for some reason. There are so many fascinating things in engineering history that have been forgotten or derailed. The Chrysler Turbine Car, Geopolymerization of stone of the Great Pyramid at Giza, Tensegrity, PROLOG deductive capabilities, etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1554741935.104600",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UQV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It is very hard to discuss the future without mentioning what exists. Also, most of the future has already been invented, and was merely ignored at the time. I can probably mention a dozen features that appeared previously, or at least were specified in detail, and somehow never got into the mainstream languages. It is highly arrogant to imagine for example that John Backus, Niklaus Wirth, and others didn't invent all sorts of things that are still considered \"future\". In fact you can make a stellar product just by going back at the past work that was glossed over for some reason. There are so many fascinating things in engineering history that have been forgotten or derailed. The Chrysler Turbine Car, Geopolymerization of stone of the Great Pyramid at Giza, Tensegrity, PROLOG deductive capabilities, etc."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1555151656.008000",
        "client_msg_id": "74CB86FC-458D-4B2E-98BB-CA031ADB8327",
        "text": "Past or Future, General or Random, it’s all just names for categories that mean different things for many of us. Sometimes some of us agree on the meaning, oftentimes most of us don’t. \n\nWhen I suggested to introduce a <#CEXED56UR|administrivia> channel, my main goal was to move those discussions out of the way, so we can focus on the interesting stuff. \n\nSometimes I think we’d be better off with just one channel, until the sub-communities and the volume here become so large that enough people can easily agree on what goes into a channel. \n\nAnd yep, this comment should probably be in <#CEXED56UR|administrivia>. Sorry.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1554741935.104600",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/wY\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Past or Future, General or Random, it’s all just names for categories that mean different things for many of us. Sometimes some of us agree on the meaning, oftentimes most of us don’t. \n\nWhen I suggested to introduce a "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CEXED56UR"
                            },
                            {
                                "type": "text",
                                "text": " channel, my main goal was to move those discussions out of the way, so we can focus on the interesting stuff. \n\nSometimes I think we’d be better off with just one channel, until the sub-communities and the volume here become so large that enough people can easily agree on what goes into a channel. \n\nAnd yep, this comment should probably be in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CEXED56UR"
                            },
                            {
                                "type": "text",
                                "text": ". Sorry."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "joy",
                "users": [
                    "U5TCAFTD3"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEGFXUK3M",
        "type": "message",
        "ts": "1555165858.009700",
        "client_msg_id": "c1a38411-5231-4f0a-bcbc-c6723a717d2e",
        "text": "Regarding \"the programming environment is primary, PL is secondary\" (see tweet): do you consider yourself to be working on an \"environment\" rather than \"just a language\"? If not, have you considered working on an environment? What is preventing a more balanced approach (assuming this is indeed a good idea)?\n<https:\/\/twitter.com\/stevekrouse\/status\/1115569100279951360>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bbd74d10a2d2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1108683470016_bbd74d10a2d2a0dbb156_72.jpg",
            "first_name": "Jack",
            "real_name": "Jack",
            "display_name": "jarm",
            "team": "T5TCAFTA9",
            "name": "jack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555165858.009700",
        "reply_count": 29,
        "reply_users_count": 13,
        "latest_reply": "1555832850.128800",
        "reply_users": [
            "UE1JQM9HQ",
            "UEGFXUK3M",
            "UFB8STN7K",
            "UAVCC2X70",
            "U8A5MS6R1",
            "U85HCL7JP",
            "UCUSW7WVD",
            "UEQ6M68H0",
            "UFXFB1RK8",
            "U5STGTB3J",
            "U79HM6726",
            "UE6EFEPTQ",
            "UAJ9DV971"
        ],
        "replies": [
            {
                "user": "UE1JQM9HQ",
                "ts": "1555166296.010000"
            },
            {
                "user": "UEGFXUK3M",
                "ts": "1555171747.010400"
            },
            {
                "user": "UFB8STN7K",
                "ts": "1555174925.010600"
            },
            {
                "user": "UEGFXUK3M",
                "ts": "1555178048.010800"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1555190403.011600"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1555190602.011800"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1555190736.012000"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1555195474.012700"
            },
            {
                "user": "U85HCL7JP",
                "ts": "1555202792.013100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1555206114.013300"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1555213375.013700"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1555218186.013900"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1555229117.014100"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1555230745.029800"
            },
            {
                "user": "UEGFXUK3M",
                "ts": "1555237814.030300"
            },
            {
                "user": "UEGFXUK3M",
                "ts": "1555237999.030500"
            },
            {
                "user": "U79HM6726",
                "ts": "1555241995.030800"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1555276394.032200"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1555277735.032500"
            },
            {
                "user": "UAJ9DV971",
                "ts": "1555319247.033500"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1555371798.034900"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1555373755.035200"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1555453882.036000"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1555465633.036500"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1555483261.037100"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1555485310.037300"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1555486219.047600"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1555631714.054700"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1555832850.128800"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1555832850.128800",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/stevekrouse|@stevekrouse>: Our language and priorities are in need of an update: the programming environment is primary, PL is secondary <https:\/\/twitter.com\/girba\/status\/1115567492053766144>",
                "ts": 1554807374,
                "author_name": "Steve Krouse",
                "author_link": "https:\/\/twitter.com\/stevekrouse\/status\/1115569100279951360",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/920962798590595074\/MHJaRnhd_normal.jpg",
                "author_subname": "@stevekrouse",
                "text": "Our language and priorities are in need of an update: the programming environment is primary, PL is secondary <https:\/\/twitter.com\/girba\/status\/1115567492053766144>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/stevekrouse\/status\/1115569100279951360",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/stevekrouse\/status\/1115569100279951360",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            },
            {
                "fallback": "<https:\/\/twitter.com\/girba|@girba>: <https:\/\/twitter.com\/stevekrouse|@stevekrouse> I do agree that the environment is essential and that the choice of it must be explicit! For too long, we  looked at software only through a language lens and treated the environment as a secondary concept.",
                "ts": 1554806991,
                "author_name": "Tudor Girba",
                "author_link": "https:\/\/twitter.com\/girba\/status\/1115567492053766144",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1370148445\/me-closeup-square_normal.jpg",
                "author_subname": "@girba",
                "text": "<https:\/\/twitter.com\/stevekrouse|@stevekrouse> I do agree that the environment is essential and that the choice of it must be explicit! For too long, we  looked at software only through a language lens and treated the environment as a secondary concept.",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/girba\/status\/1115567492053766144",
                "indent": true,
                "color": "32BBF3",
                "id": 2,
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jjHx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regarding \"the programming environment is primary, PL is secondary\" (see tweet): do you consider yourself to be working on an \"environment\" rather than \"just a language\"? If not, have you considered working on an environment? What is preventing a more balanced approach (assuming this is indeed a good idea)?\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/stevekrouse\/status\/1115569100279951360"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1555166296.010000",
        "edited": {
            "user": "UE1JQM9HQ",
            "ts": "1555166303.000000"
        },
        "client_msg_id": "1a1e0e68-6344-44d8-b29d-eb531991f17c",
        "text": "I am not sure I understand the question. I believe the environment is essential to software engineering. I also believe the environment must be seen as a language, rather than an agglomeration of features as it is mostly treated today. For example, Emacs goes in this direction.\n\nHere is a reasoning: When a person is presented with two presentations of the same content and they would yield different results in terms of the effectiveness of understanding that content, it should follow that the form is essential. It also follows that understandability is not only a property of content alone. That is the case with data. And as software is data, it is also the case with software.\n\nMoldable development starts from this assumption, and we validated it over the past ten years quite thoroughly (much of the validation is seen under humane assessment, which is a subset of moldable development).\n\nSo, I am saying that only focusing on language and code, we ignore an essential property and this will always provide a partial understanding of our domain. I maintain that the environment is an essential subject of study that we did not address systematically until now.\n\nDoes this address the question?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555165858.009700",
        "parent_user_id": "UEGFXUK3M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4\/v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am not sure I understand the question. I believe the environment is essential to software engineering. I also believe the environment must be seen as a language, rather than an agglomeration of features as it is mostly treated today. For example, Emacs goes in this direction.\n\nHere is a reasoning: When a person is presented with two presentations of the same content and they would yield different results in terms of the effectiveness of understanding that content, it should follow that the form is essential. It also follows that understandability is not only a property of content alone. That is the case with data. And as software is data, it is also the case with software.\n\nMoldable development starts from this assumption, and we validated it over the past ten years quite thoroughly (much of the validation is seen under humane assessment, which is a subset of moldable development).\n\nSo, I am saying that only focusing on language and code, we ignore an essential property and this will always provide a partial understanding of our domain. I maintain that the environment is an essential subject of study that we did not address systematically until now.\n\nDoes this address the question?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEGFXUK3M",
        "type": "message",
        "ts": "1555171747.010400",
        "client_msg_id": "bdc52de0-020d-4952-b21a-dd129e07c40e",
        "text": "I was struggling to word this question, but it seems that a lot of projects in this domain are indeed \"only focusing on language and code\" under the assumption that this is the most important place to focus or begin, in contrast to your twitter discussion with <@U5TCAFTD3>.\n\nSo, I wanted to informally survey the group to see to what extent this holds here. Perhaps the consensus is closer to what you say, that the distinction itself made in this way is perhaps not that accurate or useful ultimately. But I'm interested to know if there are particular reasons why prototypes in this domain tend to be language &amp; code focused, rather than starting from this apparently broader perspective of an \"environment\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bbd74d10a2d2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1108683470016_bbd74d10a2d2a0dbb156_72.jpg",
            "first_name": "Jack",
            "real_name": "Jack",
            "display_name": "jarm",
            "team": "T5TCAFTA9",
            "name": "jack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555165858.009700",
        "parent_user_id": "UEGFXUK3M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xnmK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I was struggling to word this question, but it seems that a lot of projects in this domain are indeed \"only focusing on language and code\" under the assumption that this is the most important place to focus or begin, in contrast to your twitter discussion with "
                            },
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nSo, I wanted to informally survey the group to see to what extent this holds here. Perhaps the consensus is closer to what you say, that the distinction itself made in this way is perhaps not that accurate or useful ultimately. But I'm interested to know if there are particular reasons why prototypes in this domain tend to be language & code focused, rather than starting from this apparently broader perspective of an \"environment\"."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1555174925.010600",
        "client_msg_id": "1bd5083c-1126-4b8b-bccf-9042ea72d04e",
        "text": "One hypothesis is barrier to entry. Creating a textual language is relatively easy (compiler\/interpreter is WAY simpler than GUI). A language has a significantly lower barrier to adoption than an environment. New environments are going to have complex interfaces with a lot of expectations (“what, no vim keybindings?“).\n\nIn that view, it’s not necessarily an indication of priorities---people may believe environments are ultimately the most useful thing to work on, but they work on languages because that’s more accessible to the individual programmer here (perhaps this would be different if teams were building these things than individuals?).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555165858.009700",
        "parent_user_id": "UEGFXUK3M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lDe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One hypothesis is barrier to entry. Creating a textual language is relatively easy (compiler\/interpreter is WAY simpler than GUI). A language has a significantly lower barrier to adoption than an environment. New environments are going to have complex interfaces with a lot of expectations (“what, no vim keybindings?“).\n\nIn that view, it’s not necessarily an indication of priorities---people may believe environments are ultimately the most useful thing to work on, but they work on languages because that’s more accessible to the individual programmer here (perhaps this would be different if teams were building these things than individuals?)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "U8A5MS6R1",
                    "U79HM6726"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UEGFXUK3M",
        "type": "message",
        "ts": "1555178048.010800",
        "client_msg_id": "14e6c9cb-ac5c-4477-972a-2786ff218dd8",
        "text": "This is an interesting point <@UFB8STN7K>, I agree.\n\nWhat are the consequences if this is at least partially the case? Is it actually a tractable tooling problem? For example does it mean we need something like \"Racket for environment design\"?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bbd74d10a2d2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-04-24\/1108683470016_bbd74d10a2d2a0dbb156_72.jpg",
            "first_name": "Jack",
            "real_name": "Jack",
            "display_name": "jarm",
            "team": "T5TCAFTA9",
            "name": "jack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555165858.009700",
        "parent_user_id": "UEGFXUK3M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "STq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is an interesting point "
                            },
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": ", I agree.\n\nWhat are the consequences if this is at least partially the case? Is it actually a tractable tooling problem? For example does it mean we need something like \"Racket for environment design\"?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1555190403.011600",
        "client_msg_id": "62d2a954-f66a-474e-bf30-e50b82f644fe",
        "text": "I'm strongly on the \"environment before language\" side. My project is all about making better tooling \/ environment for creating and manipulating software, specifically by making the tool modifiable from within itself, still you can mold the best tools and environment yourself. (And that may include molding the tools for molding).\n\nHowever, like Tudor says, I also see the separation between language and environment to be superficial. For example, the idea is to have whatever representation is best suited for what you are making. That might be a table, or it might be code. The rules for converting that representation to running code is moldable -- so if that representation is \"code\", then you are (to some extent) molding an interpreter or a compiler, and thus a language. So even the concept of \"language\" is part of the environment.\n\nBut I suppose you could say the reverse: that a view with windows and buttons and diagrams is also the \"language\" that a tool is presenting (or allowing you to present) something in.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555165858.009700",
        "parent_user_id": "UEGFXUK3M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ppk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm strongly on the \"environment before language\" side. My project is all about making better tooling \/ environment for creating and manipulating software, specifically by making the tool modifiable from within itself, still you can mold the best tools and environment yourself. (And that may include molding the tools for molding).\n\nHowever, like Tudor says, I also see the separation between language and environment to be superficial. For example, the idea is to have whatever representation is best suited for what you are making. That might be a table, or it might be code. The rules for converting that representation to running code is moldable -- so if that representation is \"code\", then you are (to some extent) molding an interpreter or a compiler, and thus a language. So even the concept of \"language\" is part of the environment.\n\nBut I suppose you could say the reverse: that a view with windows and buttons and diagrams is also the \"language\" that a tool is presenting (or allowing you to present) something in."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U8A5MS6R1",
                    "UEGFXUK3M"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1555190602.011800",
        "client_msg_id": "6535142b-b8d7-4a7c-bb65-c20d1b69ae86",
        "text": "... To put that simpler, definitely focused on environment first, but seeing language as just an aspect of environment. And it just so happens that most environments present language as something fixed and non-moldable.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555165858.009700",
        "parent_user_id": "UEGFXUK3M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t1Um",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "... To put that simpler, definitely focused on environment first, but seeing language as just an aspect of environment. And it just so happens that most environments present language as something fixed and non-moldable."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1555190736.012000",
        "edited": {
            "user": "UAVCC2X70",
            "ts": "1555190965.000000"
        },
        "client_msg_id": "3da9da09-c88a-4907-906f-bb61e3ae5a9d",
        "text": "Maybe Tudor &amp; I subscribe to the way Houyhnhnms Compute:\n\n\"her conclusion was that, no, I was obviously not programming in C, and that I couldn’t possibly be programming in C, because C was not a universal programming system at all, but could do next to nothing, and only very inefficiently so. Instead, what I was programming in was not just C, but a C compilation toolchain plus an IDE and an Operating System plus plenty of libraries and utilities, that all together constituted a very large computing system with incredibly complex formal semantics\"\n\n<https:\/\/ngnghm.github.io\/blog\/2015\/08\/02\/chapter-1-the-way-houyhnhnms-compute\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555165858.009700",
        "parent_user_id": "UEGFXUK3M",
        "attachments": [
            {
                "title": "Houyhnhnm Computing",
                "title_link": "https:\/\/ngnghm.github.io\/",
                "text": "Houyhnhnm Computing",
                "fallback": "Houyhnhnm Computing",
                "from_url": "https:\/\/ngnghm.github.io\/",
                "service_icon": "https:\/\/ngnghm.github.io\/img\/favicon.ico",
                "service_name": "ngnghm.github.io",
                "id": 1,
                "original_url": "https:\/\/ngnghm.github.io"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tj4k",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe Tudor & I subscribe to the way Houyhnhnms Compute:\n\n\"her conclusion was that, no, I was obviously not programming in C, and that I couldn’t possibly be programming in C, because C was not a universal programming system at all, but could do next to nothing, and only very inefficiently so. Instead, what I was programming in was not just C, but a C compilation toolchain plus an IDE and an Operating System plus plenty of libraries and utilities, that all together constituted a very large computing system with incredibly complex formal semantics\"\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/ngnghm.github.io\/blog\/2015\/08\/02\/chapter-1-the-way-houyhnhnms-compute\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1555195474.012700",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1555195660.000000"
        },
        "client_msg_id": "5bce42cd-2e70-48f0-b357-535ad600efe4",
        "text": "Projects like Hazel, Subtext, Pharo, spreadsheets and notebooks redefine the environment to different degrees. This also makes them stick out as islands in the everyday environment of Unix - cant use your favorite text editor or source control. It is far simpler to just fit into the de facto environment because the scope of what you need to design is well defined and often smaller and you get to reuse all the 'wonderful tooling'. You are also subject to the same hard ceilings.\n\nOne way I think of this is 'systems have affordances too'. How you extend or improve a system has a lot to do with how you're guided by concepts provided by the system. The notion of a 'text file based programming language' is one affordance provided by Unix. Others are files, processes, shells, shell commands and so on.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555165858.009700",
        "parent_user_id": "UEGFXUK3M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mBf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Projects like Hazel, Subtext, Pharo, spreadsheets and notebooks redefine the environment to different degrees. This also makes them stick out as islands in the everyday environment of Unix - cant use your favorite text editor or source control. It is far simpler to just fit into the de facto environment because the scope of what you need to design is well defined and often smaller and you get to reuse all the 'wonderful tooling'. You are also subject to the same hard ceilings.\n\nOne way I think of this is 'systems have affordances too'. How you extend or improve a system has a lot to do with how you're guided by concepts provided by the system. The notion of a 'text file based programming language' is one affordance provided by Unix. Others are files, processes, shells, shell commands and so on."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEGFXUK3M",
                    "UE0ETTCG7",
                    "UAJ9DV971",
                    "UA14TGLTC"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "U85HCL7JP",
        "type": "message",
        "ts": "1555202792.013100",
        "client_msg_id": "1ba7b245-11cc-4e02-87b3-e7117c5ae77c",
        "text": "Also most of the people here have solo projects, so it's a huge challenge to build an entire environment. Starting with the language might be a great first step (MVP) and continue building more tools in following versions.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c5d8f6a2266",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-25\/1286770110448_0c5d8f6a2266551a36f2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555165858.009700",
        "parent_user_id": "UEGFXUK3M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1xt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also most of the people here have solo projects, so it's a huge challenge to build an entire environment. Starting with the language might be a great first step (MVP) and continue building more tools in following versions."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEGFXUK3M",
                    "UC2A2ARPT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1555206114.013300",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1555206315.000000"
        },
        "client_msg_id": "31aa3d65-39d2-49e2-9026-acd8de913fa6",
        "text": "But you don't have to start with the language. Fortunately for us all, there's lots of options here. Most of them lead to failure, because it is a hard thing we are attempting. But it's good to have lots of choices. There's hope of finding some way out in the humongous state space.\n\n\"Environment vs language\" is an unnecessarily blunt way to think about this state space. You give up a lot of room for maneuver if you try to build the language completely before thinking about the environment, or vice versa.\n\nThere's always an environment even if it's implicit. If you think of yourself as just creating a language the environment is some lowest denominator like Unix. But according to the recent poll, most people here are creating something totally novel, with no connection to Unix or other extant platforms. Focusing on the language is a particularly fraught activity for us. It's going to close us to many opportunities. So I find it more useful to fold 'language' back into the environment, and just think of the environment as a whole. How can I gradually accumulate a new environment (over many years) in a way that gets me a steady stream of feedback along the way? This framing avoids the hazard of over-emphasizing languages in our current culture. It also requires letting go of preconceptions of 'environment' like that it has to be graphical or involve IDEs.\n\n(This mindset is also why I pushed back against discussing languages in isolation here a few days ago. It's not just some administrative discussion to be relegated to <#CEXED56UR|administrivia>. We're all building a whole new environment from scratch, and it's an immense challenge. There's no way to approach that without also thinking about the way we frame it in our heads, and constantly try to correct biases. Building something new and large from scratch necessarily involves debate of _philosophy_[1].)\n\n[1] Henry Ford's autobiography is startlingly philosophical: <http:\/\/www.gutenberg.org\/ebooks\/7213>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555165858.009700",
        "parent_user_id": "UEGFXUK3M",
        "attachments": [
            {
                "service_name": "Project Gutenberg",
                "title": "My Life and Work by Henry Ford",
                "title_link": "http:\/\/www.gutenberg.org\/ebooks\/7213",
                "text": "Free kindle book and epub digitized and proofread by Project Gutenberg.",
                "fallback": "Project Gutenberg: My Life and Work by Henry Ford",
                "thumb_url": "http:\/\/www.gutenberg.org\/pics\/logo-144x144.png",
                "from_url": "http:\/\/www.gutenberg.org\/ebooks\/7213",
                "thumb_width": 144,
                "thumb_height": 144,
                "service_icon": "http:\/\/www.gutenberg.org\/pics\/apple-touch-icon",
                "id": 1,
                "original_url": "http:\/\/www.gutenberg.org\/ebooks\/7213"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LoD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But you don't have to start with the language. Fortunately for us all, there's lots of options here. Most of them lead to failure, because it is a hard thing we are attempting. But it's good to have lots of choices. There's hope of finding some way out in the humongous state space.\n\n\"Environment vs language\" is an unnecessarily blunt way to think about this state space. You give up a lot of room for maneuver if you try to build the language completely before thinking about the environment, or vice versa.\n\nThere's always an environment even if it's implicit. If you think of yourself as just creating a language the environment is some lowest denominator like Unix. But according to the recent poll, most people here are creating something totally novel, with no connection to Unix or other extant platforms. Focusing on the language is a particularly fraught activity for us. It's going to close us to many opportunities. So I find it more useful to fold 'language' back into the environment, and just think of the environment as a whole. How can I gradually accumulate a new environment (over many years) in a way that gets me a steady stream of feedback along the way? This framing avoids the hazard of over-emphasizing languages in our current culture. It also requires letting go of preconceptions of 'environment' like that it has to be graphical or involve IDEs.\n\n(This mindset is also why I pushed back against discussing languages in isolation here a few days ago. It's not just some administrative discussion to be relegated to "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CEXED56UR"
                            },
                            {
                                "type": "text",
                                "text": ". We're all building a whole new environment from scratch, and it's an immense challenge. There's no way to approach that without also thinking about the way we frame it in our heads, and constantly try to correct biases. Building something new and large from scratch necessarily involves debate of "
                            },
                            {
                                "type": "text",
                                "text": "philosophy",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "[1].)\n\n[1] Henry Ford's autobiography is startlingly philosophical: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.gutenberg.org\/ebooks\/7213"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAJ9DV971"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1555213375.013700",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1555372702.000000"
        },
        "client_msg_id": "5395f678-e9c3-4f1d-b095-10becfae4c0c",
        "text": "Since people program only in entire systems, one must always consider language and environment together. The graphical language people have sometimes no visible textual language, The Luna people are trying to make it bidirectional between graphical and textual, and then there are many projects which are primarily textual in nature, but have some wizards\/helpers to make some part of the process less tedious and more direct.\n\nBut the underlying language, whether it be textual or graphical internally, is the key thing; after all the environment is there to make it easier to make a finished product, and the final stored artifact is the goal, and the environment is typically not present in the final product. Thus the environment is providing scaffolding; temporary structure that helps in the development and testing. If you are trying to get products into users' hands as quickly as possible, the minimum you can build is the underlying artifact, and the tooling around it can wait until later. Many languages don't need more than a text editor for tooling to build something. Tools like Glamorous Toolkit are highly optimized for Pharo, and i think that to a great extent the tooling is often very specific to a language. For years people used Eclipse, now VSCode and Intellij Idea seem to be the top 2 environments, and they are fairly language neutral.\n\nThe more radical the language improvement, the more radical the changes to the tooling will have to be, and i expect that many of the languages being built by the members of this forum will have great difficulty fitting into the conventional forms that VSCode and Idea utilize, which are basically refinements of Eclipse.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555165858.009700",
        "parent_user_id": "UEGFXUK3M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jjj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Since people program only in entire systems, one must always consider language and environment together. The graphical language people have sometimes no visible textual language, The Luna people are trying to make it bidirectional between graphical and textual, and then there are many projects which are primarily textual in nature, but have some wizards\/helpers to make some part of the process less tedious and more direct.\n\nBut the underlying language, whether it be textual or graphical internally, is the key thing; after all the environment is there to make it easier to make a finished product, and the final stored artifact is the goal, and the environment is typically not present in the final product. Thus the environment is providing scaffolding; temporary structure that helps in the development and testing. If you are trying to get products into users' hands as quickly as possible, the minimum you can build is the underlying artifact, and the tooling around it can wait until later. Many languages don't need more than a text editor for tooling to build something. Tools like Glamorous Toolkit are highly optimized for Pharo, and i think that to a great extent the tooling is often very specific to a language. For years people used Eclipse, now VSCode and Intellij Idea seem to be the top 2 environments, and they are fairly language neutral.\n\nThe more radical the language improvement, the more radical the changes to the tooling will have to be, and i expect that many of the languages being built by the members of this forum will have great difficulty fitting into the conventional forms that VSCode and Idea utilize, which are basically refinements of Eclipse."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFXFB1RK8",
        "type": "message",
        "ts": "1555218186.013900",
        "client_msg_id": "ad66a2ad-1579-4605-90a6-8206b983b6d2",
        "text": "Software grows in an environment as a plant grows in an environment. You no more have to create the environment to contribute to programming than you have to ignite the sun to grow tomatoes. I think Steve is right that the environment is the thing, though, and the programming language is just one small part of the equation.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3ffd374deb8",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/53ffd374deb821ab07cdef9f7e321364.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Peter van Hardenberg",
            "display_name": "Peter van Hardenberg",
            "team": "T5TCAFTA9",
            "name": "pvh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1555165858.009700",
        "parent_user_id": "UEGFXUK3M",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SYyy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Software grows in an environment as a plant grows in an environment. You no more have to create the environment to contribute to programming than you have to ignite the sun to grow tomatoes. I think Steve is right that the environment is the thing, though, and the programming language is just one small part of the equation."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]