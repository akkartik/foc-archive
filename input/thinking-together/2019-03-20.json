[
    {
        "user": "U6KQ2S410",
        "type": "message",
        "ts": "1553105501.398700",
        "client_msg_id": "5acfc8bb-9517-4d1c-aa97-8a6bda3c3032",
        "text": "<@UGT2XN01W> F# is attractive. What are the main pain points for browser programming?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e8f4c2151d2b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-09\/225308926294_e8f4c2151d2b70ebfae3_72.jpg",
            "first_name": "Jonathan",
            "real_name": "Jonathan Edwards",
            "display_name": "jonathoda",
            "team": "T5TCAFTA9",
            "name": "jonathoda",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552547395.317600",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mbP8=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGT2XN01W"
                            },
                            {
                                "type": "text",
                                "text": " F# is attractive. What are the main pain points for browser programming?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1553106134.398900",
        "client_msg_id": "b486742f-565a-4796-b149-b3f16e5911a7",
        "text": "integrating with existing libraries mainly",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552547395.317600",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w6H",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "integrating with existing libraries mainly"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1553106155.399100",
        "client_msg_id": "65138c84-1c6b-425e-8504-c2c908c161a8",
        "text": "but you can go a long way with plain react and vanilla js",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552547395.317600",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=GS=Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but you can go a long way with plain react and vanilla js"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGT2XN01W",
        "type": "message",
        "ts": "1553108717.399300",
        "client_msg_id": "324029e6-bfa3-46ea-a192-96286042f0fe",
        "text": "<@U6KQ2S410> we really like F# for frontend development with the elmish library. In Elm it's of course impossible to directly call javascript and you have to send messages through ports and then have JS code listening for events; in f# you can call whatever you like, you just have to create F# type annotations for the js functions. For most of the browser apis this is done for you by the Fable project (Babel AST emmiting backend for the f# compiler), as is it for react and a couple of other common libraries. Writing these yourself is not too hard either. There is also support for untyped access to properties for example, so if you prefer to live fast and dangerously you can :slightly_smiling_face:. There are some things that are a bit peculiar but they are mostly around the tooling\/packing story. All in all it's a pretty neat full stack functional setup by now.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3405d9d5e0d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/b3405d9d5e0d530832a9511b27c6974e.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Daniel Bachler",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552547395.317600",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+7epM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": " we really like F# for frontend development with the elmish library. In Elm it's of course impossible to directly call javascript and you have to send messages through ports and then have JS code listening for events; in f# you can call whatever you like, you just have to create F# type annotations for the js functions. For most of the browser apis this is done for you by the Fable project (Babel AST emmiting backend for the f# compiler), as is it for react and a couple of other common libraries. Writing these yourself is not too hard either. There is also support for untyped access to properties for example, so if you prefer to live fast and dangerously you can "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": ". There are some things that are a bit peculiar but they are mostly around the tooling\/packing story. All in all it's a pretty neat full stack functional setup by now."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UAVCC2X70"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U6KQ2S410",
        "type": "message",
        "ts": "1553113446.401000",
        "client_msg_id": "F33CFBE5-B3FB-4E3A-AE8E-5FA34617BEDE",
        "text": "How’s the debugging experience? Are F# data structures understood?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e8f4c2151d2b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-09\/225308926294_e8f4c2151d2b70ebfae3_72.jpg",
            "first_name": "Jonathan",
            "real_name": "Jonathan Edwards",
            "display_name": "jonathoda",
            "team": "T5TCAFTA9",
            "name": "jonathoda",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552547395.317600",
        "parent_user_id": "UAL7940NM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R4Jdy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How’s the debugging experience? Are F# data structures understood?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1553135868.401500",
        "client_msg_id": "3919c1bd-fd76-4f15-ac38-1a1b38e63f59",
        "text": "IEEE floating point leaves a lot to be desired. We are planning to support Crockford's proposed DEC64 arithmetic, which solves the 0.1 + 0.2 = 0.3 problem. Obviously has huge implications, as the underlying OS uses IEEE floating point.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552973853.375400",
        "parent_user_id": "UA14TGLTC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RllB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "IEEE floating point leaves a lot to be desired. We are planning to support Crockford's proposed DEC64 arithmetic, which solves the 0.1 + 0.2 = 0.3 problem. Obviously has huge implications, as the underlying OS uses IEEE floating point."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1553136646.401700",
        "client_msg_id": "0c350ec2-f8c5-4394-a8c0-bfb33a29ae14",
        "text": "Proramming can indeed be made a lot easier. About 10x by my estimation. Firstly, to address your point about is the current JS\/HTML\/CSS stack bad?  yes, it is very bad. At no prior point in history has a programming language file format evolved where 3 distinct languages would be present in the same project, each of which has a different syntax, even to the absurd degree of not even having comments be the same across the languages. Why can CSS draw, but has not IF or arithmetic, but JS has arithmetic and IF, but cannot draw? That is pretty absurd.\n\nA single language that does what all 3 of those do, with even better layout methodologies, is easy enough to imagine. Then fix the myriad defects of JS, add protected arithmetic, a graph database, and client\/server programming to boot, you have Beads. I have tested it against a minesweeper program done in JS, and it is half the length, and easier to read, and device-adaptive, something that CSS is only partially able to achieve. JS is merely an uncredited clone of ActionScript 2. There is no reason to stop at JS and call it a day. Large JS code bases are a nightmare to maintain, especially if the authors use some of the tricker features. Of course people are good at adapting to bad tools, people have built lots of things in COBOL, and Java (the COBOL of our time), and life goes on, but to accept that as adequate is to waste tens of millions of man-hours per year.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552441138.301100",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yWmLY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Proramming can indeed be made a lot easier. About 10x by my estimation. Firstly, to address your point about is the current JS\/HTML\/CSS stack bad?  yes, it is very bad. At no prior point in history has a programming language file format evolved where 3 distinct languages would be present in the same project, each of which has a different syntax, even to the absurd degree of not even having comments be the same across the languages. Why can CSS draw, but has not IF or arithmetic, but JS has arithmetic and IF, but cannot draw? That is pretty absurd.\n\nA single language that does what all 3 of those do, with even better layout methodologies, is easy enough to imagine. Then fix the myriad defects of JS, add protected arithmetic, a graph database, and client\/server programming to boot, you have Beads. I have tested it against a minesweeper program done in JS, and it is half the length, and easier to read, and device-adaptive, something that CSS is only partially able to achieve. JS is merely an uncredited clone of ActionScript 2. There is no reason to stop at JS and call it a day. Large JS code bases are a nightmare to maintain, especially if the authors use some of the tricker features. Of course people are good at adapting to bad tools, people have built lots of things in COBOL, and Java (the COBOL of our time), and life goes on, but to accept that as adequate is to waste tens of millions of man-hours per year."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1553137066.401900",
        "client_msg_id": "705367a7-075c-4680-89f9-7de3f3d1d1af",
        "text": "Designing a new computer language of any generality takes thousands of hours. And for only one user, that is an awful lot of work. In fact, the simpler (and better) the language is the harder it is to invent\/design. Some people feel that many of the inventions in computers were merely discovered, as they existed in nature before hand. That is an interesting viewpoint",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552969819.370600",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MkG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Designing a new computer language of any generality takes thousands of hours. And for only one user, that is an awful lot of work. In fact, the simpler (and better) the language is the harder it is to invent\/design. Some people feel that many of the inventions in computers were merely discovered, as they existed in nature before hand. That is an interesting viewpoint"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGR73CAY",
        "type": "message",
        "ts": "1553137796.402100",
        "text": "<https:\/\/www.inkandswitch.com\/end-user-programming.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "bc46d9e86f7d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-26\/5176774456644_bc46d9e86f7dc3780301_72.jpg",
            "first_name": "Corey",
            "real_name": "Corey Montella",
            "display_name": "Corey",
            "team": "T5TCAFTA9",
            "name": "cmontella",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1553137796.402100",
        "reply_count": 37,
        "reply_users_count": 7,
        "latest_reply": "1553296765.420600",
        "reply_users": [
            "UCUSW7WVD",
            "UFXFB1RK8",
            "UF6RLAL7J",
            "U8A5MS6R1",
            "U79HM6726",
            "UD3AK9JRF",
            "UH79XRLJW"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1553145385.402300"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1553148976.403400"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1553148994.403800"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1553149024.404200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1553155287.405700"
            },
            {
                "user": "UF6RLAL7J",
                "ts": "1553159426.406000"
            },
            {
                "user": "UF6RLAL7J",
                "ts": "1553159454.406200"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1553185573.406900"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1553185989.407300"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1553188189.407600"
            },
            {
                "user": "UF6RLAL7J",
                "ts": "1553189252.407800"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1553190151.408000"
            },
            {
                "user": "U79HM6726",
                "ts": "1553191082.408600"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1553191869.408800"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1553192553.409000"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1553192658.409200"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1553192686.409400"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1553192716.409700"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1553192931.409900"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1553193388.410300"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1553193413.410600"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1553193553.410800"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1553193961.411000"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1553194251.411200"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1553194285.411400"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1553194346.411600"
            },
            {
                "user": "U8A5MS6R1",
                "ts": "1553194988.411900"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1553195143.412100"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1553195195.412300"
            },
            {
                "user": "UD3AK9JRF",
                "ts": "1553196183.412500"
            },
            {
                "user": "UD3AK9JRF",
                "ts": "1553196780.412700"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1553209405.413500"
            },
            {
                "user": "UD3AK9JRF",
                "ts": "1553210416.413900"
            },
            {
                "user": "UFXFB1RK8",
                "ts": "1553213496.414300"
            },
            {
                "user": "UH79XRLJW",
                "ts": "1553277322.415900"
            },
            {
                "user": "UH79XRLJW",
                "ts": "1553277419.416100"
            },
            {
                "user": "UD3AK9JRF",
                "ts": "1553296765.420600"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1553350634.000872",
        "attachments": [
            {
                "title": "End-user programming",
                "title_link": "https:\/\/www.inkandswitch.com\/end-user-programming.html",
                "text": "A vision for empowered computing that reaches back forty years. Our research lab examines why it has been so hard to achieve.",
                "fallback": "End-user programming",
                "image_url": "https:\/\/www.inkandswitch.com\/media\/end-user-programming\/exp2-grades.png",
                "from_url": "https:\/\/www.inkandswitch.com\/end-user-programming.html",
                "image_width": 224,
                "image_height": 250,
                "image_bytes": 16807,
                "service_icon": "https:\/\/www.inkandswitch.com\/black-square.png",
                "service_name": "inkandswitch.com",
                "id": 1,
                "original_url": "https:\/\/www.inkandswitch.com\/end-user-programming.html"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VhG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.inkandswitch.com\/end-user-programming.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U79HM6726",
                    "U8A5MS6R1",
                    "UGYGY18UX",
                    "UD3AK9JRF"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1553145385.402300",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1553145544.000000"
        },
        "client_msg_id": "80b17ae4-11eb-43f1-ab6d-0030c862da35",
        "text": "Thanks for sharing this! I met <@UFXFB1RK8> through this group (at <@U5TCAFTD3>'s suggestion) and had a very enjoyable conversation in downtown SF. As part of it I read a few links from <http:\/\/inkandswitch.com|inkandswitch.com>, and we had a lively discussion about the direction I've been going, and how difficult it makes it to get feedback. But this article (which I never saw before in spite of browsing to the top level at <https:\/\/www.inkandswitch.com>) actually gets at the crucial fork in the road:\n\n&gt; Our team was energized by this result and we instantly wanted this capability for all of our existing systems.. But we also quickly ran into what would likely be the biggest chunk of work.. for a living system to work, the internal and external APIs need to be mostly the same.. living systems produce a tension between hackability and the danger of user breakage. For example, the user can change a card’s background color just as easily as executing a command that would discard every card onscreen or even put the system into a crashed state or infinite loop. What to allow, how to surface errors, and how to recover are deep and challenging questions we did not explore in the course of this experiment.\n\nThe crucial property for hackability is making it easy to deduce the inputs and outputs of arbitrary fragments of code _anywhere in a stack_. That's basically what I've been chasing with <https:\/\/github.com\/akkartik\/mu\/blob\/master\/Readme.md>. Building out these foundations is extremely time-consuming and work-intensive, but I really don't see any alternative to get to a 'real' system.\n\nOne pattern I've noticed in multiple conversations with people here: having an idea to build something, not being happy with any of the available platforms but picking one anyway just to get started. E.g. see <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1552547395317600>. My hope is that this hackable stack I'm growing from the bottom up will one day meet others growing various ideas from the top down. And that it will help us cross-pollinate ideas. Because it seems to me that anything created with current stacks suffers from the same problem as always: you build your thing with your ideas, others build their thing with their ideas, and it's very hard to inter-operate (<https:\/\/futureofcoding.slack.com\/archives\/CC2JRGVLK\/p1550557566019800?thread_ts=1550369313.016100&amp;cid=CC2JRGVLK>)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1553137796.402100",
        "parent_user_id": "UCGR73CAY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BqhRO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for sharing this! I met "
                            },
                            {
                                "type": "user",
                                "user_id": "UFXFB1RK8"
                            },
                            {
                                "type": "text",
                                "text": " through this group (at "
                            },
                            {
                                "type": "user",
                                "user_id": "U5TCAFTD3"
                            },
                            {
                                "type": "text",
                                "text": "'s suggestion) and had a very enjoyable conversation in downtown SF. As part of it I read a few links from "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/inkandswitch.com",
                                "text": "inkandswitch.com"
                            },
                            {
                                "type": "text",
                                "text": ", and we had a lively discussion about the direction I've been going, and how difficult it makes it to get feedback. But this article (which I never saw before in spite of browsing to the top level at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.inkandswitch.com"
                            },
                            {
                                "type": "text",
                                "text": ") actually gets at the crucial fork in the road:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Our team was energized by this result and we instantly wanted this capability for all of our existing systems.. But we also quickly ran into what would likely be the biggest chunk of work.. for a living system to work, the internal and external APIs need to be mostly the same.. living systems produce a tension between hackability and the danger of user breakage. For example, the user can change a card’s background color just as easily as executing a command that would discard every card onscreen or even put the system into a crashed state or infinite loop. What to allow, how to surface errors, and how to recover are deep and challenging questions we did not explore in the course of this experiment."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nThe crucial property for hackability is making it easy to deduce the inputs and outputs of arbitrary fragments of code "
                            },
                            {
                                "type": "text",
                                "text": "anywhere in a stack",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". That's basically what I've been chasing with "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/akkartik\/mu\/blob\/master\/Readme.md"
                            },
                            {
                                "type": "text",
                                "text": ". Building out these foundations is extremely time-consuming and work-intensive, but I really don't see any alternative to get to a 'real' system.\n\nOne pattern I've noticed in multiple conversations with people here: having an idea to build something, not being happy with any of the available platforms but picking one anyway just to get started. E.g. see "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1552547395317600"
                            },
                            {
                                "type": "text",
                                "text": ". My hope is that this hackable stack I'm growing from the bottom up will one day meet others growing various ideas from the top down. And that it will help us cross-pollinate ideas. Because it seems to me that anything created with current stacks suffers from the same problem as always: you build your thing with your ideas, others build their thing with their ideas, and it's very hard to inter-operate ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/CC2JRGVLK\/p1550557566019800?thread_ts=1550369313.016100&amp;cid=CC2JRGVLK",
                                "text": "https:\/\/futureofcoding.slack.com\/archives\/CC2JRGVLK\/p1550557566019800?thread_ts=1550369313.016100&cid=CC2JRGVLK"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGJ9KAZM3",
        "type": "message",
        "ts": "1553148967.403200",
        "edited": {
            "user": "UGJ9KAZM3",
            "ts": "1553149114.000000"
        },
        "client_msg_id": "d83ce4ce-42e3-4d0f-a4cc-ba65ffb9acc8",
        "text": "Are you sure you're not making a circular statement? \"Making a generic language is hard and thus it is not justified to make a generic language for one person only\". How about not making a generic language in the first place? :slightly_smiling_face:\nBut I'm _quite_ unconvinced that \"thousands of hours\" is a fact even for ~generic languages, more so if one has \"language design\" in one's own personal hobby &amp; professional toolkit.\nJavascript was drafted on relatively short order and its first implementation was done in 10 days back in 1995. The tools available to aid experienced language engineers in creating new languages are a legion. Language design in its core is not that hard. The devil is in the details, in integrations and in making the language _generic, beautiful and approachable to the needs of a wide target audience_.\n\nIn short: perfection is hard. But if your target audience is one person, perfection is not needed and things start to look quite different.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a9ca5b79893e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-05\/567982344725_a9ca5b79893ede5381e5_72.jpg",
            "first_name": "Iridian",
            "real_name": "Iridian Kiiskinen",
            "display_name": "Iridian",
            "team": "T5TCAFTA9",
            "name": "iridian",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552969819.370600",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TiwK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you sure you're not making a circular statement? \"Making a generic language is hard and thus it is not justified to make a generic language for one person only\". How about not making a generic language in the first place? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\nBut I'm "
                            },
                            {
                                "type": "text",
                                "text": "quite",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " unconvinced that \"thousands of hours\" is a fact even for ~generic languages, more so if one has \"language design\" in one's own personal hobby & professional toolkit.\nJavascript was drafted on relatively short order and its first implementation was done in 10 days back in 1995. The tools available to aid experienced language engineers in creating new languages are a legion. Language design in its core is not that hard. The devil is in the details, in integrations and in making the language "
                            },
                            {
                                "type": "text",
                                "text": "generic, beautiful and approachable to the needs of a wide target audience",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ".\n\nIn short: perfection is hard. But if your target audience is one person, perfection is not needed and things start to look quite different."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFXFB1RK8",
        "type": "message",
        "ts": "1553148976.403400",
        "client_msg_id": "9bccb126-bf7d-447b-9af9-f83716a82d49",
        "text": "It's encouraging to see interest from the group in this post. It is new as of today, so that would be why <@UCUSW7WVD> hadn't seen it before.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3ffd374deb8",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/53ffd374deb821ab07cdef9f7e321364.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Peter van Hardenberg",
            "display_name": "Peter van Hardenberg",
            "team": "T5TCAFTA9",
            "name": "pvh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1553137796.402100",
        "parent_user_id": "UCGR73CAY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i4Rf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's encouraging to see interest from the group in this post. It is new as of today, so that would be why "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " hadn't seen it before."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UFXFB1RK8",
        "type": "message",
        "ts": "1553148994.403800",
        "client_msg_id": "71076df5-f2e0-45ec-8e3f-394748603014",
        "text": "I had nothing to do with the drafting of the post, though I would enthusiastically co-sign most of its points.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3ffd374deb8",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/53ffd374deb821ab07cdef9f7e321364.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Peter van Hardenberg",
            "display_name": "Peter van Hardenberg",
            "team": "T5TCAFTA9",
            "name": "pvh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1553137796.402100",
        "parent_user_id": "UCGR73CAY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a6E0P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I had nothing to do with the drafting of the post, though I would enthusiastically co-sign most of its points."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFXFB1RK8",
        "type": "message",
        "ts": "1553149024.404200",
        "client_msg_id": "c8fa8738-9e65-4a34-8102-198629127eec",
        "text": "There's a reference to \"our next project\", farm, which I led and hope to share a write-up about with this group at some point soon.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g3ffd374deb8",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/53ffd374deb821ab07cdef9f7e321364.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Peter van Hardenberg",
            "display_name": "Peter van Hardenberg",
            "team": "T5TCAFTA9",
            "name": "pvh",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1553137796.402100",
        "parent_user_id": "UCGR73CAY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xSvr5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's a reference to \"our next project\", farm, which I led and hope to share a write-up about with this group at some point soon."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UD3AK9JRF"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1553150641.404500",
        "client_msg_id": "498f62db-8c42-4186-a2bc-c8ac09e8fcc0",
        "text": "you are somewhat uninformed as to the origin of JS. It was a 99% copy of Actionscript 2, which i can assure you took hundreds if not thousands of man-years to develop, it being an evolution of the granddaddy of all scripting languages, which was called Lingo from the breakthrough animation\/interaction designer product called Macromind Director, coming out of Macromedia, Inc, which was purchased by Adobe systems a long time ago. Macromedia also invented FreeHand, which was a formidable competitor to Adobe's Illustrator. ActionScript 3 added strong typing and modules, and if you run AS3 code through a very simple find\/replace script it will generate almost perfect JS code now that modules exist in Ecmascript (which is the formal name for both JS and AS3). The fiction that JS took only two weeks is a polite lie to keep the Adobe lawyers at bay; remember that Oracle has sued extensively over Java's use by Google, and fortunately for the world Adobe is not as litigious\/proprietary.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1552969819.370600",
        "parent_user_id": "UEQ6M68H0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ot88",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you are somewhat uninformed as to the origin of JS. It was a 99% copy of Actionscript 2, which i can assure you took hundreds if not thousands of man-years to develop, it being an evolution of the granddaddy of all scripting languages, which was called Lingo from the breakthrough animation\/interaction designer product called Macromind Director, coming out of Macromedia, Inc, which was purchased by Adobe systems a long time ago. Macromedia also invented FreeHand, which was a formidable competitor to Adobe's Illustrator. ActionScript 3 added strong typing and modules, and if you run AS3 code through a very simple find\/replace script it will generate almost perfect JS code now that modules exist in Ecmascript (which is the formal name for both JS and AS3). The fiction that JS took only two weeks is a polite lie to keep the Adobe lawyers at bay; remember that Oracle has sued extensively over Java's use by Google, and fortunately for the world Adobe is not as litigious\/proprietary."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]