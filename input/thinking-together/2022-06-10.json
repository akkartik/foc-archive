[
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1654850145.675449",
        "client_msg_id": "2fa2ba03-a8f1-49cc-8500-f051d402e036",
        "text": "I think the complexity is just pushed into the number of models, so while the second query is linear in respect of this, I think this is still exponential with regards to the original parameters (number of unknown inputs).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654711669.779349",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o4v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think the complexity is just pushed into the number of models, so while the second query is linear in respect of this, I think this is still exponential with regards to the original parameters (number of unknown inputs)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1654854872.646929",
        "edited": {
            "user": "UA14TGLTC",
            "ts": "1654854897.000000"
        },
        "client_msg_id": "D86B8ECD-8959-4FF6-9C44-82A432195770",
        "text": "In general there’s no free lunch, but in general you aren’t in the general case.\n\nThe advantage of talking about the “models” like you have here is that matching against a given one is easy.  The disadvantage is that most programs, even not very interesting programs, are associated with a large number.  So you’re better off using a more compact formalism.  Probabilistic graphical models come to mind.\n\nOften there’s a sweet spot where rules in the code are relatively simple and the data structures encode irregularity without being too big.  I shared a good example the other day.\n\nSuppose you have a grid of squares and each square can be part of a path.  So seven labels: ┗,  ━, ┓, ┛, ┃, ┏, and blank.  You want to enumerate all closed loops.  You can simplify the problem by increasing the grid size to just represent horizontal edges, vertical edges, and intersections.\n\nLastly, the Yoneda Lemma formalizes the idea that you can characterize a thing by its relationships to similar things.  In practice you can use it to help figure out the right category of similar things or the right features to characterize or both simultaneously.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1654711669.779349",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wjhE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In general there’s no free lunch, but in general you aren’t in the general case.\n\nThe advantage of talking about the “models” like you have here is that matching against a given one is easy.  The disadvantage is that most programs, even not very interesting programs, are associated with a large number.  So you’re better off using a more compact formalism.  Probabilistic graphical models come to mind.\n\nOften there’s a sweet spot where rules in the code are relatively simple and the data structures encode irregularity without being too big.  I shared a good example the other day.\n\nSuppose you have a grid of squares and each square can be part of a path.  So seven labels: ┗,  ━, ┓, ┛, ┃, ┏, and blank.  You want to enumerate all closed loops.  You can simplify the problem by increasing the grid size to just represent horizontal edges, vertical edges, and intersections.\n\nLastly, the Yoneda Lemma formalizes the idea that you can characterize a thing by its relationships to similar things.  In practice you can use it to help figure out the right category of similar things or the right features to characterize or both simultaneously."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]