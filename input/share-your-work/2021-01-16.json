[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1610796699.008500",
        "client_msg_id": "37f644cf-72e9-4313-83ae-7cab2a6993c5",
        "text": "<@UMVFWPZ36> Very nice. And I am also a big fan of Our World in Data. Please don't downplay the role of the UI in this project, that's what makes the difference with all the data repositories we have seen pop up recently, which nobody but specialists are willing to use. Making data accessible and explorable is hugely important these days.\n\nWhat I'd like to know more about is how your spreadsheet-lie UI maps to tree notation. It's something I look at from time to time, and every time I have the impression of seeing something very important and not quite seeing why it matters. So a real-life example like this would be nice to see explained in more detail.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ibd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UMVFWPZ36"
                            },
                            {
                                "type": "text",
                                "text": " Very nice. And I am also a big fan of Our World in Data. Please don't downplay the role of the UI in this project, that's what makes the difference with all the data repositories we have seen pop up recently, which nobody but specialists are willing to use. Making data accessible and explorable is hugely important these days.\n\nWhat I'd like to know more about is how your spreadsheet-lie UI maps to tree notation. It's something I look at from time to time, and every time I have the impression of seeing something very important and not quite seeing why it matters. So a real-life example like this would be nice to see explained in more detail."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "U013ZLJARC7"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1610809860.008800",
        "client_msg_id": "d3473b39-5d6f-4dce-854b-592c4ef5683a",
        "text": "Line 133 says \"the programmer tries to mutably index disjoint parts of the array, e.g. &amp;mut v[0]; &amp;mut v[1]\" but the code does not refer to \"&amp;mut v[0]; &amp;mut v[1]\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595636687.411800",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/TzVq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Line 133 says \"the programmer tries to mutably index disjoint parts of the array, e.g. &mut v[0]; &mut v[1]\" but the code does not refer to \"&mut v[0]; &mut v[1]\""
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFB8STN7K"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1610810220.009000",
        "client_msg_id": "e53e3790-3871-4a7b-b129-4c4e6732fae5",
        "text": "I think anyone teaching Rust should read this.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595636687.411800",
        "parent_user_id": "UFB8STN7K",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vrc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think anyone teaching Rust should read this."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFB8STN7K"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1610810723.009200",
        "client_msg_id": "85ef5a5c-7dda-4464-a6f2-d86a09da345c",
        "text": "I love the concept of lenses (even not having used them before) and I wish your project much popularity. Some on FoC argue for schemaless databases (datalog etc), and I'm inclined to agree. Winning the popularity contest probably involves showing how to combine this with SQL databases, though.\n\nYou've basically made a DSL here, and my JSON-compatible language LES is designed for making DSLs. There isn't a TypeScript\/JS version of it, but I am starting to ask people:\n\n1. Have you heard of <http:\/\/loyc.net\/les\/|LES> or <http:\/\/loyc.net\/loyc-trees\/|Loyc trees>?\n2. Would you have been interested in using them for your DSL? If not, why not?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1595031472.394700",
        "parent_user_id": "UFXFB1RK8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RGqTQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I love the concept of lenses (even not having used them before) and I wish your project much popularity. Some on FoC argue for schemaless databases (datalog etc), and I'm inclined to agree. Winning the popularity contest probably involves showing how to combine this with SQL databases, though.\n\nYou've basically made a DSL here, and my JSON-compatible language LES is designed for making DSLs. There isn't a TypeScript\/JS version of it, but I am starting to ask people:\n\n1. Have you heard of "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/loyc.net\/les\/",
                                "text": "LES"
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/loyc.net\/loyc-trees\/",
                                "text": "Loyc trees"
                            },
                            {
                                "type": "text",
                                "text": "?\n2. Would you have been interested in using them for your DSL? If not, why not?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1610819125.009500",
        "client_msg_id": "4115a067-d35e-476d-b93f-57e9b18ccfa7",
        "text": "To make my question more precise: In <https:\/\/treenotation.org\/#programsAreAlsoSpreadsheets>, you suggest a relation between tree notation and spreadsheets, but there is neither an explanation nor an example. There are of course many ways to encode a 2D array as a tree, but I have the impression that this is not what you have in mind. It looks like you want to do the opposite: use a 2D array interface to define general tree structures. But I see neither how to do this, nor why it is interesting.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SS0h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To make my question more precise: In "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/treenotation.org\/#programsAreAlsoSpreadsheets"
                            },
                            {
                                "type": "text",
                                "text": ", you suggest a relation between tree notation and spreadsheets, but there is neither an explanation nor an example. There are of course many ways to encode a 2D array as a tree, but I have the impression that this is not what you have in mind. It looks like you want to do the opposite: use a 2D array interface to define general tree structures. But I see neither how to do this, nor why it is interesting."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD",
                    "UMVFWPZ36"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1610839291.010000",
        "edited": {
            "user": "UD6EXQVM0",
            "ts": "1610839395.000000"
        },
        "client_msg_id": "f97c95dd-0051-44ff-ad00-c920b794c458",
        "text": "Installed! Something I always wanted in tools like this was to indicate styles - bold, italic, `code` - in some way, e.g. pitch change, background hum. And some way to indicate punctuation, in a different way from words - like, on the screen I see `Enum.FooFlag | otherFlag` but it shouldn't be spoken quite like `enum foo flag other flag` or `enum dot foo flag vertical bar other flag`",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600444046.000800",
        "parent_user_id": "UTG9XLGKZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LCk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Installed! Something I always wanted in tools like this was to indicate styles - bold, italic, "
                            },
                            {
                                "type": "text",
                                "text": "code",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " - in some way, e.g. pitch change, background hum. And some way to indicate punctuation, in a different way from words - like, on the screen I see "
                            },
                            {
                                "type": "text",
                                "text": "Enum.FooFlag | otherFlag",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " but it shouldn't be spoken quite like "
                            },
                            {
                                "type": "text",
                                "text": "enum foo flag other flag",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "text",
                                "text": "enum dot foo flag vertical bar other flag",
                                "style": {
                                    "code": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1610843844.010700",
        "client_msg_id": "09607914-4832-4a8c-ac4b-bf7792c264b0",
        "text": "I suspect this is the sort of project where Loyc tools would be useful, because there's nothing really Python-specific about the goal here, and since it's Python, you can't (in general) be sure what the types are - so I guess that if you used a <http:\/\/loyc.net\/loyc-trees\/|Loyc tree> as the input to your prediction black box, it might work just as well on other languages.\n\nBut OTOH maybe you've just got a big AI model trained directly on source text and it doesn't actually know or care about the tree structure of the code?\n\nMind you an input module for Python doesn't actually exist, I'm just saying that _in principle_ it looks like a good fit... what do you think?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601136299.009000",
        "parent_user_id": "UPVBV34EL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rLIP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I suspect this is the sort of project where Loyc tools would be useful, because there's nothing really Python-specific about the goal here, and since it's Python, you can't (in general) be sure what the types are - so I guess that if you used a "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/loyc.net\/loyc-trees\/",
                                "text": "Loyc tree"
                            },
                            {
                                "type": "text",
                                "text": " as the input to your prediction black box, it might work just as well on other languages.\n\nBut OTOH maybe you've just got a big AI model trained directly on source text and it doesn't actually know or care about the tree structure of the code?\n\nMind you an input module for Python doesn't actually exist, I'm just saying that "
                            },
                            {
                                "type": "text",
                                "text": "in principle",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " it looks like a good fit... what do you think?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1610844126.010900",
        "client_msg_id": "e6465505-af16-4164-86ef-d4ff9bf01547",
        "text": "I don't have sound in the video. What's the concept here?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1601313820.018300",
        "parent_user_id": "UG0EL18H3",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=f1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't have sound in the video. What's the concept here?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1610844283.011100",
        "client_msg_id": "2eb35a2b-ea94-4be4-b8b1-b80db19ca9b2",
        "text": "Thanks for the feedback Konrad!\n\nI would say at this stage of the game the 2-D\/3-D aspect is\nimportant for the UI of programming. It's like WYSIWYG of\nprogramming.\n\nIn Tree, scope has a semantic meaning but also a geometric\nmeaning—if things are down and to the right, they belong\ntogether.\n\nIn Tree, there aren't infinite ways to write a list. There's\njust one, and it's the way you would do it in the real\nworld: put items next to each other.\n\nThe languages follow constraints imposed by geometry. While\nthis may seem like it would limit creativity, in fact I've\nfound the opposite. By letting you focus on signal, and\nremoving all noise, you can focus on the semantics, and\nreally simplify your code to its essence.\n\nThere are also lots more you can do when you break out of\n1-dimensional, linearly parsed languages. Tree Notation is a\nsubset of Grid Notation. There are other 2-D notations\nout there.\n\nAn example might help. Would be easier to do a visual\nbut could try to put it into words. Imagine a project\nwouldn't be a folder with a bunch of files, but instead one\nfile that you would open with a spreadsheet like IDE. and\nedit like a canvas. What you'd normally put into files you\nwould instead drop an \"anchor\" in some cell in the sheet,\nand start typing. That would be a root tree. And you could\nhave many of them throughout the canvas, instead of 1 file.\nThis is a good structure for languages for simulation. There\nare some things like this, but none of them (AFAIK) have\never made the layout and code isomorphic, and when you do\nthat you don't give up anything, and you make parsing and\ntool building a lot easier.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "q6V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the feedback Konrad!\n\nI would say at this stage of the game the 2-D\/3-D aspect is\nimportant for the UI of programming. It's like WYSIWYG of\nprogramming.\n\nIn Tree, scope has a semantic meaning but also a geometric\nmeaning—if things are down and to the right, they belong\ntogether.\n\nIn Tree, there aren't infinite ways to write a list. There's\njust one, and it's the way you would do it in the real\nworld: put items next to each other.\n\nThe languages follow constraints imposed by geometry. While\nthis may seem like it would limit creativity, in fact I've\nfound the opposite. By letting you focus on signal, and\nremoving all noise, you can focus on the semantics, and\nreally simplify your code to its essence.\n\nThere are also lots more you can do when you break out of\n1-dimensional, linearly parsed languages. Tree Notation is a\nsubset of Grid Notation. There are other 2-D notations\nout there.\n\nAn example might help. Would be easier to do a visual\nbut could try to put it into words. Imagine a project\nwouldn't be a folder with a bunch of files, but instead one\nfile that you would open with a spreadsheet like IDE. and\nedit like a canvas. What you'd normally put into files you\nwould instead drop an \"anchor\" in some cell in the sheet,\nand start typing. That would be a root tree. And you could\nhave many of them throughout the canvas, instead of 1 file.\nThis is a good structure for languages for simulation. There\nare some things like this, but none of them (AFAIK) have\never made the layout and code isomorphic, and when you do\nthat you don't give up anything, and you make parsing and\ntool building a lot easier."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1610844426.011400",
        "client_msg_id": "edb01d24-b01b-4827-8756-553e519a0a13",
        "text": "Now there are also implications for hardware, way down the\nline, but at this stage it's about making things that ditch\na lot of complexity without sacrificing power, and present\nthe user with a code and interface that is a lot more\nisomorphic to our brains which process info in a 2-D and 3-D\nway.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A0X8d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Now there are also implications for hardware, way down the\nline, but at this stage it's about making things that ditch\na lot of complexity without sacrificing power, and present\nthe user with a code and interface that is a lot more\nisomorphic to our brains which process info in a 2-D and 3-D\nway."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1610846686.012100",
        "client_msg_id": "15a3666b-a815-4cd4-9a08-42983557e873",
        "text": "What's the point of replying in a thread if you're also sending it to a channel? :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fk2cN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What's the point of replying in a thread if you're also sending it to a channel? "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1610846733.012400",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1610846747.000000"
        },
        "client_msg_id": "d8477bf0-3367-4b75-aa67-3123cce93d6e",
        "text": "(Moving Breck's comment from the top level)\n\n&gt; That's the theory anyway :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fnz1s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Moving Breck's comment from the top level)\n\n> That's the theory anyway "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1610866242.012900",
        "client_msg_id": "2b87edbd-4891-41ee-8519-a283fbfc25c0",
        "text": "Usually I try to keep one main thought per thread. Tried to split UI vs Hardware",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0z3i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Usually I try to keep one main thought per thread. Tried to split UI vs Hardware"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMVFWPZ36",
        "type": "message",
        "ts": "1610866285.013100",
        "client_msg_id": "8d803f26-ef3a-4e38-ae04-0a6393a61f98",
        "text": "Is there a way to create a thread inside a thread?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cbd558604a21",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-22\/1871363334903_cbd558604a21b23211c3_72.png",
            "first_name": "",
            "real_name": "Breck Yunits",
            "display_name": "Breck Yunits",
            "team": "T5TCAFTA9",
            "name": "breck7",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1610747848.005700",
        "parent_user_id": "UMVFWPZ36",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wNh4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is there a way to create a thread inside a thread?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "confused",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "negative_squared_cross_mark",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]