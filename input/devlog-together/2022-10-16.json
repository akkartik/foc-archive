[
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1665909581.433169",
        "client_msg_id": "71C69865-FBF0-49B6-AA40-5C8B7998F4B3",
        "text": "Hi, I've been fixing some bugs in my \"infinite-canvas based visual interactive programming editor inspired on flow based programming\"(yeah that's a lot of words.. playing around with finding a proper sentence to describe it:blush:) .. you could already edit the program live , make changes and see the results directly.. but there were some scenario's that didn't behave correctly so that the program became \"dead\" and needed a browser refresh to come alive again..I fixed those... it had todo with resetting the internal flowrunner-engine on wrong moments after making changes to the visual flow: the program now stays alive even if you make bugs. I'll really do my best to make a small video about this soon:blush: .. and yeah the strange loop talk by <@U013ZLJARC7>  was also very inspiring to me, thanks!:sunglasses:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V4cd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi, I've been fixing some bugs in my \"infinite-canvas based visual interactive programming editor inspired on flow based programming\"(yeah that's a lot of words.. playing around with finding a proper sentence to describe it"
                            },
                            {
                                "type": "emoji",
                                "name": "blush",
                                "unicode": "1f60a"
                            },
                            {
                                "type": "text",
                                "text": ") .. you could already edit the program live , make changes and see the results directly.. but there were some scenario's that didn't behave correctly so that the program became \"dead\" and needed a browser refresh to come alive again..I fixed those... it had todo with resetting the internal flowrunner-engine on wrong moments after making changes to the visual flow: the program now stays alive even if you make bugs. I'll really do my best to make a small video about this soon"
                            },
                            {
                                "type": "emoji",
                                "name": "blush",
                                "unicode": "1f60a"
                            },
                            {
                                "type": "text",
                                "text": " .. and yeah the strange loop talk by "
                            },
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": "  was also very inspiring to me, thanks!"
                            },
                            {
                                "type": "emoji",
                                "name": "sunglasses",
                                "unicode": "1f60e"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-5",
                "users": [
                    "U023V63MF6V"
                ],
                "count": 1
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1665931822.713489",
        "client_msg_id": "0F988684-615D-43DA-B7E3-471C76A2DAAF",
        "text": "I’ve been thinking about how to make a domain specific editor for my new job. I’m working on a new JIT compiler for Ruby. It’s fairly well developed, but the tooling around it leaves a lot to be desired. I can definitely use lldb for most of it and do, but it is almost never what I actually want. \n\nI’ve been trying to think about how I can make my debugger context-sensitive. The bugs I’m tracking down are almost all, in development bugs. So why not show my code changes instead of every file? As I’m developing, I want to know what difference there is in codegen, why not save output between runs and show me only methods that were affected? I have four stacks that I’m working with, the Ruby value stack, the Ruby control stack, the C stack, and a compile time virtual context stack. What if I could visualize all of these at once?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qxl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I"
                            },
                            {
                                "type": "text",
                                "text": "’"
                            },
                            {
                                "type": "text",
                                "text": "ve been thinking about how to make a domain specific editor for my new job. I’m working on a new JIT compiler for Ruby. It’s fairly well developed, but the tooling around it leaves a lot to be desired. I can definitely use lldb for most of it and do, but it is almost never what I actually want. \n\nI’ve been trying to think about how I can make my debugger context-sensitive. The bugs I’m tracking down are almost all, in development bugs. So why not show my code changes instead of every file? As I’m developing, I want to know what difference there is in codegen, why not save output between runs and show me only methods that were affected? I have four stacks that I’m working with, the Ruby value stack, the Ruby control stack, the C stack, and a compile time virtual context stack. What if I could visualize all of these at once?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1665965631.022339",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1665965663.000000"
        },
        "client_msg_id": "11124f00-6d3b-408f-8ea4-e1b90a1b878c",
        "text": "Error recovery is looking _extremely_ promising. I spent an hour live-coding with my kids and didn't have to pop a terminal once. I hope to do a video in a few hours. Lines of code needed to be live:\n• Driver: 118 (over a basic text editor)\n• App: 400 (just the framework bits before the app does anything)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1665594315.849469",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lMq3U",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Error recovery is looking "
                            },
                            {
                                "type": "text",
                                "text": "extremely",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " promising. I spent an hour live-coding with my kids and didn't have to pop a terminal once. I hope to do a video in a few hours. Lines of code needed to be live:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Driver: 118 (over a basic text editor)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "App: 400 (just the framework bits before the app does anything)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            },
            {
                "name": "smile",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "subtype": "thread_broadcast",
        "user": "UCUSW7WVD",
        "thread_ts": "1665594315.849469",
        "root": {
            "text": "I've been having an extended, multimodal conversation with <@U013ZLJARC7> over the course of 2022, culminating in a couple of in-person conversations in recent weeks. Watching his Strange Loop talk (<https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1665503282267399>) finally got something to click in my head, and I put 70 lines of Lua together for this demo. I'm also including the .love file for anyone to try out, which is just a zip file containing said 70 lines of code. Instructions for running it: <https:\/\/love2d.org\/wiki\/Getting_Started>\n\nI can imagine driving this through Emacs or some other Slime-like interface (e.g. <https:\/\/github.com\/jpalardy\/vim-slime>)",
            "files": [
                {
                    "id": "F046XTJBDS4",
                    "mode": "hidden_by_limit"
                },
                {
                    "id": "F046ALCLN20",
                    "mode": "hidden_by_limit"
                }
            ],
            "upload": false,
            "user": "UCUSW7WVD",
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "DRw",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "I've been having an extended, multimodal conversation with "
                                },
                                {
                                    "type": "user",
                                    "user_id": "U013ZLJARC7"
                                },
                                {
                                    "type": "text",
                                    "text": " over the course of 2022, culminating in a couple of in-person conversations in recent weeks. Watching his Strange Loop talk ("
                                },
                                {
                                    "type": "link",
                                    "url": "https:\/\/futureofcoding.slack.com\/archives\/CCL5VVBAN\/p1665503282267399"
                                },
                                {
                                    "type": "text",
                                    "text": ") finally got something to click in my head, and I put 70 lines of Lua together for this demo. I'm also including the .love file for anyone to try out, which is just a zip file containing said 70 lines of code. Instructions for running it: "
                                },
                                {
                                    "type": "link",
                                    "url": "https:\/\/love2d.org\/wiki\/Getting_Started"
                                },
                                {
                                    "type": "text",
                                    "text": "\n\nI can imagine driving this through Emacs or some other Slime-like interface (e.g. "
                                },
                                {
                                    "type": "link",
                                    "url": "https:\/\/github.com\/jpalardy\/vim-slime"
                                },
                                {
                                    "type": "text",
                                    "text": ")"
                                }
                            ]
                        }
                    ]
                }
            ],
            "type": "message",
            "ts": "1665594315.849469",
            "client_msg_id": "b9551e09-b3de-4bbb-ae29-d521794233be",
            "thread_ts": "1665594315.849469",
            "reply_count": 30,
            "reply_users_count": 6,
            "latest_reply": "1666242695.096459",
            "reply_users": [
                "U013ZLJARC7",
                "UCUSW7WVD",
                "UA14TGLTC",
                "UUQ2EQW21",
                "U71PMQ1V0",
                "UJBAJNFLK"
            ],
            "replies": [
                {
                    "user": "U013ZLJARC7",
                    "ts": "1665599896.622049"
                },
                {
                    "user": "U013ZLJARC7",
                    "ts": "1665600075.200439"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1665601689.663509"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1665619782.602009"
                },
                {
                    "user": "UA14TGLTC",
                    "ts": "1665644372.483689"
                },
                {
                    "user": "UUQ2EQW21",
                    "ts": "1665648153.523259"
                },
                {
                    "user": "UA14TGLTC",
                    "ts": "1665670323.669369"
                },
                {
                    "user": "U71PMQ1V0",
                    "ts": "1665685783.693469"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1665811604.346219"
                },
                {
                    "user": "U013ZLJARC7",
                    "ts": "1665863359.669659"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1665863938.946509"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1665864227.532939"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1665864434.666979"
                },
                {
                    "user": "U013ZLJARC7",
                    "ts": "1665864497.862229"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1665864895.597439"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1665865834.321359"
                },
                {
                    "user": "U013ZLJARC7",
                    "ts": "1665873495.631329"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1665965631.022339"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1665989897.803169"
                },
                {
                    "user": "UJBAJNFLK",
                    "ts": "1665992431.658069"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1665994787.211509"
                },
                {
                    "user": "UJBAJNFLK",
                    "ts": "1666000082.616069"
                },
                {
                    "user": "U013ZLJARC7",
                    "ts": "1666024287.650129"
                },
                {
                    "user": "UUQ2EQW21",
                    "ts": "1666085153.905939"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1666157766.491199"
                },
                {
                    "user": "UA14TGLTC",
                    "ts": "1666160741.747089"
                },
                {
                    "user": "UA14TGLTC",
                    "ts": "1666164130.296129"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1666209086.338149"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1666239227.877139"
                },
                {
                    "user": "UA14TGLTC",
                    "ts": "1666242695.096459"
                }
            ],
            "is_locked": false,
            "subscribed": false
        },
        "type": "message",
        "ts": "1665989897.803169",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1665989930.000000"
        },
        "client_msg_id": "a4456add-9e63-43a1-9444-3d4544fce185",
        "text": "Ok, here's a take I spent too much time on. It shows too little, takes too long, etc., etc. But it shows the error flow I have so far. It's clear much more is possible: providing commands to undo the previous edit, inspect variables, etc. The top-level options Common Lisp provides on an error.\n\n<https:\/\/spectra.video\/w\/wkDB5fsjBNBbsqKXGhGzwT> (video; 5 minutes)\n\n(Many thanks to <@UC2A2ARPT> for showing me how to finally up the volume on my mic.)",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kDg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ok, here's a take I spent too much time on. It shows too little, takes too long, etc., etc. But it shows the error flow I have so far. It's clear much more is possible: providing commands to undo the previous edit, inspect variables, etc. The top-level options Common Lisp provides on an error.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/spectra.video\/w\/wkDB5fsjBNBbsqKXGhGzwT"
                            },
                            {
                                "type": "text",
                                "text": " (video; 5 minutes)\n\n(Many thanks to "
                            },
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " for showing me how to finally up the volume on my mic.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    }
]