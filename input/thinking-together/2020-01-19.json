[
    {
        "user": "U7C7B75R6",
        "type": "message",
        "ts": "1579433443.177300",
        "client_msg_id": "4d981271-185e-4a59-ba1b-340e6c98dd8f",
        "text": "Gabriel was interviewed in corecursive podcast though they didn't talked too much about dhall:\n<https:\/\/corecursive.com\/040-tech-evangelism-with-gabriel-gonzalez\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579084874.196600",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FGmS+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Gabriel was interviewed in corecursive podcast though they didn't talked too much about dhall:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/corecursive.com\/040-tech-evangelism-with-gabriel-gonzalez\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1579449559.178900",
        "client_msg_id": "c3328c39-6d1c-485a-9b0c-417ee64f55f2",
        "text": "<@UHDQ62M4P> That is not entirely true. I invested in Light Table\/Eve when it was totally uncool!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579449559.178900",
        "reply_count": 6,
        "reply_users_count": 5,
        "latest_reply": "1579524877.207700",
        "reply_users": [
            "UCUSW7WVD",
            "UC2A2ARPT",
            "UFLN9JFRT",
            "UMYKGHYBA",
            "U5STGTB3J"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1579451950.179100"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1579452416.179300"
            },
            {
                "user": "UFLN9JFRT",
                "ts": "1579453500.183400"
            },
            {
                "user": "UMYKGHYBA",
                "ts": "1579512217.198300"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1579513523.199600"
            },
            {
                "user": "UMYKGHYBA",
                "ts": "1579524877.207700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OBqSs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHDQ62M4P"
                            },
                            {
                                "type": "text",
                                "text": " That is not entirely true. I invested in Light Table\/Eve when it was totally uncool!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "fist",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 2
            },
            {
                "name": "pray",
                "users": [
                    "UEBG0NPDK"
                ],
                "count": 1
            },
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UEBG0NPDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1579451950.179100",
        "client_msg_id": "7a32b63e-e55f-4d0b-b113-ddcc0b6c4c88",
        "text": "Do you think of yourself as a VC, though? I've always found angels (investing their own money) to have more original thinking than VCs (who are required to display rational astrology: <https:\/\/www.interfluidity.com\/v2\/3513.html|https:\/\/www.interfluidity.com\/v2\/3513.html>)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579449559.178900",
        "parent_user_id": "UFLN9JFRT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lQw5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Do you think of yourself as a VC, though? I've always found angels (investing their own money) to have more original thinking than VCs (who are required to display rational astrology: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.interfluidity.com\/v2\/3513.html",
                                "text": "https:\/\/www.interfluidity.com\/v2\/3513.html"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1579452416.179300",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1579452429.000000"
        },
        "client_msg_id": "ea26303d-e3b1-468a-9aa8-55a0749ffb03",
        "text": "I also \"invested\" in LightTable, if Kickstarter counts as investment :P",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579449559.178900",
        "parent_user_id": "UFLN9JFRT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3ejV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I also \"invested\" in LightTable, if Kickstarter counts as investment :P"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1579452913.179600",
        "client_msg_id": "e67dffe7-5c20-4097-a7cc-74e4c3740d69",
        "text": "what's funny is that I expected the reference to \"nocode\" to be under \"Developer Tools\", but instead it came under \"The Enterprise Dabblers\", maybe that's telling? Though I appreciate trying to tackle a problem in a limited domain first, don't get me wrong",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579366438.076800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fDtAZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "what's funny is that I expected the reference to \"nocode\" to be under \"Developer Tools\", but instead it came under \"The Enterprise Dabblers\", maybe that's telling? Though I appreciate trying to tackle a problem in a limited domain first, don't get me wrong"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1579453500.183400",
        "client_msg_id": "BE5F1598-0C41-4F8C-B8C4-0BE4A9A0C9D5",
        "text": "Yes Kickstarter counts too as an investment. I used to be a VC in a private fund where we invested in a lot of startups. But lighttable \/ eve I did on my own. VC is mostly an overblown term people use these days to sound important though, as most VCs lose money and never make it ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579449559.178900",
        "parent_user_id": "UFLN9JFRT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iIzR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes Kickstarter counts too as an investment. I used to be a VC in a private fund where we invested in a lot of startups. But lighttable \/ eve I did on my own. VC is mostly an overblown term people use these days to sound important though, as most VCs lose money and never make it "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1579454881.183900",
        "edited": {
            "user": "UJ6LDMMN0",
            "ts": "1579455341.000000"
        },
        "client_msg_id": "063859b0-8e1d-4436-b728-15c0719895d1",
        "text": "Hi Ben, and welcome! It is good to see that a Scratch team member joins this community. :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579300289.037700",
        "parent_user_id": "USF232R18",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YK0np",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi Ben, and welcome! It is good to see that a Scratch team member joins this community. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1579455054.184100",
        "client_msg_id": "67d4e760-3c05-4ce1-b138-aa46aaf30007",
        "text": "I am using Scratch for creative workshops with since 5 years and really enjoy it. I also use it to show what programming is for adults and it is a great tool for that.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579300289.037700",
        "parent_user_id": "USF232R18",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JSed",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am using Scratch for creative workshops with since 5 years and really enjoy it. I also use it to show what programming is for adults and it is a great tool for that."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1579455325.184300",
        "client_msg_id": "0428f773-780a-447f-9f70-df0283e14508",
        "text": "Scratch is an inspiring tool for my thougts about the future of programming and how to make programming more end-user friendly.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579300289.037700",
        "parent_user_id": "USF232R18",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bvvJ3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Scratch is an inspiring tool for my thougts about the future of programming and how to make programming more end-user friendly."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U7C7B75R6",
        "type": "message",
        "ts": "1579463552.184800",
        "client_msg_id": "7d92016f-2169-4bd8-8963-c6b59539e3be",
        "text": "Approach I like is to use separated operators for different functions. For example: 7 \/ 2 = 3.5, 7 \/\/ 2 = 3, 1 + 2 = 3, \"1\" ++ \"2\" = \"12\".\nWhen you limit ambiguity on one side it's much more safe to allow \"1\" + \"2\" = 3 because we know that '+' is always mathematical plus operator.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579212773.252900",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UW9a",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Approach I like is to use separated operators for different functions. For example: 7 \/ 2 = 3.5, 7 \/\/ 2 = 3, 1 + 2 = 3, \"1\" ++ \"2\" = \"12\".\nWhen you limit ambiguity on one side it's much more safe to allow \"1\" + \"2\" = 3 because we know that '+' is always mathematical plus operator."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJN1TAYEQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1579468936.185200",
        "client_msg_id": "c0cd3639-9f7a-463a-a467-607ac7b778da",
        "text": "<@U7C7B75R6> I agree, it's the only sensible and correct way to design math operators. There is a paper by John Reynolds that formalizes the design principle using category theory.\n\nIf you introduce a coercion between strings and numbers, then you have a problem, because there isn't a one to one correspondence between strings and numbers. There are multiple string representations for each number. For example, 1==1.0 and 01==1, but \"1\" != \"1.0\" and \"01\" != \"1\". So now your equality operator is broken, and the way to fix it, according to this principle, is to do what Perl 5 does, and provide different equality operators for numbers and strings. In other words, a coercion between numbers and strings doesn't simplify anything, it just pushes language complexity from one place to another.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579212773.252900",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WEy0m",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U7C7B75R6"
                            },
                            {
                                "type": "text",
                                "text": " I agree, it's the only sensible and correct way to design math operators. There is a paper by John Reynolds that formalizes the design principle using category theory.\n\nIf you introduce a coercion between strings and numbers, then you have a problem, because there isn't a one to one correspondence between strings and numbers. There are multiple string representations for each number. For example, 1==1.0 and 01==1, but \"1\" != \"1.0\" and \"01\" != \"1\". So now your equality operator is broken, and the way to fix it, according to this principle, is to do what Perl 5 does, and provide different equality operators for numbers and strings. In other words, a coercion between numbers and strings doesn't simplify anything, it just pushes language complexity from one place to another."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1579469565.186900",
        "client_msg_id": "D78FAE3A-F370-424D-B508-D22B0CB0EE72",
        "text": "<@U7C7B75R6> What’s the behavior if the values are of different types?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579212773.252900",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9feAQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U7C7B75R6"
                            },
                            {
                                "type": "text",
                                "text": " What’s the behavior if the values are of different types?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U7C7B75R6",
        "type": "message",
        "ts": "1579470293.187200",
        "client_msg_id": "c45e1e1e-8f55-40ca-85d6-287c0fb9c3eb",
        "text": "<@UJN1TAYEQ> yea that's true. And to be precise coercion between strings and numbers parts wasn't included to things I like :sweat_smile:\n\n<@ULM3U6275> \"\/\" is float -&gt; float -&gt; float so if any input is integer they are converted to float. \"\/\/\" is int -&gt; int -&gt; int and if you are trying to insert float you should &lt;placeholder for some trade-off&gt; :grin:\n\nBut one thing I have been considered is implicit write &amp; explicit read separation. So you could write implicit way: \"1\" + \"2\" but derived form of that code would be int.parse(\"1\") + int.parse(\"2\").\nSomething like: <https:\/\/www.beslogic.com\/wp-content\/uploads\/2018\/05\/type-inference.png>\nStill challenge is that such visualization separations doesn't fit too well on text edit.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579212773.252900",
        "parent_user_id": "ULM3U6275",
        "attachments": [
            {
                "fallback": "874x307px image",
                "image_url": "https:\/\/www.beslogic.com\/wp-content\/uploads\/2018\/05\/type-inference.png",
                "image_width": 874,
                "image_height": 307,
                "image_bytes": 42914,
                "from_url": "https:\/\/www.beslogic.com\/wp-content\/uploads\/2018\/05\/type-inference.png",
                "id": 1,
                "original_url": "https:\/\/www.beslogic.com\/wp-content\/uploads\/2018\/05\/type-inference.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XkY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " yea that's true. And to be precise coercion between strings and numbers parts wasn't included to things I like "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "ULM3U6275"
                            },
                            {
                                "type": "text",
                                "text": " \"\/\" is float -> float -> float so if any input is integer they are converted to float. \"\/\/\" is int -> int -> int and if you are trying to insert float you should <placeholder for some trade-off> "
                            },
                            {
                                "type": "emoji",
                                "name": "grin",
                                "unicode": "1f601"
                            },
                            {
                                "type": "text",
                                "text": "\n\nBut one thing I have been considered is implicit write & explicit read separation. So you could write implicit way: \"1\" + \"2\" but derived form of that code would be int.parse(\"1\") + int.parse(\"2\").\nSomething like: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.beslogic.com\/wp-content\/uploads\/2018\/05\/type-inference.png"
                            },
                            {
                                "type": "text",
                                "text": "\nStill challenge is that such visualization separations doesn't fit too well on text edit."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U7C7B75R6",
        "type": "message",
        "ts": "1579471100.187500",
        "client_msg_id": "54a86bd8-2ce6-4117-816e-ba4774eccc92",
        "text": "Video on following thread is quite describing current state of GUIs (<https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1579324191059700>). GUI is usually flat static object with literals. Interaction is only about editing literals and navigation between views. We can copy some literals to clipboard and recover them but for example you cannot even copy\/paste value of multi select button.\n\nMaybe:\n-Treat all literals as real copy pasteable values like mutiselect buttons, radios, checkboxes, file inputs etc.\n-Treat composition of form values as first class 'thing'\n-Allow user to manage those literals outside of specific form\n-Allow user to define variable so that single value can be updated easily on multiple places",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "be27878783b4",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-04-10\/604262911488_be27878783b4b23a5ed4_72.png",
            "first_name": "",
            "real_name": "Niko Autio",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "niko.elmari",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579320626.049700",
        "parent_user_id": "UMWF81HTP",
        "attachments": [
            {
                "from_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1579324191059700",
                "fallback": "[January 17th, 2020 9:09 PM] noahtren: What would you call a visual tool or widget that generates code based on how you interact with it? Kind of like a midpoint between code and nocode in my mind. Here's a great example:  <https:\/\/twitter.com\/Raathigesh\/status\/1133357919427223553?s=19|https:\/\/twitter.com\/Raathigesh\/status\/1133357919427223553?s=19>",
                "ts": "1579324191.059700",
                "author_id": "UQPHR6Y3S",
                "author_subname": "noahtren",
                "channel_id": "C5T9GPWFL",
                "is_msg_unfurl": true,
                "is_thread_root_unfurl": true,
                "text": "What would you call a visual tool or widget that generates code based on how you interact with it? Kind of like a midpoint between code and nocode in my mind. Here's a great example:  <https:\/\/twitter.com\/Raathigesh\/status\/1133357919427223553?s=19|https:\/\/twitter.com\/Raathigesh\/status\/1133357919427223553?s=19>",
                "author_name": "noahtren",
                "author_link": "https:\/\/futureofcoding.slack.com\/team\/UQPHR6Y3S",
                "author_icon": "https:\/\/avatars.slack-edge.com\/2020-01-09\/890538367777_072ed9b65c977f61e33b_48.jpg",
                "mrkdwn_in": [
                    "text"
                ],
                "id": 1,
                "original_url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1579324191059700",
                "footer": "Thread in Slack Conversation"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tBU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Video on following thread is quite describing current state of GUIs ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1579324191059700"
                            },
                            {
                                "type": "text",
                                "text": "). GUI is usually flat static object with literals. Interaction is only about editing literals and navigation between views. We can copy some literals to clipboard and recover them but for example you cannot even copy\/paste value of multi select button.\n\nMaybe:\n-Treat all literals as real copy pasteable values like mutiselect buttons, radios, checkboxes, file inputs etc.\n-Treat composition of form values as first class 'thing'\n-Allow user to manage those literals outside of specific form\n-Allow user to define variable so that single value can be updated easily on multiple places"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UMWF81HTP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UD3AK9JRF",
        "type": "message",
        "ts": "1579471627.187800",
        "client_msg_id": "848e1964-c611-412c-9c6c-48b5ec98efd6",
        "text": "Delighted to see some Latour in there.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g35dfa49055c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/235dfa49055c0a25f2ccfc667a7a6b77.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0001-72.png",
            "first_name": "Peter",
            "real_name": "Peter Abrahamsen",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "rainhead",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579382384.130500",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+fKat",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Delighted to see some Latour in there."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1579489161.188300",
        "client_msg_id": "32436f11-9ffa-45f7-a0c1-a0d8cf43dc2f",
        "text": "<@UJ6LDMMN0> glad to hear your story.  I've always found Scratch to balance approachability with depth far better than it first appears.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579300289.037700",
        "parent_user_id": "USF232R18",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8DqK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJ6LDMMN0"
                            },
                            {
                                "type": "text",
                                "text": " glad to hear your story.  I've always found Scratch to balance approachability with depth far better than it first appears."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMWF81HTP",
        "type": "message",
        "ts": "1579492403.188700",
        "client_msg_id": "2be77d7b-c73c-459e-9ed9-e70a9b18bd0a",
        "text": "<@U7C7B75R6> I'm actually in the very early stages of an exploration into what the GUI would be like if all values and views were individually addressable, so they can be pointed to, combined, and reacted against, in a space of continuous context-preserving navigation. Inspired by Smalltalk and Morphic, but trying to place it in the contemporary context of smartphones, multiple devices, apps, and services.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4022671f3400",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-03\/775814402657_4022671f340032b9eb75_72.jpg",
            "first_name": "yoshiki",
            "real_name": "yoshiki",
            "display_name": "yoshiki",
            "team": "T5TCAFTA9",
            "name": "yoshikischmitz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579320626.049700",
        "parent_user_id": "UMWF81HTP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "57P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U7C7B75R6"
                            },
                            {
                                "type": "text",
                                "text": " I'm actually in the very early stages of an exploration into what the GUI would be like if all values and views were individually addressable, so they can be pointed to, combined, and reacted against, in a space of continuous context-preserving navigation. Inspired by Smalltalk and Morphic, but trying to place it in the contemporary context of smartphones, multiple devices, apps, and services."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UJN1TAYEQ",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1579494764.190400",
        "client_msg_id": "d07667cf-cf4f-46ed-9cb3-1b14cf3d963b",
        "text": "When I look at conventional GUIs, even on mobile, what I see is not what I want. Everything I see on the screen should be an object running on some underlying VM. I should be able to interact with any object I see. I should be able to view the source code of any object on the screen, and edit it (this is my idea of what \"open source\" should mean). Obviously, any text I see should be selectable\/copyable. This means inventing a new and richer GUI interaction language. <@UMWF81HTP>, are any of your explorations in a blog or on github?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579320626.049700",
        "parent_user_id": "UMWF81HTP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zjQy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When I look at conventional GUIs, even on mobile, what I see is not what I want. Everything I see on the screen should be an object running on some underlying VM. I should be able to interact with any object I see. I should be able to view the source code of any object on the screen, and edit it (this is my idea of what \"open source\" should mean). Obviously, any text I see should be selectable\/copyable. This means inventing a new and richer GUI interaction language. "
                            },
                            {
                                "type": "user",
                                "user_id": "UMWF81HTP"
                            },
                            {
                                "type": "text",
                                "text": ", are any of your explorations in a blog or on github?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UMWF81HTP",
                    "UFLN9JFRT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UMWF81HTP",
        "type": "message",
        "ts": "1579495824.190600",
        "edited": {
            "user": "UMWF81HTP",
            "ts": "1579495872.000000"
        },
        "client_msg_id": "7118b6e9-c6f5-4507-bdd2-5425ac27004c",
        "text": "<@UJN1TAYEQ> Totally agree! I have some previews of a comic I'm working on regarding this topic on Twitter(<https:\/\/twitter.com\/yoshikischmitz\/status\/1188455560045158400>), but my perspective on what the UI should be like has evolved since then. Besides twitter, once I do get something ready for more public consumption I'll post it to <#CCL5VVBAN|share-your-work>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4022671f3400",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-03\/775814402657_4022671f340032b9eb75_72.jpg",
            "first_name": "yoshiki",
            "real_name": "yoshiki",
            "display_name": "yoshiki",
            "team": "T5TCAFTA9",
            "name": "yoshikischmitz",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579320626.049700",
        "parent_user_id": "UMWF81HTP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WCz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " Totally agree! I have some previews of a comic I'm working on regarding this topic on Twitter("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/yoshikischmitz\/status\/1188455560045158400"
                            },
                            {
                                "type": "text",
                                "text": "), but my perspective on what the UI should be like has evolved since then. Besides twitter, once I do get something ready for more public consumption I'll post it to "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CCL5VVBAN"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U8A5MS6R1",
                    "UJN1TAYEQ",
                    "U7C7B75R6",
                    "UML4ZEKDK",
                    "UHWC9PXBL"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1579500703.191800",
        "client_msg_id": "2dbe2e1a-0391-4113-8491-49815478dbb6",
        "text": "<@UJN1TAYEQ> I don't see how this is possible. Every single text entry control in the wild has at least one million lines of code underlying that supposedly simple control. I assert that the difficulty of programming a text entry control prevents a startup from building a new operating system. Anyone with a medium degree of competency can make buttons and sliders, but the minute you ask for switching between left-to-right languages and right-to-left, and rendering TrueType with kerning and ligatures and fancy swashes, you are now in a sea of underlying modules and technologies. TrueType is this weird language that holds the letter shapes. Almost everyone thinks that a font is some kind of vector artwork file, but it is not; it is a programming language that is executed by an interpreter, and I doubt there are 100 active programmers who know it, it so obscure. A truly bizarre language it is, basically a domain specific 2D vector to raster language. A lot of the other controls an OS offers are indeed simple inside, and could easily be interact-able\/editable. It is one of the central reasons why there are so few graphical OS'es to choose from. You have Windows, IOS\/OSX, Android, and the slightly inferior Unix renderers, which never got near the sophistication of the others. I would argue that one of the reasons why we haven't gone full 3D in OS'es is the subtleties surrounding text processing are quite difficult. People often fail to grasp how powerful Adobe was in the beginning, and how both MS and Apple conspired to damage Adobe by inventing their own rendering technology so they could avoid using Adobe's renderers. (The predecessor of Postscript was invented at, yes you guessed it Xerox PARC). You can see in the Adobe products that they do their own rendering, and even have optical kerning (the subtle squeezing of letters together so they read better). And let's not forget all the Input Method Editors that are used with Chinese, Japanese, and Korean, which require very sophisticated algorithms to minimize keystrokes. those are part of every input field, implied, and each OS has pursued slightly different approaches. This is why only giant companies can make an OS today.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579320626.049700",
        "parent_user_id": "UMWF81HTP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JkR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " I don't see how this is possible. Every single text entry control in the wild has at least one million lines of code underlying that supposedly simple control. I assert that the difficulty of programming a text entry control prevents a startup from building a new operating system. Anyone with a medium degree of competency can make buttons and sliders, but the minute you ask for switching between left-to-right languages and right-to-left, and rendering TrueType with kerning and ligatures and fancy swashes, you are now in a sea of underlying modules and technologies. TrueType is this weird language that holds the letter shapes. Almost everyone thinks that a font is some kind of vector artwork file, but it is not; it is a programming language that is executed by an interpreter, and I doubt there are 100 active programmers who know it, it so obscure. A truly bizarre language it is, basically a domain specific 2D vector to raster language. A lot of the other controls an OS offers are indeed simple inside, and could easily be interact-able\/editable. It is one of the central reasons why there are so few graphical OS'es to choose from. You have Windows, IOS\/OSX, Android, and the slightly inferior Unix renderers, which never got near the sophistication of the others. I would argue that one of the reasons why we haven't gone full 3D in OS'es is the subtleties surrounding text processing are quite difficult. People often fail to grasp how powerful Adobe was in the beginning, and how both MS and Apple conspired to damage Adobe by inventing their own rendering technology so they could avoid using Adobe's renderers. (The predecessor of Postscript was invented at, yes you guessed it Xerox PARC). You can see in the Adobe products that they do their own rendering, and even have optical kerning (the subtle squeezing of letters together so they read better). And let's not forget all the Input Method Editors that are used with Chinese, Japanese, and Korean, which require very sophisticated algorithms to minimize keystrokes. those are part of every input field, implied, and each OS has pursued slightly different approaches. This is why only giant companies can make an OS today."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UFLN9JFRT",
                    "UE0ETTCG7"
                ],
                "count": 3
            }
        ]
    }
]