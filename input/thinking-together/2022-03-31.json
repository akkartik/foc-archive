[
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1648719023.215139",
        "client_msg_id": "78c83487-2f22-4502-9d17-032bb2ad4034",
        "text": "Is there a \"grammar\/pattern\/algebra of parser combinators\" somewhere?\nSomething that describe the common parts that most parser combinators have, choice, iteration and so on",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1648719023.215139",
        "reply_count": 4,
        "reply_users_count": 4,
        "latest_reply": "1649229281.264409",
        "reply_users": [
            "UGWUJUZHT",
            "UUQ2EQW21",
            "UK3LH8CF5",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UGWUJUZHT",
                "ts": "1648721074.865399"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1648733035.472999"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1648748658.249439"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1649229281.264409"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+g7H6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is there a \"grammar\/pattern\/algebra of parser combinators\" somewhere?\nSomething that describe the common parts that most parser combinators have, choice, iteration and so on"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1648721074.865399",
        "client_msg_id": "7d119e7e-7e38-4ea8-9836-3d26b8756deb",
        "text": "A: PEG\n\nbut...\n\nDSL for parsing == Ohm-JS.\nOhm-JS &gt;&gt; PEG &gt;&gt; parsing combinators (IMO)\nolder DSL for parsing == S\/SL (Syntax \/ Semantic Language), superseded by PEG\n\n[SSL and PT compiler](<https:\/\/research.cs.queensu.ca\/home\/cordy\/pub\/downloads\/ssl\/>)\n[Ohm-JS](<https:\/\/ohmjs.org>)\n[PEG](<https:\/\/en.wikipedia.org\/wiki\/Parsing_expression_grammar>)\n\n(fyi, you might use Ohm to create source code for parsing combinators in any target language, not just JS)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1648719023.215139",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "from_url": "https:\/\/ohmjs.org\/",
                "service_icon": "https:\/\/ohmjs.org\/img\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/ohmjs.org",
                "fallback": "Ohm: a user-friendly parsing toolkit for JavaScript and Typescript",
                "text": "Ohm is a parsing toolkit for JavaScript, consisting of a library and a domain-specific language. You can use it to parse custom file formats or quickly build parsers, interpreters, and compilers for programming languages.",
                "title": "Ohm: a user-friendly parsing toolkit for JavaScript and Typescript",
                "title_link": "https:\/\/ohmjs.org\/",
                "service_name": "ohmjs.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hkx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A: PEG\n\nbut...\n\nDSL for parsing == Ohm-JS.\nOhm-JS >> PEG >> parsing combinators (IMO)\nolder DSL for parsing == S\/SL (Syntax \/ Semantic Language), superseded by PEG\n\n[SSL and PT compiler]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/research.cs.queensu.ca\/home\/cordy\/pub\/downloads\/ssl\/"
                            },
                            {
                                "type": "text",
                                "text": ")\n[Ohm-JS]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/ohmjs.org"
                            },
                            {
                                "type": "text",
                                "text": ")\n[PEG]("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Parsing_expression_grammar"
                            },
                            {
                                "type": "text",
                                "text": ")\n\n(fyi, you might use Ohm to create source code for parsing combinators in any target language, not just JS)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1648733035.472999",
        "client_msg_id": "f9fa3ce0-4360-4f69-b07f-094f960f43c2",
        "text": "My favourite parser combinator implementation.  You can optionally give it a grammar, and it will build the combinators for you.  Very easy to use:\n<https:\/\/github.com\/orangeduck\/mpc>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1648719023.215139",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3bXvH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My favourite parser combinator implementation.  You can optionally give it a grammar, and it will build the combinators for you.  Very easy to use:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/orangeduck\/mpc"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1648748658.249439",
        "client_msg_id": "f5279315-1177-439b-8a43-04c256d0c72d",
        "text": "There are monadic parser combinators. \n\n<http:\/\/www.cs.nott.ac.uk\/~pszgmh\/monparsing.pdf|http:\/\/www.cs.nott.ac.uk\/~pszgmh\/monparsing.pdf>\n\nWalks through combinators that are pretty common",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1648719023.215139",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vF2bQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There are monadic parser combinators. \n\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.cs.nott.ac.uk\/~pszgmh\/monparsing.pdf",
                                "text": "http:\/\/www.cs.nott.ac.uk\/~pszgmh\/monparsing.pdf"
                            },
                            {
                                "type": "text",
                                "text": "\n\nWalks through combinators that are pretty common"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    }
]