[
    {
        "user": "U01JNTE35QS",
        "type": "message",
        "ts": "1613722649.183500",
        "client_msg_id": "c7f68ced-af08-4e8d-817a-252fed742a00",
        "text": "Zig is very interesting, especially the comptime construct that gives a lot of stuff like generics for free. <https:\/\/scattered-thoughts.net\/writing\/assorted-thoughts-on-zig-and-rust\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "97155db555c2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-01-13\/1631845309525_97155db555c2091ecd20_72.jpg",
            "first_name": "",
            "real_name": "Vijay Chakravarthy",
            "display_name": "Vijay Chakravarthy",
            "team": "T5TCAFTA9",
            "name": "vchakrav",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613715502.181500",
        "parent_user_id": "UCUNN529Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FGL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Zig is very interesting, especially the comptime construct that gives a lot of stuff like generics for free. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/scattered-thoughts.net\/writing\/assorted-thoughts-on-zig-and-rust\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0",
                    "UCUNN529Y"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1613750224.185400",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1613750230.000000"
        },
        "client_msg_id": "2419f413-602f-4cf8-87b0-744d3ca0c35a",
        "text": "&gt; *Why is it so hard to see code from 5 minutes ago?*\n&gt; \n&gt; A study found that Java developers _backtracked_ every 6 minutes, meaning they reverted their code to a previous state. These undo actions come in bursts and are often followed by successive redo actions. In fact, one participant in a different study used undo\/redo 40 times in 5 minutes! When asked why they did this, they revealed they were trying to view some intermediate state of the code in the middle of a change. Why is it so hard to see code from 5 minutes ago while in the middle of a change?\nThe author later presents a prototype named Yestercode\n\n&gt; It lets you _swipe_ through your code history on a timeline, much like you would a YouTube video. As you make edits, it aggregates them and puts a notch on the timeline for that version. You can then use the timeline to go to a previous version, giving you a side-by-side view with the current version of the code. The previous version is read-only, but still allows copying and pasting from it. It also shows annotations so that you know what has been changed in later versions (much like a diff).\n<https:\/\/web.eecs.utk.edu\/~azh\/blog\/yestercode.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613750224.185400",
        "reply_count": 9,
        "reply_users_count": 8,
        "latest_reply": "1613983702.025900",
        "reply_users": [
            "UC2A2ARPT",
            "U01KZQEQVUP",
            "U016VUZGUUQ",
            "UCUSW7WVD",
            "UHWC9PXBL",
            "U013ZLJARC7",
            "UJ6LDMMN0",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1613752814.185700"
            },
            {
                "user": "U01KZQEQVUP",
                "ts": "1613754237.187700"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1613755120.187900"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1613774192.188300"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1613789718.007800"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1613813649.008900"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1613980350.022600"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1613980502.022800"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1613983702.025900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Nka3f",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why is it so hard to see code from 5 minutes ago?",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n\nA study found that Java developers "
                            },
                            {
                                "type": "text",
                                "text": "backtracked",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " every 6 minutes, meaning they reverted their code to a previous state. These undo actions come in bursts and are often followed by successive redo actions. In fact, one participant in a different study used undo\/redo 40 times in 5 minutes! When asked why they did this, they revealed they were trying to view some intermediate state of the code in the middle of a change. Why is it so hard to see code from 5 minutes ago while in the middle of a change?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThe author later presents a prototype named Yestercode\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It lets you "
                            },
                            {
                                "type": "text",
                                "text": "swipe",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " through your code history on a timeline, much like you would a YouTube video. As you make edits, it aggregates them and puts a notch on the timeline for that version. You can then use the timeline to go to a previous version, giving you a side-by-side view with the current version of the code. The previous version is read-only, but still allows copying and pasting from it. It also shows annotations so that you know what has been changed in later versions (much like a diff)."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/web.eecs.utk.edu\/~azh\/blog\/yestercode.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "sunglasses",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "U8A5MS6R1"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1613752814.185700",
        "client_msg_id": "1de35444-cfc5-4338-bdce-42813367913d",
        "text": "I'd be curious to know how many programmers _don't ever_ hold down on undo to roll back a few hundred changes, do something, and then redo back up to the present. I find myself doing that at least once every few months, and I've heard other folks anecdotally talk about doing the same.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613750224.185400",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7G+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd be curious to know how many programmers "
                            },
                            {
                                "type": "text",
                                "text": "don't ever",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " hold down on undo to roll back a few hundred changes, do something, and then redo back up to the present. I find myself doing that at least once every few months, and I've heard other folks anecdotally talk about doing the same."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD",
                    "UHWC9PXBL",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "U01KZQEQVUP",
        "type": "message",
        "ts": "1613754237.187700",
        "client_msg_id": "ee17e9de-2ff9-47db-92c1-6c156df8612d",
        "text": "Yeah, bulk undo &amp; redo happens every once in a while. Though mostly I *try* to keep commits and small and use VCS diffs, but when that fails, I'm back to hoping I haven't messed up my redo stack somehow.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9ff8c2de03db",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-01-30\/1694828418931_9ff8c2de03dba11dab1d_72.jpg",
            "first_name": "",
            "real_name": "Florian Cäsar",
            "display_name": "Florian Cäsar",
            "team": "T5TCAFTA9",
            "name": "florian.caesar",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613750224.185400",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ejd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, bulk undo & redo happens every once in a while. Though mostly I "
                            },
                            {
                                "type": "text",
                                "text": "try",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to keep commits and small and use VCS diffs, but when that fails, I'm back to hoping I haven't messed up my redo stack somehow."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1613755120.187900",
        "client_msg_id": "55bf9a04-fe00-48c8-8b08-294f56d48569",
        "text": "I don't think I've ever done that, and had no idea it could be widespread. Version control actually does (mostly) solve this problem for me, because I don't feel shy about committing every few minutes if that's what it takes. I do however look at my current git diff a *lot*, and diffs of other recent changes pretty often.\n\nIt's true that it's still a pain to copy-paste out of history or otherwise partially restore it. The UI this author proposes sounds neat, but only if it transparently works with (at least) git.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613750224.185400",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EdP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't think I've ever done that, and had no idea it could be widespread. Version control actually does (mostly) solve this problem for me, because I don't feel shy about committing every few minutes if that's what it takes. I do however look at my current git diff a"
                            },
                            {
                                "type": "text",
                                "text": " lot",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ", and diffs of other recent changes pretty often.\n\nIt's true that it's still a pain to copy-paste out of history or otherwise partially restore it. The UI this author proposes sounds neat, but only if it transparently works with (at least) git."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1613774192.188300",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1613774200.000000"
        },
        "client_msg_id": "1e910a45-941a-467c-a85d-5b55326dd4fb",
        "text": "As an anecdote, I spent some time yesterday yet again trying to make sense of <http:\/\/paulgraham.com\/bel.html>. The sources are lots of tiny functions. But there's tons of calls between functions, and I'm constantly yoyoing between them. One of the things I want to enable in my project is allowing functions to be moved around independent of each other, so that I can move related functions around for the duration of a session. Kinda like Tiddlywiki (cross-link <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1613629318245700>) I also recall that the original Light Table demo did this really well.\n\nI think such a feature would help here?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613750224.185400",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nE+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "As an anecdote, I spent some time yesterday yet again trying to make sense of "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/paulgraham.com\/bel.html"
                            },
                            {
                                "type": "text",
                                "text": ". The sources are lots of tiny functions. But there's tons of calls between functions, and I'm constantly yoyoing between them. One of the things I want to enable in my project is allowing functions to be moved around independent of each other, so that I can move related functions around for the duration of a session. Kinda like Tiddlywiki (cross-link "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1613629318245700"
                            },
                            {
                                "type": "text",
                                "text": ") I also recall that the original Light Table demo did this really well.\n\nI think such a feature would help here?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U016VUZGUUQ",
        "type": "message",
        "ts": "1613774698.190400",
        "client_msg_id": "2ecf09cf-f2ac-4904-863b-0fc0a47d525b",
        "text": "This paper has a neat notation for programs that transform other programs. It's also as good an intro to the Futamura projections as any I've read.\n\n<https:\/\/arxiv.org\/abs\/1611.09906|https:\/\/arxiv.org\/abs\/1611.09906>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaee3c99144d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aee3c99144dfc6644c6c1f1303683140.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "Andrew F",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewflnr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "arXiv.org",
                "title": "Revisiting the Futamura Projections: A Diagrammatic Approach",
                "title_link": "https:\/\/arxiv.org\/abs\/1611.09906",
                "text": "The advent of language implementation tools such as PyPy and Truffle\/Graal have reinvigorated and broadened interest in topics related to automatic compiler generation and optimization. Given this...",
                "fallback": "arXiv.org: Revisiting the Futamura Projections: A Diagrammatic Approach",
                "from_url": "https:\/\/arxiv.org\/abs\/1611.09906",
                "service_icon": "https:\/\/static.arxiv.org\/static\/browse\/0.3.2.6\/images\/icons\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/arxiv.org\/abs\/1611.09906"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Inw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This paper has a neat notation for programs that transform other programs. It's also as good an intro to the Futamura projections as any I've read.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/arxiv.org\/abs\/1611.09906",
                                "text": "https:\/\/arxiv.org\/abs\/1611.09906"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS",
                    "UF71PR58X",
                    "UML4ZEKDK"
                ],
                "count": 3
            },
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            },
            {
                "name": "yum",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1613788777.001900",
        "client_msg_id": "6254AEBE-2655-4796-9D1C-59CEE4AF2444",
        "text": "gary’s mod is a great example of a game that doesn’t seem to have artificial hurdles except those imposed by the players ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613514848.149300",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cs8kx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "gary’s mod is a great example of a game that doesn’t seem to have artificial hurdles except those imposed by the players "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1613789086.003500",
        "client_msg_id": "B5D0E9D9-7690-4A62-B10A-FA7857D2D91D",
        "text": "man i saw an extremely good youtube video on a geometric definition of bezier curves for laypeople and now i can’t find it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613514848.149300",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GyDm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "man i saw an extremely good youtube video on a geometric definition of bezier curves for laypeople and now i can’t find it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1613789184.004200",
        "client_msg_id": "79653059-E49B-4584-B59E-8A3F4EF614BF",
        "text": "if text is so great, why do we need hyperlinks?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613561494.159300",
        "parent_user_id": "U01L1TTFP62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4C4Pm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "if text is so great, why do we need hyperlinks?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0",
                    "UDKTZSD6H"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1613789718.007800",
        "client_msg_id": "B378FAA6-672D-4BE5-BA94-44201529B087",
        "text": "i’m working on this problem in the context of web browsing. i genuinely think scrolling is a ux antipattern (at least most of the time) and the times i end up needing to undo, whether on git or via keyboard, almost always boil down to switching assumptions about the code i wrote that has just moved out of view. <@UCUSW7WVD> you might be interested in the <https:\/\/www.google.com\/search?client=firefox-b-m&amp;q=berry+picking+search+strategy&amp;spell=1&amp;sa=X&amp;ved=2ahUKEwjI-tn6uvfuAhVnQt8KHd_6CGYQBSgAegQIARAC&amp;biw=375&amp;bih=631&amp;dpr=3|berrypicking search strategy> literature",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613750224.185400",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wnd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i’m working on this problem in the context of web browsing. i genuinely think scrolling is a ux antipattern (at least most of the time) and the times i end up needing to undo, whether on git or via keyboard, almost always boil down to switching assumptions about the code i wrote that has just moved out of view. "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " you might be interested in the"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.google.com\/search?client=firefox-b-m&q=berry+picking+search+strategy&spell=1&sa=X&ved=2ahUKEwjI-tn6uvfuAhVnQt8KHd_6CGYQBSgAegQIARAC&biw=375&bih=631&dpr=3",
                                "text": "berrypicking search strategy"
                            },
                            {
                                "type": "text",
                                "text": " literature"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    }
]