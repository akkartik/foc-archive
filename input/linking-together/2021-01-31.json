[
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1612090695.034300",
        "client_msg_id": "ed626e6f-3309-4266-9ea5-3c60e39bfe5c",
        "text": "Hmm... The thread contains the usual arguments and positions that seem to be set in stone. In my opinion, there are good arguments on both sides of the VPL vs. textual PL argument when you filter the irrelevant nonsense out (e.g. \"I can type faster than I can drag nodes\").\n\nGenerally, the discussion is about whether relations between parts of the system should be displayed visually (e.g. by lines connecting blocks) or implicitly by having the same name in two places (e.g. function declaration and function usage). The latter approach requires the programmer to imagine the structure in their head, which requires talent and experience to do well.\n\nHumans are great at understanding spacial structure, so explicitly showing that structure does make sense. If you don't want to take my word for it, look at all the UML stuff or programmers drawing pictures to communicate their ideas.\n\nOn the other hand, showing ALL relations doesn't scale, just as stated in the twitter post that started the discussion. Take a `utils` lib in your project as an example. It is used almost everywhere and disturbs the relevant project structure when shown visually.\nIn my opinion, the crucial point is focus and abstraction. I believe that visually showing \"the bigger picture\" can really help understand a project, especially when it's large. It's just that you can't plot all relationships between all parts on a 2D canvas and expect people to understand it. That's also not what programmers using textual PLs have in mind when they think about the system. It's ok to hide some details in order communicate the higher-level dependencies.\n\nAnother important part is perspective. For code I've written, I have a pretty good mental model and probably don't need to actually see the structure on screen. If I need to understand someone else's project (or my projects from 3 years ago), it's really beneficial to have that overview available. This social issue is probably more important than the technical ones. Experienced programmers and people who mostly work on the projects they created don't benefit from VPL as much as beginners and people trying to understand existing stuff.\n\nI believe that the optimum is somewhere between textual PLs and current VPLs. Being able to choose between different views (see Projectional Editing) seems to make a lot of sense. Additionally, I'd like to see a system where users can specify which parts should be shown visually and which ones shouldn't be. Think of this like a street map where as you zoom out, only the most important streets are shown.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1612032903.026500",
        "parent_user_id": "UBSMEUXAA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Bwy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hmm... The thread contains the usual arguments and positions that seem to be set in stone. In my opinion, there are good arguments on both sides of the VPL vs. textual PL argument when you filter the irrelevant nonsense out (e.g. \"I can type faster than I can drag nodes\").\n\nGenerally, the discussion is about whether relations between parts of the system should be displayed visually (e.g. by lines connecting blocks) or implicitly by having the same name in two places (e.g. function declaration and function usage). The latter approach requires the programmer to imagine the structure in their head, which requires talent and experience to do well.\n\nHumans are great at understanding spacial structure, so explicitly showing that structure does make sense. If you don't want to take my word for it, look at all the UML stuff or programmers drawing pictures to communicate their ideas.\n\nOn the other hand, showing ALL relations doesn't scale, just as stated in the twitter post that started the discussion. Take a "
                            },
                            {
                                "type": "text",
                                "text": "utils",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " lib in your project as an example. It is used almost everywhere and disturbs the relevant project structure when shown visually.\nIn my opinion, the crucial point is focus and abstraction. I believe that visually showing \"the bigger picture\" can really help understand a project, especially when it's large. It's just that you can't plot all relationships between all parts on a 2D canvas and expect people to understand it. That's also not what programmers using textual PLs have in mind when they think about the system. It's ok to hide some details in order communicate the higher-level dependencies.\n\nAnother important part is perspective. For code I've written, I have a pretty good mental model and probably don't need to actually see the structure on screen. If I need to understand someone else's project (or my projects from 3 years ago), it's really beneficial to have that overview available. This social issue is probably more important than the technical ones. Experienced programmers and people who mostly work on the projects they created don't benefit from VPL as much as beginners and people trying to understand existing stuff.\n\nI believe that the optimum is somewhere between textual PLs and current VPLs. Being able to choose between different views (see Projectional Editing) seems to make a lot of sense. Additionally, I'd like to see a system where users can specify which parts should be shown visually and which ones shouldn't be. Think of this like a street map where as you zoom out, only the most important streets are shown."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1612116081.035800",
        "client_msg_id": "D9E09BBC-B181-418F-AADF-05E6A251BC89",
        "text": "<@U01AD80KMLK> The best forum would be <http:\/\/unisonlanguage.slack.com|unisonlanguage.slack.com>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1611837265.011600",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GXC4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01AD80KMLK"
                            },
                            {
                                "type": "text",
                                "text": " The best forum would be "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/unisonlanguage.slack.com",
                                "text": "unisonlanguage.slack.com"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1612118402.036300",
        "client_msg_id": "7fdcfda6-41b8-4704-9653-31d27d179560",
        "text": "this was a fun thing to read, Alan Kay’s reply:\n\n<https:\/\/www.quora.com\/Should-web-browsers-have-stuck-to-being-document-viewers>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1612118402.036300",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1612263048.043500",
        "reply_users": [
            "UC2A2ARPT",
            "UAJKEBGP8",
            "UJFN50C00"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1612122938.036700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1612124083.037000"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1612129557.037200"
            },
            {
                "user": "UJFN50C00",
                "ts": "1612262888.042900"
            },
            {
                "user": "UJFN50C00",
                "ts": "1612263048.043500"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "title": "Should web browsers have stuck to being document viewers? - Quora",
                "title_link": "https:\/\/www.quora.com\/Should-web-browsers-have-stuck-to-being-document-viewers",
                "text": "Actually quite the opposite, if “document” means an imitation of old static text media (and later including pictures, and audio and video recordings). It was being willing to settle for an overly simple text format and formatting scheme — “for con...",
                "fallback": "Should web browsers have stuck to being document viewers? - Quora",
                "from_url": "https:\/\/www.quora.com\/Should-web-browsers-have-stuck-to-being-document-viewers",
                "service_icon": "https:\/\/www.quora.com\/favicon.ico",
                "service_name": "quora.com",
                "id": 1,
                "original_url": "https:\/\/www.quora.com\/Should-web-browsers-have-stuck-to-being-document-viewers"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oKcK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "this was a fun thing to read, Alan Kay’s reply:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.quora.com\/Should-web-browsers-have-stuck-to-being-document-viewers"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "star",
                "users": [
                    "USH01JEDQ",
                    "UBSMEUXAA"
                ],
                "count": 2
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U013ZLJARC7",
                    "U8A5MS6R1"
                ],
                "count": 3
            },
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UJFN50C00"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1612122938.036700",
        "client_msg_id": "b93959d7-fa9f-4c74-8a63-97ef49226523",
        "text": "For anyone who missed it, this is in reply to <https:\/\/twitter.com\/kocienda\/status\/1355344814166876163|a tweet> from Ken Kocienda (who worked on the original Safari team at Apple)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1612118402.036300",
        "parent_user_id": "UAJKEBGP8",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/kocienda|@kocienda>: Web browsers are not operating systems or application development environments. They’re document viewers. The effort to make them into something more than that has been one of the biggest wrong turns in the history of computing.",
                "ts": 1611974359,
                "author_name": "Ken Kocienda",
                "author_link": "https:\/\/twitter.com\/kocienda\/status\/1355344814166876163",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1136694654198374400\/VPn5kLdk_normal.jpg",
                "author_subname": "@kocienda",
                "text": "Web browsers are not operating systems or application development environments. They’re document viewers. The effort to make them into something more than that has been one of the biggest wrong turns in the history of computing.",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/kocienda\/status\/1355344814166876163",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/kocienda\/status\/1355344814166876163",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T5bO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For anyone who missed it, this is in reply to "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/kocienda\/status\/1355344814166876163",
                                "text": "a tweet"
                            },
                            {
                                "type": "text",
                                "text": " from Ken Kocienda (who worked on the original Safari team at Apple)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1612124083.037000",
        "client_msg_id": "55c0d124-da56-4a09-b7b8-eedef2da7b42",
        "text": "&gt; My complaints about the web and the web browsers have been about how poorly they were thought about and implemented, and how weak are both the functionalities of web content and the means for going forward and fixing as many of the most critical mistakes as possible.\nSo it seems Alan is burying the lede a bit, and actually agrees with Ken, albeit arriving at that point from a different start.\n\nGiven the web we got (not the web we wanted), it is a mistake to try to retrofit it into an app platform, especially in such an ad hoc \/ incremental \/ design-by-accretion way. Short of a time machine, though, I'm not sure how we get that web of objects with end-user editing we ought to have.\n\nAs an aside, this bit stuck out:\n\n&gt; One of the great realizations of the early Unix was that the *kernel* of an OS — and essentially the only part that should be in “supervisor mode” — would only manage _*time*_ (quanta for interleaved computations) and _*space*_(memory allocation and levels) and _*encapsulation*_ (processes) — everything else should be expressible in the general vanilla processes of the system.\nThat's what game engines are (naturally). But game engines also don't have to worry as much about all the security, IO, hardware, and other baggage of modern OSes. That means game engines end up being quite pure articulations of that \"time + space + process\" conceptual structure, and I really feel that when working with them. (And others seem to too — quite a few game developers even pass it through to the player via gameplay. Thinking of games like Roblox, Minecraft, Sim[x], etc.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1612118402.036300",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DiLwc",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My complaints about the web and the web browsers have been about how poorly they were thought about and implemented, and how weak are both the functionalities of web content and the means for going forward and fixing as many of the most critical mistakes as possible."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nSo it seems Alan is burying the lede a bit, and actually agrees with Ken, albeit arriving at that point from a different start.\n\nGiven the web we got (not the web we wanted), it is a mistake to try to retrofit it into an app platform, especially in such an ad hoc \/ incremental \/ design-by-accretion way. Short of a time machine, though, I'm not sure how we get that web of objects with end-user editing we ought to have.\n\nAs an aside, this bit stuck out:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One of the great realizations of the early Unix was that the *kernel* of an OS — and essentially the only part that should be in “supervisor mode” — would only manage "
                            },
                            {
                                "type": "text",
                                "text": "time",
                                "style": {
                                    "bold": true,
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (quanta for interleaved computations) and "
                            },
                            {
                                "type": "text",
                                "text": "space",
                                "style": {
                                    "bold": true,
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "(memory allocation and levels) and "
                            },
                            {
                                "type": "text",
                                "text": "encapsulation",
                                "style": {
                                    "bold": true,
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (processes) — everything else should be expressible in the general vanilla processes of the system."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThat's what game engines are (naturally). But game engines also don't have to worry as much about all the security, IO, hardware, and other baggage of modern OSes. That means game engines end up being quite pure articulations of that \"time + space + process\" conceptual structure, and I really feel that when working with them. (And others seem to too — quite a few game developers even pass it through to the player via gameplay. Thinking of games like Roblox, Minecraft, Sim[x], etc.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "raised_hands",
                "users": [
                    "U019W8A1884",
                    "U01L6HZEHFX"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1612129557.037200",
        "client_msg_id": "03023af3-25ca-44e3-bea6-bc0ed3c4c5ca",
        "text": "yeah agreed, the term ‘web browser’ is very specific to current assumptions. The HTML \/ CSS \/ JS paradigm. Then people debate if the browser should do more or less, but often by focusing on the current set of assumptions instead of starting from first principles.\n\nIf you started from first principles, you may not really even need a browser. Or rather, it’d be something way different and the use of that word \/ naming may be inaccurate!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1612118402.036300",
        "parent_user_id": "UAJKEBGP8",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "064R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah agreed, the term ‘web browser’ is very specific to current assumptions. The HTML \/ CSS \/ JS paradigm. Then people debate if the browser should do more or less, but often by focusing on the current set of assumptions instead of starting from first principles.\n\nIf you started from first principles, you may not really even need a browser. Or rather, it’d be something way different and the use of that word \/ naming may be inaccurate!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01L1TTFP62",
        "type": "message",
        "ts": "1612148754.037700",
        "edited": {
            "user": "U01L1TTFP62",
            "ts": "1612148775.000000"
        },
        "client_msg_id": "9A8FD06B-15A3-486C-BD59-169567212A58",
        "text": "Math Inspector: A Visual Programming Environment for Scientific Computing\n\n<https:\/\/news.ycombinator.com\/item?id=25978962|https:\/\/news.ycombinator.com\/item?id=25978962>\n\n<https:\/\/mathinspector.com|https:\/\/mathinspector.com>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "dc9ee60375b5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-01-29\/1687447231174_dc9ee60375b5ce940578_72.png",
            "first_name": "",
            "real_name": "bmitc",
            "display_name": "bmitc",
            "team": "T5TCAFTA9",
            "name": "bmitchell33",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Math Inspector",
                "title_link": "https:\/\/mathinspector.com\/",
                "text": "Math Inspector: visual scientific computing",
                "fallback": "Math Inspector",
                "image_url": "https:\/\/mathinspector.com\/img\/share.jpg",
                "from_url": "https:\/\/mathinspector.com\/",
                "image_width": 338,
                "image_height": 250,
                "image_bytes": 587504,
                "service_icon": "https:\/\/mathinspector.com\/img\/favicon.ico",
                "service_name": "mathinspector.com",
                "id": 1,
                "original_url": "https:\/\/mathinspector.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cQn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Math Inspector: A Visual Programming Environment for Scientific Computing\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=25978962",
                                "text": "https:\/\/news.ycombinator.com\/item?id=25978962"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/mathinspector.com",
                                "text": "https:\/\/mathinspector.com"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UJBAJNFLK",
                    "UPVBV34EL",
                    "UAJKEBGP8",
                    "U013ZLJARC7",
                    "UBSMEUXAA",
                    "U019CPED6T1",
                    "UML4ZEKDK"
                ],
                "count": 7
            },
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UAJKEBGP8"
                ],
                "count": 2
            }
        ]
    }
]