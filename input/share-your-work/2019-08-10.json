[
    {
        "subtype": "thread_broadcast",
        "user": "UCUSW7WVD",
        "thread_ts": "1563932520.045200",
        "root": {
            "user": "UCUSW7WVD",
            "type": "message",
            "ts": "1563932520.045200",
            "client_msg_id": "9eb2ada7-219a-412e-815e-cc7474749d28",
            "text": "I've posted my project before, but there's been enough progress in the last few months that I thought I'd bump it one more time: <https:\/\/github.com\/akkartik\/mu\/blob\/master\/subx\/Readme.md>\n\nYeah, my answer for the Future of Programming starts with a new syntax for Assembly. How the heck did that happen? I certainly didn't plan it to go this way. I've never tried to write out the reason before, and it got too long for Slack, so here's a link to the comment I wrote: <http:\/\/akkartik.name\/post\/this-tree-im-on>",
            "team": "T5TCAFTA9",
            "thread_ts": "1563932520.045200",
            "reply_count": 15,
            "reply_users_count": 3,
            "latest_reply": "1565454424.171900",
            "reply_users": [
                "UHWC9PXBL",
                "UCUSW7WVD",
                "UE6EFEPTQ"
            ],
            "replies": [
                {
                    "user": "UHWC9PXBL",
                    "ts": "1563938000.047000"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1563938385.047200"
                },
                {
                    "user": "UHWC9PXBL",
                    "ts": "1563939542.053300"
                },
                {
                    "user": "UHWC9PXBL",
                    "ts": "1563939566.054000"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1563940263.054300"
                },
                {
                    "user": "UHWC9PXBL",
                    "ts": "1563942121.054900"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1563943538.055200"
                },
                {
                    "user": "UE6EFEPTQ",
                    "ts": "1563955924.055700"
                },
                {
                    "user": "UE6EFEPTQ",
                    "ts": "1563955992.055900"
                },
                {
                    "user": "UE6EFEPTQ",
                    "ts": "1563956230.056100"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1563957612.056300"
                },
                {
                    "user": "UE6EFEPTQ",
                    "ts": "1563957857.056700"
                },
                {
                    "user": "UE6EFEPTQ",
                    "ts": "1563957914.056900"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1564280209.087200"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1565454424.171900"
                }
            ],
            "is_locked": false,
            "subscribed": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "tHY+",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "I've posted my project before, but there's been enough progress in the last few months that I thought I'd bump it one more time: "
                                },
                                {
                                    "type": "link",
                                    "url": "https:\/\/github.com\/akkartik\/mu\/blob\/master\/subx\/Readme.md"
                                },
                                {
                                    "type": "text",
                                    "text": "\n\nYeah, my answer for the Future of Programming starts with a new syntax for Assembly. How the heck did that happen? I certainly didn't plan it to go this way. I've never tried to write out the reason before, and it got too long for Slack, so here's a link to the comment I wrote: "
                                },
                                {
                                    "type": "link",
                                    "url": "http:\/\/akkartik.name\/post\/this-tree-im-on"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "type": "message",
        "ts": "1565454424.171900",
        "client_msg_id": "8b16da19-cccc-48b9-ba34-d2cffad97bb2",
        "text": "Another major milestone: I've successfully packaged Mu up with Linux kernel sources to build a bootable disk image with a single command. <https:\/\/mastodon.social\/@akkartik\/102591745785627782>\n\nGoal is to gradually whittle away at the kernel, make everything more seamless, and eventually replace it with SubX. Still lots to learn, though.",
        "attachments": [
            {
                "service_name": "Mastodon",
                "title": "Kartik Agaram (@akkartik@mastodon.social)",
                "title_link": "https:\/\/mastodon.social\/@akkartik\/102591745785627782",
                "text": "Turn a set of .subx files into a bootable disk image. ``` $ git clone <https:\/\/github.com\/akkartik\/mu> $ cd mu # package up a \"hello world\" binary and Linux kernel into mu.iso $ .\/gen_iso examples\/ex6.subx # try it out $ qemu-system-x86_64 -m 256M -cdrom mu.iso -boot d ``` <https:\/\/github.com\/akkartik\/mu#readme> The process is still fairly klunky, and I've added several large dependencies. But now that I have something working I can start polishing it. Credit: <http:\/\/minimal.linux-bg.org\/>",
                "fallback": "Mastodon: Kartik Agaram (@akkartik@mastodon.social)",
                "thumb_url": "https:\/\/files.mastodon.social\/accounts\/avatars\/000\/255\/426\/original\/92e4e4f2f51a1701.png",
                "from_url": "https:\/\/mastodon.social\/@akkartik\/102591745785627782",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/mastodon.social\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/mastodon.social\/@akkartik\/102591745785627782"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2UZr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another major milestone: I've successfully packaged Mu up with Linux kernel sources to build a bootable disk image with a single command. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/mastodon.social\/@akkartik\/102591745785627782"
                            },
                            {
                                "type": "text",
                                "text": "\n\nGoal is to gradually whittle away at the kernel, make everything more seamless, and eventually replace it with SubX. Still lots to learn, though."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "I’m submitting a vision paper about human-centric program synthesis to PLATEAU: <http:\/\/plateau-workshop.org\/> (And Future of Coding gets a shoutout at the end!) Any feedback would be welcome.",
        "files": [
            {
                "id": "FM29J5K5X",
                "mode": "tombstone"
            }
        ],
        "upload": true,
        "user": "UFB8STN7K",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FT3YS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m submitting a vision paper about human-centric program synthesis to PLATEAU: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/plateau-workshop.org\/"
                            },
                            {
                                "type": "text",
                                "text": " (And Future of Coding gets a shoutout at the end!) Any feedback would be welcome."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1565465672.172300",
        "edited": {
            "user": "UFB8STN7K",
            "ts": "1565465685.000000"
        },
        "client_msg_id": "85b8d35a-8437-4012-885f-696db9e90210",
        "thread_ts": "1565465672.172300",
        "reply_count": 5,
        "reply_users_count": 4,
        "latest_reply": "1566324567.180200",
        "reply_users": [
            "UC21F8Q48",
            "UETJZ9V0T",
            "U5TCAFTD3",
            "UFB8STN7K"
        ],
        "replies": [
            {
                "user": "UC21F8Q48",
                "ts": "1565481597.173200"
            },
            {
                "user": "UETJZ9V0T",
                "ts": "1565636286.174800"
            },
            {
                "user": "U5TCAFTD3",
                "ts": "1565687216.175200"
            },
            {
                "user": "UFB8STN7K",
                "ts": "1565716166.175400"
            },
            {
                "user": "UC21F8Q48",
                "ts": "1566324567.180200"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1566329554.216100",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UKJGU23KP",
                    "UETJZ9V0T",
                    "U5TCAFTD3",
                    "UA14TGLTC"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UC21F8Q48",
        "type": "message",
        "ts": "1565481597.173200",
        "client_msg_id": "a6fe926c-9b70-421b-bed3-c1af97278e40",
        "text": "I sent the bulk of my feedback via email, but here’s some bits that might be profitable for public discussion.\n---\nYou might be interested in Tessa Lau’s “Why Programming by Demonstration Systems Fail: Lessons Learned from Usable AI” (AAAI 2009 <https:\/\/doi.org\/10.1609\/aimag.v30i4.2262>), which covers some of what you are saying. She cites five design guidelines from her experience:\n\n1. “Detect failure and fail gracefully”\n2. “Make it easy to correct the system”\n3. “Encourage trust by presenting a model the users can understand”\n4. “Enable partial automation”\n5. “Consider the bottom-line value of automation”\n---\n&gt; Input\/output pairs are a poor model for program specifications in most cases\n\nIt is true that under the text-based conception of programming by example (PBE), it is hard to build lots of I\/O examples. But I think it’s too early to say PBE is broken: instead, the open question is when does it work, and with what tools? We don’t know to what degree better tools can help support example creation. For example, when you have a large data structure, you can often specify a desired operation with only a *single* example. Making that example in text could be laborious, but why do you need to do it in text without help? Several of the transformations in Sketch-n-Sketch can be thought of as single-example PBE synthesis, but it is usable because the tool helps you build the example.\n---\nSome synthesis works that the FoC readership might enjoy glancing at:\n\nFor various ways to interact with programming by example, there’s Mayer et al. “User Interaction Models for Disambiguation in Programming by Example” (UIST 2015 <https:\/\/people.csail.mit.edu\/rishabh\/papers\/uist15-flashprog.pdf>)\n\nAndroid studio offers automatic translation of nested loops to functional code: <https:\/\/twitter.com\/akosma\/status\/937279410297851904>\n\nFor API discovery from natural language, the first work I think of is “Synthesizing Java expressions from free-form queries” Gvero and Kuncak, OOPSLA 2015 <https:\/\/doi.org\/10.1145\/2814270.2814295>.\n\nAnd for repurposing code from Stack Overflow, there’s “Program Splicing” Lu et al. ICSE 2018 <https:\/\/doi.org\/10.1145\/3180155.3180190>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d79ba47b2952",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-03\/410049852848_d79ba47b2952e74a99d9_72.jpg",
            "first_name": "Brian",
            "real_name": "Brian Hempel",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "brianhempel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1565465672.172300",
        "parent_user_id": "UFB8STN7K",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/akosma|@akosma>: TFW <https:\/\/twitter.com\/androidstudio|@androidstudio> teaches you how to use <https:\/\/twitter.com\/kotlin|@kotlin> functional features instead of those old fashioned for loops with nested if statements and slaps you in the face and makes you realize that we are almost in 2018 and you just bow and say yes sir. <https:\/\/pbs.twimg.com\/tweet_video_thumb\/DQHioF4XUAAzMi_.jpg>",
                "ts": 1512299799,
                "author_name": "Adrian Kosmaczewski",
                "author_link": "https:\/\/twitter.com\/akosma\/status\/937279410297851904",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1159911145983135746\/0F6Vr0Y8_normal.jpg",
                "author_subname": "@akosma",
                "text": "TFW <https:\/\/twitter.com\/androidstudio|@androidstudio> teaches you how to use <https:\/\/twitter.com\/kotlin|@kotlin> functional features instead of those old fashioned for loops with nested if statements and slaps you in the face and makes you realize that we are almost in 2018 and you just bow and say yes sir.",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/akosma\/status\/937279410297851904",
                "thumb_url": "https:\/\/pbs.twimg.com\/tweet_video_thumb\/DQHioF4XUAAzMi_.jpg",
                "thumb_width": 640,
                "thumb_height": 192,
                "video_html_width": 640,
                "video_html_height": 192,
                "video_html": "<video autoplay loop muted poster=\"https:\/\/pbs.twimg.com\/tweet_video_thumb\/DQHioF4XUAAzMi_.jpg\" width=\"640\" height=\"192\"><source type=\"video\/mp4\" src=\"https:\/\/video.twimg.com\/tweet_video\/DQHioF4XUAAzMi_.mp4\"><\/video>",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/akosma\/status\/937279410297851904",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hR46",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I sent the bulk of my feedback via email, but here’s some bits that might be profitable for public discussion.\n---\nYou might be interested in Tessa Lau’s “Why Programming by Demonstration Systems Fail: Lessons Learned from Usable AI” (AAAI 2009 "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/doi.org\/10.1609\/aimag.v30i4.2262"
                            },
                            {
                                "type": "text",
                                "text": "), which covers some of what you are saying. She cites five design guidelines from her experience:\n\n1. “Detect failure and fail gracefully”\n2. “Make it easy to correct the system”\n3. “Encourage trust by presenting a model the users can understand”\n4. “Enable partial automation”\n5. “Consider the bottom-line value of automation”\n---"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Input\/output pairs are a poor model for program specifications in most cases"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nIt is true that under the text-based conception of programming by example (PBE), it is hard to build lots of I\/O examples. But I think it’s too early to say PBE is broken: instead, the open question is when does it work, and with what tools? We don’t know to what degree better tools can help support example creation. For example, when you have a large data structure, you can often specify a desired operation with only a "
                            },
                            {
                                "type": "text",
                                "text": "single",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " example. Making that example in text could be laborious, but why do you need to do it in text without help? Several of the transformations in Sketch-n-Sketch can be thought of as single-example PBE synthesis, but it is usable because the tool helps you build the example.\n---\nSome synthesis works that the FoC readership might enjoy glancing at:\n\nFor various ways to interact with programming by example, there’s Mayer et al. “User Interaction Models for Disambiguation in Programming by Example” (UIST 2015 "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/people.csail.mit.edu\/rishabh\/papers\/uist15-flashprog.pdf"
                            },
                            {
                                "type": "text",
                                "text": ")\n\nAndroid studio offers automatic translation of nested loops to functional code: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/akosma\/status\/937279410297851904"
                            },
                            {
                                "type": "text",
                                "text": "\n\nFor API discovery from natural language, the first work I think of is “Synthesizing Java expressions from free-form queries” Gvero and Kuncak, OOPSLA 2015 "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/doi.org\/10.1145\/2814270.2814295"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nAnd for repurposing code from Stack Overflow, there’s “Program Splicing” Lu et al. ICSE 2018 "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/doi.org\/10.1145\/3180155.3180190"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "UFB8STN7K",
                    "UHWC9PXBL"
                ],
                "count": 2
            },
            {
                "name": "100",
                "users": [
                    "UFB8STN7K",
                    "UBSMEUXAA",
                    "UHWC9PXBL",
                    "UETJZ9V0T",
                    "U5TCAFTD3"
                ],
                "count": 5
            },
            {
                "name": "+1",
                "users": [
                    "UD31LGQKB",
                    "UCUSW7WVD",
                    "U5TCAFTD3"
                ],
                "count": 3
            }
        ]
    }
]