[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1698390397.539329",
        "client_msg_id": "07e947f3-e136-47b5-93bb-1d18b3de5e31",
        "text": "I’d add that everything we have now passed through the filter of adoption. These processes are complicated and path dependent, but new things can survive and reach wide enough use to feel like they’ve made a difference in the world.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698349635.445229",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7AGgF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’d add that everything we have now passed through the filter of adoption. These processes are complicated and path dependent, but new things can survive and reach wide enough use to feel like they’ve made a difference in the world."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1698391355.732309",
        "client_msg_id": "5D8D764C-6FEC-491F-A6E1-47ED8AF13460",
        "text": "<@U03LJBR6THT> You’re touching on something that resonates a lot with me. However I’m unsure if you talk about what I think you do, or if I’m just reading into your post what I want it to say.\nLet me try a few seemingly random questions to tease out what you are trying to point at:\n\n1. The original Gang of Four _Design Patterns_, do they exemplify what you are trying to point at? Or are they irrelevant for that? Or are they perhaps even a counter example?\n2. Some ontologies try to categorize everything in one huge tree (eg. biological species). Others are just trying to paint a comprehensible picture of complex local relationships. One could say the former is more concerned with identifying all the nodes while the latter is more concerned with identifying all the edges. Would you agree that the former feels misguided or irrelevant for what you mean and the latter is closer to it? Does the former remind you of inheritance?\n3. Does a mathematical structure from group theory like a monoid (not a monad; although that’s adjacent I’m deliberately trying not to go there) feel related to your idea of power from polymorphism? For instance, adding integers and concatenating strings feels somehow similar, but yet clearly is also different. Does that map to what you have in mind? And furthermore, would you agree that it’s not about the formalism (that we call it “monoid” and can precisely describe what we mean), but about the intuition we can develop for it (“Ah, it’s the same thing! It works for integers, strings, and now I see how I can transfer it to this other type and it’s beneficial to see the connection and treat it the same way.”)?\n4. When you described that scenario where polymorphism is replaced with “a switch statement”, did you feel like the other person is just not “getting it”? Did you feel like your polymorphism way was simpler and more elegant, but the other person clearly thought it was more complex and argued that it’s hard to beat the simplicity of a switch or if statement? Do you happen to come across a different understanding of what is simple and what is complex more often?\n5. That kind of polymorphism you think of, how does it relate to beauty? Would you say it’s beautiful? Does that question even make any sense to you at all or do you think I’m taking it somewhere weird now?\nSorry if I throw around concepts you’re not familiar with. I’m just trying to cover some area, hoping I hit enough overlap with your experience to find out if we think about the same thing or not.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698246162.762769",
        "parent_user_id": "U03LJBR6THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i9dI9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U03LJBR6THT"
                            },
                            {
                                "type": "text",
                                "text": " You’re touching on something that resonates a lot with me. However I’m unsure if you talk about what I think you do, or if I’m just reading into your post what I want it to say.\nLet me try a few seemingly random questions to tease out what you are trying to point at:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The original Gang of Four "
                                    },
                                    {
                                        "type": "text",
                                        "text": "Design Patterns",
                                        "style": {
                                            "bold": false,
                                            "italic": true,
                                            "strike": false
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", do they exemplify what you are trying to point at? Or are they irrelevant for that? Or are they perhaps even a counter example?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Some ontologies try to categorize everything in one huge tree (eg. biological species). Others are just trying to paint a comprehensible picture of complex local relationships. One could say the former is more concerned with identifying all the nodes while the latter is more concerned with identifying all the edges. Would you agree that the former feels misguided or irrelevant for what you mean and the latter is closer to it? Does the former remind you of inheritance?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Does a mathematical structure from group theory like a monoid (not a monad; although that’s adjacent I’m deliberately trying not to go there) feel related to your idea of power from polymorphism? For instance, adding integers and concatenating strings feels somehow similar, but yet clearly is also different. Does that map to what you have in mind? And furthermore, would you agree that it’s not about the formalism (that we call it “monoid” and can precisely describe what we mean), but about the intuition we can develop for it (“Ah, it’s the same thing! It works for integers, strings, and now I see how I can transfer it to this other type and it’s beneficial to see the connection and treat it the same way.”)?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "When you described that scenario where polymorphism is replaced with “a switch statement”, did you feel like the other person is just not “getting it”? Did you feel like your polymorphism way was simpler and more elegant, but the other person clearly thought it was more complex and argued that it’s hard to beat the simplicity of a switch or if statement? Do you happen to come across a different understanding of what is simple and what is complex more often?"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "That kind of polymorphism you think of, how does it relate to beauty? Would you say it’s beautiful? Does that question even make any sense to you at all or do you think "
                                    },
                                    {
                                        "type": "text",
                                        "text": "I’m"
                                    },
                                    {
                                        "type": "text",
                                        "text": " taking it somewhere weird now?"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nSorry if I throw around concepts you’re not familiar with. I’m just trying to cover some area, hoping I hit enough overlap with your experience to find out if we think about the same thing or not."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1698399094.232689",
        "client_msg_id": "aeddb4a2-86b4-4483-8a0b-9f9208cb1ab4",
        "text": "The way I see it, there is a layer of UX missing from what we call “programming”.\n\nWhat we call “programming” is a way of scripting single-threaded[sic] CPUs in a fairly rigorous and efficient manner.  What non-programmers want is not to be bothered with all of that bumph.  BASIC and SpreadSheet language are sufficient and don’t involve deep thinking about the actual act of programming.  The missing layer of UX is something like a mapping from BASIC to extreme lambda calculus.  Example: in the Lisp world, FEXPRs are convenient, while hygienic macros are more rigorous, but, less convenient for non-zealots.  How do we provide a method for programming that presents ultra-rigour as a convenient-to-use IDE?  Forcing non-programmers to think deeply and rigorously about programming ain’t it. [My bet is on box-and-arrow diagrams using 0D, non-conventional uses of OhmJS, PEG, SVG, HTML, etc., but, YMMV].",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698349635.445229",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DBd+l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The way I see it, there is a layer of UX missing from what we call “programming”.\n\nWhat we call “programming” is a way of scripting single-threaded[sic] CPUs in a fairly rigorous and efficient manner.  What non-programmers want is not to be bothered with all of that bumph.  BASIC and SpreadSheet language are sufficient and don’t involve deep thinking about the actual act of programming.  The missing layer of UX is something like a mapping from BASIC to extreme lambda calculus.  Example: in the Lisp world, FEXPRs are convenient, while hygienic macros are more rigorous, but, less convenient for non-zealots.  How do we provide a method for programming that presents ultra-rigour as a convenient-to-use IDE?  Forcing non-programmers to think deeply and rigorously about programming ain’t it. [My bet is on box-and-arrow diagrams using 0D, non-conventional uses of OhmJS, PEG, SVG, HTML, etc., but, YMMV]."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1698403010.794709",
        "client_msg_id": "464e3b9e-9e56-4647-9487-038f4fbfe812",
        "text": "For adoption, I see two levels that matter. The first level is \"large enough mindshare to survive and prosper\". The second level is \"large enough to be considered mainstream\", meaning among the top contenders.\nMy personal interest is in learning, discovering, improving. Technology in this space should reach the first level of adoption to stay useful in the long run, but stay well below the second level at which the practical needs of lots of users drown any interesting discussion of fundamentals.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1698349635.445229",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "taEpM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For adoption, I see two levels that matter. The first level is \"large enough mindshare to survive and prosper\". The second level is \"large enough to be considered mainstream\", meaning among the top contenders.\nMy personal interest is in learning, discovering, improving. Technology in this space should reach the first level of adoption to stay useful in the long run, but stay well below the second level at which the practical needs of lots of users drown any interesting discussion of fundamentals."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]