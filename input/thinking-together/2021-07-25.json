[
    {
        "user": "U85HCL7JP",
        "type": "message",
        "ts": "1627239445.250000",
        "client_msg_id": "7836f77e-e90f-44ef-9f9a-92a273b2c185",
        "text": "Thanks for the links <@U01661S9F34> &amp; <@U013ZLJARC7>!\nThinking about working memory, there're also studies that:\n&gt; ... several such chunks could then be combined into a higher-order chunk, forming a hierarchy of chunks. In this way, only some chunks at the highest level of the hierarchy must be retained in working memory, and for retrieval the chunks are unpacked. That is, the chunks in working memory act as retrieval cues that point to the digits they contain\nI wonder if different constructs\/programming paradigms could make it easier or harder to form chunks :thinking_face: .",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c5d8f6a2266",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-25\/1286770110448_0c5d8f6a2266551a36f2_72.jpg",
            "first_name": "",
            "real_name": "Daniel Garcia",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "daniel.garcia.carmona",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1626299086.235500",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QdFfg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the links "
                            },
                            {
                                "type": "user",
                                "user_id": "U01661S9F34"
                            },
                            {
                                "type": "text",
                                "text": " & "
                            },
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": "!\nThinking about working memory, there're also studies that:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "... several such chunks could then be combined into a higher-order chunk, forming a hierarchy of chunks. In this way, only some chunks at the highest level of the hierarchy must be retained in working memory, and for retrieval the chunks are unpacked. That is, the chunks in working memory act as retrieval cues that point to the digits they contain"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I wonder if different constructs\/programming paradigms could make it easier or harder to form chunks "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            },
                            {
                                "type": "text",
                                "text": " ."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01661S9F34",
        "type": "message",
        "ts": "1627264870.250300",
        "edited": {
            "user": "U01661S9F34",
            "ts": "1627264976.000000"
        },
        "client_msg_id": "172d0bd4-1ca6-4add-a06e-7541885a6c13",
        "text": "That quote reminds me of the memory palace \/ <https:\/\/en.wikipedia.org\/wiki\/Method_of_loci|method of loci technique> used in speed memorization contests. :nerd_face:\nRyan Singer also talks about this <https:\/\/synthetic.transistor.fm\/episodes\/design-as-a-multi-scale-network-thin-vs-fat-tailed-problems|idea of Multi-scale networks> to solve problems (though in a slightly different context)\n\nI think we already do something like this in programming today:\nA `for loop` is an abstraction for a set of assembly code with an increment operation, a comparison operation, and a jump operation.\nA function or method is an abstraction for a set of logically related instructions.\nA module or API is a an abstraction that represents a set of related functions.\nedit: Additionally, a DSL or a `macro` is somewhere between a function and an API. I haven't decided which yet. :stuck_out_tongue:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "19925410efa8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-28\/1196019819111_19925410efa8da86ae13_72.jpg",
            "first_name": "",
            "real_name": "Ray Imber",
            "display_name": "Ray Imber",
            "team": "T5TCAFTA9",
            "name": "rayimber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1626299086.235500",
        "parent_user_id": "U85HCL7JP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HUgz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That quote reminds me of the memory palace \/ "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Method_of_loci",
                                "text": "method of loci technique"
                            },
                            {
                                "type": "text",
                                "text": " used in speed memorization contests. "
                            },
                            {
                                "type": "emoji",
                                "name": "nerd_face",
                                "unicode": "1f913"
                            },
                            {
                                "type": "text",
                                "text": "\nRyan Singer also talks about this "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/synthetic.transistor.fm\/episodes\/design-as-a-multi-scale-network-thin-vs-fat-tailed-problems",
                                "text": "idea of Multi-scale networks"
                            },
                            {
                                "type": "text",
                                "text": " to solve problems (though in a slightly different context)\n\nI think we already do something like this in programming today:\nA "
                            },
                            {
                                "type": "text",
                                "text": "for loop",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is an abstraction for a set of assembly code with an increment operation, a comparison operation, and a jump operation.\nA function or method is an abstraction for a set of logically related instructions.\nA module or API is a an abstraction that represents a set of related functions.\nedit: Additionally, a DSL or a "
                            },
                            {
                                "type": "text",
                                "text": "macro",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is somewhere between a function and an API. I haven't decided which yet. "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "stuck_out_tongue",
                "users": [
                    "U85HCL7JP"
                ],
                "count": 1
            }
        ]
    }
]