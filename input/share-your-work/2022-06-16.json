[
    {
        "user": "U03JSU69NHX",
        "type": "message",
        "ts": "1655398564.877969",
        "client_msg_id": "A9198F30-BE6E-4FBB-89D0-3CDD1B0D1D31",
        "text": "<https:\/\/twitch.tv\/gamesdesignart|https:\/\/twitch.tv\/gamesdesignart>\n\nLive from 6:15 PM games design and art degree show opening evening \n\nHaven't been able to intro myself yet but I run a progressive games design course in the UK with our show opening tonight at Winchester School of Art ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g00b013a7664",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/00b013a7664d4e6ee7cde45ce8b63252.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Adam",
            "real_name": "Adam Procter",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "adam.procter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655398564.877969",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1655401235.240579",
        "reply_users": [
            "U03E4LY27FS"
        ],
        "replies": [
            {
                "user": "U03E4LY27FS",
                "ts": "1655401235.240579"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1LL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/twitch.tv\/gamesdesignart",
                                "text": "https:\/\/twitch.tv\/gamesdesignart"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\nLive from 6:15 PM games design and art degree show opening evening "
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\nHaven't "
                            },
                            {
                                "type": "text",
                                "text": "been"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "able"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "to"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "intro"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "myself"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "yet"
                            },
                            {
                                "type": "text",
                                "text": " but I run "
                            },
                            {
                                "type": "text",
                                "text": "a"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "progressive"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "games"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "design"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "course"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "in"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "the"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "UK"
                            },
                            {
                                "type": "text",
                                "text": " with our show opening tonight at Winchester School of Art "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "sparkling_heart",
                "users": [
                    "U0165TZ39GV",
                    "U02PDVC9CNT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U03E4LY27FS",
        "type": "message",
        "ts": "1655401235.240579",
        "client_msg_id": "cff9580c-ae1a-4e73-8be2-0578d8afa50b",
        "text": "Woohoo! I have something to watch today! Thanks for sharing :smiley: Anything you think is super cool coming up to pay special attenetion to?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "98f0011b77c6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-28\/3450316621254_98f0011b77c61bbc241b_72.jpg",
            "first_name": "Ivan",
            "real_name": "Ivan Lugo",
            "display_name": "Ivan Lugo",
            "team": "T5TCAFTA9",
            "name": "iheartlappy486",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1655398564.877969",
        "parent_user_id": "U03JSU69NHX",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h00n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Woohoo! I have something to watch today! Thanks for sharing "
                            },
                            {
                                "type": "emoji",
                                "name": "smiley",
                                "unicode": "1f603"
                            },
                            {
                                "type": "text",
                                "text": " Anything you think is super cool coming up to pay special attenetion to?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U03JGLHV6P5",
        "type": "message",
        "ts": "1655409187.208529",
        "client_msg_id": "42513c22-3e5c-47af-a0f9-265074a7c507",
        "text": "Hi,\nthose of you who follow me on Twitter have probably already seen this, but recently a friend encouraged me to share it here as well.\n\nFor some time, I've been working on a graphical Scheme programming environment that I have called GRASP (which stands for \"GRAphical Scheme Programming\").\n\nCurrently I am doing fourth prototype (which I hope will become the production version), which - as I imagine - should work in text terminals as well as on graphical displays.\n\nBut by far, the third prototype was the most mature, and (at least in my opinion) the most pleasant to use.\n\nGRASP is intended to work natively on mobile devices, and the third prototype was written in Java entirely on my phone (using the Termux environment).\n\nI have recorded a few videos showing the touch interface to GRASP. For example, here's a demo which shows the definition of factorial\n\n<https:\/\/www.youtube.com\/watch?v=H0YNZCO7gyQ>\n\nand here's another one, which shows how a screen can be splitted:\n\n<https:\/\/www.youtube.com\/watch?v=dCKxKRIvCpU>\n\nI am mentioning this, because I think that - even though I do not develop it anymore - it wasn't actually that far from being useful software: it lets the user open files (supporting the basic part of the s-expression syntax) and save them as well, so with some patience it could be used for doing some \"real\" work.\n\nThe main problem is that newly-created files are saved in the app's \"internal storage\", whereas the file browser can only open files from \"external storage\". This shouldn't be hard to solve, however, so if anyone's interested, the code is available at\n\n<https:\/\/github.com\/panicz\/grasp-android\/tree\/master\/stages>\n\nThe `stage5' directory contains a plain s-expression editor, and the `stage6' directory additionally includes the Kawa Scheme implementation and lets one evaluate the Scheme expressions (the drawback is that it takes significantly longer to build).\n\nSome Scheme features that are missing from both the parser and representation (and would be hard to add to this prototype) include:\n- dotted lists\n- strings\n- comments\n- vectors\n- quote\/quasiquote\/unquote etc. abbreviations (the abbreviations accidentally work in Kawa when they're used on symbols, but if the abbreviating characters were placed in front of opening parentheses, they'd be treated just as regular symbols)\n\nAlso, there are some bugs related to positioning, but I wasn't really trying to fix them, given that I started a new prototype from scratch.\n\nThe currently developed prototype can be found in the `retreat\/GRASP` directory in the same repository. It is written in Kawa Scheme (but it requires an unreleased\nversion of Kawa built from the tip of their repository), and it currently only works in text terminals.\n\nAnd I think that \"works\" is a slight exaggeration here. It is capable of parsing more Scheme syntax (including three types of comments, dotted lists and strings - though vectors and quote abbreviations still aren't supported).\n\nIt also features a cursor that is supposed to work roughly as in the regular text editors.\n\nIt uses a more classical representation of s-expressions, namely - good old cons-cells. (The information about whitespace and comments is stored in weak-key hash tables)\n\nIn order to run this prototype, it's sufficient to run \".\/editor\" (provided that a proper build of Kawa is available somewhere in the path - and that also requires a JVM).\n\nHowever, the \"taste\" of the editor can be obtained from the following \"unit-test suite\" (which doesn't yet pass, but should give a rough idea of the experience that I'm aiming at)\n\n<https:\/\/github.com\/panicz\/grasp-android\/blob\/master\/stages\/retreat\/GRASP\/src\/test-writing-map.scm>\n\nUnfortunately none of those prototypes conveys the full spectrum of ideas that I'm trying to pursue. One important aspect was captured by the first prototype, the one that I wrote in Racket:\n\n<https:\/\/youtu.be\/oxeB-8k-DBA?t=33>\n\nThe demo shows (around seconds 35-45) a custom representation for graphs that can be used as an alternative to s-expressions.\n\nOf course the key idea isn't to represent graphs, but to be able to provide custom visual representations\/interactions of any data structure.\n\n(This idea has recently been pursued by Leif Andersen, who calls it \"visual interactive syntax\", and implemented that as an extension to the dr Racket IDE as well as a browser based IDE for Clojure available at <https:\/\/visr.pl\/>)\n\nIn many ways, GRASP also seems similar to Boxer (that I learned about relatively recently), but to be honest, my greatest source of inspiration so far has been Emacs and the experience it provides for working with various Lisps, as well as its self-introspection capabilities.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "93727c23b124",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-06-06\/3641421173985_93727c23b12401a02e3b_72.jpg",
            "first_name": "Maciek",
            "real_name": "Maciek Godek",
            "display_name": "Maciek Godek",
            "team": "T5TCAFTA9",
            "name": "godek.maciek",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "from_url": "https:\/\/www.youtube.com\/watch?v=H0YNZCO7gyQ",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/H0YNZCO7gyQ\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/H0YNZCO7gyQ?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=H0YNZCO7gyQ",
                "fallback": "YouTube Video: Factorial with evaluation",
                "title": "Factorial with evaluation",
                "title_link": "https:\/\/www.youtube.com\/watch?v=H0YNZCO7gyQ",
                "author_name": "Maciek Godek",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCt4u6WQDy2yjXz6eXCcyijQ",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            },
            {
                "from_url": "https:\/\/www.youtube.com\/watch?v=dCKxKRIvCpU",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/dCKxKRIvCpU\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/dCKxKRIvCpU?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"GRASP demo 3\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 2,
                "original_url": "https:\/\/www.youtube.com\/watch?v=dCKxKRIvCpU",
                "fallback": "YouTube Video: GRASP demo 3",
                "title": "GRASP demo 3",
                "title_link": "https:\/\/www.youtube.com\/watch?v=dCKxKRIvCpU",
                "author_name": "Maciek Godek",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCt4u6WQDy2yjXz6eXCcyijQ",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            },
            {
                "from_url": "https:\/\/youtu.be\/oxeB-8k-DBA?t=33",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/oxeB-8k-DBA\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/oxeB-8k-DBA?start=33&feature=oembed&start=33&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"Lots of Intriguing Movable Boxes\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 3,
                "original_url": "https:\/\/youtu.be\/oxeB-8k-DBA?t=33",
                "fallback": "YouTube Video: Lots of Intriguing Movable Boxes",
                "title": "Lots of Intriguing Movable Boxes",
                "title_link": "https:\/\/youtu.be\/oxeB-8k-DBA?t=33",
                "author_name": "Maciek Godek",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCt4u6WQDy2yjXz6eXCcyijQ",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "86P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi,\nthose of you who follow me on Twitter have probably already seen this, but recently a friend encouraged me to share it here as well.\n\nFor some time, I've been working on a graphical Scheme programming environment that I have called GRASP (which stands for \"GRAphical Scheme Programming\").\n\nCurrently I am doing fourth prototype (which I hope will become the production version), which - as I imagine - should work in text terminals as well as on graphical displays.\n\nBut by far, the third prototype was the most mature, and (at least in my opinion) the most pleasant to use.\n\nGRASP is intended to work natively on mobile devices, and the third prototype was written in Java entirely on my phone (using the Termux environment).\n\nI have recorded a few videos showing the touch interface to GRASP. For example, here's a demo which shows the definition of factorial\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=H0YNZCO7gyQ"
                            },
                            {
                                "type": "text",
                                "text": "\n\nand here's another one, which shows how a screen can be splitted:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=dCKxKRIvCpU"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI am mentioning this, because I think that - even though I do not develop it anymore - it wasn't actually that far from being useful software: it lets the user open files (supporting the basic part of the s-expression syntax) and save them as well, so with some patience it could be used for doing some \"real\" work.\n\nThe main problem is that newly-created files are saved in the app's \"internal storage\", whereas the file browser can only open files from \"external storage\". This shouldn't be hard to solve, however, so if anyone's interested, the code is available at\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/panicz\/grasp-android\/tree\/master\/stages"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe `stage5' directory contains a plain s-expression editor, and the `stage6' directory additionally includes the Kawa Scheme implementation and lets one evaluate the Scheme expressions (the drawback is that it takes significantly longer to build).\n\nSome Scheme features that are missing from both the parser and representation (and would be hard to add to this prototype) include:\n- dotted lists\n- strings\n- comments\n- vectors\n- quote\/quasiquote\/unquote etc. abbreviations (the abbreviations accidentally work in Kawa when they're used on symbols, but if the abbreviating characters were placed in front of opening parentheses, they'd be treated just as regular symbols)\n\nAlso, there are some bugs related to positioning, but I wasn't really trying to fix them, given that I started a new prototype from scratch.\n\nThe currently developed prototype can be found in the `retreat\/GRASP` directory in the same repository. It is written in Kawa Scheme (but it requires an unreleased\nversion of Kawa built from the tip of their repository), and it currently only works in text terminals.\n\nAnd I think that \"works\" is a slight exaggeration here. It is capable of parsing more Scheme syntax (including three types of comments, dotted lists and strings - though vectors and quote abbreviations still aren't supported).\n\nIt also features a cursor that is supposed to work roughly as in the regular text editors.\n\nIt uses a more classical representation of s-expressions, namely - good old cons-cells. (The information about whitespace and comments is stored in weak-key hash tables)\n\nIn order to run this prototype, it's sufficient to run \".\/editor\" (provided that a proper build of Kawa is available somewhere in the path - and that also requires a JVM).\n\nHowever, the \"taste\" of the editor can be obtained from the following \"unit-test suite\" (which doesn't yet pass, but should give a rough idea of the experience that I'm aiming at)\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/panicz\/grasp-android\/blob\/master\/stages\/retreat\/GRASP\/src\/test-writing-map.scm"
                            },
                            {
                                "type": "text",
                                "text": "\n\nUnfortunately none of those prototypes conveys the full spectrum of ideas that I'm trying to pursue. One important aspect was captured by the first prototype, the one that I wrote in Racket:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/oxeB-8k-DBA?t=33"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThe demo shows (around seconds 35-45) a custom representation for graphs that can be used as an alternative to s-expressions.\n\nOf course the key idea isn't to represent graphs, but to be able to provide custom visual representations\/interactions of any data structure.\n\n(This idea has recently been pursued by Leif Andersen, who calls it \"visual interactive syntax\", and implemented that as an extension to the dr Racket IDE as well as a browser based IDE for Clojure available at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/visr.pl\/"
                            },
                            {
                                "type": "text",
                                "text": ")\n\nIn many ways, GRASP also seems similar to Boxer (that I learned about relatively recently), but to be honest, my greatest source of inspiration so far has been Emacs and the experience it provides for working with various Lisps, as well as its self-introspection capabilities."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "rocket",
                "users": [
                    "U02PDVC9CNT",
                    "UJBAJNFLK",
                    "U0123H7JRDM",
                    "U013ZLJARC7",
                    "U85HCL7JP",
                    "U02028JHX37",
                    "UML4ZEKDK"
                ],
                "count": 7
            },
            {
                "name": "grinning",
                "users": [
                    "U79HM6726"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "U02JQA5FY5C"
                ],
                "count": 1
            }
        ]
    }
]