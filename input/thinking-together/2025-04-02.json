[
    {
        "user": "UAL7940NM",
        "type": "message",
        "ts": "1743598792.333359",
        "client_msg_id": "a61e73f2-d021-4b79-b341-ac6f97c52740",
        "text": "Hi!\n\nit's been a long time since I posted in this group (almost 5 years, wow!). Life changed on my side (working full-time jobs, having kids, ...) but I still tried to follow what's going on occasionally. Thanks a lot to <@UBN9AFS0N> for the newsletter, it's the perfect digest for me to read whenever I have some spare time.\n\nI've recently started using <https:\/\/obsidian.md\/|Obsidian> and it's working great for me to collect and organize all kinds of thoughts. I've used quite a few tools for this over the years, but Obsidian is my new favorite. I'm sure it's been discussed here already, but here's what I love about it:\n• based on markdown files instead of some proprietary formats\n• great apps for desktop and mobile\n• effortless e2e-encrypted sync between devices\n• linking between files \/ pages and following those links is easy. I'm using a variation of a <https:\/\/zettelkasten.de\/introduction\/|Zettelkasten> (<https:\/\/obsidian.rocks\/getting-started-with-zettelkasten-in-obsidian\/#My-Process-for-Zettelkasten-in-Obsidian|this link> can be useful as a starting point; I can write about my approach if there's interest in it)\nI'm currently trying to collect my FoC ideas, projects and thoughts into my Obsidian and therefore wanted to see my contributions to this community. I used the <http:\/\/akkartik.name\/archives\/foc\/|Archive> tool by <@UCUSW7WVD> and it's been working great. A simple long webpage and Ctrl-F worked beautifully, probably better than what Slack Pro could have given me. Thanks a lot for creating the archive, Kartik!\n\nGoing back in time was very interesting. One thing I noticed though was that quite a few links that we discussed at the time sadly don't work anymore. With the help of the <https:\/\/web.archive.org\/|wayback machine>, I was able to still access all the info though. This made me once again appreciate the wayback machine and its importance for the internet. Feels like a donation to the project is overdue.\n\nThat's all I wanted to share. Have a great day folks :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43873346f949",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-13\/399377633206_43873346f949174e340e_72.jpg",
            "first_name": "Felix",
            "real_name": "Felix Kohlgrüber",
            "display_name": "Felix Kohlgrüber",
            "team": "T5TCAFTA9",
            "name": "felix.kohlgrueber",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/V9u3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi!\n\nit's been a long time since I posted in this group (almost 5 years, wow!). Life changed on my side (working full-time jobs, having kids, ...) but I still tried to follow what's going on occasionally. Thanks a lot to "
                            },
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": " for the newsletter, it's the perfect digest for me to read whenever I have some spare time.\n\nI've recently started using "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/obsidian.md\/",
                                "text": "Obsidian"
                            },
                            {
                                "type": "text",
                                "text": " and it's working great for me to collect and organize all kinds of thoughts. I've used quite a few tools for this over the years, but Obsidian is my new favorite. I'm sure it's been discussed here already, but here's what I love about it:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "based on markdown files instead of some proprietary formats"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "great apps for desktop and mobile"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "effortless e2e-encrypted sync between devices"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "linking between files \/ pages and following those links is easy. I'm using a variation of a "
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/zettelkasten.de\/introduction\/",
                                        "text": "Zettelkasten"
                                    },
                                    {
                                        "type": "text",
                                        "text": " ("
                                    },
                                    {
                                        "type": "link",
                                        "url": "https:\/\/obsidian.rocks\/getting-started-with-zettelkasten-in-obsidian\/#My-Process-for-Zettelkasten-in-Obsidian",
                                        "text": "this link"
                                    },
                                    {
                                        "type": "text",
                                        "text": " can be useful as a starting point; I can write about my approach if there's interest in it)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI'm currently trying to collect my FoC ideas, projects and thoughts into my Obsidian and therefore wanted to see my contributions to this community. I used the "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/archives\/foc\/",
                                "text": "Archive"
                            },
                            {
                                "type": "text",
                                "text": " tool by "
                            },
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " and it's been working great. A simple long webpage and Ctrl-F worked beautifully, probably better than what Slack Pro could have given me. Thanks a lot for creating the archive, Kartik!\n\nGoing back in time was very interesting. One thing I noticed though was that quite a few links that we discussed at the time sadly don't work anymore. With the help of the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/web.archive.org\/",
                                "text": "wayback machine"
                            },
                            {
                                "type": "text",
                                "text": ", I was able to still access all the info though. This made me once again appreciate the wayback machine and its importance for the internet. Feels like a donation to the project is overdue.\n\nThat's all I wanted to share. Have a great day folks :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UBN9AFS0N"
                ],
                "count": 1
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U02E4DAQGSZ",
                    "UA14TGLTC",
                    "U05UK5T7LPP",
                    "U85HCL7JP",
                    "U075Q2WP3UK"
                ],
                "count": 6
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UJBAJNFLK",
                    "U075Q2WP3UK"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1743605626.039629",
        "client_msg_id": "701a0bec-e62b-4742-aa82-927461c9450b",
        "text": "I've been thinking about color, and I don't know anything about it.\n\nI'd really like my hypertext browser to allow people to adjust color, but without ever compromising contrast. Is there some color space\/model like rgb\/hsl\/CIELAB\/Lch that allows you to adjust an _author foreground_ color relative to an _author background_ color, yielding new reader foreground and background colors that maintain the original level of contrast? Ideally I want a single spectrum\/dimension\/knob that I can adjust to change the hues of one element (say the background color), automatically adjusting the colors of other elements around it.\n\nFor example, say the background color is white. I reflect it to get a text color of black. Then I get 3 other foreground colors that are rotated by 120 degrees along the color wheel. Now I could adjust the hue to rotate around the color wheel. Or I could reflect to get dark mode. But is there a way that supports both without going all the way to a 2D color space? For example, if you set the background color to medium grey now no foreground color can give you the desired level of contrast. So I'd like to not even represent such a background color as an option.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743605626.039629",
        "reply_count": 8,
        "reply_users_count": 4,
        "latest_reply": "1743615508.631459",
        "reply_users": [
            "U05GSC0B4A0",
            "U06SS0DHZD1",
            "UCUSW7WVD",
            "U023V63MF6V"
        ],
        "replies": [
            {
                "user": "U05GSC0B4A0",
                "ts": "1743606480.375419"
            },
            {
                "user": "U06SS0DHZD1",
                "ts": "1743608080.095569"
            },
            {
                "user": "U06SS0DHZD1",
                "ts": "1743608212.369889"
            },
            {
                "user": "U06SS0DHZD1",
                "ts": "1743608253.111859"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1743608383.586279"
            },
            {
                "user": "U05GSC0B4A0",
                "ts": "1743608948.833719"
            },
            {
                "user": "U023V63MF6V",
                "ts": "1743611154.689599"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1743615508.631459"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fVSBm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been thinking about color, and I don't know anything about it.\n\nI'd really like my hypertext browser to allow people to adjust color, but without ever compromising contrast. Is there some color space\/model like rgb\/hsl\/CIELAB\/Lch that allows you to adjust an "
                            },
                            {
                                "type": "text",
                                "text": "author foreground",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " color relative to an "
                            },
                            {
                                "type": "text",
                                "text": "author background",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " color, yielding new reader foreground and background colors that maintain the original level of contrast? Ideally I want a single spectrum\/dimension\/knob that I can adjust to change the hues of one element (say the background color), automatically adjusting the colors of other elements around it.\n\nFor example, say the background color is white. I reflect it to get a text color of black. Then I get 3 other foreground colors that are rotated by 120 degrees along the color wheel. Now I could adjust the hue to rotate around the color wheel. Or I could reflect to get dark mode. But is there a way that supports both without going all the way to a 2D color space? For example, if you set the background color to medium grey now no foreground color can give you the desired level of contrast. So I'd like to not even represent such a background color as an option."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05GSC0B4A0",
        "type": "message",
        "ts": "1743606480.375419",
        "client_msg_id": "dc68e25a-c093-4f4b-8372-0da89c4e436a",
        "text": "I don't know if this is _exactly_ what you're looking for, but it reminded me of this demo of the color contrast tool in Figma I just saw: <https:\/\/x.com\/billy_sweeney\/status\/1905640393045409923>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g6366d8630c4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6366d8630c4e2394142efb0a9358fcc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "Scott",
            "real_name": "Scott",
            "display_name": "Scott",
            "team": "T5TCAFTA9",
            "name": "scott099",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743605626.039629",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "image_url": "https:\/\/pbs.twimg.com\/ext_tw_video_thumb\/1905640118305824768\/pu\/img\/LHrmrXxUeU7yIzhJ.jpg:large",
                "image_width": 908,
                "image_height": 720,
                "image_bytes": 69641,
                "from_url": "https:\/\/x.com\/billy_sweeney\/status\/1905640393045409923",
                "service_icon": "http:\/\/abs.twimg.com\/favicons\/twitter.3.ico",
                "id": 1,
                "original_url": "https:\/\/x.com\/billy_sweeney\/status\/1905640393045409923",
                "fallback": "X (formerly Twitter): Billy Sweeney (@billy_sweeney) on X",
                "text": "Color contrast accessibility tools are now available in the @figma color picker! Grateful for the chance to design this, and I hope it helps contribute to more design in the world being made more inclusive. Let us know what you think!",
                "title": "Billy Sweeney (@billy_sweeney) on X",
                "title_link": "https:\/\/x.com\/billy_sweeney\/status\/1905640393045409923",
                "service_name": "X (formerly Twitter)"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vjJ4i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't know if this is "
                            },
                            {
                                "type": "text",
                                "text": "exactly",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " what you're looking for, but it reminded me of this demo of the color contrast tool in Figma I just saw: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/x.com\/billy_sweeney\/status\/1905640393045409923"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06SS0DHZD1",
        "type": "message",
        "ts": "1743608080.095569",
        "client_msg_id": "1e90b3a9-aec5-45e7-9b7c-710b8f5cf602",
        "text": "I really like the brightness as defined by HSLuv <https:\/\/www.hsluv.org\/>. The transform betweeen RGB is not super straightforward but there is a lot of sample code and it produces really nice feeling colors.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "287ba5559ee1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-04-04\/6922823105585_287ba5559ee1cedd6b98_72.png",
            "first_name": "Marek",
            "real_name": "Marek Rogalski",
            "display_name": "maf",
            "team": "T5TCAFTA9",
            "name": "mafikpl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743605626.039629",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "from_url": "https:\/\/www.hsluv.org\/",
                "service_icon": "https:\/\/www.hsluv.org\/favicon.png",
                "thumb_url": "https:\/\/www.hsluv.org\/static\/images\/avatar200.jpeg",
                "thumb_width": 200,
                "thumb_height": 200,
                "id": 1,
                "original_url": "https:\/\/www.hsluv.org\/",
                "fallback": "HSLuv - Human-friendly HSL",
                "text": "HSLuv - An alternative to HSL for programmatic color generation",
                "title": "HSLuv - Human-friendly HSL",
                "title_link": "https:\/\/www.hsluv.org\/",
                "service_name": "hsluv.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1im4X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I really like the brightness as defined by HSLuv "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.hsluv.org\/"
                            },
                            {
                                "type": "text",
                                "text": ". The transform betweeen RGB is not super straightforward but there is a lot of sample code and it produces really nice feeling colors."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U06SS0DHZD1",
        "type": "message",
        "ts": "1743608212.369889",
        "client_msg_id": "31d94232-f33f-47c7-947d-d2756402a49e",
        "text": "Also it kind of depends if you're designing for color-blind people. Assuming the most pessimistic accessibility scenario (total color blindness), the only factor in foreground \/ background contrast is the difference in brightness but for folks that see color the whole UI could have the same effective brightness and still be legible (maybe even could still look nice).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "287ba5559ee1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-04-04\/6922823105585_287ba5559ee1cedd6b98_72.png",
            "first_name": "Marek",
            "real_name": "Marek Rogalski",
            "display_name": "maf",
            "team": "T5TCAFTA9",
            "name": "mafikpl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743605626.039629",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "oO4KS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also it kind of depends if you're designing for color-blind people. Assuming the most pessimistic accessibility scenario (total color blindness), the only factor in foreground \/ background contrast is the difference in brightness but for folks that see color the whole UI could have the same effective brightness and still be legible (maybe even could still look nice)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U06SS0DHZD1",
        "type": "message",
        "ts": "1743608253.111859",
        "client_msg_id": "50188910-a191-474c-9627-6161f055a05c",
        "text": "(see Ishihara tests)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "287ba5559ee1",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-04-04\/6922823105585_287ba5559ee1cedd6b98_72.png",
            "first_name": "Marek",
            "real_name": "Marek Rogalski",
            "display_name": "maf",
            "team": "T5TCAFTA9",
            "name": "mafikpl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743605626.039629",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Oi9pY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(see Ishihara tests)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1743608383.586279",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1743608589.000000"
        },
        "client_msg_id": "f3437f0e-5fa4-4f56-a06c-5cf919c4f36d",
        "text": "Yeah, I don't really know what I'm doing regarding color blindness, mostly I just try to avoid red on green, or using red and green foregrounds on the same background.\n\nI'm not intending this for extremely colorful things like you make, <@U06SS0DHZD1> or something professional quality that designers will make <@U05GSC0B4A0>. I'm imagining there's mostly a single background, a single body color, couple of accent colors say for syntax highlighting. So I don't need to support every possible point in a scale. The goal is more to exclude _bad_ points in a predictable, opinionated way.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743605626.039629",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3+TmJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I don't really know what I'm doing regarding color blindness, mostly I just try to avoid red on green, or using red and green foregrounds on the same background.\n\nI'm not intending this for extremely colorful things like you make, "
                            },
                            {
                                "type": "user",
                                "user_id": "U06SS0DHZD1"
                            },
                            {
                                "type": "text",
                                "text": " or something professional quality that designers will make "
                            },
                            {
                                "type": "user",
                                "user_id": "U05GSC0B4A0"
                            },
                            {
                                "type": "text",
                                "text": ". I'm imagining there's mostly a single background, a single body color, couple of accent colors say for syntax highlighting. So I don't need to support every possible point in a scale. The goal is more to exclude "
                            },
                            {
                                "type": "text",
                                "text": "bad",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " points in a predictable, opinionated way."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05GSC0B4A0",
        "type": "message",
        "ts": "1743608948.833719",
        "client_msg_id": "dd0a2ab1-7cc3-4499-b251-becdc00e0f4e",
        "text": "Ah got it, yeah I guess I had never seen a visual representation of the available and bad colors at a given contrast level and thought there might be something useful for you there: exclude 90% of color space, set up some basic heuristics, get a pretty decent solution",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g6366d8630c4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6366d8630c4e2394142efb0a9358fcc6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0016-72.png",
            "first_name": "Scott",
            "real_name": "Scott",
            "display_name": "Scott",
            "team": "T5TCAFTA9",
            "name": "scott099",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743605626.039629",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OXCqU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah got it, yeah I guess I had never seen a visual representation of the available and bad colors at a given contrast level and thought there might be something useful for you there: exclude 90% of color space, set up some basic heuristics, get a pretty decent solution"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U023V63MF6V",
        "type": "message",
        "ts": "1743611154.689599",
        "client_msg_id": "62cf349c-f67d-4789-8b95-fd093343861b",
        "text": "i think <https:\/\/evilmartians.com\/chronicles\/oklch-in-css-why-quit-rgb-hsl|oklch> is the new black",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8c781271e0f0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-30\/2111810970118_8c781271e0f034f7c468_72.jpg",
            "first_name": "",
            "real_name": "Arvind Thyagarajan",
            "display_name": "Arvind Thyagarajan",
            "team": "T5TCAFTA9",
            "name": "arvind",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743605626.039629",
        "parent_user_id": "UCUSW7WVD",
        "attachments": [
            {
                "image_url": "https:\/\/evilmartians.com\/social-cards\/chronicles\/oklch-in-css-why-quit-rgb-hsl.jpg",
                "image_width": 1200,
                "image_height": 630,
                "image_bytes": 55621,
                "from_url": "https:\/\/evilmartians.com\/chronicles\/oklch-in-css-why-quit-rgb-hsl",
                "service_icon": "https:\/\/evilmartians.com\/apple-touch-icon.png",
                "ts": 1721275200,
                "id": 1,
                "original_url": "https:\/\/evilmartians.com\/chronicles\/oklch-in-css-why-quit-rgb-hsl",
                "fallback": "evilmartians.com: OKLCH in CSS: why we moved from RGB and HSL—Martian Chronicles, Evil Martians’ team blog",
                "text": "CSS Color Module 4 adds oklch(), and we gain P3 wide-gamut support, boost code readability, and improve developer-designer communication.",
                "title": "OKLCH in CSS: why we moved from RGB and HSL—Martian Chronicles, Evil Martians’ team blog",
                "title_link": "https:\/\/evilmartians.com\/chronicles\/oklch-in-css-why-quit-rgb-hsl",
                "service_name": "evilmartians.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e5Lig",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i think "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/evilmartians.com\/chronicles\/oklch-in-css-why-quit-rgb-hsl",
                                "text": "oklch"
                            },
                            {
                                "type": "text",
                                "text": " is the new black"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1743615508.631459",
        "client_msg_id": "86ca41d6-3866-4b1a-b1d1-fa1ad72c7f8d",
        "text": "<https:\/\/webaim.org\/articles\/contrast\/|This is a good resource.>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743605626.039629",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7+TEM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/webaim.org\/articles\/contrast\/",
                                "text": "This is a good resource."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1743636013.171319",
        "edited": {
            "user": "U088999PF62",
            "ts": "1743636034.000000"
        },
        "client_msg_id": "55059952-07be-40ad-88d2-f430c6f09b9f",
        "text": "I’ve been thinking about how languages taught at the intro level are usually taught with lots of white lies about how they work, out of necessity. For example, Python’s actual underlying memory model (how everything’s a reference and isn’t copied around) is confusing (arguably), so we avoid teaching that part and oftentimes make all these distinctions between references and primitives (even though everything’s an object). Teaching something more accurate (everything’s an object with references, and oh sometimes values are even referenced via referenced counting) would actually lead to confusion when trying to translate some of this in other languages like C, where everything’s actually a value (pointers are just ints purposed for addressing things).\n\nJava is also confusing with all the GC stuff and opinions it has about memory and memory behavior.\n\nI would like a first-learner’s language that has the arguably-more-consistent semantics of something like C (“everything’s a value”), but is closer to Python. So I can feel like I’m not “lying” so much. I think the closest thing is C itself, unfortunately, or C++ with a custom allocator thing.\n\nOr maybe a hot-take: objective C \/ ARC are the closest.\n\nBut really I’d just like a Python with less obfuscation and inconsistency, so it looks more like C with safety on-top and better file imports.\n\nEssentially, Python with proper value types for everything, even if a little more challenging. The most explainable language closest to hardware, but easier to use.\n\nJust thinking out-loud. I think a Python 3 subset preprocessor that outputs raw C would look close to the language I have in-mind. (I’d like `end` for blocks too).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "reply_count": 34,
        "reply_users_count": 11,
        "latest_reply": "1744095507.157679",
        "reply_users": [
            "UCUSW7WVD",
            "U088999PF62",
            "U06SS0DHZD1",
            "UBKNXPBAB",
            "UJBAJNFLK",
            "U02E4DAQGSZ",
            "U067RCH8NB0",
            "U013ZLJARC7",
            "U0282PL61U1",
            "ULM3U6275",
            "UGWUJUZHT"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1743641816.237779"
            },
            {
                "user": "U088999PF62",
                "ts": "1743655520.625789"
            },
            {
                "user": "U06SS0DHZD1",
                "ts": "1743663696.789849"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1743664412.331849"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1743667257.076089"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1743669610.818729"
            },
            {
                "user": "U067RCH8NB0",
                "ts": "1743684629.405769"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1743688300.994929"
            },
            {
                "user": "U088999PF62",
                "ts": "1743689458.220609"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1743696562.102709"
            },
            {
                "user": "U088999PF62",
                "ts": "1743699546.806559"
            },
            {
                "user": "U0282PL61U1",
                "ts": "1743699609.044449"
            },
            {
                "user": "U088999PF62",
                "ts": "1743699630.386399"
            },
            {
                "user": "U088999PF62",
                "ts": "1743699664.528169"
            },
            {
                "user": "U0282PL61U1",
                "ts": "1743699936.876709"
            },
            {
                "user": "U088999PF62",
                "ts": "1743699951.427309"
            },
            {
                "user": "U0282PL61U1",
                "ts": "1743699983.572169"
            },
            {
                "user": "U0282PL61U1",
                "ts": "1743699990.833399"
            },
            {
                "user": "U088999PF62",
                "ts": "1743700005.055729"
            },
            {
                "user": "U088999PF62",
                "ts": "1743700023.413369"
            },
            {
                "user": "U0282PL61U1",
                "ts": "1743700115.825579"
            },
            {
                "user": "U0282PL61U1",
                "ts": "1743700280.767959"
            },
            {
                "user": "U088999PF62",
                "ts": "1743700427.343529"
            },
            {
                "user": "U0282PL61U1",
                "ts": "1743700604.986719"
            },
            {
                "user": "U088999PF62",
                "ts": "1743700633.483729"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1743747196.577179"
            },
            {
                "user": "ULM3U6275",
                "ts": "1743982213.167019"
            },
            {
                "user": "U088999PF62",
                "ts": "1743982359.032369"
            },
            {
                "user": "ULM3U6275",
                "ts": "1743983039.888459"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1743983271.160299"
            },
            {
                "user": "U088999PF62",
                "ts": "1743983506.111609"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1744029534.351519"
            },
            {
                "user": "U088999PF62",
                "ts": "1744030433.032079"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1744095507.157679"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z4w8B",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve been thinking about how languages taught at the intro level are usually taught with lots of white lies about how they work, out of necessity. For example, Python’s actual underlying memory model (how everything’s a reference and isn’t copied around) is confusing (arguably), so we avoid teaching that part and oftentimes make all these distinctions between references and primitives (even though everything’s an object). Teaching something more accurate (everything’s an object with references, and oh sometimes values are even referenced via referenced counting) would actually lead to confusion when trying to translate some of this in other languages like C, where everything’s actually a value (pointers are just ints purposed for addressing things).\n\nJava is also confusing with all the GC stuff and opinions it has about memory and memory behavior.\n\nI would like a first-learner’s language that has the arguably-more-consistent semantics of something like C (“everything’s a value”), but is closer to Python. So I can feel like I’m not “lying” so much. I think the closest thing is C itself, unfortunately, or C++ with a custom allocator thing.\n\nOr maybe a hot-take: objective C \/ ARC are the closest.\n\nBut really I’d just like a Python with less obfuscation and inconsistency, so it looks more like C with safety on-top and better file imports.\n\nEssentially, Python with proper value types for everything, even if a little more challenging. The most explainable language closest to hardware, but easier to use.\n\nJust thinking out-loud. I think a Python 3 subset preprocessor that outputs raw C would look close to the language I have in-mind. (I’d like "
                            },
                            {
                                "type": "text",
                                "text": "end",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " for blocks too)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1743641816.237779",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1743642078.000000"
        },
        "client_msg_id": "fd8d7d2c-acb7-4335-bda8-e2107492f9b0",
        "text": "Could you elaborate on where beginners might get tripped up by memory model gotchas in these languages? Basically I'm wondering how to build up to a worldview that this is a major issue. For example, if you had a list of gotcha programs in Python that would be very interesting to go through. I can think of one gotcha in Python (appending to a default arg that is initialized to an empty list, or something like that). Is it a jungle out there, or is it just a couple of things like that in each language that people hit and learn to avoid?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Makt7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Could you elaborate on where beginners might get tripped up by memory model gotchas in these languages? Basically I'm wondering how to build up to a worldview that this is a major issue. For example, if you had a list of gotcha programs in Python that would be very interesting to go through. I can think of one gotcha in Python (appending to a default arg that is initialized to an empty list, or something like that). Is it a jungle out there, or is it just a couple of things like that in each language that people hit and learn to avoid?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U088999PF62",
        "type": "message",
        "ts": "1743655520.625789",
        "edited": {
            "user": "U088999PF62",
            "ts": "1743655580.000000"
        },
        "client_msg_id": "2c9a3dee-8fa0-4843-8ec2-ccc0eb9534ce",
        "text": "e.g. “Why you can modify a list passed to a function and not a non-container type” ; “Why does setting a variable equal to a list \/ object type make for a reference to the list \/ object type, whereas ints\/floats\/strs don’t have this behavior?\n\nIn general you explain this in intro by describing copying of values and treating container\/object types as references, but in Python that’s not actually how it works. These are not SUPER major issues, but any attempt to explain correctly leads to more complexity than an intro student can normally handle. Python’s a bit messy unless you just suspend disbelief and pretend things work a certain way without explaining why.\n\nI’d like a language that doesn’t hide things like that quite as much, even if arguably it’s not a huge issue for intro.\n\nI do think a simplified C is slightly better because the copying semantics is pretty well-defined vs Python’s reference counting stuff.\n\n<https:\/\/nedbatchelder.com\/text\/names1.html|Good talk and page on how Python variables work>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ee4ab31ddf7a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-01-13\/8273414548951_ee4ab31ddf7a86143d34_72.jpg",
            "first_name": "Karl",
            "real_name": "Karl Toby Rosenberg",
            "display_name": "Karl Toby Rosenberg",
            "team": "T5TCAFTA9",
            "name": "karltobyrosenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1743636013.171319",
        "parent_user_id": "U088999PF62",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PAZY8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "e.g. “Why you can modify a list passed to a function and not a non-container type” ; “Why does setting a variable equal to a list \/ object type make for a reference to the list \/ object type, whereas ints\/floats\/strs don’t have this behavior?\n\nIn general you explain this in intro by describing copying of values and treating container\/object types as references, but in Python that’s not actually how it works. These are not SUPER major issues, but any attempt to explain correctly leads to more complexity than an intro student can normally handle. Python’s a bit messy unless you just suspend disbelief and pretend things work a certain way without explaining why.\n\nI’d like a language that doesn’t hide things like that quite as much, even if arguably it’s not a huge issue for intro.\n\nI do think a simplified C is slightly better because the copying semantics is pretty well-defined vs Python’s reference counting stuff.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/nedbatchelder.com\/text\/names1.html",
                                "text": "Good talk and page on how Python variables work"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]