[
    {
        "user": "U03B14DUZSA",
        "type": "message",
        "ts": "1652761353.563009",
        "client_msg_id": "2286e495-bf35-42e9-bdae-ba3f811001b3",
        "text": "Greetings. As someone deeply involved in computing, I've always felt rather conflicted about it. On the one hand, the unbounded potential of the dynamic medium has oriented my life for as long as I've been in contact with it. However, not long after I began to learn its workings did I grow disappointed by the imperfections inherent within our computing environments. More than anything else, the limits they face are not imposed by intractable reality, yet rather the uncontrollable buildup of accidental complexity that all but the most carefully engineered software projects are liable to. There has to be some way of building that avoids these traps systematically and easily.\n\nIn the past few months, I've come to the realization that the object-oriented idea offers the clearest way out, despite being maligned by a few popular yet flawed languages that poisoned the idea in the programmer mindshare.  A new generation of scripting languages have embraced it to varying success (Ruby more than others IMO), but nothing approaches Smalltalk\/Self levels of object uniformity or CLOS levels of metacircularity. What's missing, I feel, is something that picks those threads back up and takes advantage of modern affordances to make something radically simpler and human oriented, and I have been exploring language design space towards that end.\n\nIt's exciting to find a community of people who see the same problems in this critical field, and I hope to learn from your points of view as we all take our stabs at the problem. The current state of programming is alarming, as evidenced by the growing number of people seeking to change something about it. My hope is that ours is the generation that succeeds in doing so.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7358a16bdea5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-11-02\/4314864832259_7358a16bdea535168748_72.png",
            "first_name": "Riley",
            "real_name": "Riley Stewart",
            "display_name": "Riley Stewart",
            "team": "T5TCAFTA9",
            "name": "me1307",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1652761353.563009",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1653185662.743759",
        "reply_users": [
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UA14TGLTC",
                "ts": "1653185662.743759"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ku9I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Greetings. As someone deeply involved in computing, I've always felt rather conflicted about it. On the one hand, the unbounded potential of the dynamic medium has oriented my life for as long as I've been in contact with it. However, not long after I began to learn its workings did I grow disappointed by the imperfections inherent within our computing environments. More than anything else, the limits they face are not imposed by intractable reality, yet rather the uncontrollable buildup of accidental complexity that all but the most carefully engineered software projects are liable to. There has to be some way of building that avoids these traps systematically and easily.\n\nIn the past few months, I've come to the realization that the object-oriented idea offers the clearest way out, despite being maligned by a few popular yet flawed languages that poisoned the idea in the programmer mindshare.  A new generation of scripting languages have embraced it to varying success (Ruby more than others IMO), but nothing approaches Smalltalk\/Self levels of object uniformity or CLOS levels of metacircularity. What's missing, I feel, is something that picks those threads back up and takes advantage of modern affordances to make something radically simpler and human oriented, and I have been exploring language design space towards that end.\n\nIt's exciting to find a community of people who see the same problems in this critical field, and I hope to learn from your points of view as we all take our stabs at the problem. The current state of programming is alarming, as evidenced by the growing number of people seeking to change something about it. My hope is that ours is the generation that succeeds in doing so."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "sparkles",
                "users": [
                    "U03E4LY27FS",
                    "U8A5MS6R1",
                    "U03FPD8BF19"
                ],
                "count": 3
            },
            {
                "name": "wave",
                "users": [
                    "U03E4LY27FS",
                    "U03FPD8BF19",
                    "UJBAJNFLK",
                    "U0123H7JRDM",
                    "U85HCL7JP",
                    "UC2A2ARPT",
                    "U013ZLJARC7",
                    "U03FKLDAAN8",
                    "U01HKV85Y1J",
                    "UEQ7QL15F",
                    "UA14TGLTC",
                    "UJ6LDMMN0"
                ],
                "count": 12
            },
            {
                "name": "wave::skin-tone-3",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "100",
                "users": [
                    "U0112C10V4Y",
                    "U8A5MS6R1",
                    "U03FKLDAAN8",
                    "UNCP67JSK"
                ],
                "count": 4
            },
            {
                "name": "heart",
                "users": [
                    "URKQXRCAC"
                ],
                "count": 1
            }
        ]
    }
]