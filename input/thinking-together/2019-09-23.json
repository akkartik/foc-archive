[
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1569224379.426200",
        "client_msg_id": "bda4903e-91b7-462e-a03b-37eebb216b2b",
        "text": "I misunderstood it when I first shared it. Turns out it only works for commandline programs written in Python. That is unfortunate.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569224379.426200",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1569240835.427900",
        "reply_users": [
            "UM1HH60GN"
        ],
        "replies": [
            {
                "user": "UM1HH60GN",
                "ts": "1569240835.427900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "m1Qo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I misunderstood it when I first shared it. Turns out it only works for commandline programs written in Python. That is unfortunate."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1569225608.426400",
        "client_msg_id": "d4046c74-cfeb-40a0-bab5-2e84a9fa774a",
        "text": "related: <https:\/\/github.com\/nushell\/nushell>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wz0a8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "related: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/nushell\/nushell"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1569240834.427800",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1569240841.000000"
        },
        "client_msg_id": "f291f7c9-f41c-48b5-aa0b-8ac76e137720",
        "text": "is there a place where I can find common \"shortcut patterns\"? what't the common usage of ctrl+click, alt+click, shift+click?  I need to add some advanced shortcuts\/gestures and I don't want to use one that usually is used for something else",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569240834.427800",
        "reply_count": 2,
        "reply_users_count": 1,
        "latest_reply": "1569262595.430200",
        "reply_users": [
            "UC2A2ARPT"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1569262432.429900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1569262595.430200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Mf8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "is there a place where I can find common \"shortcut patterns\"? what't the common usage of ctrl+click, alt+click, shift+click?  I need to add some advanced shortcuts\/gestures and I don't want to use one that usually is used for something else"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UM1HH60GN",
        "type": "message",
        "ts": "1569240835.427900",
        "client_msg_id": "8b3e3d98-16f1-4232-a473-869699422c1b",
        "text": "It says differently:\n&gt; Whether you've built your application in Java, Node, or Haskell, or you just want to put a pretty interface on an existing tool like FFMPEG, Gooey can be used to create a fast, practically free UI with just a little bit of Python (about 20 lines!).\n\n&gt;    Don't want to write no stinkin' Python? Good news! Gooey is actually controlled entirely by a plain ol' JSON file. We're only using Python here because it has convenient bindings for generating the JSON.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "50ee467d1311",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-08-07\/719033961125_50ee467d13114e4314c2_72.jpg",
            "first_name": "Gary",
            "real_name": "Gary Trakhman",
            "display_name": "Gary Trakhman",
            "team": "T5TCAFTA9",
            "name": "gary.trakhman",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569224379.426200",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SDj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It says differently:"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Whether you've built your application in Java, Node, or Haskell, or you just want to put a pretty interface on an existing tool like FFMPEG, Gooey can be used to create a fast, practically free UI with just a little bit of Python (about 20 lines!)."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "   Don't want to write no stinkin' Python? Good news! Gooey is actually controlled entirely by a plain ol' JSON file. We're only using Python here because it has convenient bindings for generating the JSON."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UMUJX89KL",
        "type": "message",
        "ts": "1569246691.428900",
        "client_msg_id": "E702835B-BE5F-4631-85DF-A186B9CD6567",
        "text": "theres a website for it give me 5 mins to find it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g66349e4630b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/66349e4630b8f49508e271b01fba4e18.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Ernest Lee",
            "display_name": "Ernest Lee",
            "team": "T5TCAFTA9",
            "name": "ernest.lee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qc7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "theres a website for it give me 5 mins to find it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMUJX89KL",
        "type": "message",
        "ts": "1569246722.429100",
        "client_msg_id": "7EB96CCE-89C0-4D39-9124-5626EF069112",
        "text": "<https:\/\/defkey.com\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g66349e4630b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/66349e4630b8f49508e271b01fba4e18.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Ernest Lee",
            "display_name": "Ernest Lee",
            "team": "T5TCAFTA9",
            "name": "ernest.lee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Keyboard shortcuts, enumerated",
                "title_link": "https:\/\/defkey.com\/",
                "text": "Find all keyboard shortcuts and tips and more about technology on <http:\/\/DefKey.com|DefKey.com>!",
                "fallback": "Keyboard shortcuts, enumerated",
                "from_url": "https:\/\/defkey.com\/",
                "service_icon": "https:\/\/defkey.com\/favicon.ico",
                "service_name": "defkey.com",
                "id": 1,
                "original_url": "https:\/\/defkey.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/W6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/defkey.com\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "tada",
                "users": [
                    "UBN9AFS0N"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1569262432.429900",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1569262519.000000"
        },
        "client_msg_id": "e9ee1378-bd7f-4ef1-beb4-e11c4174e574",
        "text": "This will depend on the domain and platform.\n\nFor instance, on Mac, it's common that command-click is used for adding single items to a selection, and shift-click is used for adding ranges of items. On Mac, control-click is almost always used to open a contextual menu (same as right-click). Option-click is far more situation dependent.\n\n2d graphics applications have their own standard conventions. For instance, it's common that holding spacebar and dragging is how you pan the view.\n\nFor 3d graphics — and games for that matter — it tends to be unique to each.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569240834.427800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zPY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This will depend on the domain and platform.\n\nFor instance, on Mac, it's common that command-click is used for adding single items to a selection, and shift-click is used for adding ranges of items. On Mac, control-click is almost always used to open a contextual menu (same as right-click). Option-click is far more situation dependent.\n\n2d graphics applications have their own standard conventions. For instance, it's common that holding spacebar and dragging is how you pan the view.\n\nFor 3d graphics — and games for that matter — it tends to be unique to each."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1569262595.430200",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1569262610.000000"
        },
        "client_msg_id": "cb6b4fb2-0a42-4496-868f-44dffbb7f3bf",
        "text": "I recommend learning a few applications that are in the domain(s) you're in, on the platforms you're looking to ship to. Also, you might want to consult the Apple HIG (Human Interface Guidelines).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569240834.427800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Tz2f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I recommend learning a few applications that are in the domain(s) you're in, on the platforms you're looking to ship to. Also, you might want to consult the Apple HIG (Human Interface Guidelines)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNBPP291C",
        "type": "message",
        "ts": "1569264905.430600",
        "edited": {
            "user": "UNBPP291C",
            "ts": "1569264972.000000"
        },
        "client_msg_id": "c6965234-1df7-4183-b8ef-8991a3bc5718",
        "text": "question:\n\nwhat’s your favorite schema\/data definition language?\n\nfor now graphql is my favorite for the simplicity of writing\/reading.\nit’s simple enough to be easily translatable to other languages but it still retains some great features. the details are resolvable on the edges of your system, but the schema is a universal interface between all the clients\/servers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcf29e340a09",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/cf29e340a09ac08ae262632ef9101046.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Ian Rumac",
            "display_name": "Ian Rumac",
            "team": "T5TCAFTA9",
            "name": "ian.rumac",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569264905.430600",
        "reply_count": 21,
        "reply_users_count": 6,
        "latest_reply": "1574608576.119100",
        "reply_users": [
            "UFB8STN7K",
            "UNBPP291C",
            "UHWC9PXBL",
            "UHDQ62M4P",
            "UMVFWPZ36",
            "UD6EXQVM0"
        ],
        "replies": [
            {
                "user": "UFB8STN7K",
                "ts": "1569265422.430800"
            },
            {
                "user": "UFB8STN7K",
                "ts": "1569265457.431000"
            },
            {
                "user": "UNBPP291C",
                "ts": "1569265920.431300"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1569273279.435500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1569273299.435800"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1569273370.436600"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1569289978.449500"
            },
            {
                "user": "UNBPP291C",
                "ts": "1569319062.451700"
            },
            {
                "user": "UHDQ62M4P",
                "ts": "1569335080.452700"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1569353056.454000"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1569353069.454200"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1569353142.454400"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1569353176.454600"
            },
            {
                "user": "UNBPP291C",
                "ts": "1569411746.455900"
            },
            {
                "user": "UNBPP291C",
                "ts": "1569411788.456100"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1569434608.490200"
            },
            {
                "user": "UNBPP291C",
                "ts": "1569595581.018900"
            },
            {
                "user": "UMVFWPZ36",
                "ts": "1569601693.019300"
            },
            {
                "user": "UD6EXQVM0",
                "ts": "1574607684.118700"
            },
            {
                "user": "UD6EXQVM0",
                "ts": "1574608542.118900"
            },
            {
                "user": "UD6EXQVM0",
                "ts": "1574608576.119100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IS+rY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "question:\n\nwhat’s your favorite schema\/data definition language?\n\nfor now graphql is my favorite for the simplicity of writing\/reading.\nit’s simple enough to be easily translatable to other languages but it still retains some great features. the details are resolvable on the edges of your system, but the schema is a universal interface between all the clients\/servers."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1569265422.430800",
        "client_msg_id": "9a196e75-726b-4323-bc8c-3c3c5af08c19",
        "text": "OCaml :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569264905.430600",
        "parent_user_id": "UNBPP291C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "R0q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "OCaml "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1569265457.431000",
        "client_msg_id": "4bd9cf02-6119-4c84-975c-26044fbe4e41",
        "text": "But actually, I’ve never seen a data language with proper variants. Protobuf at least tries, but they have to cripple it for compatibility reasons.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569264905.430600",
        "parent_user_id": "UNBPP291C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e8Wq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But actually, I’ve never seen a data language with proper variants. Protobuf at least tries, but they have to cripple it for compatibility reasons."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNBPP291C",
        "type": "message",
        "ts": "1569265920.431300",
        "client_msg_id": "ae7521fa-097f-4cb0-83ac-a82ab30c1163",
        "text": "Protobuffs are :heart:! but to me graphql seems to be at a higher level of abstraction and that’s kind of what I’m looking for. I’d use protobuf below the graphql level’s (resolvers and similar) but I prefer the lack of details graphql has for properties.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gcf29e340a09",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/cf29e340a09ac08ae262632ef9101046.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Ian Rumac",
            "display_name": "Ian Rumac",
            "team": "T5TCAFTA9",
            "name": "ian.rumac",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569264905.430600",
        "parent_user_id": "UNBPP291C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ppG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Protobuffs are "
                            },
                            {
                                "type": "emoji",
                                "name": "heart",
                                "unicode": "2764-fe0f"
                            },
                            {
                                "type": "text",
                                "text": "! but to me graphql seems to be at a higher level of abstraction and that’s kind of what I’m looking for. I’d use protobuf below the graphql level’s (resolvers and similar) but I prefer the lack of details graphql has for properties."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAZT04VT4",
        "type": "message",
        "ts": "1569265970.431500",
        "edited": {
            "user": "UAZT04VT4",
            "ts": "1569266098.000000"
        },
        "client_msg_id": "a0ebf156-d7e5-429d-b846-092a117f2fda",
        "text": "I’ve started reading a small matter of programming (<http:\/\/www.amazon.de\/Small-Matter-Programming-Perspectives-Computing-ebook\/dp\/B00BJGM0NE\/ref=sr_1_1?__mk_de_DE=%C3%85M%C3%85%C5%BD%C3%95%C3%91&amp;keywords=a+small+matter+of+programming&amp;qid=1569265869&amp;sr=8-1>). A compelling thought I found in the book is the idea that the success of end-user programming doesn’t depend on a silver bullet. Many ideas promise to deliver end-user programming like natural language programming, programming by example or visual programming languages, etc. Instead of finding a “magical” solution that solves all problems, the author argues that the main criterion for the success of an end-user programming environment is that users can express their issues with constructs that map well to their knowledge domain.\n\n&gt; the basic operations [of the environment] accomplish tasks that users want to do\n\nAs an example, the sum-function in a spreadsheet application does something meaningful for a person who wants to calculate a budget. In comparison, a for-loop in a general-purpose language is very generic but it isn’t useful on its own.\n\nThis to me suggests that there is an inherent conflict between the needs of end-users (solving a problem in a specific domain) and the goal of general purpose programming languages (being applicable to a great variety of different domains). My personal interest is more in the camp of building new end-user environments that solve a specific problem domain. I think other projects here in the slack are more aimed at finding better general purpose languages. Do you agree with this categorization and if so in what category would you put yourself?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3d63cdd3157",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-16\/2861597891505_f3d63cdd315711ff17a4_72.jpg",
            "first_name": "Paul",
            "real_name": "Paul Sonnentag",
            "display_name": "Paul Sonnentag",
            "team": "T5TCAFTA9",
            "name": "paul.sonnentag",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569265970.431500",
        "reply_count": 26,
        "reply_users_count": 10,
        "latest_reply": "1574560133.114400",
        "reply_users": [
            "UKJGU23KP",
            "UAZT04VT4",
            "UE6EFEPTQ",
            "UHWC9PXBL",
            "UC2A2ARPT",
            "UEQ6M68H0",
            "UMYKGHYBA",
            "U6FKVSVCK",
            "UFPRPSA4S",
            "UD6EXQVM0"
        ],
        "replies": [
            {
                "user": "UKJGU23KP",
                "ts": "1569266226.432000"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1569266258.432200"
            },
            {
                "user": "UAZT04VT4",
                "ts": "1569267745.433100"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1569268619.433400"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1569273382.436800"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1569273448.437800"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1569273552.439300"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1569273615.441400"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1569273741.441600"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1569274186.441900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1569274249.442200"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1569274348.443200"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1569277785.449100"
            },
            {
                "user": "UMYKGHYBA",
                "ts": "1569312990.451000"
            },
            {
                "user": "UAZT04VT4",
                "ts": "1569313984.451200"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1569389356.455100"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1569399176.455300"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1569438834.491200"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1569438851.491600"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1569438999.491800"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1569441011.492400"
            },
            {
                "user": "U6FKVSVCK",
                "ts": "1569441099.492600"
            },
            {
                "user": "UFPRPSA4S",
                "ts": "1569457254.494900"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1569525662.007600"
            },
            {
                "user": "UD6EXQVM0",
                "ts": "1574546198.113900"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1574560133.114400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "plm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ve started reading a small matter of programming ("
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.amazon.de\/Small-Matter-Programming-Perspectives-Computing-ebook\/dp\/B00BJGM0NE\/ref=sr_1_1?__mk_de_DE=%C3%85M%C3%85%C5%BD%C3%95%C3%91&amp;keywords=a+small+matter+of+programming&amp;qid=1569265869&amp;sr=8-1",
                                "text": "http:\/\/www.amazon.de\/Small-Matter-Programming-Perspectives-Computing-ebook\/dp\/B00BJGM0NE\/ref=sr_1_1?__mk_de_DE=%C3%85M%C3%85%C5%BD%C3%95%C3%91&keywords=a+small+matter+of+programming&qid=1569265869&sr=8-1"
                            },
                            {
                                "type": "text",
                                "text": "). A compelling thought I found in the book is the idea that the success of end-user programming doesn’t depend on a silver bullet. Many ideas promise to deliver end-user programming like natural language programming, programming by example or visual programming languages, etc. Instead of finding a “magical” solution that solves all problems, the author argues that the main criterion for the success of an end-user programming environment is that users can express their issues with constructs that map well to their knowledge domain.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the basic operations [of the environment] accomplish tasks that users want to do"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n\nAs an example, the sum-function in a spreadsheet application does something meaningful for a person who wants to calculate a budget. In comparison, a for-loop in a general-purpose language is very generic but it isn’t useful on its own.\n\nThis to me suggests that there is an inherent conflict between the needs of end-users (solving a problem in a specific domain) and the goal of general purpose programming languages (being applicable to a great variety of different domains). My personal interest is more in the camp of building new end-user environments that solve a specific problem domain. I think other projects here in the slack are more aimed at finding better general purpose languages. Do you agree with this categorization and if so in what category would you put yourself?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UAL7940NM"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1569266226.432000",
        "client_msg_id": "8c8ff764-14d4-4574-b410-838a93752bb0",
        "text": "I think many people here are looking at better general purpose programming languages, but it’s not obvious that what you wrote means that end user programming can’t involve a general purpose language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569265970.431500",
        "parent_user_id": "UAZT04VT4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8HH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think many people here are looking at better general purpose programming languages, but it’s not obvious that what you wrote means that end user programming can’t involve a general purpose language."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1569266258.432200",
        "client_msg_id": "5c31d1e6-5bda-41d2-a12a-3097cbc608a8",
        "text": "Many general purpose languages incorporate sum as a function.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569265970.431500",
        "parent_user_id": "UAZT04VT4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qn6Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Many general purpose languages incorporate sum as a function."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1569266902.432700",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1569268509.000000"
        },
        "client_msg_id": "02aac45c-e1a1-493a-a1db-98b8c4ee7539",
        "text": "<@UJN1TAYEQ> Well said. I’d add that making systems compositional tends to involve the trade-off of making some patterns easier to express in exchange for making others more difficult. I suspect the expectation that this isn’t the case is a major barrier to the development of more composable systems.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568748321.207400",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lmQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " Well said. I’d add that making systems compositional tends to involve the trade-off of making some patterns easier to express in exchange for making others more difficult. I suspect the expectation that this isn’t the case is a major barrier to the development of more composable systems."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAZT04VT4",
        "type": "message",
        "ts": "1569267745.433100",
        "client_msg_id": "ea36db88-f9ef-45f4-b266-22badd75369e",
        "text": "Yes, I know but the sum in a spreadsheet is different because it works in combination with the grid of the spreadsheet. You don't need any additional constructs you can just put down numbers and combine them with the sum function to create quite complex applications. Compared to a general purpose programming language with a sum function where you need to create variables, dealing with reading in the data and putting out the results, maybe you have to put all numbers in a list first. All concepts that have nothing to do with the problem of the user.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3d63cdd3157",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-16\/2861597891505_f3d63cdd315711ff17a4_72.jpg",
            "first_name": "Paul",
            "real_name": "Paul Sonnentag",
            "display_name": "Paul Sonnentag",
            "team": "T5TCAFTA9",
            "name": "paul.sonnentag",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569265970.431500",
        "parent_user_id": "UAZT04VT4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wi8W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, I know but the sum in a spreadsheet is different because it works in combination with the grid of the spreadsheet. You don't need any additional constructs you can just put down numbers and combine them with the sum function to create quite complex applications. Compared to a general purpose programming language with a sum function where you need to create variables, dealing with reading in the data and putting out the results, maybe you have to put all numbers in a list first. All concepts that have nothing to do with the problem of the user."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1569268619.433400",
        "client_msg_id": "3fdac52e-80bf-4398-b447-cbef04dcb17e",
        "text": "That’s true. I suppose it’s not so much about the functions, so much as the input methods, or data models.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569265970.431500",
        "parent_user_id": "UAZT04VT4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GBbJ8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That’s true. I suppose it’s not so much about the functions, so much as the input methods, or data models."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHZNB3HRP",
        "type": "message",
        "ts": "1569271121.433800",
        "client_msg_id": "7c212817-8bb2-4adb-80f1-43a019c0335e",
        "text": "Great article. I really like the end piece about infinity minus x. My own take on this for years has been \"science can barely imagine what is\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g1e605c7d8c8",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/91e605c7d8c807d1a07fb13a73ff8e06.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Greg",
            "real_name": "Greg Jarmiolowski",
            "display_name": "Greg Jarmiolowski",
            "team": "T5TCAFTA9",
            "name": "greg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568826694.259000",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "byu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Great article. I really like the end piece about infinity minus x. My own take on this for years has been \"science can barely imagine what is\"."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "UGXH0HCSF"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1569273174.434100",
        "client_msg_id": "4459b6a2-7903-4e2e-8aea-065898ff1d6c",
        "text": "<@ULM3U6275> Powerful and compositional APIs are more work, and require a higher level of skill, to design. They can have a higher learning curve, if there are a lot of new idioms to learn. Once you master the more general idioms, there is a lot of knowledge transfer between different domains. Once you obtain a certain level of mastery of compositional programming, that knowledge can shorten the learning curve when you encounter another compositional API for a new domain, when compared to learning another weak-and-bloated API.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568748321.207400",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8vei",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "ULM3U6275"
                            },
                            {
                                "type": "text",
                                "text": " Powerful and compositional APIs are more work, and require a higher level of skill, to design. They can have a higher learning curve, if there are a lot of new idioms to learn. Once you master the more general idioms, there is a lot of knowledge transfer between different domains. Once you obtain a certain level of mastery of compositional programming, that knowledge can shorten the learning curve when you encounter another compositional API for a new domain, when compared to learning another weak-and-bloated API."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1569273279.435500",
        "client_msg_id": "F2A3A72D-3196-4A4F-915A-C92D160E97CF",
        "text": "i’ve actually been compiling a little list of data structuring\/destructuring languages i like let me paste them in ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569264905.430600",
        "parent_user_id": "UNBPP291C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NaH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i’ve actually been compiling a little list of data structuring\/destructuring languages i like let me paste them in"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1569273299.435800",
        "client_msg_id": "E1D479ED-64FB-43FB-8693-3DC763E40FEA",
        "text": "jq\nclojure core.match\nspecter\ndatascript pull\ndatomic\nfulcro \nfalcor \nstatecharts \ndestructuring \ngraphql kind of \nkakoune \nrebol parse\nrebl nav \nometa\/PEGs",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569264905.430600",
        "parent_user_id": "UNBPP291C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Ifxf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "jq\nclojure core.match\nspecter\ndatascript pull\ndatomic\nfulcro \nfalcor \nstatecharts \ndestructuring \ngraphql kind of \nkakoune \nrebol parse\nrebl nav \nometa\/PEGs"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1569273370.436600",
        "client_msg_id": "66BF84E1-E2FB-4E2D-85AB-CA3917A5A4A2",
        "text": "you can kind of get variants in EDN with clojure and some libraries: <https:\/\/youtu.be\/ZQkIWWTygio>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569264905.430600",
        "parent_user_id": "UNBPP291C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4w=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you can kind of get variants in EDN with clojure and some libraries: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/ZQkIWWTygio"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1569273382.436800",
        "client_msg_id": "14546c86-5fbf-486d-9a25-d2456d462cd8",
        "text": "Summing a list is declarative, for loops are imperative.\n\nIt's not about being closer to a domain versus more general purpose, it's about what's easier for humans.\n\nI'm working on a general-purpose, end-user programming system, which is declarative because I believe that's what makes everything easier for normal people.\n\nAnd it's a silver bullet. :smile:\n\nMaybe you could illustrate the point better with a different example?\n\nWhich may start to wander into DSL territory.. (But many DSLs are declarative..)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569265970.431500",
        "parent_user_id": "UAZT04VT4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JqS7l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Summing a list is declarative, for loops are imperative.\n\nIt's not about being closer to a domain versus more general purpose, it's about what's easier for humans.\n\nI'm working on a general-purpose, end-user programming system, which is declarative because I believe that's what makes everything easier for normal people.\n\nAnd it's a silver bullet. "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "\n\nMaybe you could illustrate the point better with a different example?\n\nWhich may start to wander into DSL territory.. (But many DSLs are declarative..)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1569273448.437800",
        "client_msg_id": "FE42632D-663B-4220-9224-7FC9899D4D88",
        "text": "i think airtable is actually a great example of a more general tool that a lot of end users are using in very complex ways",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569265970.431500",
        "parent_user_id": "UAZT04VT4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Dcg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i think airtable is actually a great example of a more general tool that a lot of end users are using in very complex ways"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1569273552.439300",
        "client_msg_id": "4DB4C898-743E-4C70-8429-1F241215472C",
        "text": "also you end up seeing people absolutely abusing specific tools to get more general purpose stuff out of them—excel, use map settings games in starcraft and warcraft 3",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569265970.431500",
        "parent_user_id": "UAZT04VT4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n1Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "also you end up seeing people absolutely abusing specific tools to get more general purpose stuff out of them—excel, use map settings games in starcraft and warcraft 3"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1569273615.441400",
        "client_msg_id": "D8A96046-465C-405D-B04D-7836F88165F5",
        "text": "i think the biggest problem with designing general purpose systems isn’t that they’re abstract but rather that we don’t have very good models for tutorials, learnable UX, and concrete metaphors to get up and running without requiring bucketloads of patience ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569265970.431500",
        "parent_user_id": "UAZT04VT4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Cz0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i think the biggest problem with designing general purpose systems isn’t that they’re abstract but rather that we don’t have very good models for tutorials, learnable UX, and concrete metaphors to get up and running without requiring bucketloads of patience"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKJGU23KP",
        "type": "message",
        "ts": "1569273741.441600",
        "edited": {
            "user": "UKJGU23KP",
            "ts": "1569273842.000000"
        },
        "client_msg_id": "b93a2f69-3b9b-4c0d-a46e-0f801fae3105",
        "text": "<@UE6EFEPTQ> `fold` vs `sum` probably is an adequate example. Heck, Rust has `sum` because one of the core members hates `fold` (and I’m team no-fold too, even though I like FP).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gfceba60ff0c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6fceba60ff0c90dc32cbff29054b02c2.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Justin Blank",
            "display_name": "Justin Blank",
            "team": "T5TCAFTA9",
            "name": "justin.blank",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569265970.431500",
        "parent_user_id": "UAZT04VT4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TCaWO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE6EFEPTQ"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "fold",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " vs "
                            },
                            {
                                "type": "text",
                                "text": "sum",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " probably is an adequate example. Heck, Rust has "
                            },
                            {
                                "type": "text",
                                "text": "sum",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " because one of the core members hates "
                            },
                            {
                                "type": "text",
                                "text": "fold",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (and I’m team no-fold too, even though I like FP)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1569274186.441900",
        "client_msg_id": "801b513c-2b39-4298-a67a-64c06b914d06",
        "text": "The spectrum between domain-specific and general purpose is a powerful thought technology, and a great way to compare and contrast tools.\n\nI'd say a good number of people here are working on something domain-specific. I am, to be sure.\n\nEven within general purpose languages, you sometimes see a good acknowledgement that there's an ideal use case bordering on domain-specific. For instance, Racket is a general language specifically for making DSLs. Elixir and Erlang are general languages designed primarily for massively parallel server applications.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569265970.431500",
        "parent_user_id": "UAZT04VT4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nH4i",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The spectrum between domain-specific and general purpose is a powerful thought technology, and a great way to compare and contrast tools.\n\nI'd say a good number of people here are working on something domain-specific. I am, to be sure.\n\nEven within general purpose languages, you sometimes see a good acknowledgement that there's an ideal use case bordering on domain-specific. For instance, Racket is a general language specifically for making DSLs. Elixir and Erlang are general languages designed primarily for massively parallel server applications."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1569274249.442200",
        "client_msg_id": "62a57ce3-36aa-48d4-88f6-302cc684a1ec",
        "text": "<@UHWC9PXBL> I think we need to get a \"use map settings\" channel going in the Slack.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569265970.431500",
        "parent_user_id": "UAZT04VT4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K4w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " I think we need to get a \"use map settings\" channel going in the Slack."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1569274348.443200",
        "client_msg_id": "7B86BF74-BCCF-4AB0-B166-4CC4637E8DB7",
        "text": "i feel like i could interpret that statement three different ways and i like all of them",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569265970.431500",
        "parent_user_id": "UAZT04VT4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "89pAH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i feel like i could interpret that statement three different ways and i like all of them"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1569274815.445100",
        "client_msg_id": "0649DB9F-D8AD-4C1D-B41D-22475D58F641",
        "text": "What other barriers do folks here see to more reusable\/ compositional systems?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568748321.207400",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YDLnu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What other barriers do folks here see to more reusable\/ compositional systems?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1569275859.447200",
        "client_msg_id": "30C6D56D-F1FE-4591-80EA-BE6146396DCB",
        "text": "<@U6KQ2S410> mentioned in <#CDYTXF6UA|in-boston> that there’s going to be a talk on a really cool system that i haven’t seen here before: <http:\/\/webstrates.net|webstrates.net> —going to throw some videos in a thread here ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569275859.447200",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1569406456.455700",
        "reply_users": [
            "UHWC9PXBL",
            "UERRYNVMM",
            "UML4ZEKDK"
        ],
        "replies": [
            {
                "user": "UHWC9PXBL",
                "ts": "1569275869.447500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1569275897.448200"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1569276278.448800"
            },
            {
                "user": "UERRYNVMM",
                "ts": "1569357248.454800"
            },
            {
                "user": "UML4ZEKDK",
                "ts": "1569406456.455700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7sKX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U6KQ2S410"
                            },
                            {
                                "type": "text",
                                "text": " mentioned in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CDYTXF6UA"
                            },
                            {
                                "type": "text",
                                "text": " that there’s going to be a talk on a really cool system that i haven’t seen here before: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/webstrates.net",
                                "text": "webstrates.net"
                            },
                            {
                                "type": "text",
                                "text": " —going to throw some videos in a thread here"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1569275869.447500",
        "client_msg_id": "9EE22250-FE70-4FFF-AF29-99ADEDD940F7",
        "text": "<https:\/\/youtu.be\/QET8Z47CK0k> latest video",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569275859.447200",
        "parent_user_id": "UHWC9PXBL",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Codestrates: Literate Computing with Webstrates",
                "title_link": "https:\/\/youtu.be\/QET8Z47CK0k",
                "author_name": "ACM SIGCHI",
                "author_link": "https:\/\/www.youtube.com\/user\/acmsigchi",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/QET8Z47CK0k\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Codestrates: Literate Computing with Webstrates",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/QET8Z47CK0k?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/QET8Z47CK0k",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/QET8Z47CK0k"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qJh\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/QET8Z47CK0k"
                            },
                            {
                                "type": "text",
                                "text": " latest video"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1569275897.448200",
        "client_msg_id": "2EAD70FF-262C-4278-9810-2DE82DAE0152",
        "text": "<https:\/\/youtu.be\/TjOXXTcf1x8> older video with more information on the vision ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569275859.447200",
        "parent_user_id": "UHWC9PXBL",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Webstrates: Shareable Dynamic Media (UIST 2015)",
                "title_link": "https:\/\/youtu.be\/TjOXXTcf1x8",
                "author_name": "Research in Science and Technology",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCNodsJnm4KDbNvUI36RAcWA",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/TjOXXTcf1x8\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Webstrates: Shareable Dynamic Media (UIST 2015)",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/TjOXXTcf1x8?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/TjOXXTcf1x8",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/TjOXXTcf1x8"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tSYT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/TjOXXTcf1x8"
                            },
                            {
                                "type": "text",
                                "text": " older video with more information on the vision"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1569276278.448800",
        "client_msg_id": "5B49ACCD-D610-4FA8-9623-2BEBD586FDC7",
        "text": "<https:\/\/youtu.be\/iLo9lUEHUNM> much longer talk i’m just starting ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569275859.447200",
        "parent_user_id": "UHWC9PXBL",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Design@Large: Peter Dalsgaard and Clemens Nylandsted Klokmose",
                "title_link": "https:\/\/youtu.be\/iLo9lUEHUNM",
                "author_name": "Design Lab",
                "author_link": "https:\/\/www.youtube.com\/channel\/UC0priCoyJJ9b-eFgzIkifoQ",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/iLo9lUEHUNM\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Design@Large: Peter Dalsgaard and Clemens Nylandsted Klokmose",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/iLo9lUEHUNM?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/iLo9lUEHUNM",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/iLo9lUEHUNM"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iT=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/iLo9lUEHUNM"
                            },
                            {
                                "type": "text",
                                "text": " much longer talk i’m just starting"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1569277785.449100",
        "client_msg_id": "3cedacde-a2fa-41c2-aee5-0db66660861a",
        "text": "Don't forget languages like Red and FORTH and LISP, which are general purpose languages, which allow people to construct their own DSL. DSL's however create problems as well as solve them, as now you have invented a new language which has to be learned by someone else....",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569265970.431500",
        "parent_user_id": "UAZT04VT4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mhX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Don't forget languages like Red and FORTH and LISP, which are general purpose languages, which allow people to construct their own DSL. DSL's however create problems as well as solve them, as now you have invented a new language which has to be learned by someone else...."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1569278161.449300",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1569439530.000000"
        },
        "client_msg_id": "b6a8b28e-1aa9-4848-8365-c06a79569fc9",
        "text": "The main problem in re-use is data interchange. In the historical first success of interchangeable parts\/ re-use, there was the FORTRAN function libraries. In that world, one had simple scalar values, or perhaps an array of 32 bit REAL numbers. Later on 64 bit versions appeared. So you had only 2 needed variants of some function, and you could call the Bessel function, which would take you a year to get right if you wrote it yourself (assuming you knew enough math to derive which, which not one in 1000 programmers can do). But once you get past simple arrays and into data that has a less mathematically regular shape, which is almost every real-world application involving humans, the data regularity goes away. And now you have health records with incompatible coding, or inconsistent encoding. This is where reusable falls apart today. Its all about wildly varying data storage methods which prevent some identical algorithm from being reused. Hence massive code bloat and duplication of effort.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568748321.207400",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ivAI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The main problem in re-use is data interchange. In the historical first success of interchangeable parts\/ re-use, there was the FORTRAN function libraries. In that world, one had simple scalar values, or perhaps an array of 32 bit REAL numbers. Later on 64 bit versions appeared. So you had only 2 needed variants of some function, and you could call the Bessel function, which would take you a year to get right if you wrote it yourself (assuming you knew enough math to derive which, which not one in 1000 programmers can do). But once you get past simple arrays and into data that has a less mathematically regular shape, which is almost every real-world application involving humans, the data regularity goes away. And now you have health records with incompatible coding, or inconsistent encoding. This is where reusable falls apart today. Its all about wildly varying data storage methods which prevent some identical algorithm from being reused. Hence massive code bloat and duplication of effort."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UHDQ62M4P",
        "type": "message",
        "ts": "1569289978.449500",
        "client_msg_id": "ff735cef-18d1-49eb-ba89-cf4ffb076fcc",
        "text": "<@UFB8STN7K> FlatBuffers has (strongly typed) unions built-in: <https:\/\/google.github.io\/flatbuffers\/flatbuffers_guide_writing_schema.html> (disclaimer: I designed it)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "465336060ae8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-27\/582042668721_465336060ae83dc74288_72.jpg",
            "first_name": "Wouter",
            "real_name": "Wouter van Oortmerssen",
            "display_name": "Wouter",
            "team": "T5TCAFTA9",
            "name": "aardappel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569264905.430600",
        "parent_user_id": "UNBPP291C",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2z5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": " FlatBuffers has (strongly typed) unions built-in: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/google.github.io\/flatbuffers\/flatbuffers_guide_writing_schema.html"
                            },
                            {
                                "type": "text",
                                "text": " (disclaimer: I designed it)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFB8STN7K"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1569307242.449900",
        "client_msg_id": "6b7cdf0e-4ed3-4b41-bb9f-094d3531549c",
        "text": "All depends on the level of detail you want.  I find most imperative programming errors come from some supposed invariant becoming invalid.  So the two main operations you want are:\n\n(1) after this line of code executes, it all goes to hell (often with an exception but not always) so let's step back from here, and\n(2)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569015537.404200",
        "parent_user_id": "UN9R2KEUE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ch1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "All depends on the level of detail you want.  I find most imperative programming errors come from some supposed invariant becoming invalid.  So the two main operations you want are:\n\n(1) after this line of code executes, it all goes to hell (often with an exception but not always) so let's step back from here, and\n(2)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1569307252.450100",
        "client_msg_id": "a890af2e-e44b-4b4d-b524-8338a22bf4ea",
        "text": "(Darn return...)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569015537.404200",
        "parent_user_id": "UN9R2KEUE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wk3c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(Darn return...)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1569307297.450300",
        "client_msg_id": "e81bf82a-77c6-43bf-a5f9-0ddf2962450d",
        "text": "the value of this instance variable is wrong, how did that happen, or why didn't it get updated by some other thing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569015537.404200",
        "parent_user_id": "UN9R2KEUE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IYJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the value of this instance variable is wrong, how did that happen, or why didn't it get updated by some other thing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1569307425.450500",
        "client_msg_id": "a52f73de-178e-40de-adf6-9a84d20c1681",
        "text": "Even the thorniest bugs I see end up being a few iterations between (1) and (2).  Following a stack (1) leads to a bad variable value (2) caused by a by a stack (1) with another bad variable (2) mistakenly passed from over here (1).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1569015537.404200",
        "parent_user_id": "UN9R2KEUE",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wJO7l",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Even the thorniest bugs I see end up being a few iterations between (1) and (2).  Following a stack (1) leads to a bad variable value (2) caused by a by a stack (1) with another bad variable (2) mistakenly passed from over here (1)."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]