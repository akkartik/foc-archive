[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1587888111.123400",
        "client_msg_id": "f5cb5d87-4ec2-4a18-b7f4-a322ce4d9ded",
        "text": "Thanks everyone for these interesting links!\nFor me, these projects are not just interesting because I care about note taking, but also for my own FoC project, in which the integration of code with notes\/stories is an important element. My dream is a Wiki-style networked of interlinked text-code combos. Literate programming combined with hyperlinked Wikis.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587689981.093900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MTl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks everyone for these interesting links!\nFor me, these projects are not just interesting because I care about note taking, but also for my own FoC project, in which the integration of code with notes\/stories is an important element. My dream is a Wiki-style networked of interlinked text-code combos. Literate programming combined with hyperlinked Wikis."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UE0ETTCG7",
                    "UQPHR6Y3S"
                ],
                "count": 3
            },
            {
                "name": "open_mouth",
                "users": [
                    "UF6RLAL7J"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1587894301.123700",
        "client_msg_id": "4b78f3aa-405c-4737-9652-5ffb357b524c",
        "text": "<@UJBAJNFLK> Sounds interesting! There's some overlap with what I'm working on. What's different about what you're doing versus something like Observable (<https:\/\/observablehq.com\/>) or Jupyter Notebooks? (This is one of the questions I ask myself).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587689981.093900",
        "parent_user_id": "UE0ETTCG7",
        "attachments": [
            {
                "title": "The magic notebook for exploring data \/ Observable",
                "title_link": "https:\/\/observablehq.com\/",
                "text": "Discover insights faster and collaborate seamlessly with interactive Observable notebooks built for data analysis, visualization, and exploration.",
                "fallback": "The magic notebook for exploring data \/ Observable",
                "from_url": "https:\/\/observablehq.com\/",
                "service_icon": "https:\/\/static.observablehq.com\/favicon-512.e85350a27dfadeea7c7c78c797c24419525df5579de174d86d258c40ae57473a.png",
                "service_name": "observablehq.com",
                "id": 1,
                "original_url": "https:\/\/observablehq.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eiTm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " Sounds interesting! There's some overlap with what I'm working on. What's different about what you're doing versus something like Observable ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/observablehq.com\/"
                            },
                            {
                                "type": "text",
                                "text": ") or Jupyter Notebooks? (This is one of the questions I ask myself)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFQQ3P867",
        "type": "message",
        "ts": "1587921552.124300",
        "client_msg_id": "9d3a3403-fad8-4d37-bf0a-3216d1dd4325",
        "text": "<@UFLN9JFRT>  Yep I really dig the materiality\/physicalization. I believe School for Poetic Computation workshops also do this approach <https:\/\/www.instagram.com\/p\/BD_XZGTFZWr\/?igshid=v5vve3ldodtp|https:\/\/www.instagram.com\/p\/BD_XZGTFZWr\/?igshid=v5vve3ldodtp>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "75bc4f5fbeed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-20\/882734188373_75bc4f5fbeedc5a2213e_72.jpg",
            "first_name": "",
            "real_name": "Max Krieger",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "photos482",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587608088.091700",
        "parent_user_id": "UFQQ3P867",
        "attachments": [
            {
                "service_name": "Instagram",
                "title": "Taeyoon Choi 최태윤 on Instagram: “Comparison game #signingcoders”",
                "title_link": "https:\/\/www.instagram.com\/p\/BD_XZGTFZWr\/?igshid=v5vve3ldodtp",
                "text": "7 Likes, 1 Comments - Taeyoon Choi 최태윤 (@drwngdrwng) on Instagram: “Comparison game #signingcoders”",
                "fallback": "Instagram: Taeyoon Choi 최태윤 on Instagram: “Comparison game #signingcoders”",
                "image_url": "https:\/\/scontent-iad3-1.cdninstagram.com\/v\/t51.2885-15\/e15\/11374050_249781075368116_1917335736_n.jpg?_nc_ht=scontent-iad3-1.cdninstagram.com&_nc_cat=108&_nc_ohc=SjnG2k5dHHsAX_d23Q4&oh=e67e73212ec8f74981567d4f859795cc&oe=5EA82E90",
                "from_url": "https:\/\/www.instagram.com\/p\/BD_XZGTFZWr\/?igshid=v5vve3ldodtp",
                "image_width": 250,
                "image_height": 250,
                "image_bytes": 72816,
                "service_icon": "https:\/\/www.instagram.com\/static\/images\/ico\/apple-touch-icon-76x76-precomposed.png\/666282be8229.png",
                "id": 1,
                "original_url": "https:\/\/www.instagram.com\/p\/BD_XZGTFZWr\/?igshid=v5vve3ldodtp"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "n0hxJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFLN9JFRT"
                            },
                            {
                                "type": "text",
                                "text": "  Yep I really dig the materiality\/physicalization. I believe School for Poetic Computation workshops also do this approach "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.instagram.com\/p\/BD_XZGTFZWr\/?igshid=v5vve3ldodtp",
                                "text": "https:\/\/www.instagram.com\/p\/BD_XZGTFZWr\/?igshid=v5vve3ldodtp"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UFLN9JFRT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1587921589.124600",
        "client_msg_id": "1e4115b8-819c-4012-8d51-e8650202580a",
        "text": "<@UE0ETTCG7> There are two important differences that I see.\nFirst, notebooks are only high-level scripts with results, they call library functions that are hidden from view and are not even accessible from the notebook. In my dream system, the Wiki is the codebase (up to some primitives perhaps). There's a story on every algorithm\/implementation, not just an end-user story.\nSecond, I am not just embedding code snippets into text, but I am designing a formal language to be integrated into the text, much like mathematical notation. This is best illustrated by an example (<https:\/\/khinsen.net\/leibniz-examples\/examples\/leibniz-by-example.html>). The key design feature to make this possible is a language based on term algebras and rewriting rules. In such a language, declarations are short and their order (almost) doesn't matter, so they can find a place in the main text more easily.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587689981.093900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i9Pz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE0ETTCG7"
                            },
                            {
                                "type": "text",
                                "text": " There are two important differences that I see.\nFirst, notebooks are only high-level scripts with results, they call library functions that are hidden from view and are not even accessible from the notebook. In my dream system, the Wiki is the codebase (up to some primitives perhaps). There's a story on every algorithm\/implementation, not just an end-user story.\nSecond, I am not just embedding code snippets into text, but I am designing a formal language to be integrated into the text, much like mathematical notation. This is best illustrated by an example ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/khinsen.net\/leibniz-examples\/examples\/leibniz-by-example.html"
                            },
                            {
                                "type": "text",
                                "text": "). The key design feature to make this possible is a language based on term algebras and rewriting rules. In such a language, declarations are short and their order (almost) doesn't matter, so they can find a place in the main text more easily."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UE0ETTCG7",
                    "UQPHR6Y3S"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1587922090.124900",
        "client_msg_id": "b380dd73-3924-44a3-82da-b858637fed84",
        "text": "<@UJBAJNFLK> it sounds like the mandate of the original literate programming system as described by Knuth, except that the mathematical pieces are also amenable to be operated on by solvers. CWeb had tangle and weave, you have 2 tangles and weave. Is that a fair characterization?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587689981.093900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YXi=V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " it sounds like the mandate of the original literate programming system as described by Knuth, except that the mathematical pieces are also amenable to be operated on by solvers. CWeb had tangle and weave, you have 2 tangles and weave. Is that a fair characterization?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1587928797.130500",
        "client_msg_id": "62E8EEE6-1946-4E18-9751-BB1232A4A17D",
        "text": "<@UCUSW7WVD> Knuth’s literate programming is indeed closer to what I have in mind than notebooks, but I do want to be able to manage results of computations. Two tangles\/weaves would be an option to implement my system, conceptually, but that’s not how I plan to do it. For now, I have DSLs embedded in Racket and Pharo (different prototypes but roughly the same idea)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1587689981.093900",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S=s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCUSW7WVD"
                            },
                            {
                                "type": "text",
                                "text": " Knuth’s literate programming is indeed closer to what I have in mind than notebooks, but I do want to be able to manage results of computations. Two tangles\/weaves would be an option to implement my system, conceptually, but that’s not how I plan to do it. For now, I have DSLs embedded in Racket and Pharo (different prototypes but roughly the same idea)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    }
]