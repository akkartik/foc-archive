[
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1626424396.078100",
        "edited": {
            "user": "U01ULEWACPP",
            "ts": "1626424416.000000"
        },
        "client_msg_id": "16f1ee3b-dd8c-48da-9673-6f036fc8c4e7",
        "text": "Here’s another demo of Ratio, the programming environment I’ve shared last week. In this demo I’m assembling a Code Playground.\nTo keep it short, I didn’t add a block to save the file. But I can show that in another video next week. :slightly_smiling_face:\n<https:\/\/vimeo.com\/575734037>\n\nFor context, here’s some background information I’ve shared last week:\n<https:\/\/florianschulz.info\/portfolio\/writing\/programming-with-ratio>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1626424396.078100",
        "reply_count": 12,
        "reply_users_count": 3,
        "latest_reply": "1626959945.105300",
        "reply_users": [
            "UFPPABQ7P",
            "U01ULEWACPP",
            "UUB7RA7PF"
        ],
        "replies": [
            {
                "user": "UFPPABQ7P",
                "ts": "1626452904.097300"
            },
            {
                "user": "U01ULEWACPP",
                "ts": "1626453472.097600"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1626453786.098200"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1626454029.098600"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1626454095.098800"
            },
            {
                "user": "U01ULEWACPP",
                "ts": "1626454285.101200"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1626454341.101400"
            },
            {
                "user": "UFPPABQ7P",
                "ts": "1626454782.101600"
            },
            {
                "user": "UUB7RA7PF",
                "ts": "1626767197.102200"
            },
            {
                "user": "U01ULEWACPP",
                "ts": "1626770284.102400"
            },
            {
                "user": "UUB7RA7PF",
                "ts": "1626957151.105100"
            },
            {
                "user": "U01ULEWACPP",
                "ts": "1626959945.105300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "Vimeo",
                "service_url": "https:\/\/vimeo.com\/",
                "title": "Demo: Assembling a Code Playground – Programming with Ratio",
                "title_link": "https:\/\/vimeo.com\/575734037",
                "author_name": "Florian Schulz",
                "author_link": "https:\/\/vimeo.com\/getflourish",
                "thumb_url": "https:\/\/i.vimeocdn.com\/video\/1190645514_295x166",
                "thumb_width": 295,
                "thumb_height": 166,
                "text": "This is a demo of one of the first use cases I had in mind when creating my new programming environment for prototyping and building user interfaces and apps.\n\nIn this demo, I assemble a code playground for HTML, CSS and JavaScript. Just like any other online code playground, but this one is extensible.\n\nRecipe:\n\n- 3 × Code Editor\n- 1 × HTML Renderer\n\nIn the video, I manually include the animation library \"anime.js\" into the website. An extension to this workspace would be another block that could be used to load external dependencies.\n\nWhat’s included:\n\n- Programming using Blocks and Wires\n- Blocks as Objects: Cut, Copy, Paste, Rename\n- Organization with Tabbed Workspaces and Layouts\n- Data Fetching and Data Flow",
                "fallback": "Vimeo Video: Demo: Assembling a Code Playground – Programming with Ratio",
                "video_html": "<iframe src=\"https:\/\/player.vimeo.com\/video\/575734037?autoplay=1&amp;app_id=122963\" width=\"400\" height=\"248\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen title=\"Demo: Assembling a Code Playground &amp;ndash; Programming with Ratio\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 248,
                "from_url": "https:\/\/vimeo.com\/575734037",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/vimeo.png",
                "id": 1,
                "original_url": "https:\/\/vimeo.com\/575734037"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fpDlT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here’s another demo of Ratio, the programming environment I’ve shared last week. In this demo I’m assembling a Code Playground.\nTo keep it short, I didn’t add a block to save the file. But I can show that in another video next week. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/vimeo.com\/575734037"
                            },
                            {
                                "type": "text",
                                "text": "\n\nFor context, here’s some background information I’ve shared last week:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/florianschulz.info\/portfolio\/writing\/programming-with-ratio"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UK3LH8CF5"
                ],
                "count": 1
            },
            {
                "name": "ok_hand",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "U02028JHX37"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1626442762.078900",
        "edited": {
            "user": "U01ULEWACPP",
            "ts": "1626442789.000000"
        },
        "client_msg_id": "84854743-9d62-4b51-8ccf-2e364a04c01d",
        "text": "<@UG0EL18H3> Thank you Chris. Your demo shows the beauty of the browser: its layout engine. A lot of the complexity of writing HTML is nesting, moving, renaming, … and all that can be simplified by turning the code into tangible objects that can be selected, clicked on, copied, pasted, manipulated. I love that you use prompts in your prototype. It’s raw, yet functional.\n\nI’m glad that you see potential in the prototyping capability of my environment. If any, what JavaScript frameworks are you using for prototyping?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625925873.065000",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cR+D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UG0EL18H3"
                            },
                            {
                                "type": "text",
                                "text": " Thank you Chris. Your demo shows the beauty of the browser: its layout engine. A lot of the complexity of writing HTML is nesting, moving, renaming, … and all that can be simplified by turning the code into tangible objects that can be selected, clicked on, copied, pasted, manipulated. I love that you use prompts in your prototype. It’s raw, yet functional.\n\nI’m glad that you see potential in the prototyping capability of my environment. If any, what JavaScript frameworks are you using for prototyping?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UG0EL18H3",
        "type": "message",
        "ts": "1626446642.096700",
        "client_msg_id": "866E8AF1-2B80-429C-8CF1-AE46A4AF11A5",
        "text": "Angular is a big one for me, mostly because the intervention with Typescript is first-class, and because writing out type signatures is a big part of my prototyping process. That said, I could likely settle for Vue since it's conceptually a lot simpler, and it accomplishes most of the same goals (two-way binding, event handlers) as Angular for the purposes of prototyping. \n\nThe reason I'm so interested in this kind of tooling is because it is directly relevant to my day job: at work, we have implemented a version of Basecamp's \"Shape Up\" process, which suggests using \"breadboards\" as a way for product managers to convey ideas to designers and developers (<https:\/\/basecamp.com\/shapeup\/1.3-chapter-04#breadboarding|https:\/\/basecamp.com\/shapeup\/1.3-chapter-04#breadboarding>). I have tried using Sketch and Figma for this, and while it works for me because I am comfortable with using design tools to achieve this goal, the other developers and product managers in my org tend to be intimidated by large \"blank canvas\" apps. \n\nI've had some degree of success introducing this proof-of-concept app to a couple folks (<https:\/\/breadboarding-poc.netlify.app:|https:\/\/breadboarding-poc.netlify.app:> note, I didn't write this, I just found it) but it is limited in terms of how you can lay out the screens and what sorts of components can be placed on them. Additionally, it's not possible to share a link to a runnable\/editable version of the mock-up, which is highly limiting since the product design process is very collaborative and requires the frequent exchange of ideas in order to be successful. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "25cc47143833",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-08-01\/702360681283_25cc471438337c72e600_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Rabl",
            "display_name": "crabl",
            "team": "T5TCAFTA9",
            "name": "chris.rabl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625925873.065000",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Oup6t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Angular is a big one for me, mostly because the intervention with Typescript is first-class, and because writing out type signatures is a big part of my prototyping process. That said, I could likely settle for Vue since it's conceptually a lot simpler, and it accomplishes most of the same goals (two-way binding, event handlers) as Angular for the purposes of prototyping. \n"
                            },
                            {
                                "type": "text",
                                "text": "\nThe reason I'm so interested in this kind of tooling is because it is directly relevant to my day job: at work, we have implemented a version of Basecamp's \"Shape Up\" process, which suggests using \"breadboards\" as a way for product managers to convey ideas to designers and developers ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/basecamp.com\/shapeup\/1.3-chapter-04#breadboarding",
                                "text": "https:\/\/basecamp.com\/shapeup\/1.3-chapter-04#breadboarding"
                            },
                            {
                                "type": "text",
                                "text": "). I have tried using Sketch and Figma for this, and while it works for me because I am comfortable with using design tools to achieve this goal, the other developers and product managers in my org tend to be intimidated by large \"blank canvas\" apps. \n\nI've had some degree of success introducing this proof-of-concept app to a couple folks ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/breadboarding-poc.netlify.app:",
                                "text": "https:\/\/breadboarding-poc.netlify.app:"
                            },
                            {
                                "type": "text",
                                "text": " note, I didn't write this, I just found it) but it is limited in terms of how you can lay out the screens and what sorts of components can be placed on them. Additionally, it's not possible to share a link to a runnable\/editable version of the mock-up, which is highly limiting since the product design process is very collaborative and requires the frequent exchange of ideas in order to be successful. "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1626448149.097100",
        "client_msg_id": "c9e0b03c-d50b-49d8-b61f-8378c0ff2605",
        "text": "Thanks for sharing how you work! Great, that you’re mentioning the Breadboard metaphor mentioned in Shape Up. When I read the book a while ago, that concept stuck with me. The idea of a radio that can be wired up on a breadboard to test out the functionality and then put into a nicely designed box for production.\n\nI think breadboards are two things for me: low fidelity (few visuals, you see the wires, raw components…) and simplified layout (your parts go here). Good constraints. The breadboarding web app you shared nails it: it is so limited that all you can use it for is to deeply think about what elements go there in what order and how different views connect. I think this is what protoyping should care about. In contrast, I think wireframing often focusses too much on the “low fidelity visual style that is faster to draw” than the content.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1625925873.065000",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WIh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for sharing how you work! Great, that you’re mentioning the Breadboard metaphor mentioned in Shape Up. When I read the book a while ago, that concept stuck with me. The idea of a radio that can be wired up on a breadboard to test out the functionality and then put into a nicely designed box for production.\n\nI think breadboards are two things for me: low fidelity (few visuals, you see the wires, raw components…) and simplified layout (your parts go here). Good constraints. The breadboarding web app you shared nails it: it is so limited that all you can use it for is to deeply think about what elements go there in what order and how different views connect. I think this is what protoyping should care about. In contrast, I think wireframing often focusses too much on the “low fidelity visual style that is faster to draw” than the content."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1626452904.097300",
        "client_msg_id": "d42aef59-c921-4bf1-9f54-758b2c4ffbc7",
        "text": "What does the interface for the `HtmlRenderer` “instrument” look like? Can I create my own Ratio “instrument” in Ratio?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1626424396.078100",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lt4Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What does the interface for the "
                            },
                            {
                                "type": "text",
                                "text": "HtmlRenderer",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " “instrument” look like? Can I create my own Ratio “instrument” in Ratio?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1626453472.097600",
        "edited": {
            "user": "U01ULEWACPP",
            "ts": "1626453686.000000"
        },
        "client_msg_id": "b147e6b0-6170-45c8-915d-054b436e1669",
        "text": "Yes you can create your own instruments. There’s a “+ Instrument” button at the bottom. You can see how in the first video from last week (end): <https:\/\/vimeo.com\/573378340>\n\nInside the “HTMLRenderer” there’s essentially only some String Concatenation and iframe rendering going on. If you don’t like what it does or how it works, you can edit it or clone it. There can be 100 different renderers with different interfaces.\n\nSame for Sliders. If they share the same inputs\/outputs, they can be swapped out. So I could use your awesome slider instead of mine.\n\nI’m not sure about the term instrument vs. blocks vs. tools, but I’m hinting at something there that I want to explore further :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1626424396.078100",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tTEd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes you can create your own instruments. There’s a “+ Instrument” button at the bottom. You can see how in the first video from last week (end): "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/vimeo.com\/573378340"
                            },
                            {
                                "type": "text",
                                "text": "\n\nInside the “HTMLRenderer” there’s essentially only some String Concatenation and iframe rendering going on. If you don’t like what it does or how it works, you can edit it or clone it. There can be 100 different renderers with different interfaces.\n\nSame for Sliders. If they share the same inputs\/outputs, they can be swapped out. So I could use your awesome slider instead of mine.\n\nI’m not sure about the term instrument vs. blocks vs. tools, but I’m hinting at something there that I want to explore further "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1626453786.098200",
        "edited": {
            "user": "UFPPABQ7P",
            "ts": "1626453909.000000"
        },
        "client_msg_id": "e9fb36e4-0a4b-4d60-bbe7-2dce4422da77",
        "text": "Would you consider making the left-most “column” the “in ports” to an instrument and the right-most column the “rendering” \/ “out ports”?\nI thought you were going to re-use the “LOGO” workspace as another instrument :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1626424396.078100",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+ZO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Would you consider making the left-most “column” the “in ports” to an instrument and the right-most column the “rendering” \/ “out ports”?\nI thought you were going to re-use the “LOGO” workspace as another instrument "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1626454029.098600",
        "client_msg_id": "2796d8d2-f102-4e0d-87f0-3752c2098686",
        "text": "Something we’re thinking about that you might also find interesting is “Paste” identification, so if someone pastes a Tweet URL, it could automatically suggest a Tweet Viewer or a Webpage Renderer",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1626424396.078100",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "57Y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Something we’re thinking about that you might also find interesting is “Paste” identification, so if someone pastes a Tweet URL, it could automatically suggest a Tweet Viewer or a Webpage Renderer"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1626454095.098800",
        "client_msg_id": "7a8161a8-56e3-4371-9e52-3c1c30405ad9",
        "text": "It looks like you might have already been thinking about this based on:\n&gt; Various mechanisms for abstraction (wire up something, then copy the resulting block elsewhere), collapse blocks to hide data\/UI, combine low level blocks (many inputs) into larger blocks (few inputs)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1626424396.078100",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C0mm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It looks like you might have already been thinking about this based on:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Various mechanisms for abstraction (wire up something, then copy the resulting block elsewhere), collapse blocks to hide data\/UI, combine low level blocks (many inputs) into larger blocks (few inputs)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01ULEWACPP",
        "type": "message",
        "ts": "1626454285.101200",
        "client_msg_id": "B8BF3C95-1E92-4BA7-AD30-298BEF297054",
        "text": "Yes! I think e.g dragging a wire dropping it should show a filtered list of blocks that match the port type. Also the left\/right side is something I thought about but haven’t settled on. Thanks for the feedback!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4d4f0ee36615",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-05-26\/2104531310403_4d4f0ee36615313d19e3_72.jpg",
            "first_name": "Florian",
            "real_name": "Florian Schulz",
            "display_name": "Florian Schulz",
            "team": "T5TCAFTA9",
            "name": "mail213",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1626424396.078100",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "srS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes! I think e.g dragging a wire dropping it should show a filtered list of blocks that match the port type. Also the left\/right side is something I thought about but haven’t settled on. Thanks for the feedback!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1626454341.101400",
        "client_msg_id": "d00dc4d2-6174-4755-ae58-52c9591bf84f",
        "text": "RTL languages could be a presentational change of just flipping the column order.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1626424396.078100",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "89Po",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "RTL languages could be a presentational change of just flipping the column order."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1626454782.101600",
        "edited": {
            "user": "UFPPABQ7P",
            "ts": "1626454802.000000"
        },
        "client_msg_id": "232ae687-5e20-4713-9502-a3ab1607e02a",
        "text": "This is really neat work <@U01ULEWACPP>. I will be curious to see how your type-system evolves, so you can reasonably support higher-level integration with third-party APIs or media manipulation.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1626424396.078100",
        "parent_user_id": "U01ULEWACPP",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Txx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is really neat work "
                            },
                            {
                                "type": "user",
                                "user_id": "U01ULEWACPP"
                            },
                            {
                                "type": "text",
                                "text": ". I will be curious to see how your type-system evolves, so you can reasonably support higher-level integration with third-party APIs or media manipulation."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U01ULEWACPP"
                ],
                "count": 1
            }
        ]
    }
]