[
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1578472068.014500",
        "client_msg_id": "b0d144ae-269c-4a9e-a884-351ecf3ed44c",
        "text": "This talk as some of the same issues of Bret Victor's talk. Yes, in some kind of utopia where there are not bad actors then having all apps share all data is great. But in the real world (the one we have today) we want (well I want) each app to have it's own data because I don't want any app to read my data. I don't want facebook to be reading the data of all my other apps. I don't want every app I download and every library in every app I download to read my context, check my calendar, look at my photos,\n\nSo, I love the idea, but in reality I have no idea how it would work. I get that it would be great if Uber\/Lyft\/Grab would look at my calendar and auto-order me a cab when I arrive at the airport and it could even look in my credit card history and figure out which hotel I booked so it knows both I'm at LAX and I'm staying at Hotel X. At the same time I absolutely don't want Uber\/Lyft\/Grab to have access to that data.\n\nSomeone brought up the issue after the talk but he basically just dismissed it. I feel like that's really the real issue that has to be solved. The idea of gluing tools together has been around forever. It's failed multiple times. Mostly probably for techincal reasons but now on top of technical reasons we're adding security reasons.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578318823.435400",
        "parent_user_id": "UC21F8Q48",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "egV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This talk as some of the same issues of Bret Victor's talk. Yes, in some kind of utopia where there are not bad actors then having all apps share all data is great. But in the real world (the one we have today) we want (well I want) each app to have it's own data because I don't want any app to read my data. I don't want facebook to be reading the data of all my other apps. I don't want every app I download and every library in every app I download to read my context, check my calendar, look at my photos,\n\nSo, I love the idea, but in reality I have no idea how it would work. I get that it would be great if Uber\/Lyft\/Grab would look at my calendar and auto-order me a cab when I arrive at the airport and it could even look in my credit card history and figure out which hotel I booked so it knows both I'm at LAX and I'm staying at Hotel X. At the same time I absolutely don't want Uber\/Lyft\/Grab to have access to that data.\n\nSomeone brought up the issue after the talk but he basically just dismissed it. I feel like that's really the real issue that has to be solved. The idea of gluing tools together has been around forever. It's failed multiple times. Mostly probably for techincal reasons but now on top of technical reasons we're adding security reasons."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1578491817.016700",
        "client_msg_id": "AB49365A-5BF5-432D-961F-6BD372B99EFE",
        "text": "i haven’t—i have a regular old rift. however it’s been getting absolutely fantastic reviews from  pretty much every trusted source on a price-to-performance ratio",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1577753221.212900",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bRxo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i haven’t—i have a regular old rift. however it’s been getting absolutely fantastic reviews from  pretty much every trusted source on a price-to-performance ratio"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1578492078.020200",
        "client_msg_id": "50178e0f-1fbe-4e12-82f6-7cfc0628afe9",
        "text": "This was a good presentation, thanks for sharing, <@UC21F8Q48>. But wow, the Q&amp;A in the end makes me want to get to know the audience much more than the speaker. Super thoughtful questions and not very satisfying answers.\n\nOn the actual challenges with that vision:\nOn mobile platforms today, we slowly get more control over which data and capabilities we want to share with apps, and a lot of people find that extremely annoying. It's an interesting design challenge to find a good balance here. There are also more and more extensions points added that would take us just a little bit into the direction of that tools\/substrates vision, but ironically it's often developers who are not willing to make a feature available to other parts of the system like that, because that breaks their business model.\n\nAnd that's what's really blocking progress: business models. The powerful incentives created through how all this created value is funded have taken us completely off track and into dangerous territory. We happily pay with our information to get stuff for \"free\", which is why we're not in control of it in the first place. And now almost every big tech company is more interested in learning even more about us to target us better and serve us ads and few really care about better tools for unlocking our creativity.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578318823.435400",
        "parent_user_id": "UC21F8Q48",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PwDk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This was a good presentation, thanks for sharing, "
                            },
                            {
                                "type": "user",
                                "user_id": "UC21F8Q48"
                            },
                            {
                                "type": "text",
                                "text": ". But wow, the Q&A in the end makes me want to get to know the audience much more than the speaker. Super thoughtful questions and not very satisfying answers.\n\nOn the actual challenges with that vision:\nOn mobile platforms today, we slowly get more control over which data and capabilities we want to share with apps, and a lot of people find that extremely annoying. It's an interesting design challenge to find a good balance here. There are also more and more extensions points added that would take us just a little bit into the direction of that tools\/substrates vision, but ironically it's often developers who are not willing to make a feature available to other parts of the system like that, because that breaks their business model.\n\nAnd that's what's really blocking progress: business models. The powerful incentives created through how all this created value is funded have taken us completely off track and into dangerous territory. We happily pay with our information to get stuff for \"free\", which is why we're not in control of it in the first place. And now almost every big tech company is more interested in learning even more about us to target us better and serve us ads and few really care about better tools for unlocking our creativity."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1578492176.022800",
        "client_msg_id": "00b8c16c-66c1-4d55-b0c6-451f838a3788",
        "text": "Oha! I didn't know about the live camera feed either and that could potentially make it the best AR headset available today.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1577753221.212900",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LyJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Oha! I didn't know about the live camera feed either and that could potentially make it the best AR headset available today."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1578492220.024000",
        "client_msg_id": "A8CDCFF5-8B66-4122-8CFC-BF2CB392A1F4",
        "text": "rename 1: yes i think that would work but not sure why you’d ever do that except as a prank\n\nrename 2: the name never existed exactly. everyone’s code still runs because the only thing that changed was the human-readable alias, not the machine-checked identifier. so if you were browsing the code with the unison package manager, it would show you the most up-to-date names except where you had overridden them locally. the only difference here is that both old and new examples would work, and you could verify that they ran the same code",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568603017.155300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vQp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "rename 1: yes i think that would work but not sure why you’d ever do that except as a prank"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "rename 2: "
                            },
                            {
                                "type": "text",
                                "text": "t"
                            },
                            {
                                "type": "text",
                                "text": "he name never existed exactly. everyone’s code still runs because the only thing that changed was the human-readable alias, not the machine-checked identifier. so if you were browsing the code with the unison package manager, it would show you the most up-to-date names except where you had overridden them locally. the only difference here is that both old and new examples would work, and you could verify that they ran the same code"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1578492454.028700",
        "client_msg_id": "F4906F93-AFE6-4236-8463-A3FEFAC5C217",
        "text": "refactoring: i don’t think you’ve quite grasped how the system works. you might want to watch that part of the talk again? on every compile the names of your functions get replaced by codes generated from the compiled abstract syntax of their respective function bodies\n\nso when you change the body of your add function and replace * with +, the ast of your add function changes, its hashed ID changes, and every instance of the word “add” gets replaced with a different hashID in your code",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568603017.155300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nAH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "refactoring: i don’t think you’ve quite grasped how the system works. you might want to watch that part of the talk again? on every compile the names of your functions get replaced by codes generated from the compiled abstract syntax of their respective function bodies"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "so when you change the body of your add function and replace * with +, the ast of your add function changes, its hashed ID changes, and every instance of the word “add” gets replaced with a different hashID in your code"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1578492866.035100",
        "client_msg_id": "2B68BF07-A31F-4167-A2C9-C8BEBC446175",
        "text": "searching: i think you’re neglecting to notice the amount of information you’ve found previous to typing that import statement. you had to at some point google “redux form alternatives” or whatever, identify an implementation you wanted, read docs\/examples, find the correct function or module to import, etc. that context gives you all the information you need to understand ‘import {DoTheThing} from...’ unison’s approach would enable you to skip most of that by letting you query available code on the package manager by for example type and\/or function name and then quickly swipe through until you found the one your were looking for",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568603017.155300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "o11",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "searching: i think you’re neglecting to notice the amount of information you’ve found previous to typing that import statement. you had to at some point google “redux form alternatives” or whatever, identify an implementation you wanted, read docs\/examples, find the correct function or module to import, etc. that context gives you all the information you need to understand ‘import {DoTheThing} from...’ unison’s approach would enable you to skip most of that by letting you query available code on the package manager by for example type and\/or function name and then quickly swipe through until you found the one your were looking for"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1578492952.036700",
        "client_msg_id": "ACD2ABEF-FCEF-4EB6-8D1F-92502B9B7426",
        "text": "no builds: not sure i understand this one\n\nconflicts: if you’ve seriously never had a problem with dependencies in javascript i’m not sure this value prop is going to appeal to you",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568603017.155300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AmBcS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "no builds: not sure i understand this one"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "conflicts: if you’ve seriously never had a problem with dependencies in javascript i’m not sure this value prop is going to appeal to you"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1578492993.037900",
        "client_msg_id": "99BD6BD2-F399-43BE-82F7-A93117714D12",
        "text": "i’m not rock-solid on the technical implementation of unison but it does seem like most of what you’re missing is the motivation for the project",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568603017.155300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4\/K",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i’m not rock-solid on the technical implementation of unison but it does seem like most of what you’re missing is the motivation for the project"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFLN9JFRT",
        "type": "message",
        "ts": "1578493453.038100",
        "client_msg_id": "5faf5336-2245-4661-a5ed-9d40f63c6a5e",
        "text": "Ok, I'm sold. I'm gonna buy one...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g7ec98818d7f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/67ec98818d7fb6395d9a327081cd5472.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Zubair",
            "real_name": "Zubair Quraishi",
            "display_name": "Zubairq",
            "team": "T5TCAFTA9",
            "name": "zubairq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1577753221.212900",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "spf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ok, I'm sold. I'm gonna buy one..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1578497507.039800",
        "client_msg_id": "61d89ed9-2df9-4029-969a-491fd2f9f5bd",
        "text": "do you know of any elegant solution to handle dragging things long distances or dragging more than one thing from the same origin to the same target (in terms of distance, can be different sources and targets).\n\nSimilarly, do you know of a nice solution to drag\/drop on touch devices?\n\nBoth usually involve scrolling in my case",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578497507.039800",
        "reply_count": 13,
        "reply_users_count": 6,
        "latest_reply": "1578533699.076300",
        "reply_users": [
            "UJN1TAYEQ",
            "UP7SQ8KT3",
            "UBN9AFS0N",
            "UG0EL18H3",
            "ULM3U6275",
            "UC2A2ARPT"
        ],
        "replies": [
            {
                "user": "UJN1TAYEQ",
                "ts": "1578497715.040500"
            },
            {
                "user": "UP7SQ8KT3",
                "ts": "1578497948.040700"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1578498048.041200"
            },
            {
                "user": "UP7SQ8KT3",
                "ts": "1578498125.041400"
            },
            {
                "user": "UG0EL18H3",
                "ts": "1578505056.051500"
            },
            {
                "user": "UG0EL18H3",
                "ts": "1578505102.052600"
            },
            {
                "user": "ULM3U6275",
                "ts": "1578506128.055000"
            },
            {
                "user": "ULM3U6275",
                "ts": "1578507653.060700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1578517415.061700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1578517453.061900"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1578517579.062400"
            },
            {
                "user": "ULM3U6275",
                "ts": "1578526901.074400"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1578533699.076300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pe8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "do you know of any elegant solution to handle dragging things long distances or dragging more than one thing from the same origin to the same target (in terms of distance, can be different sources and targets).\n\nSimilarly, do you know of a nice solution to drag\/drop on touch devices?\n\nBoth usually involve scrolling in my case"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1578497541.040400",
        "client_msg_id": "a803b0ad-bbb7-4245-a5af-0b52c0156b2f",
        "text": "I have a tentative solution but I won't tell it to avoid biasing the answers or focusing on my idea",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T6OB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a tentative solution but I won't tell it to avoid biasing the answers or focusing on my idea"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1578497715.040500",
        "client_msg_id": "7771ff98-8b21-4642-bfe9-b574466f2f68",
        "text": "Cut and Paste via the clipboard, possibly using a multiple selection.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578497507.039800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zhR=y",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Cut and Paste via the clipboard, possibly using a multiple selection."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UP7SQ8KT3",
        "type": "message",
        "ts": "1578497948.040700",
        "edited": {
            "user": "UP7SQ8KT3",
            "ts": "1578497968.000000"
        },
        "client_msg_id": "5e502636-9d86-4474-9dd7-a8d848ccb232",
        "text": "<https:\/\/apps.apple.com\/us\/app\/dropzone-3\/id695406827?mt=12>\n&gt; Just drop files on the target and they stick there until you’re ready to use them. You can even combine groups of files into stacks and then drop them onto a Dropzone action or onto another app.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g940ea50a811",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/940ea50a81162ce3cb6e5acc2133308d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Anukul",
            "real_name": "Anukul Sangwan",
            "display_name": "Anukul Sangwan",
            "team": "T5TCAFTA9",
            "name": "anukulsangwan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578497507.039800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P0mzA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/apps.apple.com\/us\/app\/dropzone-3\/id695406827?mt=12"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just drop files on the target and they stick there until you’re ready to use them. You can even combine groups of files into stacks and then drop them onto a Dropzone action or onto another app."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1578498048.041200",
        "client_msg_id": "bf43f57c-7623-43ec-baf6-65515920e899",
        "text": "<@UP7SQ8KT3> that was my idea :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578497507.039800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=pQM8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UP7SQ8KT3"
                            },
                            {
                                "type": "text",
                                "text": " that was my idea "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UP7SQ8KT3",
        "type": "message",
        "ts": "1578498125.041400",
        "client_msg_id": "b6f1d87d-5aef-41e2-8295-7eaf6e3b548d",
        "text": "neat! i’ve found a bunch of apps like this on the mac store that would make for great additions to the OS",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g940ea50a811",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/940ea50a81162ce3cb6e5acc2133308d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Anukul",
            "real_name": "Anukul Sangwan",
            "display_name": "Anukul Sangwan",
            "team": "T5TCAFTA9",
            "name": "anukulsangwan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578497507.039800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GkA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "neat! i’ve found a bunch of apps like this on the mac store that would make for great additions to the OS"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1::skin-tone-4",
                "users": [
                    "UBN9AFS0N",
                    "UA14TGLTC"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1578498492.041600",
        "edited": {
            "user": "UC6997THT",
            "ts": "1578498623.000000"
        },
        "client_msg_id": "7f89d77c-605f-437c-b3cd-8f66c02a2c64",
        "text": "&gt;  refactoring: i don’t think you’ve quite grasped how the system works. you might want to watch that part of the talk again? on every compile the names of your functions get replaced by codes generated from the compiled abstract syntax of their respective function bodies\n&gt; \n&gt; so when you change the body of your add function and replace * with +, the ast of your add function changes, its hashed ID changes, and every instance of the word “add” gets replaced with a different hashID in your code\nthey showed distributed code so when machine A sees a hash for function newABC and machine B sees a hash for oldABC how does machine B know it needs to replace all oldABC hashes with newABC hashes. Or as another example would be pulling in someone else's updated library. Your code says a = #12456(b, c). The new library used to define #123456 but now only defines #123457. In any previous system pulling in the new updated library matches on name but in their system there is not match anymore. Your code is still referencing the old hash\n\n&gt; conflicts: if you’ve seriously never had a problem with dependencies in javascript i’m not sure this value prop is going to appeal to you\nJS can function perfectly with zero conflicts unlike C\/C++\/C#\/Java\/Swift. You can make up conflicts by polluting the global namespace but that's on you. JS gives you way to make all modules not pollute any namespaces unlike C\/C++\/C#\/Java\/Switf. Back before Common JS, AMD and ES6 modules it was common to have that those conflicts. That pretty much all disappeared with CommonJS, AMD and now especially with ES6 modules. Any module that pollutes the global name space is shamed until they stop.\n\n&gt;  rename 1\nYou don't have to be pranking to have those issues. You only have to have 2+ devs who rename things.  A new problem has been added, one that didn't exist before. That problem is that from the programmers POV they can't look at a function name and know which function it is at a glance. They have to rely on the IDE to help them at best. This is a common complaint of C++ that there are so many invisible places in the language that can make it hard to really understand what the code is doing at a glance and because of that such a feature has been excluded from many languages in direct response to the problems it causes in C++. So adding a similar feature here doesn't sound like a win",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1568603017.155300",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T56DK",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " refactoring: i don’t think you’ve quite grasped how the system works. you might want to watch that part of the talk again? on every compile the names of your functions get replaced by codes generated from the compiled abstract syntax of their respective function bodies\n\nso when you change the body of your add function and replace * with +, the ast of your add function changes, its hashed ID changes, and every instance of the word “add” gets replaced with a different hashID in your code"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "they showed distributed code so when machine A sees a hash for function newABC and machine B sees a hash for oldABC how does machine B know it needs to replace all oldABC hashes with newABC hashes. Or as another example would be pulling in someone else's updated library. Your code says a = #12456(b, c). The new library used to define "
                            },
                            {
                                "type": "color",
                                "value": "#123456"
                            },
                            {
                                "type": "text",
                                "text": " but now only defines "
                            },
                            {
                                "type": "color",
                                "value": "#123457"
                            },
                            {
                                "type": "text",
                                "text": ". In any previous system pulling in the new updated library matches on name but in their system there is not match anymore. Your code is still referencing the old hash\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "conflicts: if you’ve seriously never had a problem with dependencies in javascript i’m not sure this value prop is going to appeal to you"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nJS can function perfectly with zero conflicts unlike C\/C++\/C#\/Java\/Swift. You can make up conflicts by polluting the global namespace but that's on you. JS gives you way to make all modules not pollute any namespaces unlike C\/C++\/C#\/Java\/Switf. Back before Common JS, AMD and ES6 modules it was common to have that those conflicts. That pretty much all disappeared with CommonJS, AMD and now especially with ES6 modules. Any module that pollutes the global name space is shamed until they stop.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " rename 1"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nYou don't have to be pranking to have those issues. You only have to have 2+ devs who rename things.  A new problem has been added, one that didn't exist before. That problem is that from the programmers POV they can't look at a function name and know which function it is at a glance. They have to rely on the IDE to help them at best. This is a common complaint of C++ that there are so many invisible places in the language that can make it hard to really understand what the code is doing at a glance and because of that such a feature has been excluded from many languages in direct response to the problems it causes in C++. So adding a similar feature here doesn't sound like a win"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USCSC4JF2",
        "type": "message",
        "ts": "1578499227.047600",
        "edited": {
            "user": "USCSC4JF2",
            "ts": "1578500338.000000"
        },
        "client_msg_id": "1a43ebb2-0b85-4e11-a448-e78eee9b2a69",
        "text": "I've been trying to find more interesting ways to handle localization -- what we're currently doing is using graphql to query for each bit of text -- Has anyone written on how you'd do it in a pure language?\nAlso if anyone's written something more holistic that combines \"localized text\" and \"localized prices\" \/ marketing text and db models I'd be interested.\nSo far everything seems to get about this far:  `var greeting = i18n.__('Hello');` and stops there as localization is \"solved\" :stuck_out_tongue:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "da2bf34d2e0e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-01-07\/896448669716_da2bf34d2e0e6c3d6047_72.jpg",
            "first_name": "",
            "real_name": "Ian",
            "display_name": "Ian",
            "team": "T5TCAFTA9",
            "name": "bontaq",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578499227.047600",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1578586015.080300",
        "reply_users": [
            "UC6997THT",
            "ULZLXAWBE",
            "USCSC4JF2"
        ],
        "replies": [
            {
                "user": "UC6997THT",
                "ts": "1578499378.048000"
            },
            {
                "user": "UC6997THT",
                "ts": "1578500219.048700"
            },
            {
                "user": "ULZLXAWBE",
                "ts": "1578560625.079500"
            },
            {
                "user": "ULZLXAWBE",
                "ts": "1578560773.079700"
            },
            {
                "user": "USCSC4JF2",
                "ts": "1578586015.080300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NqRzK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been trying to find more interesting ways to handle localization -- what we're currently doing is using graphql to query for each bit of text -- Has anyone written on how you'd do it in a pure language?\nAlso if anyone's written something more holistic that combines \"localized text\" and \"localized prices\" \/ marketing text and db models I'd be interested.\nSo far everything seems to get about this far:  "
                            },
                            {
                                "type": "text",
                                "text": "var greeting = i18n.__('Hello');",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " and stops there as localization is \"solved\" "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cry",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1578499378.048000",
        "client_msg_id": "f38cf010-03ed-4f79-9f8e-65ed108c125d",
        "text": "I'm guessing you've read this but the example you posted suggests maybe not so posting\n\n<https:\/\/metacpan.org\/pod\/Locale::Maketext::TPJ13>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578499227.047600",
        "parent_user_id": "USCSC4JF2",
        "attachments": [
            {
                "title": "Locale::Maketext::TPJ13",
                "title_link": "https:\/\/metacpan.org\/pod\/Locale::Maketext::TPJ13",
                "text": "article about software localization",
                "fallback": "Locale::Maketext::TPJ13",
                "from_url": "https:\/\/metacpan.org\/pod\/Locale::Maketext::TPJ13",
                "service_icon": "https:\/\/metacpan.org\/static\/icons\/apple-touch-icon.png",
                "service_name": "metacpan.org",
                "id": 1,
                "original_url": "https:\/\/metacpan.org\/pod\/Locale::Maketext::TPJ13"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Zzjus",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm guessing you've read this but the example you posted suggests maybe not so posting\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/metacpan.org\/pod\/Locale::Maketext::TPJ13"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "USCSC4JF2"
                ],
                "count": 1
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1578500219.048700",
        "client_msg_id": "ddb8cdcc-c786-483a-afac-cd5677e8ee14",
        "text": "Also I don't have a suggestion really except that `var greeting = i18n.__('Hello');` sets off warning signals to me as it seems to suggest that 'Hello' will translate the same eveywhere it's used. That's not my experience so I'd expect `var greeting = i18n.__(I81N_GREETING_ID_24);`  given that some other place in the code will may also need 'Hello' but it will be a different 'Hello'",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578499227.047600",
        "parent_user_id": "USCSC4JF2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "2L6I",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also I don't have a suggestion really except that "
                            },
                            {
                                "type": "text",
                                "text": "var greeting = i18n.__('Hello');",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " sets off warning signals to me as it seems to suggest that 'Hello' will translate the same eveywhere it's used. That's not my experience so I'd expect "
                            },
                            {
                                "type": "text",
                                "text": "var greeting = i18n.__(I81N_GREETING_ID_24);",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  given that some other place in the code will may also need 'Hello' but it will be a different 'Hello'"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UG0EL18H3",
        "type": "message",
        "ts": "1578505056.051500",
        "client_msg_id": "61654202-6A7F-466F-B3D6-24D0DD86AC49",
        "text": "you could use the concept of a “bag”? when you’ve selected one or more things, you could drop them into a bag and then go to the place where you need to use them and drag them out of the bag. could be useful for dragging a group of things from one place to many, or for dragging many things from many places to one",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "25cc47143833",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-08-01\/702360681283_25cc471438337c72e600_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Rabl",
            "display_name": "crabl",
            "team": "T5TCAFTA9",
            "name": "chris.rabl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578497507.039800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rXgq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "you could use the concept of a “bag”? when you’ve selected one or more things, you could drop them into a bag and then go to the place where you need to use them and drag them out of the bag. could be useful for dragging a group of things from one place to many, or for dragging many things from many places to one"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UG0EL18H3",
        "type": "message",
        "ts": "1578505102.052600",
        "edited": {
            "user": "UG0EL18H3",
            "ts": "1578505127.000000"
        },
        "client_msg_id": "8891A805-1B9F-401F-9780-1AEA6FC21C00",
        "text": "the Magic Cap OS had this concept and in retrospect it’s a bit of a shame we got saddled with “the clipboard” instead",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "25cc47143833",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-08-01\/702360681283_25cc471438337c72e600_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Rabl",
            "display_name": "crabl",
            "team": "T5TCAFTA9",
            "name": "chris.rabl",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578497507.039800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bGS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the Magic Cap OS had this concept and in retrospect it’s a bit of a shame we got saddled with “the clipboard” instead"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1578506128.055000",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1578506345.000000"
        },
        "client_msg_id": "C1C13377-E79C-4153-BDF7-0DCCDA24E2CF",
        "text": "The NeXTstep File Browser used a “shelf” for this. I loved that feature and was sad to see it removed in OSX. Maybe OSX considers the desktop itself as the shelf, as you can drop items there but could not on NeXTstep.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578497507.039800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I55",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The NeXTstep File Browser used a “shelf” for this. I loved that feature and was sad to see it removed in OSX. Maybe OSX considers the desktop itself as the shelf, as you can drop items there but could not on NeXTstep."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1578507653.060700",
        "client_msg_id": "497F568A-804B-406F-B9BD-72C661E5695F",
        "text": "Btw, I’d love to see a video or write-up of the interesting interactions and gestures used on older devices (Newton, MagicCap, Go, SketchPad, Smalltalk, Self, etc) that haven’t (yet) been adopted on modern platforms. I recently noticed that Newton had a tap-drag to copy an item vs drag to move interaction that I thought was nice.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578497507.039800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fSuo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Btw, I’d love to see a video or write-up of the interesting interactions and gestures used on older devices (Newton, MagicCap, Go, SketchPad, Smalltalk, Self, etc) that haven’t (yet) been adopted on modern platforms. I recently noticed that Newton had a tap-drag to copy an item vs drag to move interaction that I thought was nice."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1578510082.060900",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1578511137.000000"
        },
        "client_msg_id": "a1e52dbc-cbdb-4744-8206-e68dd14d408b",
        "text": "Thanks to everyone that replied. I gave some of the suggestions here a shot the other day and came up with the name “STRVCT” (short for structured editor). Any thoughts on this name? Good enough to be more than a codename? Is the V too weird?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578328340.438400",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xvfU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks to everyone that replied. I gave some of the suggestions here a shot the other day and came up with the name “STRVCT” (short for structured editor). Any thoughts on this name? Good enough to be more than a codename? Is the V too weird?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1578517415.061700",
        "client_msg_id": "932781df-5ad1-495f-9792-af0394a67e23",
        "text": "Tap-drag to copy sounds a bit like option-drag to copy, which is a near universal standard.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578497507.039800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ALBDB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Tap-drag to copy sounds a bit like option-drag to copy, which is a near universal standard."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1578517453.061900",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1578517527.000000"
        },
        "client_msg_id": "36dd2d5f-84e1-4538-a849-3fb4d0ec8d6a",
        "text": "There was a beloved Mac utility that did the \"floating shelf you can temporarily drop stuff on\" thing, but after 24 years it _just_ died due to the end of 32-bit support. <https:\/\/dragthing.com>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578497507.039800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hDRyW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There was a beloved Mac utility that did the \"floating shelf you can temporarily drop stuff on\" thing, but after 24 years it "
                            },
                            {
                                "type": "text",
                                "text": "just",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " died due to the end of 32-bit support. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/dragthing.com"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1578517579.062400",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1578517583.000000"
        },
        "client_msg_id": "2f833bc5-6d5c-4426-9d4e-5ac20366ecd7",
        "text": "<https:\/\/en.wikipedia.org\/wiki\/DragThing>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578497507.039800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h3IXH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/DragThing"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1578517880.062900",
        "client_msg_id": "5dc4c5ef-5733-4604-900f-c1ccd36df53c",
        "text": "<https:\/\/www.youtube.com\/watch?v=YDvbDiJZpy0>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Meet the inventor of the electronic spreadsheet | Dan Bricklin",
                "title_link": "https:\/\/www.youtube.com\/watch?v=YDvbDiJZpy0",
                "author_name": "TED",
                "author_link": "https:\/\/www.youtube.com\/user\/TEDtalksDirector",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/YDvbDiJZpy0\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Meet the inventor of the electronic spreadsheet | Dan Bricklin",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/YDvbDiJZpy0?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/www.youtube.com\/watch?v=YDvbDiJZpy0",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=YDvbDiJZpy0"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PPpX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=YDvbDiJZpy0"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UGLSY9X3J",
                    "UEGFXUK3M"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1578519671.065000",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1578527451.000000"
        },
        "client_msg_id": "1e5a62e3-2ad8-4503-bdfb-0280c513e4b8",
        "text": "Bob Frankston and Dan Bricklin invented Visicalc, one of the most important inventions of the century. It is a very interesting lesson in entrepreneurship to observe how Lotus 1-2-3 and Quattro out-competed them, ending with Multiplan then Excel taking over, and now Google docs slowly chipping away at MS's lead.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r9=D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Bob Frankston and Dan Bricklin invented Visicalc, one of the most important inventions of the century. It is a very interesting lesson in entrepreneurship to observe how Lotus 1-2-3 and Quattro out-competed them, ending with Multiplan then Excel taking over, and now Google docs slowly chipping away at MS's lead."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1578520123.065100",
        "client_msg_id": "7f13c083-4c12-4c72-861f-83aa54ea077f",
        "text": "<@UJN1TAYEQ> One day i was visiting Project Mac, the operating system team at MIT. Bob Frankston (the future co-inventor of the spreadsheet) was one of the team members, and while in his cubicle how was demonstrating how the MULTICS operating system (the competitor to UNIX, and superior in most technical aspects) had dynamic linking, which meant that at any moment you could swap out kernel modules. He was experimenting with a new memory manager, and turned it on, while dozens of other people were using that Machine (this was time sharing days). It crashed immediately, and all the people in the other cubicles yelled out in anguish as the system was now down. Dynamic linking is a supremely powerful technique, but rather dangerous as this example shows.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578385588.031500",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=ytC7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " One day i was visiting Project Mac, the operating system team at MIT. Bob Frankston (the future co-inventor of the spreadsheet) was one of the team members, and while in his cubicle how was demonstrating how the MULTICS operating system (the competitor to UNIX, and superior in most technical aspects) had dynamic linking, which meant that at any moment you could swap out kernel modules. He was experimenting with a new memory manager, and turned it on, while dozens of other people were using that Machine (this was time sharing days). It crashed immediately, and all the people in the other cubicles yelled out in anguish as the system was now down. Dynamic linking is a supremely powerful technique, but rather dangerous as this example shows."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "joy",
                "users": [
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1578521118.066600",
        "client_msg_id": "8489a7f4-b574-4c25-afa8-fc90245778a6",
        "text": "<@UEQ6M68H0> Have you read any analysis of how that happened? I know a former Lotus exec I could ask for their side of the story.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578521118.066600",
        "reply_count": 9,
        "reply_users_count": 3,
        "latest_reply": "1578688229.107700",
        "reply_users": [
            "UEQ6M68H0",
            "ULM3U6275",
            "UFLN9JFRT"
        ],
        "replies": [
            {
                "user": "UEQ6M68H0",
                "ts": "1578528323.074900"
            },
            {
                "user": "ULM3U6275",
                "ts": "1578528651.075100"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1578529494.075700"
            },
            {
                "user": "ULM3U6275",
                "ts": "1578531521.076100"
            },
            {
                "user": "UFLN9JFRT",
                "ts": "1578565339.080000"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1578645718.095600"
            },
            {
                "user": "ULM3U6275",
                "ts": "1578681940.104500"
            },
            {
                "user": "UFLN9JFRT",
                "ts": "1578682312.106100"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1578688229.107700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0pU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " Have you read any analysis of how that happened? I know a former Lotus exec I could ask for their side of the story."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1578521555.067100",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1578521579.000000"
        },
        "client_msg_id": "8bd0a411-267c-4324-b9f9-81dea35e1c4f",
        "text": "<@UEQ6M68H0> What do you think about Rx and Reactive systems (FRP)?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578521555.067100",
        "reply_count": 7,
        "reply_users_count": 4,
        "latest_reply": "1578546656.078800",
        "reply_users": [
            "UJN1TAYEQ",
            "UL3CJ7YKC",
            "UEQ6M68H0",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "UJN1TAYEQ",
                "ts": "1578523409.067500"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1578525099.067700"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1578525255.068000"
            },
            {
                "user": "UEQ6M68H0",
                "ts": "1578527762.074700"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1578528873.075300"
            },
            {
                "user": "UL3CJ7YKC",
                "ts": "1578538254.077500"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1578546656.078800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NWi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " What do you think about Rx and Reactive systems (FRP)?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1578523409.067500",
        "client_msg_id": "29716be1-3090-4bf4-b603-969bde8add58",
        "text": "FRP is not the same as Rx. FRP is pure functional programming (functions are pure and there is no shared mutable state), whereas ReactiveX is imperative and object-oriented (Observable methods like onNext, onError, onCompleted have side effects, which requires shared mutable state). The ReactiveX web site says this:\n&gt; It is sometimes called “functional reactive programming” but this is a misnomer. ReactiveX may be functional, and it may be reactive, but “functional reactive programming” is a different animal. One main point of difference is that functional reactive programming operates on values that change _continuously_ over time, while ReactiveX operates on _discrete_ values that are emitted over time. (See Conal Elliott’s work for more-precise information on functional reactive programming.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578521555.067100",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lzH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FRP is not the same as Rx. FRP is pure functional programming (functions are pure and there is no shared mutable state), whereas ReactiveX is imperative and object-oriented (Observable methods like onNext, onError, onCompleted have side effects, which requires shared mutable state). The ReactiveX web site says this:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It is sometimes called “functional reactive programming” but this is a misnomer. ReactiveX may be functional, and it may be reactive, but “functional reactive programming” is a different animal. One main point of difference is that functional reactive programming operates on values that change "
                            },
                            {
                                "type": "text",
                                "text": "continuously",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " over time, while ReactiveX operates on "
                            },
                            {
                                "type": "text",
                                "text": "discrete",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " values that are emitted over time. (See Conal Elliott’s work for more-precise information on functional reactive programming.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1578525099.067700",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1578525313.000000"
        },
        "client_msg_id": "8d4cba40-ce05-4fb4-84d8-d3fbce4a9216",
        "text": "<@UJN1TAYEQ> Yeah I am aware of that, but based on the following blog post I felt its OK to refer as FRP to that. (<https:\/\/medium.com\/@andrestaltz\/why-i-cannot-say-frp-but-i-just-did-d5ffaa23973b#.xym3mzpyn>)\n\nThe following is a quote from the blog:\n\nThe article says:\n*What are we going to do?*\nIronically, I’ll actually take Conal Elliott’s advice he let slip in a StackOverflow answer:\n&gt; _To reduce confusion, I would like to see the term “functional reactive programming” replaced by the more accurate &amp; descriptive “denotative, continuous-time programming” (DCTP)_\n_Original FRP_ becomes DCTP and FRP can be vaguely used for functionally-composable signals.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578521555.067100",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "agt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " Yeah I am aware of that, but based on the following blog post I felt its OK to refer as FRP to that. ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/medium.com\/@andrestaltz\/why-i-cannot-say-frp-but-i-just-did-d5ffaa23973b#.xym3mzpyn"
                            },
                            {
                                "type": "text",
                                "text": ")\n\nThe following is a quote from the blog:\n\nThe article says:\n"
                            },
                            {
                                "type": "text",
                                "text": "What are we going to do?",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nIronically, I’ll actually take Conal Elliott’s advice he let slip in a StackOverflow answer:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "To reduce confusion, I would like to see the term “functional reactive programming” replaced by the more accurate & descriptive “denotative, continuous-time programming” (DCTP)",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Original FRP",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " becomes DCTP and FRP can be vaguely used for functionally-composable signals."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1578525255.068000",
        "edited": {
            "user": "UL3CJ7YKC",
            "ts": "1578525258.000000"
        },
        "client_msg_id": "9d55e4a6-e8bc-4578-9328-c028251a4c23",
        "text": "So I feel like the meaning of FRP has “officially” changed, but okay, we can say just Rx",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578521555.067100",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xX+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So I feel like the meaning of FRP has “officially” changed, but okay, we can say just Rx"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1578526901.074400",
        "client_msg_id": "CB2A7A30-4BD6-4C2B-9B4C-889988EB543D",
        "text": "<@UC2A2ARPT> I’m familiar with option drag to copy, but it wasn’t obvious to me that tap would be used as an option modifier in a touch UI. I might have guessed holding two fingers down before dragging would mean copy, as I think that’s clearer and less prone to error, but that wasn’t available to those early single touch interfaces.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578497507.039800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tJO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " I’m familiar with option drag to copy, but it wasn’t obvious to me that tap would be used as an option modifier in a touch UI. I might have guessed holding two fingers down before dragging would mean copy, as I think that’s clearer and less prone to error, but that wasn’t available to those early single touch interfaces."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1578527762.074700",
        "edited": {
            "user": "UEQ6M68H0",
            "ts": "1578528939.000000"
        },
        "client_msg_id": "5c58fafd-af0f-4247-8a6e-dbfe3e8cbced",
        "text": "I find these terms are relatively meaningless. All modern programs ultimately resolve to code that runs on a mutable state CPU using either ARM or Intel instruction sets, which only have arithmetic, branching, call\/return and misc. housekeeping instructions. The function (subroutine) has been the building block on which all towers have been built since almost day 1.\n\nAt the end of the day we are all using functions (subroutines) to achieve leverage, and most of the systems we are building respond to user input, hopefully with some snap. We used to call it graphical interactive software, but i guess the priests who try to make it mysterious fall in love with jargon.\n\nWhat is more interesting, is are we headed towards a world of interchangeable parts? How much of Github is actually usable by you or I on a daily basis? Or is is just billions of lines of rotting code of unknown quality, written in a motley collection of languages, all using different data models which make it impossible to snap a piece from one program into another?  How much sharing are we achieving between Desktop, Mobile, and Web products?  How many thousand completely incompatible versions of a simple line plotting program have and continue to be built? To me, ease of building, reading and maintenance of of paramount concern, and to that end a more declarative style of language is clearly superior as code that doesn't execute is intrinsically more reliable than code that runs. How many times have you puzzled over a self-defining constant versus untangling a tortuous execution path. Branching (IF statements) is the real enemy, because each one doubles the number of potential paths through your code. I wouldn't mind deep nesting in Java if there was no branching, but when you go 50 levels deep in a java program and each level has a branch or two, you are talking about 2^50 different potential paths.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578521555.067100",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NDu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I find these terms are relatively meaningless. All modern programs ultimately resolve to code that runs on a mutable state CPU using either ARM or Intel instruction sets, which only have arithmetic, branching, call\/return and misc. housekeeping instructions. The function (subroutine) has been the building block on which all towers have been built since almost day 1.\n\nAt the end of the day we are all using functions (subroutines) to achieve leverage, and most of the systems we are building respond to user input, hopefully with some snap. We used to call it graphical interactive software, but i guess the priests who try to make it mysterious fall in love with jargon.\n\nWhat is more interesting, is are we headed towards a world of interchangeable parts? How much of Github is actually usable by you or I on a daily basis? Or is is just billions of lines of rotting code of unknown quality, written in a motley collection of languages, all using different data models which make it impossible to snap a piece from one program into another?  How much sharing are we achieving between Desktop, Mobile, and Web products?  How many thousand completely incompatible versions of a simple line plotting program have and continue to be built? To me, ease of building, reading and maintenance of of paramount concern, and to that end a more declarative style of language is clearly superior as code that doesn't execute is intrinsically more reliable than code that runs. How many times have you puzzled over a self-defining constant versus untangling a tortuous execution path. Branching (IF statements) is the real enemy, because each one doubles the number of potential paths through your code. I wouldn't mind deep nesting in Java if there was no branching, but when you go 50 levels deep in a java program and each level has a branch or two, you are talking about 2^50 different potential paths."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1578528323.074900",
        "client_msg_id": "6b11697c-4c35-43a3-92be-36a263623087",
        "text": "I am familiar with most of the story. Visicalc was the origin. But then people immediately asked for graphing, and they created Visiplot. The Lotus 1-2-3 product combined graphing and spreadsheets into one product. They also did a better job of tracking new platforms. Borland's Quattro was a stiff competitor for a while. but all of the standalone products were eventually killed by office suites, which included word processing, spreadsheets, and other basic essential programs. There was a long battle with lots of dead bodies, and very innovative products that deserve further study like Framework, which was a very flexible and powerful tool for its time. Many of the products were better than the companies that controlled them. More often than not, it was poor business decisions and crazy management that scuttled these firms. It was the wild west at that point, and very eccentric personalities were more common then. Today we are in much more serious and deliberate business era.\n\nBy the way the sequel to Visicalc was TK\/Solver, a really clever product that allowed you to go backwards from a desired result to the inputs. I worked on  a similar product called Profile for a consulting firm spun out of McKinsey, that allowed fortune 50 companies to set targets, and then it would tell each division what they had to do to meet the goals. Going backwards in computers in any dimension is very tricky, because computers at their core only have \"forward\", \"pause\", \"reset\", but  no reverse gear. Speed control can be faked by pausing repeatedly. Excel added a few backsolving features and that killed off TK\/Solver. but it was built by Bricklin and Frankston who were an unbeatable inventive team.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578521118.066600",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BW1qK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am familiar with most of the story. Visicalc was the origin. But then people immediately asked for graphing, and they created Visiplot. The Lotus 1-2-3 product combined graphing and spreadsheets into one product. They also did a better job of tracking new platforms. Borland's Quattro was a stiff competitor for a while. but all of the standalone products were eventually killed by office suites, which included word processing, spreadsheets, and other basic essential programs. There was a long battle with lots of dead bodies, and very innovative products that deserve further study like Framework, which was a very flexible and powerful tool for its time. Many of the products were better than the companies that controlled them. More often than not, it was poor business decisions and crazy management that scuttled these firms. It was the wild west at that point, and very eccentric personalities were more common then. Today we are in much more serious and deliberate business era.\n\nBy the way the sequel to Visicalc was TK\/Solver, a really clever product that allowed you to go backwards from a desired result to the inputs. I worked on  a similar product called Profile for a consulting firm spun out of McKinsey, that allowed fortune 50 companies to set targets, and then it would tell each division what they had to do to meet the goals. Going backwards in computers in any dimension is very tricky, because computers at their core only have \"forward\", \"pause\", \"reset\", but  no reverse gear. Speed control can be faked by pausing repeatedly. Excel added a few backsolving features and that killed off TK\/Solver. but it was built by Bricklin and Frankston who were an unbeatable inventive team."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1578528651.075100",
        "edited": {
            "user": "ULM3U6275",
            "ts": "1578531270.000000"
        },
        "client_msg_id": "01acc27f-d1ab-45dc-8978-239a512a41f8",
        "text": "Have you tried Lotus Improv? I think it may have only been available on NeXTstep. Google sheets feels very primitive in comparison to (my memories of) Improv.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578521118.066600",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NpUNs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Have you tried Lotus Improv? I think it may have only been available on NeXTstep. Google sheets feels very primitive in comparison to (my memories of) Improv."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1578528873.075300",
        "client_msg_id": "cc320fad-d356-4359-af51-13f22dc9758d",
        "text": "Well, there's another active thread I'm on where we are using the name FRP to refer to Conal Elliot's original FRP, and it's kind of confusing to have the same word mean different things within this forum. Also, if I want to find implementations of Elliot's FRP using Google, then the term \"DCTP\" is useless: virtually nobody uses it. All those Haskell FRP libraries call themselves \"FRP\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578521555.067100",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EZI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Well, there's another active thread I'm on where we are using the name FRP to refer to Conal Elliot's original FRP, and it's kind of confusing to have the same word mean different things within this forum. Also, if I want to find implementations of Elliot's FRP using Google, then the term \"DCTP\" is useless: virtually nobody uses it. All those Haskell FRP libraries call themselves \"FRP\"."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1578529494.075700",
        "client_msg_id": "25c924b8-edb6-4f5a-a6ae-23b1c0c069af",
        "text": "Lotus Improv is one of the greatest failures in the history of computers.  And what i mean by that is it was a business failure, but a great product.  It was amazing, and really a sign of management incompetence that they could not move that product out of its toy platform into the mainstream. So what if it would have cost a lot to port it, when Windows has 92% and mac 8% and nextstep 0.0001% why do you not move it?  I used to make educational software. KidPix was a million CDROM based painting program for kindergartners. I saw the success, and built a product codenamed Teenpix, designed to teach painting to teenagers. It was a product positioned between KidPix and Deluxe Paint 2 which was the #1 pixel painting program on Amiga and Windows from EA. Anyway the manager at Broderbund who turned it down, Harry Wilkers, said that there is no market in computer software for teenage products. (!?) Wow what foresight did he have? Gee i think teenagers buy 20 billion a year in software nowadays... so all of these bad decisions are made by managers who aren't that bright. Happens every day in the tech industry. So rare to have managers that know good from bad. This is why Scott Adams has such a long and successful cartooning career, because that pointed haired boss is alive and well!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578521118.066600",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "u=c",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Lotus Improv is one of the greatest failures in the history of computers.  And what i mean by that is it was a business failure, but a great product.  It was amazing, and really a sign of management incompetence that they could not move that product out of its toy platform into the mainstream. So what if it would have cost a lot to port it, when Windows has 92% and mac 8% and nextstep 0.0001% why do you not move it?  I used to make educational software. KidPix was a million CDROM based painting program for kindergartners. I saw the success, and built a product codenamed Teenpix, designed to teach painting to teenagers. It was a product positioned between KidPix and Deluxe Paint 2 which was the #1 pixel painting program on Amiga and Windows from EA. Anyway the manager at Broderbund who turned it down, Harry Wilkers, said that there is no market in computer software for teenage products. (!?) Wow what foresight did he have? Gee i think teenagers buy 20 billion a year in software nowadays... so all of these bad decisions are made by managers who aren't that bright. Happens every day in the tech industry. So rare to have managers that know good from bad. This is why Scott Adams has such a long and successful cartooning career, because that pointed haired boss is alive and well!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1578531521.076100",
        "client_msg_id": "ff52c88c-af28-4d2c-af4b-5610e6d8755d",
        "text": "Yeah, it’s remarkable that not only did Lotus not get the significance of Improv, but every competitor after has also missed it. For example, if the folks at Google sheets looked at Improv, how could they not use it as the standard to work towards? Maybe they were just told to clone Excel in a browser?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578521118.066600",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pFeWz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, it’s remarkable that not only did Lotus not get the significance of Improv, but every competitor after has also missed it. For example, if the folks at Google sheets looked at Improv, how could they not use it as the standard to work towards? Maybe they were just told to clone Excel in a browser?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1578533699.076300",
        "client_msg_id": "849cce0d-3f0c-4a09-a90e-b48e19679dae",
        "text": "The only touch example I can think of is.. tap-drag is used in Google Maps to zoom rather than pan with 1 finger. I love it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578497507.039800",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hW2FX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The only touch example I can think of is.. tap-drag is used in Google Maps to zoom rather than pan with 1 finger. I love it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1578533844.076500",
        "client_msg_id": "1ba53e82-9a50-4450-a330-401c69654e75",
        "text": "Replacing U with V was most recently at the peak of fashion in 2011-ish, and fell out of fashion around 2015, by my reckon. Not sure if that matters to you, but it is something that some people pay attention to as a signifier.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578328340.438400",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pEo6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Replacing U with V was most recently at the peak of fashion in 2011-ish, and fell out of fashion around 2015, by my reckon. Not sure if that matters to you, but it is something that some people pay attention to as a signifier."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "URDJXHSSE",
        "type": "message",
        "ts": "1578534336.076700",
        "client_msg_id": "f29bdf96-1dcd-45ae-b416-2db36eaf0c21",
        "text": "it was also pretty popular ca. Roman Empire",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f5a3e5d83640",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-16\/876448714437_f5a3e5d836409852009a_72.jpg",
            "first_name": "",
            "real_name": "Alex Ellis",
            "display_name": "Alex Ellis",
            "team": "T5TCAFTA9",
            "name": "apellis",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578328340.438400",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jMt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "it was also pretty popular ca. Roman Empire"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1578536690.077300",
        "client_msg_id": "7d44ffac-cca8-4514-9499-b458942eb73c",
        "text": "On the good side, all the major domains were available. I snagged them and put up a placeholder on <http:\/\/strvct.net>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578328340.438400",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pSdB",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On the good side, all the major domains were available. I snagged them and put up a placeholder on "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/strvct.net"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UL3CJ7YKC",
        "type": "message",
        "ts": "1578538254.077500",
        "client_msg_id": "a943c56c-0618-467e-b8ac-e7dfa794547f",
        "text": "<@UJN1TAYEQ> Thanks for the info, I think I’ll go with Haskell FRP and Rx in future :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "5612322b81b6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-14\/834114331988_5612322b81b6d142511b_72.jpg",
            "first_name": "Pezo",
            "real_name": "Pezo - Zoltan Peto",
            "display_name": "Pezo - Zoltan Peto",
            "team": "T5TCAFTA9",
            "name": "pezo1919",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578521555.067100",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "RjWV\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for the info, I think I’ll go with Haskell FRP and Rx in future "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1578538996.077700",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1578539013.000000"
        },
        "client_msg_id": "d419d807-ce94-4bbc-a115-b474759bb9ed",
        "text": "<@URDJXHSSE> At first my message didn't include \"most recently\", but then I went back and added that before posting because I had a vague recollection.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578328340.438400",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "G\/\/Q",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "URDJXHSSE"
                            },
                            {
                                "type": "text",
                                "text": " At first my message didn't include \"most recently\", but then I went back and added that before posting because I had a vague recollection."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1578546656.078800",
        "client_msg_id": "8f5847ba-fc3d-4a08-a358-60a0f112ade1",
        "text": "One distinction\/temsion is between continuous signals and discrete event streams.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578521555.067100",
        "parent_user_id": "UL3CJ7YKC",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "l4R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One distinction\/temsion is between continuous signals and discrete event streams."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1578546999.079100",
        "client_msg_id": "b5787b40-3559-437d-9fdb-0fc0d0f3189a",
        "text": "Same deal with Smalltalk.  \"Guess the image is ruined, better revert to yesterday's.\"  The real solution would be sand-boxed changes (only want to modify part of the system right now) and good revision control.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1578385588.031500",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "KPm2N",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Same deal with Smalltalk.  \"Guess the image is ruined, better revert to yesterday's.\"  The real solution would be sand-boxed changes (only want to modify part of the system right now) and good revision control."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNLS33M61",
        "type": "message",
        "ts": "1578550920.079300",
        "client_msg_id": "c90d31a3-aa4a-4069-ab6b-5e950303fd68",
        "text": "<@UCGR73CAY> Hey there! Thanks for getting back to me. It’s been a busy holiday season. I remember reading that post, and it sounded like there were significant speed improvements just by getting the low hanging fruit, and there were probably more to squeeze out?\n\nAdmittedly, a little surprised about removing relational aspect. I would have thought it’s an advantage of the central store to have path independent access to data, especially if you don’t know how you’re going to access it in an app you’re sketching. If there are no joins, how does someone get all the comments of a blog post? Is it more like a document store then?\n\nAh, so you’ve swung back full circle. I get the sense that most people work on things that rhyme with their previous work. :+1:\n\nWhen reading your docs, I’m reminded of when I first started looking at Eve. Since the programming model was so foreign, it was hard to make sense of it. It was only after I found out about Datalog, that it clicked. 1\/ There are facts. they’re stored in the db. 2\/ There are rules that add more facts.\n\nEvery block is selecting facts, and using rules to transform those facts into new facts.  those new facts affect the change you want to see, like text on a screen, or ball rendered.\n\nIf your students have no programming experience at all, that might be a problem, but like your post says, if they’re coming from Java, then they might have already have a mental bias you need to break through.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g915aac3dfde",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/915aac3dfde2fb502ce415d77643a72d.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0004-72.png",
            "first_name": "",
            "real_name": "Wil Chung",
            "display_name": "Wil Chung",
            "team": "T5TCAFTA9",
            "name": "iamwil",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1574929029.255500",
        "parent_user_id": "UNLS33M61",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nQHQf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UCGR73CAY"
                            },
                            {
                                "type": "text",
                                "text": " Hey there! Thanks for getting back to me. It’s been a busy holiday season. I remember reading that post, and it sounded like there were significant speed improvements just by getting the low hanging fruit, and there were probably more to squeeze out?\n\nAdmittedly, a little surprised about removing relational aspect. I would have thought it’s an advantage of the central store to have path independent access to data, especially if you don’t know how you’re going to access it in an app you’re sketching. If there are no joins, how does someone get all the comments of a blog post? Is it more like a document store then?\n\nAh, so you’ve swung back full circle. I get the sense that most people work on things that rhyme with their previous work. "
                            },
                            {
                                "type": "emoji",
                                "name": "+1",
                                "unicode": "1f44d"
                            },
                            {
                                "type": "text",
                                "text": "\n\nWhen reading your docs, I’m reminded of when I first started looking at Eve. Since the programming model was so foreign, it was hard to make sense of it. It was only after I found out about Datalog, that it clicked. 1\/ There are facts. they’re stored in the db. 2\/ There are rules that add more facts.\n\nEvery block is selecting facts, and using rules to transform those facts into new facts.  those new facts affect the change you want to see, like text on a screen, or ball rendered.\n\nIf your students have no programming experience at all, that might be a problem, but like your post says, if they’re coming from Java, then they might have already have a mental bias you need to break through."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]