[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1732089770.921329",
        "client_msg_id": "62843532-d954-44d7-ba94-88f0d17bbfd1",
        "text": "Wondering... if the quote that started this thread isn't just another aspect of the general CS\/tech attitude of valuing <https:\/\/science-in-the-digital-era.khinsen.net\/#Code%20over%20data|Code over data>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732010694.344219",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+92wL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Wondering... if the quote that started this thread isn't just another aspect of the general CS\/tech attitude of valuing "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/science-in-the-digital-era.khinsen.net\/#Code%20over%20data",
                                "text": "Code over data"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1732092142.298189",
        "client_msg_id": "3f0e6adc-03c6-4f2b-ad81-d58709c57722",
        "text": "<@ULM3U6275> I think that's the \"spirit\" of the quote but not sure, the quote is not mine :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732010694.344219",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "03stI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "ULM3U6275"
                            },
                            {
                                "type": "text",
                                "text": " I think that's the \"spirit\" of the quote but not sure, the quote is not mine "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04Q53X6P7W",
        "type": "message",
        "ts": "1732107598.057099",
        "client_msg_id": "6DFF50B5-311E-4549-858A-6A122B2E3E05",
        "text": "<@UJBAJNFLK> that’s an interesting perspective because Rich Hickey and the clojure community use the quote as evidence that data is more important than code. Maybe it’s that the lispers consider data structures code but the data inside of lists just data?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "402a5ff55c77",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-07-05\/5533188035202_402a5ff55c77365d5465_72.jpg",
            "first_name": "Alexander",
            "real_name": "Alexander Bandukwala",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "alexander",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732010694.344219",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "34DME",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " that’s an interesting perspective because Rich Hickey and the clojure community use the quote as evidence that data is more important than code."
                            },
                            {
                                "type": "text",
                                "text": " Maybe "
                            },
                            {
                                "type": "text",
                                "text": "it’s"
                            },
                            {
                                "type": "text",
                                "text": " that the lispers consider data structures code but the data inside of lists just data?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05BRNRAC4V",
        "type": "message",
        "ts": "1732108117.695009",
        "edited": {
            "user": "U05BRNRAC4V",
            "ts": "1732108240.000000"
        },
        "client_msg_id": "2bac680c-199b-41de-bb45-bc25c01f0397",
        "text": "> Data structures are not an implementation detail\nConcrete implementations are, at least in the Clojure philosophy. For most application programmers most of the time the important thing is whether the interface is a map, vector, or set, not whether the map is implemented as an association list, property list, or hash map.\n\nThere's an awful old common lisp mailing group thread where they tore a guy to shreds for suggesting this ~25 years ago. Now it's standard practice in Clojureland and devs love it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "60eabb9fec28",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-06-09\/5405168537780_60eabb9fec2890116074_72.jpg",
            "first_name": "Dave",
            "real_name": "Dave Liepmann",
            "display_name": "Dave Liepmann",
            "team": "T5TCAFTA9",
            "name": "dave.liepmann",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732010694.344219",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rnG\/x",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Data structures are not an implementation detail"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nConcrete implementations are, at least in the Clojure philosophy. For most application programmers most of the time the important thing is whether the interface is a map, vector, or set, not whether the map is implemented as an association list, property list, or hash map.\n\nThere's an awful old common lisp mailing group thread where they tore a guy to shreds for suggesting this ~25 years ago. Now it's standard practice in Clojureland and devs love it."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1732122718.643319",
        "client_msg_id": "74bfa5dc-1d11-4342-bf16-13e4e8424cbc",
        "text": "<@U05BRNRAC4V> I suspect that the distinction between abstract and concrete data types was not around when Perlis published his epigrams in 1982.\n\nBTW, in Common Lisp this is quite common as well in recent libraries, but not nearly as widespread as in Clojure. Old habits stick.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732010694.344219",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bN7Am",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U05BRNRAC4V"
                            },
                            {
                                "type": "text",
                                "text": " I suspect that the distinction between abstract and concrete data types was not around when Perlis published his epigrams in 1982.\n\nBTW, in Common Lisp this is quite common as well in recent libraries, but not nearly as widespread as in Clojure. Old habits stick."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UH7GU4TAM",
        "type": "message",
        "ts": "1732124859.365969",
        "client_msg_id": "7363655c-d702-49f9-a76f-b7a8cabed4a7",
        "text": "Prolog terms",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2af66accb7e7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-02-15\/956486537398_2af66accb7e7b7dd4d7b_72.png",
            "first_name": "Nick",
            "real_name": "Nick Main",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "david.nick.main",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732010694.344219",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3WHTA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Prolog terms"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04Q53X6P7W",
        "type": "message",
        "ts": "1732124888.602869",
        "client_msg_id": "0b93c22f-d5e3-4ea4-adc4-492e02f7e587",
        "text": "I'd be curious when it became mainstream but Liskov published <https:\/\/dl.acm.org\/doi\/pdf\/10.1145\/800233.807045> in 1974",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "402a5ff55c77",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-07-05\/5533188035202_402a5ff55c77365d5465_72.jpg",
            "first_name": "Alexander",
            "real_name": "Alexander Bandukwala",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "alexander",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732010694.344219",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IMkj9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'd be curious when it became mainstream but Liskov published "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/dl.acm.org\/doi\/pdf\/10.1145\/800233.807045"
                            },
                            {
                                "type": "text",
                                "text": " in 1974"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1732124946.578749",
        "client_msg_id": "ece71633-7c09-4b15-bc9d-52d6c6c2b909",
        "text": "<@UJBAJNFLK> It doesn’t do anything particularly special to visualize complex values. It shows <https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1731112776819179?thread_ts=1731109091.361599&amp;cid=C5U3SEW6A|nested boxes> by default, and lets the user (tediously) define custom visualizers if they like; see 13:42 in <https:\/\/joshuahhh.com\/projects\/pane\/|the video> for an example of that. My point was about the way the overall interface prioritizes viewing data over viewing code – spreadsheets hide code behind values, PANE relegates code to edges rather than their typical prominence inside nodes.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1731714636.906459",
        "parent_user_id": "U07TREJC9DJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PcWaR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " It doesn’t do anything particularly special to visualize complex values. It shows "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5U3SEW6A\/p1731112776819179?thread_ts=1731109091.361599&cid=C5U3SEW6A",
                                "text": "nested boxes"
                            },
                            {
                                "type": "text",
                                "text": " by default, and lets the user (tediously) define custom visualizers if they like; see 13:42 in "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/joshuahhh.com\/projects\/pane\/",
                                "text": "the video"
                            },
                            {
                                "type": "text",
                                "text": " for an example of that. My point was about the way the overall interface prioritizes viewing data over viewing code – spreadsheets hide code behind values, PANE relegates code to edges rather than their typical prominence inside nodes."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04Q53X6P7W",
        "type": "message",
        "ts": "1732124992.024189",
        "client_msg_id": "bdeacf47-e1b0-4b0e-9899-7932f2794a7d",
        "text": "Without <https:\/\/www.cs.cmu.edu\/~aldrich\/papers\/objects-essay.pdf|interoperability> though, it's possible that having abstract types isn't as much a win for reuse.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "402a5ff55c77",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-07-05\/5533188035202_402a5ff55c77365d5465_72.jpg",
            "first_name": "Alexander",
            "real_name": "Alexander Bandukwala",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "alexander",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732010694.344219",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QjE4E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Without "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.cs.cmu.edu\/~aldrich\/papers\/objects-essay.pdf",
                                "text": "interoperability"
                            },
                            {
                                "type": "text",
                                "text": " though, it's possible that having abstract types isn't as much a win for reuse."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1732125268.375839",
        "client_msg_id": "aa09da21-de1d-4683-8488-33fd16682f0d",
        "text": "\"relegates\" \/ \"prominence\" — this sort of dismissive talk is why I became a staunch advocate for edges. They get such short shrift, and I've had enough of it! EDGES HAVE THE EDGE!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1731714636.906459",
        "parent_user_id": "U07TREJC9DJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eTuhX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"relegates\" \/ \"prominence\" — this sort of dismissive talk is why I became a staunch advocate for edges. They get such short shrift, and I've had enough of it! EDGES HAVE THE EDGE!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "U05UK5T7LPP",
                    "UJBAJNFLK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "ULM3U6275",
        "type": "message",
        "ts": "1732139905.835039",
        "client_msg_id": "eb594040-ff5a-4a2b-a82b-fcd5904d2410",
        "text": "<@UBN9AFS0N> I'd say 10 data structures with 10 functions each, or rather: 10 (data structure) classes with 10 instance methods each.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g588e3d3aa94",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/7588e3d3aa94ba40f57f495ec8c3206b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Steve",
            "real_name": "Steve Dekorte",
            "display_name": "Steve Dekorte",
            "team": "T5TCAFTA9",
            "name": "steve447",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732010694.344219",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "AHmku",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": " I'd say 10 data structures with 10 functions each, or rather: 10 (data structure) classes with 10 instance methods each."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1732149019.027159",
        "client_msg_id": "28fabe15-0eec-438b-95cf-b1471d2f4d91",
        "text": "ok",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1731714636.906459",
        "parent_user_id": "U07TREJC9DJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "luWBi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ok"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1732173629.752309",
        "client_msg_id": "c4219a1b-4181-41c9-979b-6672aa9061ec",
        "text": "<@UBKNXPBAB> The reason for my question was to explore how general PANE's approach is. Custom visualizers are code, but that code is not on the edges if I understand the video correctly. And for both data and code, there's the question to what size and complexity this approach (or in any fact any visual approach) scales in practice. Spreadsheets are made for very shallowly structured data and short code snippets. Which is fine, there are lots of use cases. But as someone working with complex data and complex algorithms, I wonder where the limits if visual techniques are.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1731714636.906459",
        "parent_user_id": "U07TREJC9DJ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L8tIx",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBKNXPBAB"
                            },
                            {
                                "type": "text",
                                "text": " The reason for my question was to explore how general PANE's approach is. Custom visualizers are code, but that code is not on the edges if I understand the video correctly. And for both data and code, there's the question to what size and complexity this approach (or in any fact any visual approach) scales in practice. Spreadsheets are made for very shallowly structured data and short code snippets. Which is fine, there are lots of use cases. But as someone working with complex data and complex algorithms, I wonder where the limits if visual techniques are."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1732173837.309299",
        "client_msg_id": "86261dbd-dc26-44c3-b74c-28b6bf25c9e7",
        "text": "<@U04Q53X6P7W> Thanks for digging out that paper! Now I wonder if Perlis was aware of it. And now that I think of it, Smalltalk objects make abstract data structures as well, and Smalltalk was around and widely discussed in 1982.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1732010694.344219",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "07b\/A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U04Q53X6P7W"
                            },
                            {
                                "type": "text",
                                "text": " Thanks for digging out that paper! Now I wonder if Perlis was aware of it. And now that I think of it, Smalltalk objects make abstract data structures as well, and Smalltalk was around and widely discussed in 1982."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U04Q53X6P7W"
                ],
                "count": 1
            }
        ]
    }
]