[
    {
        "user": "U012YEHPAVA",
        "type": "message",
        "ts": "1618246897.092800",
        "client_msg_id": "2d1b9344-84ce-4f72-974b-2bf9f99e11f6",
        "text": "For what it's worth, Markus Völter is also the host of the most excellent Omega Tau podcast.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd4934dbf5b9",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d4934dbf5b9323f2a3faa7f2da720ff4.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0006-72.png",
            "first_name": "",
            "real_name": "Kaushik",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "skaushik",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1617972254.088700",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=SmD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For what it's worth, Markus Völter is also the host of the most excellent Omega Tau podcast."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1618278852.096600",
        "client_msg_id": "ac2a195f-d145-40aa-ab5f-2a10371c7fec",
        "text": "“Let it have been drawn”: the role of diagrams in geometry <http:\/\/intellectualmathematics.com\/blog\/let-it-have-been-drawn-the-role-of-diagrams-in-geometry\/> podcast and transcript (part of a series on Greek geometry) talks about how important actually drawing diagrams likely was for the ancient Greeks.  The author Viktor Blåsjö suggests an \"operationalist\" interpretation: that rigorous procedures for drawing things are how you establish facts, not the abstract logic by itself.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1618278852.096600",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1618297834.099900",
        "reply_users": [
            "U013ZLJARC7"
        ],
        "replies": [
            {
                "user": "U013ZLJARC7",
                "ts": "1618297834.099900"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "service_name": "Intellectual Mathematics",
                "title": "“Let it have been drawn”: the role of diagrams in geometry",
                "title_link": "http:\/\/intellectualmathematics.com\/blog\/let-it-have-been-drawn-the-role-of-diagrams-in-geometry\/",
                "text": "The use of diagrams in geometry raise questions about the place of the physical, the sensory, the human in mathematical reasoning. Multiple sources of evidence speak to how these dilemmas were tackled in antiquity: the linguistics of diagram construction, the state of drawings in the oldest extant m",
                "fallback": "Intellectual Mathematics: “Let it have been drawn”: the role of diagrams in geometry",
                "thumb_url": "http:\/\/intellectualmathematics.com\/wp-content\/uploads\/OpHistMathLogo600.jpg",
                "ts": 1615379093,
                "from_url": "http:\/\/intellectualmathematics.com\/blog\/let-it-have-been-drawn-the-role-of-diagrams-in-geometry\/",
                "thumb_width": 600,
                "thumb_height": 600,
                "service_icon": "http:\/\/i1.wp.com\/intellectualmathematics.com\/wp-content\/uploads\/2015\/06\/sunlogo-558b004dv1_site_icon.png?fit=114%2C114",
                "id": 1,
                "original_url": "http:\/\/intellectualmathematics.com\/blog\/let-it-have-been-drawn-the-role-of-diagrams-in-geometry\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "7hd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "“Let it have been drawn”: the role of diagrams in geometry "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/intellectualmathematics.com\/blog\/let-it-have-been-drawn-the-role-of-diagrams-in-geometry\/"
                            },
                            {
                                "type": "text",
                                "text": " podcast and transcript (part of a series on Greek geometry) talks about how important actually drawing diagrams likely was for the ancient Greeks.  The author Viktor Blåsjö suggests an \"operationalist\" interpretation: that rigorous procedures for drawing things are how you establish facts, not the abstract logic by itself."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U013ZLJARC7",
                    "UFPRPSA4S"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UT60XSVCN",
        "type": "message",
        "ts": "1618279184.099100",
        "client_msg_id": "62b5a1b5-842c-4cd9-86e9-35c7e67ea0b7",
        "text": "<https:\/\/arcan-fe.com\/2021\/04\/12\/introducing-pipeworld\/|https:\/\/arcan-fe.com\/2021\/04\/12\/introducing-pipeworld\/>\nNew project in the arcan family released, for all the spreadsheet and ZUI lovers here + it is more or less daily drivable, depending on what you do",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gbc3e6041047",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/bc3e6041047849518d1b042f0a29d5af.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "S.M Mukarram Nainar",
            "display_name": "S.M Mukarram Nainar",
            "team": "T5TCAFTA9",
            "name": "nainars",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "Arcan",
                "service_url": "http:\/\/arcan-fe.com",
                "title": "Introducing Pipeworld: Spreadsheet Dataflow Computing",
                "title_link": "https:\/\/arcan-fe.com\/2021\/04\/12\/introducing-pipeworld\/",
                "author_name": "bjornstahl",
                "author_link": "https:\/\/arcan-fe.com\/author\/bjornstahl\/",
                "text": "Now for something completely different. In the spiritual vein of One Night in Rio: Vacation photos from Plan9 and AWK for multimedia, here is a tool that is the link that ties almost all the projects within the Arcan umbrella together into one &ndash; and one we have been building towards for a depressing number of years and tens of thousands of hours.\n\n\n\nPipeworld (github link) combines &lsquo;dataflow&lsquo; programming (like Excel or Userland) with a Zooming-Tiling User Interface (ZUI). It builds dynamic pipelines similarly to (Ultimate Plumber), and leverages most of the gamut of Arcan features &mdash; from terminal emulator liberated CLIs and TUIs to dynamic network transparency. It follows many of the principles for a Diverging Desktop Future, particularly towards the idea of making clients simpler and more composable by focusing on interactive &ldquo;breadboarding&rdquo; data exchange.\n\n\n\nThere is a whole lot of ground to cover, so let&rsquo;s get started.\n\n\n\nThe following is a video (youtube) that joins all the clips in this article together, but you will likely understand more of what is going on by reading through the sections.\n\n\n\n\n\n Shortlinks to the individual sections are as follows:\n\n\n\nZoomable UIDataflow ComputingTerminal, CLI and PipelinesAdvanced Networking, Sharing and DebuggingTrajectory and FutureZoomable (Tiling) UI\n\n\n\nThe core is based around &lsquo;cells&rsquo; of various types. These naturally tile in two dimensions as rows and columns. The first cell on each row determines the default behaviour of the row, and moving selection around will &lsquo;pan&rsquo; the view to fit the current cell.\n\n\n\nEach row has a scale factor, and the same goes for the cell. This means that different sets of cells can have different sizes (&lsquo;heterogenous zooming&rsquo;) with different post-processing based on magnification and so on. Some cells can switch contents based on magnification, while others stay blissfully ignorant.\n\n\n\nIn the following short clip you see some of this in play, using a combination of keybindings as well as mouse gestures. This might make some feel a bit nauseous as this is not something that generalises well to groups of observers (we have solutions for that too) &mdash; but it is a different effect when it is your interaction that initiates and control the &ldquo;zoom&rdquo;.\n\n\n\n\nTiling-Zoomable Window ManagementThe heterogeneous zooming allows for a large number of cells to be visible at the same time. Even when scaled down, client state such as notifications and alerts can still be communicated through decoration colours and animations.\n\n\n\nBefitting of tiling workflows, everything can be keyboard controlled. Just like in Durden, mouse gestures, popup menus, keyboards and exotic input devices simply map to writes into file-system like paths.\n\n\n\nWhen- or why- would tens to hundreds of simultaneous windows be useful? Some examples from my day to day would be monitoring, controlling and automating virtual machines, botnets remote shell connections, video surveillance, ticketing systems and so on.\n\n\n\nDataflow Computing and the Expression Cell\n\n\n\nEach cell has a type &ndash; with the default one being &lsquo;expression&rsquo;, where you type in expressions in a minimalistic programming language. The result of that expression mutates the type- or the contents- of the cell.\n\n\n\nExpressions are processed differently based on which scope they are operating in &ndash; with the current scopes being:\n\n\n\nExpression &ndash; Arithmetic, string processing and other &lsquo;basic types&rsquo; operations.Cell &ndash; Used for event handlers, changing, annotating or otherwise modifying visual or window management behaviour of the current cell.System &ndash; Global configuration, shutdown, idle timers and so on.Factory &ndash; Producing new cells or mutating existing  the following clip you can see some basic arithmetic; changing numeric representation; string processing functions and the &lsquo;cell&rsquo; scope as a popup to tag a cell with a reference identifier which is then used in another expression.\n\n\n\n\nExpression cells used for basic arithmetic, number and text processingIn a sense this is 3 different kinds of command-line interfaces wrapped into one. These can modify, import from- and export to- cells of other types. This is where things gets more interesting and powerful.\n\n\n\nThe following video is an example where I first copy the contents of a file to the clipboard of a terminal (the somewhat unknown OSC;52 sequence). I then create an expression cell where I set its contents to a text message. I then start vim in the first terminal and then run the cell-scope expression:\n\n\n\ntype_keyboard(concat(a1.clipboard, b1), &ldquo;fast&rdquo;)\n\n\n\nThis reads as &lsquo;send the clipboard content of the A1 cell and the content A2 as simulated keypresses into the currently selected cell using a moderately fast typing speed model. From the perspective of vim itself, this looks just like someone typing on a keyboard.\n\n\n\n\nSimulated keypresses using a function composing the clipboard of a cell and the contents of anotherThere are many more cell types than just terminals, command lines and expressions. Video playback; capture devices; images; native Arcan clients, such as our Qemu backend or Xorg fork and many more. In this clip you can see some of those &ndash; including Pipeworld running pipeworld. You can also see the current state of autocompletion and expression helper.\n\n\n\n\nIn this video I first open a capture device (web camera). I then spawn a terminal and copy the contents of a shader (GPU processing program) to its clipboard. This gets compiled and assigned the name &lsquo;red&lsquo;. Lastly I sample a frame from the capture device using this shader.\n\n\n\n\nSample and filter a frame from a capture device using a freshly compiled, all organic, shader.What all of this means practically is that we can gather measurements, trigger inputs and stitch audio, video and generic data streams from clients together in a fashion that more resembles breadboards as used in electronics, and sequencers as used in sound production, than traditional desktop or terminal work.\n\n\n\nTerminal, CLI and Pipelines\n\n\n\nLets go back to the command-line for a bit, as we have yet to poke at pipelines. In this clip I run the system scope function: pipe(&ldquo;find \/usr&rdquo;, &ldquo;grep &ndash;line-buffered share&rdquo;)\n\n\n\n\nBuilding a pipeline of shell commandsA lot of magic is happening inside of this one. Each client is spawned separately and suspended. Then their runtime stdin\/stdout pipes gets remapped based on the current pipeline before the chain is activated. Note that when I reset the cell representing the &ldquo;find \/usr&rdquo; cell, the grep one remains intact and unaware that find was actually killed off and re-executed. \n\n\n\nThe API is lacking somewhat still, but technically there is nothing blocking the &lsquo;pipes&rsquo; from being a mix between terminal emulators (isatty() == true), stdin\/stdout redirected normal processes (isatty() == false) and fully graphical ones.\n\n\n\nTyping # into an expression cell gives us a dusty old terminal emulator. We can also add some command to run afterwards, like #find \/tmp. &lsquo;Resetting&rsquo; a cell means re-evaluating the expression or command it represents.\n\n\n\nIn the following clip I first list the contents of \/tmp and then setup a timer that will reset the cell ~every second. This is indicated by the coloured flash. Then I spawn a normal terminal and create a file in tmp, and you can see it appearing. To show that the &lsquo;terminal&rsquo; behind the first command is still alive, I also swap out its colour scheme and have it resize to fit its contents.\n\n\n\n\nPer-cell reset timer repeating a single terminal commandTyping ! into an expression cell switches it into a CLI one. It uses a special mode in afsrv_terminal (the terminal that comes with Arcan) where no terminal protocols are emulated, no &lsquo;pty devices&rs…",
                "fallback": "Arcan Link: Introducing Pipeworld: Spreadsheet Dataflow&nbsp;Computing",
                "from_url": "https:\/\/arcan-fe.com\/2021\/04\/12\/introducing-pipeworld\/",
                "service_icon": "https:\/\/arcanfe.files.wordpress.com\/2017\/10\/arcanicon.png?w=180",
                "id": 1,
                "original_url": "https:\/\/arcan-fe.com\/2021\/04\/12\/introducing-pipeworld\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "05WA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/arcan-fe.com\/2021\/04\/12\/introducing-pipeworld\/",
                                "text": "https:\/\/arcan-fe.com\/2021\/04\/12\/introducing-pipeworld\/"
                            },
                            {
                                "type": "text",
                                "text": "\nNew project in the arcan family released, for all the spreadsheet and ZUI lovers here + it is more or less daily drivable, depending on what you do"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U013ZLJARC7",
                    "U01U19ECZTJ"
                ],
                "count": 3
            },
            {
                "name": "smile",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBSMEUXAA",
        "type": "message",
        "ts": "1618282369.099300",
        "client_msg_id": "998356ee-3ec3-415b-b4ac-798ecfd3ad55",
        "text": "<https:\/\/twitter.com\/arntzenius\/status\/1381687474427138052?s=19|https:\/\/twitter.com\/arntzenius\/status\/1381687474427138052?s=19>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0edf98a60210",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-26\/774747080560_0edf98a60210d3ab07ea_72.jpg",
            "first_name": "",
            "real_name": "Scott Anderson",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "scottan",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/arntzenius|@arntzenius>: If you're interested in programming by voice, or programming language design, or better yet both, I have a talk for you:\n\n<https:\/\/www.youtube.com\/watch?v=G8B71MbA9u4>\n\nThanks again to <https:\/\/twitter.com\/lindsey|@lindsey> for hosting and encouraging me to give this talk!",
                "ts": 1618254939,
                "author_name": "rntz",
                "author_link": "https:\/\/twitter.com\/arntzenius\/status\/1381687474427138052",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1262133266842365958\/tpN0y-UV_normal.jpg",
                "author_subname": "@arntzenius",
                "text": "If you're interested in programming by voice, or programming language design, or better yet both, I have a talk for you:\n\n<https:\/\/www.youtube.com\/watch?v=G8B71MbA9u4>\n\nThanks again to <https:\/\/twitter.com\/lindsey|@lindsey> for hosting and encouraging me to give this talk!",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/arntzenius\/status\/1381687474427138052?s=19",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/arntzenius\/status\/1381687474427138052?s=19",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5hatM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/arntzenius\/status\/1381687474427138052?s=19",
                                "text": "https:\/\/twitter.com\/arntzenius\/status\/1381687474427138052?s=19"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UPVBV34EL",
        "type": "message",
        "ts": "1618292641.099700",
        "client_msg_id": "fa3e2b78-cd4d-4609-9116-59ed82458e4f",
        "text": "Zig is a general-purpose programming language and toolchain for maintaining robust, optimal, and reusable software. - <https:\/\/ziglang.org\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "259a1e56ad2e",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-28\/811814014976_259a1e56ad2e11fe3d56_72.jpg",
            "first_name": "",
            "real_name": "Shubhadeep Roychowdhury",
            "display_name": "Shubhadeep Roychowdhury",
            "team": "T5TCAFTA9",
            "name": "shubhadeeproychowdhur",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kbac",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Zig is a general-purpose programming language and toolchain for maintaining robust, optimal, and reusable software. - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/ziglang.org\/"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]