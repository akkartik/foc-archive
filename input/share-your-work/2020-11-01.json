[
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1604224153.129200",
        "client_msg_id": "26059464-075b-4e73-b1c2-a311089c6c76",
        "text": "&gt; Can you see me drowning in my own ambition yet?  :man-swimming::skin-tone-4::shark:\nYes! I guess people here knows that feeling. :sweat_smile: I guess we are a bunch of futurists swimming or sailing the seas of programming. Sometime feeling like drowning, sometime like surfing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604155452.122300",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p83",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Can you see me drowning in my own ambition yet?  "
                            },
                            {
                                "type": "emoji",
                                "name": "man-swimming",
                                "unicode": "1f3ca-1f3fd-200d-2642-fe0f",
                                "skin_tone": 4
                            },
                            {
                                "type": "emoji",
                                "name": "shark",
                                "unicode": "1f988"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes! I guess people here knows that feeling. "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            },
                            {
                                "type": "text",
                                "text": " I guess we are a bunch of futurists swimming or sailing the seas of programming. Sometime feeling like drowning, sometime like surfing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1604225096.129500",
        "client_msg_id": "8c5497e8-6093-49b0-ae8d-fdc986431526",
        "text": "&gt; The motivation behind it is to build a “better Excel” for power users and also software developers who would rather not deal with all the incidental complexity of modern app development for a project with complex logic, ie not just some CRUD app.\nI also think it is an interesting target audience. Not really all end users,  but some that want to do a bit more programming. And trying to create tools for them and also for some \"expert\" developers is something very interesting.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604155452.122300",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HZz1",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The motivation behind it is to build a “better Excel” for power users and also software developers who would rather not deal with all the incidental complexity of modern app development for a project with complex logic, ie not just some CRUD app."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I also think it is an interesting target audience. Not really all end users,  but some that want to do a bit more programming. And trying to create tools for them and also for some \"expert\" developers is something very interesting."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1604225294.129700",
        "client_msg_id": "147a8965-ee02-40b2-86b5-c1d1928f422c",
        "text": "I like your idea to keep history to make things more explorable by keeping the time dimension. I guess this can become very tricky. I guess you have to find a way to manage the space limit for the history, i.e. when it takes too much resources. For simple use case it can be fine, but when you manage big tables that changes often you will have to remove part of the history.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604155452.122300",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lg1R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I like your idea to keep history to make things more explorable by keeping the time dimension. I guess this can become very tricky. I guess you have to find a way to manage the space limit for the history, i.e. when it takes too much resources. For simple use case it can be fine, but when you manage big tables that changes often you will have to remove part of the history."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01BAS8GU86",
        "type": "message",
        "ts": "1604243602.129900",
        "client_msg_id": "ac3c1237-b9d5-4331-bd9a-e9e3a7c1dd5e",
        "text": "&gt; sometime like surfing\nI’ll try and get there! :man-surfing::skin-tone-4:\n\n&gt; And trying to create tools for them and also for some “expert” developers is something very interesting.\nThis honestly comes from me being a big personal finance nerd, and I once made a spreadsheet that calculates all of my finances, think a personal double sided balance sheet. Coming back a year later though, it made the engineer side want to cry. It was impossible to maintain efficiently, but I also didn’t want to manage an app to do it either. Then as I learned more about the adoption of Functions-as-a-Service, it seemed to really extend the upper limit for the use cases.\n\n&gt; I guess you have to find a way to manage the space limit for the history, i.e. when it takes too much resources.\nYeah, this is definitely an outstanding question. I imagine I will just do a simple set sized FIFO cache to start out, and then down the road I could push to something like IndexedDB (once those bindings actually exist in Rust -&gt; wasm).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "24e71f2ba4a9",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-10-23\/1445768371157_24e71f2ba4a9059b8c54_72.jpg",
            "first_name": "",
            "real_name": "Everett Pompeii",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "epompeii",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604155452.122300",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/FpF",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "sometime like surfing"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’ll try and get there! "
                            },
                            {
                                "type": "emoji",
                                "name": "man-surfing",
                                "unicode": "1f3c4-1f3fd-200d-2642-fe0f",
                                "skin_tone": 4
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "And trying to create tools for them and also for some “expert” developers is something very interesting."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This honestly comes from me being a big personal finance nerd, and I once made a spreadsheet that calculates all of my finances, think a personal double sided balance sheet. Coming back a year later though, it made the engineer side want to cry. It was impossible to maintain efficiently, but I also didn’t want to manage an app to do it either. Then as I learned more about the adoption of Functions-as-a-Service, it seemed to really extend the upper limit for the use cases.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I guess you have to find a way to manage the space limit for the history, i.e. when it takes too much resources."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, this is definitely an outstanding question. I imagine I will just do a simple set sized FIFO cache to start out, and then down the road I could push to something like IndexedDB (once those bindings actually exist in Rust -> wasm)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1604272639.132500",
        "client_msg_id": "D4833DFA-254A-4655-979B-C336175D9C10",
        "text": "i suspect that documentation is kind of like a wiki—locally linear pages but globally a graph, with individual narratives referencing the same fragments more than once",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604079401.115400",
        "parent_user_id": "U019PRL1BNU",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/pd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "i suspect that documentation is kind of like a wiki—locally linear pages but globally a graph, with individual narratives referencing the same fragments more than once"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1604273716.132700",
        "client_msg_id": "5374e27b-d520-45b8-a16f-9f2bb2f6ed36",
        "text": "First para: that's right.\n\nSecond para: if we spill `out` to the stack, then the assignment to it is kinda misleading. It looks like we're writing to a register but we're really writing to the stack. The only reason to expose registers is that many instructions have constraints on how many writes to memory they can perform. Memory variables that look like registers defeat the purpose.\n\nPerhaps I should just use a calling convention where outputs go to the stack rather than registers. I'll keep that in mind.\n\nPara 3: yes it's supposed to be checked. But it isn't currently. Having strong checks is the purpose of this issue.\n\nPara 4: I may well have to do that. It would be dashed inconvenient, though, to not be able to assign an output from nested blocks.\n\nMany thanks for all these comments! As always, follow-up questions appreciated.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1604180931.125900",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dJew",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "First para: that's right.\n\nSecond para: if we spill "
                            },
                            {
                                "type": "text",
                                "text": "out",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " to the stack, then the assignment to it is kinda misleading. It looks like we're writing to a register but we're really writing to the stack. The only reason to expose registers is that many instructions have constraints on how many writes to memory they can perform. Memory variables that look like registers defeat the purpose.\n\nPerhaps I should just use a calling convention where outputs go to the stack rather than registers. I'll keep that in mind.\n\nPara 3: yes it's supposed to be checked. But it isn't currently. Having strong checks is the purpose of this issue.\n\nPara 4: I may well have to do that. It would be dashed inconvenient, though, to not be able to assign an output from nested blocks.\n\nMany thanks for all these comments! As always, follow-up questions appreciated."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]