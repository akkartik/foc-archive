[
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1599383258.115500",
        "client_msg_id": "702f352b-59fc-403f-9275-da457264b477",
        "text": "I feel like the examples mentioned so far, while sharing some kind of kinship, have a different flavor from the old research I mentioned above. Here's an example video from 1994 in the context of charting data:\n<https:\/\/www.youtube.com\/watch?v=jiHRCtJCRts>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599306161.111000",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Gold Charting by Example 1994 (Short Version)",
                "title_link": "https:\/\/www.youtube.com\/watch?v=jiHRCtJCRts",
                "author_name": "Brad Myers",
                "author_link": "https:\/\/www.youtube.com\/user\/myersbrada",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/jiHRCtJCRts\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Gold Charting by Example 1994 (Short Version)",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/jiHRCtJCRts?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/www.youtube.com\/watch?v=jiHRCtJCRts",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=jiHRCtJCRts"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lpMXE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I feel like the examples mentioned so far, while sharing some kind of kinship, have a different flavor from the old research I mentioned above. Here's an example video from 1994 in the context of charting data:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=jiHRCtJCRts"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1599384062.115800",
        "client_msg_id": "e0262e9a-df58-4eea-91c6-bc4c00a75545",
        "text": "Or a system that offers these interactions that resemble Perlin's ChalkTalk to develop UIs (25 years ago):\n<https:\/\/www.youtube.com\/watch?v=VLQcW6SpJ88&amp;list=PL3856C8FlIWfr_tX8CMUhOJvl34ylClgb>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599306161.111000",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Sketching Interfaces Like Krazy (SILK) - James Landay, CHI 96",
                "title_link": "https:\/\/www.youtube.com\/watch?v=VLQcW6SpJ88",
                "author_name": "Shalmanese",
                "author_link": "https:\/\/www.youtube.com\/user\/Shalmanese",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/VLQcW6SpJ88\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Sketching Interfaces Like Krazy (SILK) - James Landay, CHI 96",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/VLQcW6SpJ88?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/www.youtube.com\/watch?v=VLQcW6SpJ88",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=VLQcW6SpJ88&amp;list=PL3856C8FlIWfr_tX8CMUhOJvl34ylClgb"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vM3TY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Or a system that offers these interactions that resemble Perlin's ChalkTalk to develop UIs (25 years ago):\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=VLQcW6SpJ88&list=PL3856C8FlIWfr_tX8CMUhOJvl34ylClgb"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1599387095.116100",
        "client_msg_id": "0a713f9c-8826-4132-bcf5-cbe95b129abf",
        "text": "One of my favorite systems from this period was Peridot (plus Garnet, &amp;c -- all the \"gemstone\" systems that team made), but the only video I can find very low resolution, which often makes it hard to read the onscreen text:\n<https:\/\/www.youtube.com\/watch?v=FsGx7G72V0Q>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599306161.111000",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Peridot Full   1987",
                "title_link": "https:\/\/www.youtube.com\/watch?v=FsGx7G72V0Q",
                "author_name": "Brad Myers",
                "author_link": "https:\/\/www.youtube.com\/user\/myersbrada",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/FsGx7G72V0Q\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Peridot Full   1987",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/FsGx7G72V0Q?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/www.youtube.com\/watch?v=FsGx7G72V0Q",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=FsGx7G72V0Q"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mcm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One of my favorite systems from this period was Peridot (plus Garnet, &c -- all the \"gemstone\" systems that team made), but the only video I can find very low resolution, which often makes it hard to read the onscreen text:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=FsGx7G72V0Q"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U019CPED6T1",
        "type": "message",
        "ts": "1599398805.116400",
        "client_msg_id": "4c447c42-d061-42df-86b3-de4f2acc0c6e",
        "text": "What is the fundamental difference between TDD and coding by example? Does coding by example just mean every variable has a default value? Or is it deeper than that?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa03454e2d2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa03454e2d26593c48c2f67c9fc90534.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Andrew",
            "real_name": "Andrew Carr",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewcarr06",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599306161.111000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UEkB9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What is the fundamental difference between TDD and coding by example? Does coding by example just mean every variable has a default value? Or is it deeper than that?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1599400447.116600",
        "client_msg_id": "3da0a907-c349-4630-9a51-93f30e9a79cc",
        "text": "<@U019CPED6T1> This is not \"coding by example\" but \"programming by example\" — that is it's not just a matter of having example values in the code or starting with input\/output pairs, but rather a different way of communicating your intent to the computer (often graphically rather than textually). I recommend you watch the <https:\/\/www.youtube.com\/watch?v=jiHRCtJCRts|charting example video> above to get a sense for it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599306161.111000",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Gold Charting by Example 1994 (Short Version)",
                "title_link": "https:\/\/www.youtube.com\/watch?v=jiHRCtJCRts",
                "author_name": "Brad Myers",
                "author_link": "https:\/\/www.youtube.com\/user\/myersbrada",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/jiHRCtJCRts\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Gold Charting by Example 1994 (Short Version)",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/jiHRCtJCRts?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/www.youtube.com\/watch?v=jiHRCtJCRts",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=jiHRCtJCRts"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "sXEM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U019CPED6T1"
                            },
                            {
                                "type": "text",
                                "text": " This is not \"coding by example\" but \"programming by example\" — that is it's not just a matter of having example values in the code or starting with input\/output pairs, but rather a different way of communicating your intent to the computer (often graphically rather than textually). I recommend you watch the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=jiHRCtJCRts",
                                "text": "charting example video"
                            },
                            {
                                "type": "text",
                                "text": " above to get a sense for it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U019CPED6T1"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1599406023.116900",
        "client_msg_id": "99a0baaa-57c0-4b39-987f-fab905423eb5",
        "text": "<@U019CPED6T1>\n&gt; What is the fundamental difference between TDD and coding by example?\nTo put things a different way, TDD is about a human providing examples and then a human coding to make those examples work. Programming by example is about allowing a human to provide example and then the program is automatically derived from that example.\n\nMore in line with what <@U013ZLJARC7> is talking about is this section from Bret Victor’s magic ink that goes into more in depth with an example. <http:\/\/worrydream.com\/MagicInk\/#designing_a_design_tool>\n\n\nIn fact in this essay, there is a quote that relates the kinds of things Jack talked about to the kinds of things I was discussing.\n\n&gt; Many systems attempt to infer a full computational procedure, and have the most difficulty with computational concepts such as conditionals and iteration. As we will see, this tool mostly has to infer mappings from some set or numerical range to another—functions in the mathematical sense rather than the (imperative) computational sense. This may be significantly easier.\nBarliman is a system that tries to infer full computational procedure. The systems Jack is talking about are much more inline with what Bret is achieving, inferring particular relations given a graphical input.\n\nThe point of my example in my talk is that there might be some way in which we can take ourselves much further into inferring from examples to computational procedures, by changing up our programming models.\n\nI absolutely love the work that Jack linked, but I would love to see programming by example become a more general technique useful beyond domain specific cases and with some nice underlying model that can be broadly applied. In other words, I just want to work from the ground up to get something that can power the various awesome projects that Jack posted without having to code those interactions specifically.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599306161.111000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TcnW1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U019CPED6T1"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What is the fundamental difference between TDD and coding by example?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nTo put things a different way, TDD is about a human providing examples and then a human coding to make those examples work. Programming by example is about allowing a human to provide example and then the program is automatically derived from that example.\n\nMore in line with what "
                            },
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " is talking about is this section from Bret Victor’s magic ink that goes into more in depth with an example. "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/worrydream.com\/MagicInk\/#designing_a_design_tool"
                            },
                            {
                                "type": "text",
                                "text": "\n\n\nIn fact in this essay, there is a quote that relates the kinds of things Jack talked about to the kinds of things I was discussing.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Many systems attempt to infer a full computational procedure, and have the most difficulty with computational concepts such as conditionals and iteration. As we will see, this tool mostly has to infer mappings from some set or numerical range to another—functions in the mathematical sense rather than the (imperative) computational sense. This may be significantly easier."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nBarliman is a system that tries to infer full computational procedure. The systems Jack is talking about are much more inline with what Bret is achieving, inferring particular relations given a graphical input.\n\nThe point of my example in my talk is that there might be some way in which we can take ourselves much further into inferring from examples to computational procedures, by changing up our programming models.\n\nI absolutely love the work that Jack linked, but I would love to see programming by example become a more general technique useful beyond domain specific cases and with some nice underlying model that can be broadly applied. In other words, I just want to work from the ground up to get something that can power the various awesome projects that Jack posted without having to code those interactions specifically."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U013ZLJARC7",
                    "US370TRJA",
                    "UKP3B2J5D"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "U019CPED6T1",
        "type": "message",
        "ts": "1599406189.117200",
        "client_msg_id": "e0668ee9-1056-4ac9-b10d-5de75ab37d98",
        "text": "Ah! Thank you. That's much more clear. It almost feels like the end goal of some of the current parametric learning work (e.g., deep learning) where you give a single example and can generate\/extrapolate to a functioning program. \n\nLove it. \n\nI look forward to watching and reading more this afternoon.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa03454e2d2",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa03454e2d26593c48c2f67c9fc90534.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0017-72.png",
            "first_name": "Andrew",
            "real_name": "Andrew Carr",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "andrewcarr06",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599306161.111000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JHv4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah! Thank you. That's much more clear. It almost feels like the end goal of some of the current parametric learning work (e.g., deep learning) where you give a single example and can generate\/extrapolate to a functioning program. \n\nLove it. \n\nI look forward to watching and reading more this afternoon."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1599410382.117800",
        "client_msg_id": "cb55514b-51df-4aba-89d2-1edfdcc64298",
        "text": "<@UK3LH8CF5> For the record, I'm also a Barliman superfan. :slightly_smiling_face: We've talked with Byrd a bit about getting something similar working for a subset of Clojure in Maria.cloud as part of a learner's assistant. I've already added a `suggest` function that does this weaker but still potentially useful \"suggest possible code based on a before\/after pair\":\n```(suggest [1 2 3 4] :=&gt; 1)\n;; ((\"first\" [1 2 3 4]))\n\n(suggest [1 2 3 4] :=&gt; 4)\n;; ((last [1 2 3 4])\n;;  (peek [1 2 3 4])\n;;  (count [1 2 3 4]))\n\n(suggest [1 2 3 4] :=&gt; [2 3 4])\n;; ((rest [1 2 3 4]))\n\n(suggest [1 2 3 4] 3 :=&gt; [2 3 4])\n;; ((rest [1 2 3 4])\n;;  (take-last 3 [1 2 3 4]))\n\n(suggest [1 2 3 4] 1 :=&gt; 2)\n;; ((second [1 2 3 4])\n;;  (nth [1 2 3 4] 1)\n;;  (get [1 2 3 4] 1))\n\n(suggest 1 [1 2 3 4] :=&gt; [2 3 4])\n;; ((rest [1 2 3 4])\n;;  (drop 1 [1 2 3 4]))```",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599306161.111000",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tLtw0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": " For the record, I'm also a Barliman superfan. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " We've talked with Byrd a bit about getting something similar working for a subset of Clojure in Maria.cloud as part of a learner's assistant. I've already added a `suggest` function that does this weaker but still potentially useful \"suggest possible code based on a before\/after pair\":\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(suggest [1 2 3 4] :=> 1)\n;; ((\"first\" [1 2 3 4]))\n\n(suggest [1 2 3 4] :=> 4)\n;; ((last [1 2 3 4])\n;;  (peek [1 2 3 4])\n;;  (count [1 2 3 4]))\n\n(suggest [1 2 3 4] :=> [2 3 4])\n;; ((rest [1 2 3 4]))\n\n(suggest [1 2 3 4] 3 :=> [2 3 4])\n;; ((rest [1 2 3 4])\n;;  (take-last 3 [1 2 3 4]))\n\n(suggest [1 2 3 4] 1 :=> 2)\n;; ((second [1 2 3 4])\n;;  (nth [1 2 3 4] 1)\n;;  (get [1 2 3 4] 1))\n\n(suggest 1 [1 2 3 4] :=> [2 3 4])\n;; ((rest [1 2 3 4])\n;;  (drop 1 [1 2 3 4]))"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "UK3LH8CF5",
                    "UKP3B2J5D"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1599412033.118600",
        "client_msg_id": "dffd9369-121b-4962-8fdb-d8ff93d2bfde",
        "text": "I am very interested in programming tools that non-experts can use. I.e. people that didn’t learn to program initially but want or need to sometimes.\n\nLast week I have discussed with someone that could be interested in this kind of tool. And during the discussion about her use case, something appeared very clearly. In her journey in using programming, there are good chances that at one point she will need help from more experienced people. My feeling after that discussion is that this will be very common and that it is very important to take this into account early in the vision and the design of such tools or in the building of the community around it.\n\nI.e. creating tools that allow non-experts to program, make them feel it is normal to not know everything, making it really easy for them to find some help, and make it easy for a more experienced programmer to give help for the programming task.\n\nI guess I had this idea\/feeling for some time, but I really feel its importance after that discussion.\n\nWhat do you think of that? Do you have examples of tools\/communities where this is taken very seriously? Or any research work on this? Be it for end-user programming or not (in fact even experts need help from “more” experts).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599412033.118600",
        "reply_count": 17,
        "reply_users_count": 7,
        "latest_reply": "1599582873.135400",
        "reply_users": [
            "UCUSW7WVD",
            "UJ6LDMMN0",
            "U01A1C2K8MP",
            "UA14TGLTC",
            "UJBAJNFLK",
            "UE6EFEPTQ",
            "UN57U8V53"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1599413347.118900"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1599414533.119300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1599415089.119700"
            },
            {
                "user": "U01A1C2K8MP",
                "ts": "1599431195.121200"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1599431539.121500"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1599446734.121900"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1599459861.122300"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1599472452.122500"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1599472528.122800"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1599473993.124800"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1599485397.125400"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1599485830.125600"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1599486029.125900"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1599486049.126100"
            },
            {
                "user": "UN57U8V53",
                "ts": "1599563162.134500"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1599582767.135100"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1599582873.135400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "H88bN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am very interested in programming tools that non-experts can use. I.e. people that didn’t learn to program initially but want or need to sometimes.\n\nLast week I have discussed with someone that could be interested in this kind of tool. And during the discussion about her use case, something appeared very clearly. In her journey in using programming, there are good chances that at one point she will need help from more experienced people. My feeling after that discussion is that this will be very common and that it is very important to take this into account early in the vision and the design of such tools or in the building of the community around it.\n\nI.e. creating tools that allow non-experts to program, make them feel it is normal to not know everything, making it really easy for them to find some help, and make it easy for a more experienced programmer to give help for the programming task.\n\nI guess I had this idea\/feeling for some time, but I really feel its importance after that discussion.\n\nWhat do you think of that? Do you have examples of tools\/communities where this is taken very seriously? Or any research work on this? Be it for end-user programming or not (in fact even experts need help from “more” experts)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "UHWC9PXBL",
                    "UA14TGLTC",
                    "UML4ZEKDK"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1599413347.118900",
        "client_msg_id": "9e68ad14-cd2b-41fd-ad45-54621d4d9cc0",
        "text": "This year's Convivial Computing Salon discussed this a fair bit. In particular, Philip Tchernavskij's response to Jun Kato's talk had a lot of pointers to prior work. I can't find the slides, but watch the video at <https:\/\/junkato.jp\/programming-as-communication>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599412033.118600",
        "parent_user_id": "UJ6LDMMN0",
        "attachments": [
            {
                "title": "Programming as Communication",
                "title_link": "https:\/\/junkato.jp\/programming-as-communication",
                "text": "Throughout this work, we investigate how to make programming activities more inclusive and collaborative, involving people with diverse technical backgrounds. A programming environment does not need to be only for programmers. We consider that it should instead be designed for users with diverse technical backgrounds.",
                "fallback": "Programming as Communication",
                "image_url": "https:\/\/junkato.jp\/images\/panels\/programming-as-communication.png",
                "from_url": "https:\/\/junkato.jp\/programming-as-communication",
                "image_width": 476,
                "image_height": 250,
                "image_bytes": 81412,
                "service_name": "junkato.jp",
                "id": 1,
                "original_url": "https:\/\/junkato.jp\/programming-as-communication"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+agM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This year's Convivial Computing Salon discussed this a fair bit. In particular, Philip Tchernavskij's response to Jun Kato's talk had a lot of pointers to prior work. I can't find the slides, but watch the video at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/junkato.jp\/programming-as-communication"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0",
                    "UHWC9PXBL"
                ],
                "count": 2
            },
            {
                "name": "sunglasses",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1599414533.119300",
        "client_msg_id": "ee6f55f4-fbbd-404e-8480-9af97126f975",
        "text": "Thanks a lot Kartrik. In fact I have seen it live, but forgot about it, a sign that the subject wasn't important for me at that time. I know recall I liked Jun Kato's talk a lot. I will definitely rewatch it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599412033.118600",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Wbyta",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks a lot Kartrik. In fact I have seen it live, but forgot about it, a sign that the subject wasn't important for me at that time. I know recall I liked Jun Kato's talk a lot. I will definitely rewatch it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1599415089.119700",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1599415142.000000"
        },
        "client_msg_id": "71311a0a-b9bc-45b1-ab0c-625b4b18317c",
        "text": "Some keywords from my notes of the talk, that were used in papers in the '90s:\n* participatory design\n* customizable\/tailorable\/personalizable\/adaptable software\n\nSome notes I made of papers:\n* Maclean et al., 1990\n* MacKay 1990 (DIY community)\n\nJust in case this is useful :slightly_smiling_face: Mostly this is an excuse for me to transcribe analog notes to a digital, searchable form.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599412033.118600",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "35vX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Some keywords from my notes of the talk, that were used in papers in the '90s:\n* participatory design\n* customizable\/tailorable\/personalizable\/adaptable software\n\nSome notes I made of papers:\n* Maclean et al., 1990\n* MacKay 1990 (DIY community)\n\nJust in case this is useful "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " Mostly this is an excuse for me to transcribe analog notes to a digital, searchable form."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "smile",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1599417969.120300",
        "client_msg_id": "f04d97d7-9b95-4753-a65a-8e2456fb8a9c",
        "text": "This is a much better resolution video showing a good flavor of the work (drawing interface instead of coding them, using inference to guess the user's intent and asking for confirmation, constraint-based layout systems, and so on):\n<https:\/\/www.youtube.com\/watch?v=wc8A0woo0X4>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599306161.111000",
        "parent_user_id": "UBN9AFS0N",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Garnet UIDE   1993",
                "title_link": "https:\/\/www.youtube.com\/watch?v=wc8A0woo0X4",
                "author_name": "Brad Myers",
                "author_link": "https:\/\/www.youtube.com\/user\/myersbrada",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/wc8A0woo0X4\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Garnet UIDE   1993",
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/wc8A0woo0X4?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "from_url": "https:\/\/www.youtube.com\/watch?v=wc8A0woo0X4",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/www.youtube.com\/watch?v=wc8A0woo0X4"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "a8mq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a much better resolution video showing a good flavor of the work (drawing interface instead of coding them, using inference to guess the user's intent and asking for confirmation, constraint-based layout systems, and so on):\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=wc8A0woo0X4"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01A1C2K8MP",
        "type": "message",
        "ts": "1599431195.121200",
        "client_msg_id": "8e87d4c1-9968-4c92-8738-a64966478e64",
        "text": "This is, I think, an excellent book on end-user programming. <https:\/\/www.amazon.com\/Small-Matter-Programming-Perspectives-Computing\/dp\/026228040X> It includes a significant discussion of the role of peer support",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd4b24603815",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d4b246038154d7cc2363256bd25a4fe0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "",
            "real_name": "larry",
            "display_name": "larry",
            "team": "T5TCAFTA9",
            "name": "ljw1001",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599412033.118600",
        "parent_user_id": "UJ6LDMMN0",
        "attachments": [
            {
                "title": "A Small Matter of Programming: Perspectives on End User Computing",
                "title_link": "https:\/\/www.amazon.com\/Small-Matter-Programming-Perspectives-Computing\/dp\/026228040X",
                "text": "A Small Matter of Programming: Perspectives on End User Computing",
                "fallback": "A Small Matter of Programming: Perspectives on End User Computing",
                "from_url": "https:\/\/www.amazon.com\/Small-Matter-Programming-Perspectives-Computing\/dp\/026228040X",
                "service_icon": "https:\/\/www.amazon.com\/favicon.ico",
                "service_name": "amazon.com",
                "id": 1,
                "original_url": "https:\/\/www.amazon.com\/Small-Matter-Programming-Perspectives-Computing\/dp\/026228040X"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gZG0t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is, I think, an excellent book on end-user programming. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.amazon.com\/Small-Matter-Programming-Perspectives-Computing\/dp\/026228040X"
                            },
                            {
                                "type": "text",
                                "text": " It includes a significant discussion of the role of peer support"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJ6LDMMN0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1599431539.121500",
        "client_msg_id": "27389003-612b-4040-9b9b-a7e2770616e7",
        "text": "Indeed. Searching <http:\/\/history.futureofcoding.org|http:\/\/history.futureofcoding.org> for 'nardi' brings up some good past threads.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599412033.118600",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fmXA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Indeed. Searching "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/history.futureofcoding.org",
                                "text": "http:\/\/history.futureofcoding.org"
                            },
                            {
                                "type": "text",
                                "text": " for 'nardi' brings up some good past threads."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1599446734.121900",
        "client_msg_id": "3df42b51-2890-42ac-baea-84c9a445d8e1",
        "text": "Here's a way to put it... If you're making sufficiently rich software (from the end-user perspective), they are going to need help using it.  You can choose to assist them in getting help, or you can hope that users will self-organize a forum for helping each other.  Either way, help will be needed in order to get the most out of your software.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599412033.118600",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s95Hs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here's a way to put it... If you're making sufficiently rich software (from the end-user perspective), they are going to need help using it.  You can choose to assist them in getting help, or you can hope that users will self-organize a forum for helping each other.  Either way, help will be needed in order to get the most out of your software."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1599459861.122300",
        "client_msg_id": "ed15c3d4-0e7d-4408-9fe6-1627c6e5d651",
        "text": "This is a frequent situation in computational science as well. It's not quite end-user programming, but a mixture of next-to-end-user and end-plus-next-to-end-user programming. Typically collaboration of a domain expert with some computing knowledge and a software professional with some domain knowledge.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599412033.118600",
        "parent_user_id": "UJ6LDMMN0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "1cR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a frequent situation in computational science as well. It's not quite end-user programming, but a mixture of next-to-end-user and end-plus-next-to-end-user programming. Typically collaboration of a domain expert with some computing knowledge and a software professional with some domain knowledge."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]