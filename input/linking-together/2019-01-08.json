[
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1547007929.072700",
        "client_msg_id": "CC5CA3D3-E0BB-491C-B26D-7475A6F93826",
        "text": "I love Pico-8 as well and it seems great to learn current coding but far from \"future of coding\"?\n\nI know some schools use it and I'm sure plenty of kids use it but I'm pretty sure the majority of interesting things made with it are by people with tons of coding experience under their belt.\n\nAs a teaching environment I'm curious where it fits compared to say Unity. I get that Unity is a giant monstrosity with few limits but at the same time you can follow a short tutorial and have a 3d character controllable and walking around a 3d environment colliding with walls and have 3d enemies path finding their way to the player in just a few minute and then start modifying. Where as with Pico-8 I'm guessing the same inexperience person might be at the \"draw random colored lines\" stage in the same amount of time.\n\nOr maybe compare to Processing or P5.js\n\nI guess I wonder how much my nostalgia for my 8bit programming experience clouds my appreciation of Pico-8. Sure I grew up learning BASIC on Apple2\/TRS-80\/Atari 800\/C64 but I just wonder if that's the right approach for 2019\n\nCompare to say Javacript\/HTML vs my 8bit experience. As a kid in an 8bit computer I couldn't even draw an image without having to write code. Fonts? Forget it. Draw a polygon? None of those machines had a 2d API that did more than draw points and lines. Vs say JavaScript with drawImage, patterns, transforms, fonts, multiple color modes, composite modes. And also all of HTML for output \/ UI \/ etc..\n\nI have fond memories of implementing my own string input system where you could move the cursor, type and it would insert characters at the cursor, press delete and it would delete to the right, backspace to the left, insert vs replace mode, etc. all that because the system provided nothing. Now all that is just handed by &lt;input type=\"text\"&gt;\n\n",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1546431799.043400",
        "parent_user_id": "UEQ7QL15F",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Kkc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I love Pico-8 as well and it seems great to learn current coding but far from \"future of coding\"?\n\nI know some schools use it and I'm sure plenty of kids use it but I'm pretty sure the majority of interesting things made with it are by people with tons of coding experience under their belt.\n\nAs a teaching environment I'm curious where it fits compared to say Unity. I get that Unity is a giant monstrosity with few limits but at the same time you can follow a short tutorial and have a 3d character controllable and walking around a 3d environment colliding with walls and have 3d enemies path finding their way to the player in just a few minute and then start modifying. Where as with Pico-8 I'm guessing the same inexperience person might be at the \"draw random colored lines\" stage in the same amount of time.\n\nOr maybe compare to Processing or P5.js\n\nI guess I wonder how much my nostalgia for my 8bit programming experience clouds my appreciation of Pico-8. Sure I grew up learning BASIC on Apple2\/TRS-80\/Atari 800\/C64 but I just wonder if that's the right approach for 2019\n\nCompare to say Javacript\/HTML vs my 8bit experience. As a kid in an 8bit computer I couldn't even draw an image without having to write code. Fonts? Forget it. Draw a polygon? None of those machines had a 2d API that did more than draw points and lines. Vs say JavaScript with drawImage, patterns, transforms, fonts, multiple color modes, composite modes. And also all of HTML for output \/ UI \/ etc..\n\nI have fond memories of implementing my own string input system where you could move the cursor, type and it would insert characters at the cursor, press delete and it would delete to the right, backspace to the left, insert vs replace mode, etc. all that because the system provided nothing. Now all that is just handed by <input type=\"text\">"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UEQ7QL15F",
                    "UCSJ44X1S"
                ],
                "count": 2
            }
        ]
    }
]