[
    {
        "user": "U015LBHHNDS",
        "type": "message",
        "ts": "1592816013.418700",
        "edited": {
            "user": "U015LBHHNDS",
            "ts": "1592816040.000000"
        },
        "client_msg_id": "65127681-dc37-4370-b14c-fe6ee8909f7e",
        "text": "Joy of Clojure is still on my shelf, also worked in vim (then wrote my own tooling :smile:).\n\nI’ve been working in Clojure full time for 2-3 years with no signs of slowing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0333addcda92",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-06-15\/1208066648512_0333addcda92b705a0c2_72.jpg",
            "first_name": "",
            "real_name": "Oliver Caldwell",
            "display_name": "Oliver Caldwell",
            "team": "T5TCAFTA9",
            "name": "olliec87",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592672141.411200",
        "parent_user_id": "UQPHR6Y3S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8pfet",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Joy of Clojure is still on my shelf, also worked in vim (then wrote my own tooling "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": ").\n\nI’ve been working in Clojure full time for 2-3 years with no signs of slowing."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJKKBAMLL",
        "type": "message",
        "ts": "1592835510.419200",
        "edited": {
            "user": "UJKKBAMLL",
            "ts": "1592835571.000000"
        },
        "client_msg_id": "4ae8c545-8eb6-4d52-8b3b-4cb775dd0a22",
        "text": "<@U6FKVSVCK> You say optimizing for “understanding” but when you look at a visual coding tool you are always translating the visual into textual\/vocal be it in your head or vocally when collaborating. I would love to join a call with you to see how your summarize\/explain something created in LynxTool as an experiment regarding this topic — My hypothesis is the textual summary will be more easy to understand than the visual. Visual will translate into: “first we get data from this source, then we scrub it, then we save it here, if this is true… etc” — Then we can show a third party the visual and the textual summary to see which is more understandable. Source &lt;=&gt; Understanding is more optimal than Source &lt;= Translate =&gt; Understanding.\n\nFor clarity, I’m not saying your approach is invalid or poor — I’m more interested in the hypothesis and the relative truth here. The statement you expressed about optimizing for 5,000 years from now is cherry-picked, while you may have skipped over some obvious benefits of text that I would like to explore with you.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6b9db1f76eed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-12\/662675221668_6b9db1f76eed746965ca_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Peak",
            "display_name": "Steve",
            "team": "T5TCAFTA9",
            "name": "steve727",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592430013.363800",
        "parent_user_id": "UJKKBAMLL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EcBEI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U6FKVSVCK"
                            },
                            {
                                "type": "text",
                                "text": " You say optimizing for “understanding” but when you look at a visual coding tool you are always translating the visual into textual\/vocal be it in your head or vocally when collaborating. I would love to join a call with you to see how your summarize\/explain something created in LynxTool as an experiment regarding this topic — My hypothesis is the textual summary will be more easy to understand than the visual. Visual will translate into: “first we get data from this source, then we scrub it, then we save it here, if this is true… etc” — Then we can show a third party the visual and the textual summary to see which is more understandable. Source <=> Understanding is more optimal than Source <= Translate => Understanding.\n\nFor clarity, I’m not saying your approach is invalid or poor — I’m more interested in the hypothesis and the relative truth here. The statement you expressed about optimizing for 5,000 years from now is cherry-picked, while you may have skipped over some obvious benefits of text that I would like to explore with you."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1592855877.419700",
        "edited": {
            "user": "UJN1TAYEQ",
            "ts": "1592856138.000000"
        },
        "client_msg_id": "073fb3fa-25f2-4757-bb3d-30b9d824741b",
        "text": "<@UJKKBAMLL> I challenge the statement: \"_when you look at a visual coding tool you are always translating the visual into textual\/vocal_\".\n• There are different styles of cognition. To use conventional programming languages, you use a symbolic thinking style that is slanted towards text\/syntax\/hierarchy. Visual thinking is different from this. This is the style of thinking used by graphic\/visual artists, but it can also be a powerful mode of thinking for architects and engineers.\n• It is not a given that a visual coding tool *must* force you to translate the visual into the symbolic in order to think about what you are doing. A visual coding tool *should* allow you to think visually.\nHere are some quotes from Scott Kim, \"Viewpoint: Toward a computer for Visual Thinkers\".\n&gt; It struck me as odd, and deeply wrong, that we were building tools for visual artists in a programming language that was utterly symbolic.\n&gt; \n&gt; So I set about wondering what a visual programming language might look like. If computers had been invented by artists and visually oriented people, instead of by mathematicians and engineers, how might they write programs? It seemed to me an important question, but one that hardly bothered most computer scientists. I read about a few attempts to build visual programming languages, and decided there was something fundamental I needed to understand.\n&gt; \n&gt; My journey took me deep into the foundations of computer science, where I asked fundamental questions like “what is programming” and “what is a user interaction” — questions that often get passed over in computer science (any definition of “programmiing” that starts with “a sequence of symbols that…” is not deep enough to encompass visual programming languages).\n<http:\/\/www.scottkim.com.previewc40.carrierzone.com\/viewpoint\/index.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592430013.363800",
        "parent_user_id": "UJKKBAMLL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uWc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJKKBAMLL"
                            },
                            {
                                "type": "text",
                                "text": " I challenge the statement: \""
                            },
                            {
                                "type": "text",
                                "text": "when you look at a visual coding tool you are always translating the visual into textual\/vocal",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\".\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "There are different styles of cognition. To use conventional programming languages, you use a symbolic thinking style that is slanted towards text\/syntax\/hierarchy. Visual thinking is different from this. This is the style of thinking used by graphic\/visual artists, but it can also be a powerful mode of thinking for architects and engineers."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "It is not a given that a visual coding tool "
                                    },
                                    {
                                        "type": "text",
                                        "text": "must",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " force you to translate the visual into the symbolic in order to think about what you are doing. A visual coding tool "
                                    },
                                    {
                                        "type": "text",
                                        "text": "should",
                                        "style": {
                                            "bold": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " allow you to think visually."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here are some quotes from Scott Kim, \"Viewpoint: Toward a computer for Visual Thinkers\".\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It struck me as odd, and deeply wrong, that we were building tools for visual artists in a programming language that was utterly symbolic.\n\nSo I set about wondering what a visual programming language might look like. If computers had been invented by artists and visually oriented people, instead of by mathematicians and engineers, how might they write programs? It seemed to me an important question, but one that hardly bothered most computer scientists. I read about a few attempts to build visual programming languages, and decided there was something fundamental I needed to understand.\n\nMy journey took me deep into the foundations of computer science, where I asked fundamental questions like “what is programming” and “what is a user interaction” — questions that often get passed over in computer science (any definition of “programmiing” that starts with “a sequence of symbols that…” is not deep enough to encompass visual programming languages)."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/www.scottkim.com.previewc40.carrierzone.com\/viewpoint\/index.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJKKBAMLL",
        "type": "message",
        "ts": "1592856203.420200",
        "client_msg_id": "7b77fd4f-e2d6-44ec-8e34-87af3b25ec71",
        "text": "<@UJN1TAYEQ> Classical programming language need translation too, this is why we put comments and name variables the way we do things — We try to help readability IE understanding by reducing the barrier of translating logical from the digital space to our own personal understanding. Let’s not take my argument as one encompassing all domains; I only argue that visual representations require translation into inner-dialogue which IMO is the source of many of it’s downsides. For example, a box around some logo and line to another box around another logo — That means nothing until you “think” about it and say internally “Ok, first this happens and it passes data to this other thing”. Then you see a clock logo and 5 and think “Ok, now it waits for 5 minutes before doing the next step” &lt;= All that is translation which needs to be learned by understanding the meaning of the visual relationships of data.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6b9db1f76eed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-12\/662675221668_6b9db1f76eed746965ca_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Peak",
            "display_name": "Steve",
            "team": "T5TCAFTA9",
            "name": "steve727",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592430013.363800",
        "parent_user_id": "UJKKBAMLL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p=v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJN1TAYEQ"
                            },
                            {
                                "type": "text",
                                "text": " Classical programming language need translation too, this is why we put comments and name variables the way we do things — We try to help readability IE understanding by reducing the barrier of translating logical from the digital space to our own personal understanding. Let’s not take my argument as one encompassing all domains; I only argue that visual representations require translation into inner-dialogue which IMO is the source of many of it’s downsides. For example, a box around some logo and line to another box around another logo — That means nothing until you “think” about it and say internally “Ok, first this happens and it passes data to this other thing”. Then you see a clock logo and 5 and think “Ok, now it waits for 5 minutes before doing the next step” <= All that is translation which needs to be learned by understanding the meaning of the visual relationships of data."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "expressionless",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U6FKVSVCK",
        "type": "message",
        "ts": "1592856467.420400",
        "client_msg_id": "6cbebac4-7ce9-48fc-af37-f5856aeaa1fe",
        "text": "<@UJKKBAMLL> I wouldn't really choose \"describing a fully-functioning program over the phone\" as a meaningful measure of whether my system is effectively helping the programmer solve their problem, but we could be optimizing for different things— that test seems a bit constructed to favor language.\n\nWhen working with a program, the user is going to be faced with questions like \"why doesn't this result look the way I expect?\" or \"what information went into this calculation?\" or \"what happens when I change this value?\" or \"what's the input or output value for this part of the calculation?\" I am trying to build something that makes those questions easy to answer, so for my purposes, a test against those would be more meaningful.\n\nProbably the most effective and reliable way to answer whether any particular design succeeds is to build it, and try to use it to solve a problem. The good news is that we're both doing that, so no extra effort required! ;)\n\nYou've made an interesting assumption with \"you're always translating the visual into textual\/vocal in your head\"! There seems to be a bifurcation in the population of visual-thinkers and language-thinkers, and each side is often unaware of the other side's existence\/experience. For me, it is (with few exceptions) the opposite of what you say: Words are continuously translated into mental pictures, the \"native format\" of thought for me. This is true for many people!\n\nThat being said, I don't think Lynxtool will be useful only for visual thinkers, since the ability to easily answer some of the problem-solving questions in the second paragraph would be useful to anyone. My particular solution involves manipulable diagrams, but that doesn't imply there's no _other_ way. And optimizing for a different measure of success will lead you to a different solution. What would you say you're optimizing for?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cad501b70b26",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-07\/786673147216_cad501b70b26e7666ed0_72.png",
            "first_name": "Tim",
            "real_name": "Tim Babb",
            "display_name": "tbabb",
            "team": "T5TCAFTA9",
            "name": "tbabb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592430013.363800",
        "parent_user_id": "UJKKBAMLL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NYtT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJKKBAMLL"
                            },
                            {
                                "type": "text",
                                "text": " I wouldn't really choose \"describing a fully-functioning program over the phone\" as a meaningful measure of whether my system is effectively helping the programmer solve their problem, but we could be optimizing for different things— that test seems a bit constructed to favor language.\n\nWhen working with a program, the user is going to be faced with questions like \"why doesn't this result look the way I expect?\" or \"what information went into this calculation?\" or \"what happens when I change this value?\" or \"what's the input or output value for this part of the calculation?\" I am trying to build something that makes those questions easy to answer, so for my purposes, a test against those would be more meaningful.\n\nProbably the most effective and reliable way to answer whether any particular design succeeds is to build it, and try to use it to solve a problem. The good news is that we're both doing that, so no extra effort required! ;)\n\nYou've made an interesting assumption with \"you're always translating the visual into textual\/vocal in your head\"! There seems to be a bifurcation in the population of visual-thinkers and language-thinkers, and each side is often unaware of the other side's existence\/experience. For me, it is (with few exceptions) the opposite of what you say: Words are continuously translated into mental pictures, the \"native format\" of thought for me. This is true for many people!\n\nThat being said, I don't think Lynxtool will be useful only for visual thinkers, since the ability to easily answer some of the problem-solving questions in the second paragraph would be useful to anyone. My particular solution involves manipulable diagrams, but that doesn't imply there's no _other_ way. And optimizing for a different measure of success will lead you to a different solution. What would you say you're optimizing for?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "smile",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJKKBAMLL",
        "type": "message",
        "ts": "1592856517.420600",
        "client_msg_id": "f8f63848-be97-46cf-b363-dc34497da938",
        "text": "I’m not saying text is better, I’m not saying visual is bad, I’m simply putting emphasis on the medium to express complex logic must be deliberate as it influences the entire product above that single decision. Take for example the work happening at NeuralLink and other like-products. They have, more or less, a direct brain to computer interface. Will you thinking in boxes and wires? No. You don’t think in boxes and wires; you think in problems; in dialog, in natural language. These next-gen HCI products should not make the mistake of understanding our thoughts and turn them into diagrams, unless the domain requires it (like architecture, civil engineering, etc.) but for mathmatics and workflow logic\/automation — IMO Text is best.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6b9db1f76eed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-12\/662675221668_6b9db1f76eed746965ca_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Peak",
            "display_name": "Steve",
            "team": "T5TCAFTA9",
            "name": "steve727",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592430013.363800",
        "parent_user_id": "UJKKBAMLL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qeJA5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m not saying text is better, I’m not saying visual is bad, I’m simply putting emphasis on the medium to express complex logic must be deliberate as it influences the entire product above that single decision. Take for example the work happening at NeuralLink and other like-products. They have, more or less, a direct brain to computer interface. Will you thinking in boxes and wires? No. You don’t think in boxes and wires; you think in problems; in dialog, in natural language. These next-gen HCI products should not make the mistake of understanding our thoughts and turn them into diagrams, unless the domain requires it (like architecture, civil engineering, etc.) but for mathmatics and workflow logic\/automation — IMO Text is best."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "-1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJKKBAMLL",
        "type": "message",
        "ts": "1592856903.420800",
        "edited": {
            "user": "UJKKBAMLL",
            "ts": "1592856966.000000"
        },
        "client_msg_id": "05172b97-6fe9-49af-aaaa-cc44b722819b",
        "text": "&gt;  Visual vs textual thinkings\n:100: I agree, I personally may be blend… IDK lol — I’m not convinced that this matters however because there is still some buffer of consuming content and internalizing it. I find that most visual representations of logic require textual explanations. Books are the best example here, I’ve read a fair share of books and they are nearly 99% text to convey complex concepts with sprinkled in visuals to help where necessary — It’s not the opposite. Even a book on mastering bonsai trees was mostly text with some random images just to make it pretty. Is the domain of creating software much different?\n\n&gt; Optimizing for\nWe are optimizing for HCI (human to computer interface) — Reading then writing. I want to optimize for the future technologies like direct-brain interfaces to express, query and create complex logic — _Like_ Jarvis in Ironman (don’t take this comparison literally, but we are building an AI-assistant).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6b9db1f76eed",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-12\/662675221668_6b9db1f76eed746965ca_72.jpg",
            "first_name": "Steve",
            "real_name": "Steve Peak",
            "display_name": "Steve",
            "team": "T5TCAFTA9",
            "name": "steve727",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592430013.363800",
        "parent_user_id": "UJKKBAMLL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pmjNb",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " Visual vs textual thinkings"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "emoji",
                                "name": "100",
                                "unicode": "1f4af"
                            },
                            {
                                "type": "text",
                                "text": " I agree, I personally may be blend… IDK lol — I’m not convinced that this matters however because there is still some buffer of consuming content and internalizing it. I find that most visual representations of logic require textual explanations. Books are the best example here, I’ve read a fair share of books and they are nearly 99% text to convey complex concepts with sprinkled in visuals to help where necessary — It’s not the opposite. Even a book on mastering bonsai trees was mostly text with some random images just to make it pretty. Is the domain of creating software much different?\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Optimizing for"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We are optimizing for HCI (human to computer interface) — Reading then writing. I want to optimize for the future technologies like direct-brain interfaces to express, query and create complex logic — "
                            },
                            {
                                "type": "text",
                                "text": "Like",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " Jarvis in Ironman (don’t take this comparison literally, but we are building an AI-assistant)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1592857743.421100",
        "client_msg_id": "60e27827-64ca-472b-8dde-71e384b4d5be",
        "text": "I took a workshop years ago from Fernando Flores. Mr. Flores was secretary of state under Allende, and put in prison for many years. Anyway he worked with Stafford Beer (the author of \"Platform for Change\", one of the most important books of the 20th century), and was a renowned expert on the german philosopher Heidegger. Evidently, Heidegger believed that all thinking was linguistic in origin, and that thinking is speaking to yourself. Certainly the human race got nowhere until we invented written language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592430013.363800",
        "parent_user_id": "UJKKBAMLL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "r9xR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I took a workshop years ago from Fernando Flores. Mr. Flores was secretary of state under Allende, and put in prison for many years. Anyway he worked with Stafford Beer (the author of \"Platform for Change\", one of the most important books of the 20th century), and was a renowned expert on the german philosopher Heidegger. Evidently, Heidegger believed that all thinking was linguistic in origin, and that thinking is speaking to yourself. Certainly the human race got nowhere until we invented written language."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U6FKVSVCK",
        "type": "message",
        "ts": "1592858113.421500",
        "edited": {
            "user": "U6FKVSVCK",
            "ts": "1592872546.000000"
        },
        "client_msg_id": "6fcc6b4f-0a5f-4a5a-8453-134423da6474",
        "text": "&gt; Is the domain of creating software much different?\nI'd say that a book on bonsai is about as similar to a computer program as a sculpture is to a steam engine.\n\nTo be slightly more literal: Unlike a program, a book on bonsai is a static collection of ideas, with unchanging relationships. A program is a dynamic thing, with data flowing through it, constantly changing, with new relationships materializing and dissolving. And the program itself moves too, as you rearrange its parts and add new ones. The two kinds of things will necessarily be designed and built quite differently.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cad501b70b26",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-07\/786673147216_cad501b70b26e7666ed0_72.png",
            "first_name": "Tim",
            "real_name": "Tim Babb",
            "display_name": "tbabb",
            "team": "T5TCAFTA9",
            "name": "tbabb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592430013.363800",
        "parent_user_id": "UJKKBAMLL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ggLYW",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is the domain of creating software much different?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI'd say that a book on bonsai is about as similar to a computer program as a sculpture is to a steam engine.\n\nTo be slightly more literal: Unlike a program, a book on bonsai is a static collection of ideas, with unchanging relationships. A program is a dynamic thing, with data flowing through it, constantly changing, with new relationships materializing and dissolving. And the program itself moves too, as you rearrange its parts and add new ones. The two kinds of things will necessarily be designed and built quite differently."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "joy",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U6FKVSVCK",
        "type": "message",
        "ts": "1592858400.421800",
        "client_msg_id": "c37e78b6-52c6-43de-af0e-20d20c6ead21",
        "text": "<@UEQ6M68H0> See also: The Whorf-Sapir hypothesis (now regarded with some skepticism— or at least less literally true than first proposed).\n\nI think no one disputes that language is critically important to civilization\/communication, but to a fraction of the population the notion that \"language\" and \"thought\" are _equivalent_ is self-evidently untrue. :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cad501b70b26",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-07\/786673147216_cad501b70b26e7666ed0_72.png",
            "first_name": "Tim",
            "real_name": "Tim Babb",
            "display_name": "tbabb",
            "team": "T5TCAFTA9",
            "name": "tbabb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592430013.363800",
        "parent_user_id": "UJKKBAMLL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nuaLW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UEQ6M68H0"
                            },
                            {
                                "type": "text",
                                "text": " See also: The Whorf-Sapir hypothesis (now regarded with some skepticism— or at least less literally true than first proposed).\n\nI think no one disputes that language is critically important to civilization\/communication, but to a fraction of the population the notion that \"language\" and \"thought\" are "
                            },
                            {
                                "type": "text",
                                "text": "equivalent",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " is self-evidently untrue. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UC2A2ARPT",
                    "UKDM3GLAJ",
                    "UMWF81HTP"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UE6EFEPTQ",
        "type": "message",
        "ts": "1592860955.422000",
        "client_msg_id": "12e33d5c-76b1-4cc9-ad10-60ba49cad043",
        "text": "When I think, I'm using three bits of my brain in parallel:\n• the animated model: probably visual, it allows me to, for example, visualise a ring buffer being filled and emptied by two processes\n• the narrative: \"so as long as this process is only responsible for writing data, and this process for reading, I probably won't need to lock anything\"\n• the feeling: \"wub wub wub .. uneasy .. got hurt before .. doubt .. are you sure about that?\nI'm sure I'm not the only one that thinks this way, but I can imagine some have a greater emphasis on the model, some on the narrative. And we all get that nice feeling when tests pass or the crash stops crashing.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8073c43d5d8d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-12-18\/508431502471_8073c43d5d8dd3d3b4b2_72.jpg",
            "first_name": "Duncan",
            "real_name": "Duncan Cragg",
            "display_name": "Duncan Cragg",
            "team": "T5TCAFTA9",
            "name": "fp",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592430013.363800",
        "parent_user_id": "UJKKBAMLL",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5mp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When I think, I'm using three bits of my brain in parallel:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "the animated model: probably visual, it allows me to, for example, visualise a ring buffer being filled and emptied by two processes"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "the narrative: \"so as long as this process is only responsible for writing data, and this process for reading, I probably won't need to lock anything\""
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "the feeling: \"wub wub wub .. uneasy .. got hurt before .. doubt .. are you sure about that?"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm sure I'm not the only one that thinks this way, but I can imagine some have a greater emphasis on the model, some on the narrative. And we all get that nice feeling when tests pass or the crash stops crashing."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1592866749.422300",
        "client_msg_id": "d28c69cf-ac79-4c9a-98d6-b53359b5bc5c",
        "text": "<@UJKKBAMLL> Here's another approach to understanding visual thinking: <https:\/\/www.lifehack.org\/275993\/7-things-only-visual-thinkers-will-understand>\nThe author self-identifies as a visual thinker, and explains that it is easier for her to process node-and-wire diagrams than text.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592430013.363800",
        "parent_user_id": "UJKKBAMLL",
        "attachments": [
            {
                "service_name": "Lifehack",
                "title": "7 Things Only Visual Thinkers Will Understand",
                "title_link": "https:\/\/www.lifehack.org\/275993\/7-things-only-visual-thinkers-will-understand",
                "text": "Visual thinkers see the world differently. Here's seven ways how.",
                "fallback": "Lifehack: 7 Things Only Visual Thinkers Will Understand",
                "thumb_url": "https:\/\/cdn.lifehack.org\/wp-content\/uploads\/2015\/07\/picjumbo.com_HNCK4523.jpg",
                "ts": 1438272000,
                "from_url": "https:\/\/www.lifehack.org\/275993\/7-things-only-visual-thinkers-will-understand",
                "thumb_width": 4000,
                "thumb_height": 2667,
                "service_icon": "https:\/\/cdn.lifehack.org\/wp-content\/uploads\/2018\/05\/31002541\/lifehack-site-logo.png",
                "id": 1,
                "original_url": "https:\/\/www.lifehack.org\/275993\/7-things-only-visual-thinkers-will-understand"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dZ3W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJKKBAMLL"
                            },
                            {
                                "type": "text",
                                "text": " Here's another approach to understanding visual thinking: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.lifehack.org\/275993\/7-things-only-visual-thinkers-will-understand"
                            },
                            {
                                "type": "text",
                                "text": "\nThe author self-identifies as a visual thinker, and explains that it is easier for her to process node-and-wire diagrams than text."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UJKKBAMLL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U015UNF0LSV",
        "type": "message",
        "ts": "1592887496.425600",
        "client_msg_id": "cc16ab68-6c0b-4594-a5b2-2da4a07e6549",
        "text": "Does any of you knows of a more comprehensive book list from Alan Kay? There is this one: <http:\/\/www.squeakland.org\/resources\/books\/readingList.jsp> but I was wondering if there is another one with more books in it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g33f8237e026",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/33f8237e0261c712b24582ad7ced7986.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Peter Damoc",
            "display_name": "Peter Damoc",
            "team": "T5TCAFTA9",
            "name": "pdamoc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1592887496.425600",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1592915650.431300",
        "reply_users": [
            "UDKTZSD6H",
            "U015UNF0LSV"
        ],
        "replies": [
            {
                "user": "UDKTZSD6H",
                "ts": "1592910697.430500"
            },
            {
                "user": "U015UNF0LSV",
                "ts": "1592915650.431300"
            }
        ],
        "is_locked": false,
        "subscribed": true,
        "last_read": "1592915650.431300",
        "attachments": [
            {
                "title": " squeakland : resources : books : reading list ",
                "title_link": "http:\/\/www.squeakland.org\/resources\/books\/readingList.jsp",
                "text": "Etoys is an educational tool for teaching children powerful ideas in compelling ways. Etoys is a media-rich authoring environment and visual programming system.",
                "fallback": " squeakland : resources : books : reading list ",
                "from_url": "http:\/\/www.squeakland.org\/resources\/books\/readingList.jsp",
                "service_icon": "http:\/\/www.squeakland.org\/images\/\/favicon.png",
                "service_name": "squeakland.org",
                "id": 1,
                "original_url": "http:\/\/www.squeakland.org\/resources\/books\/readingList.jsp"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ALm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Does any of you knows of a more comprehensive book list from Alan Kay? There is this one: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.squeakland.org\/resources\/books\/readingList.jsp"
                            },
                            {
                                "type": "text",
                                "text": " but I was wondering if there is another one with more books in it."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]