[
    {
        "user": "UJK8MKYAZ",
        "type": "message",
        "ts": "1564667110.031500",
        "client_msg_id": "c1a0b7ea-61de-4278-bb1a-93a31edee204",
        "text": "I won’t make it to the meet up today",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g191fa9e3260",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6191fa9e32605141275a68a8bb5f04fa.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0025-72.png",
            "first_name": "",
            "real_name": "Daniel Hines",
            "display_name": "Daniel Hines",
            "team": "T5TCAFTA9",
            "name": "d4hines",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ef7M",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I won’t make it to the meet up today"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1564667476.032300",
        "client_msg_id": "b1aa00a3-7d9f-4a65-b0fc-7083da6106cf",
        "text": "Is there something planned today? I'm not sure we set up anything, or maybe I'm not seeing it",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gBRJc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is there something planned today? I'm not sure we set up anything, or maybe I'm not seeing it"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1564667865.032800",
        "client_msg_id": "51CC739E-7320-48B5-9108-62E877541BA6",
        "text": "Ah, true. I forgot to send around a Doodle link. Here it is: <https:\/\/doodle.com\/poll\/de2nfk5qyffbemnm>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Doodle: Category Theory Study Group",
                "title_link": "https:\/\/doodle.com\/poll\/de2nfk5qyffbemnm",
                "text": "Doodle is the simplest way to schedule meetings with clients, colleagues, or friends. Find the best time for one-to-ones and team meetings with our user-friendly calendar tool. Get started today!",
                "fallback": "Doodle: Category Theory Study Group",
                "image_url": "https:\/\/doodle.com\/graphics\/static\/facebookSharingThumbnail.png",
                "from_url": "https:\/\/doodle.com\/poll\/de2nfk5qyffbemnm",
                "image_width": 300,
                "image_height": 200,
                "image_bytes": 6864,
                "service_icon": "https:\/\/cdn2.doodle.com\/dist\/i\/7479b568749fca315a2969e30cbee4f5.png",
                "service_name": "doodle.com",
                "id": 1,
                "original_url": "https:\/\/doodle.com\/poll\/de2nfk5qyffbemnm"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tkjd",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ah, true. I forgot to send around a Doodle link. Here it is: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/doodle.com\/poll\/de2nfk5qyffbemnm"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1564667939.035000",
        "client_msg_id": "E26A1045-E444-4C80-BD8D-617CA4C29B49",
        "text": "BTW I’m mainly sending this Doodle so everyone can see the date and time in their own time zone and also to get a feeling for who’s planning to attend. If you have a better idea of how to achieve these two things with a more lightweight method, please share those ideas here.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kA3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "BTW I’m mainly sending this Doodle so everyone can see the date and time in their own time zone and also to get a feeling for who’s planning to attend. If you have a better idea of how to achieve these two things with a more lightweight method, please share those ideas here."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UHWC9PXBL",
        "type": "message",
        "ts": "1564674686.036400",
        "client_msg_id": "2A55EEA7-C1CE-4A1A-B8C9-2C030B00FD5A",
        "text": "<https:\/\/youtu.be\/PXI53f2CnVw> great talk that turns out to be about topology rather than category theory but very cool. unfortunately the left audio channel is dead but it’s worth it IMO",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0d754210ed4",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/10d754210ed4e4706eba3d063cdf99f0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0019-72.png",
            "first_name": "Garth",
            "real_name": "Garth Goldwater",
            "display_name": "garth",
            "team": "T5TCAFTA9",
            "name": "garth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Brandon Williams - Seemingly Impossible Swift Programs",
                "title_link": "https:\/\/youtu.be\/PXI53f2CnVw",
                "author_name": "Functional Swift",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCNFUO_7gsLBk4YTmZoSTk5g",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/PXI53f2CnVw\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Brandon Williams - Seemingly Impossible Swift Programs",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/PXI53f2CnVw?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/PXI53f2CnVw",
                "service_icon": "https:\/\/a.slack-edge.com\/2089\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/PXI53f2CnVw"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DuDl4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/PXI53f2CnVw"
                            },
                            {
                                "type": "text",
                                "text": " great talk that turns out to be about topology rather than category theory but very cool. unfortunately the left audio channel is dead but it’s worth it IMO"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1564678808.036700",
        "client_msg_id": "dc8bdf55-faea-4444-b44a-25c289a8eaa1",
        "text": "Join us here now: <https:\/\/zoom.us\/j\/148506172>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fbf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Join us here now: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/zoom.us\/j\/148506172"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1564681229.036900",
        "client_msg_id": "d0a83589-7b8f-49aa-9d62-1832883483f4",
        "text": "<https:\/\/2018.programming-conference.org\/track\/bx-2018-papers>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "Bx 2018 Seventh International Workshop on Bidirectional Transformations - ‹Programming› 2018",
                "title_link": "https:\/\/2018.programming-conference.org\/track\/bx-2018-papers",
                "text": "Bidirectional transformations (bx) are a mechanism for maintaining the consistency of at least two related sources of information. Such sources can be relational databases, software models and code, or any other document following standard or ad-hoc formats. Bx are an emerging topic in a wide range of research areas, with prominent presence at top conferences in several different fields (namely databases, programming languages, software engineering, and graph transformation), but with results in one field often getting limited exposure in the others. Bx 2018 is a dedicated venue for bx in ...",
                "fallback": "Bx 2018 Seventh International Workshop on Bidirectional Transformations - ‹Programming› 2018",
                "image_url": "https:\/\/2018.programming-conference.org\/getImage\/carousel\/31332678290_70f970fedb_o.jpg?1490002141000",
                "from_url": "https:\/\/2018.programming-conference.org\/track\/bx-2018-papers",
                "image_width": 809,
                "image_height": 250,
                "image_bytes": 363500,
                "service_icon": "https:\/\/2018.programming-conference.org\/favicon.ico",
                "service_name": "2018.programming-conference.org",
                "id": 1,
                "original_url": "https:\/\/2018.programming-conference.org\/track\/bx-2018-papers"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bC\/f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/2018.programming-conference.org\/track\/bx-2018-papers"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1564681235.037200",
        "client_msg_id": "696ffd25-645b-491b-8ab6-49a59ff0334f",
        "text": "<http:\/\/bx-community.wikidot.com\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3s0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/bx-community.wikidot.com\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1564681499.037400",
        "client_msg_id": "98908331-44f7-4d36-bc6e-42fec983ed76",
        "text": "<https:\/\/zoom.us\/j\/111731849>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XXCE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/zoom.us\/j\/111731849"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJNJQD2AC",
        "type": "message",
        "ts": "1564681772.037500",
        "client_msg_id": "c2885b24-5b20-484a-8f63-1c311787d799",
        "text": "<https:\/\/blog.acolyer.org\/2015\/06\/17\/differential-dataflow\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd7dd06bd18b",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8d7dd06bd18b8fce6a4c04dfede7f616.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "",
            "real_name": "Drewverlee",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "drew.verlee",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "the morning paper",
                "service_url": "http:\/\/blog.acolyer.org",
                "title": "Differential Dataflow",
                "title_link": "https:\/\/blog.acolyer.org\/2015\/06\/17\/differential-dataflow\/",
                "author_name": "adriancolyer",
                "author_link": "https:\/\/blog.acolyer.org\/author\/adriancolyer\/",
                "thumb_url": "https:\/\/adriancolyer.files.wordpress.com\/2015\/06\/differentialdataflow.png?fit=200%2C150",
                "thumb_width": 200,
                "thumb_height": 34,
                "text": "Differential Dataflow &ndash; McSherry et al. 2013\n\n  The ability to perform complex analyses on [datasets that are constantly being updated] is very valuable; for example, each tweet published on the Twitter social network may supply new information about the community structure of the service&rsquo;s users, which could be immediately exploited for real-time recommendation services or the targeting of display advertisements.\n\nEffective incremental processing of such a stream of updates, where the processing involves iterative computation and looping constructs is a tough problem.  &ldquo;For example, no previously published system can maintain in real time the strongly connected component structure in the graph induced by Twitter mentions.&rdquo;\nThis paper, which is a companion to the Naiad paper that we looked at last week, introduces a model for incremental iterative computation which the authors call differential computation. Differential computation deals with how to update a computation when its inputs change. Combining this with dataflow techniques to track dependencies and update global state when local updates occur yields differential dataflow &ndash; or as I like to think of it, &lsquo;deltaflow&rsquo;.\nHere&rsquo;s the headline grabber:\n\n  We have implemented differential dataflow in a system called Naiad, and applied it to complex graph processing queries on several real-world datasets. To highlight Naiad&rsquo;s characteristics, we use it to compute the strongly connected component structure of a 24-hour window of Twitter&rsquo;s messaging graph (an algorithm requiring doubly nested loops, not previously known in a data-parallel setting), and maintain this structure with sub-second latency, in the face of Twitter&rsquo;s full volume of continually arriving tweets.\n\nDifferential Computation\nBorrowing terminology from data-parallel dataflow systems, consider that computation is performed by functions called operators, whose inputs and outputs are collections.  Over the course of a computation, there may be multiple versions of a collection (for example, a new version is created when a collection  is passed through an operator that mutates it, or an input collection can change with new external updates).  The versions of a particular collection over time form a collection trace, which imposes a partial ordering on versions. For example, the ordering may be based on epoch numbers. A computation&rsquo;s inputs and outputs for streaming computations are therefore collection traces.\nGiven a collection trace, we can form a difference trace. For a collection A, the difference &delta;At at time t is simply the difference between the collection at time t, At, and the collection at time t-1, At-1. &delta;A0 is defined to be A0. Thus a difference trace comprises the initial state of the collection followed by a sequence of deltas. Recreating the state of the collection at time t is simply a matter of summing all the deltas from 0 to t.\nA straightforward incremental operator that takes collections of type A as input and produces collections of type B as output would normally compute the following:\n&delta;Bt = Op(At-1 + &delta;At) &ndash; Op(At-1)\nThus it needs to keep as state only the most recent versions of the collections: At = At-1 + &delta;At and Bt = Bt-1 + &delta;Bt.\nIteration, in particular loops that end up reintroducing the output of an operation back into its input, mess up this neat scheme.\n\n  Unfortunately, the sequential nature of incremental computation implies that differences can be used either to update the computation&rsquo;s input collections or to perform iteration, but not both. To achieve both simultaneously, we must generalize the notion of a difference to allow multiple predecessor versions, as we discuss in the next subsection.\n\nDifferential computation is a generalization of the incremental computation outlined above.\n\n  The data are still modeled as collections At,  but rather than requiring that they form a sequence, they may be partially ordered. Once computed, each individual difference is retained, as opposed to being incorporated into the current collection as is standard for incremental systems. This feature allows us to carefully combine differences according to reasons the collections may have changed, resulting in substantially smaller numbers of differences and less computation.\n\nWith a partial ordering, there may not be a unique predecessor, so how can we give meaning to &delta;At? The answer is to define it as the difference between At, and the sum of all &delta;As where s \nNow we need to keep the deltas, but as a result we can compute:\n\nAs an example of a useful real-world partial ordering consider an iterative computation over a collection with a stream of updates to that same collection.  If Ai,j represents the state of the collection A after the ith iteration on the jth input version, then neither A0,1 nor A1,0 is &lsquo;less than&rsquo; the other. And in accordance with the differential computation formula above, neither will be used in the computation of the other.\n\n  This independence would not be possible if we had to impose a total order on the versions, since one of the two would have to come first, and the second would be forced to subtract out any differences associated with the first.\n\nConsider the derivation of the difference &delta;A1,1 = A1,1 &ndash; (&delta;A0,0 + &delta;A0,1 + &delta;A1,0) . By keeping the deltas we can efficiently compute this, but with any imposed total order we would have to do rework.\nSection 3.4 in the paper provides the pseudocode for implementing an operator that can compute on differences. An important but subtle point is that an input delta can continue to affect output deltas into the future, even at points in time when the operators inputs themselves are not changing. Thus in order to efficiently compute output deltas the full input difference traces must be stored and indexed in memory.\n\n  In the Naiad prototype implementation this trace is stored in a triply nested sparse array of counts, indexed first by key k, then by lattice version t, then by record r. Naiad maintains only non-zero counts, and as records are added to or subtracted from the difference trace Naiad dynamically adjusts the allocated memory. With &delta;A and &delta;B indexed by version, At and Bt can be reconstructed for any t, and &delta;z computed explicitly, using the pseudocode of Algorithm 1. While reconstruction may seem expensive, and counter to incremental computation, it is necessary to be able to support fully general operators for which the programmer may specify an arbitrary (non-incremental) function to process all records. We will soon see that many specific operators have more efficient implementations&hellip;\n\nIt is possible to consolidate difference traces into the equivalent of a checkpoint at time t, once it is known that no further updates prior to t will be forthcoming.\nDifferential Dataflow\nA C# program using LINQ extensions is transformed into a cyclic dataflow graph for execution.  The LINQ extensions include a FixedPoint method for loop execution and a PrioritizedFixedPoint method which can also control the order in which records are introduced into the loop body.  Following the pattern described in the Naiad paper, both are implemented with an ingress vertex, an egress vertex, and a feedback vertex that provides the output of the loop body as input to subsequent operations.\nOn this general foundation, Naiad provides specialized operators for data-parallel processing (e.g. in Join and GroupBy);  pipelined processing (e.g. for Select, Where, Concat, &hellip;); more efficient Join processing; and aggregation.",
                "fallback": "the morning paper Link: Differential Dataflow",
                "from_url": "https:\/\/blog.acolyer.org\/2015\/06\/17\/differential-dataflow\/",
                "service_icon": "https:\/\/secure.gravatar.com\/blavatar\/09326a066a08237015d6b84f026d36ae?s=114",
                "id": 1,
                "original_url": "https:\/\/blog.acolyer.org\/2015\/06\/17\/differential-dataflow\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JCu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/blog.acolyer.org\/2015\/06\/17\/differential-dataflow\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1564682440.038000",
        "client_msg_id": "3d65e533-2b01-4a47-8737-e500583a8b08",
        "text": "Good frreaking night.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ReN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Good frreaking night."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1564682627.038400",
        "client_msg_id": "949af564-8612-40c8-95aa-7d837a23266e",
        "text": "Here we go again.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=m=VF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here we go again."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1564682712.038900",
        "client_msg_id": "539296c3-e7c2-481e-8f06-29db3b8fd620",
        "text": "Haskell: one functional progrramming languague to rule all!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Uq5uy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Haskell: one functional progrramming languague to rule all!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1564684167.041400",
        "client_msg_id": "f27003f0-0c62-4918-bf67-ad4a70067614",
        "text": "Only last thing about functional programming in practical contexts.  I may be a Rubyist, but my Ruby code looks like this (variable names changed for illustration):",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/p3pU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Only last thing about functional programming in practical contexts.  I may be a Rubyist, but my Ruby code looks like this (variable names changed for illustration):"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1564684190.041600",
        "client_msg_id": "174d4aa2-8570-4b45-847d-29b478b60b0c",
        "text": "```\nms.group_by(&amp;:label).\n  transform_values{|ms| ms.flat_map(&amp;:parts).sort}.\n  sort_by{|label, group| [special?(label) ? 0 : 1, quality(group)]}\n```",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "flU",
                "elements": [
                    {
                        "type": "rich_text_preformatted",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ms.group_by(&:label).\n  transform_values{|ms| ms.flat_map(&:parts).sort}.\n  sort_by{|label, group| [special?(label) ? 0 : 1, quality(group)]}\n"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1564685236.042700",
        "client_msg_id": "0631f28b-6e9b-4578-b4c5-b430b434e665",
        "text": "<@UA14TGLTC> Yep, that's exactly what I mean by \"functional style creeping into fundamentally imperative  languages\". Some of it just makes a lot of sense.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TjU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UA14TGLTC"
                            },
                            {
                                "type": "text",
                                "text": " Yep, that's exactly what I mean by \"functional style creeping into fundamentally imperative  languages\". Some of it just makes a lot of sense."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1564687297.043200",
        "client_msg_id": "2db311fb-25a2-4410-8865-49b837db4ab6",
        "text": "Videos from our call today:\npart 1: <https:\/\/www.icloud.com\/iclouddrive\/0_iHSsKwaw7gdlLEG6aJnaB0A#meeting6-1>\npart 2: <https:\/\/www.icloud.com\/iclouddrive\/0cXa-aCTFGhL-1PzoAhNCbgQw#meeting6-2>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "title": "iCloud.com",
                "title_link": "https:\/\/www.icloud.com\/iclouddrive\/0_iHSsKwaw7gdlLEG6aJnaB0A#meeting6-1",
                "text": "Sign in to iCloud to access your photos, videos, documents, notes, contacts, and more. Use your Apple ID or create a new account to start using Apple services.",
                "fallback": "iCloud.com",
                "image_url": "https:\/\/www.icloud.com\/icloud_logo\/icloud_logo.png",
                "from_url": "https:\/\/www.icloud.com\/iclouddrive\/0_iHSsKwaw7gdlLEG6aJnaB0A#meeting6-1",
                "image_width": 250,
                "image_height": 250,
                "image_bytes": 15630,
                "service_icon": "https:\/\/www.icloud.com\/system\/cloudos\/1913Project46\/cloudos_foundation\/1913Project46\/en-us\/source\/resources\/images\/touch-icon-pad-retina.png",
                "service_name": "icloud.com",
                "id": 1,
                "original_url": "https:\/\/www.icloud.com\/iclouddrive\/0_iHSsKwaw7gdlLEG6aJnaB0A#meeting6-1"
            },
            {
                "title": "iCloud.com",
                "title_link": "https:\/\/www.icloud.com\/iclouddrive\/0cXa-aCTFGhL-1PzoAhNCbgQw#meeting6-2",
                "text": "Sign in to iCloud to access your photos, videos, documents, notes, contacts, and more. Use your Apple ID or create a new account to start using Apple services.",
                "fallback": "iCloud.com",
                "image_url": "https:\/\/www.icloud.com\/icloud_logo\/icloud_logo.png",
                "from_url": "https:\/\/www.icloud.com\/iclouddrive\/0cXa-aCTFGhL-1PzoAhNCbgQw#meeting6-2",
                "image_width": 250,
                "image_height": 250,
                "image_bytes": 15630,
                "service_icon": "https:\/\/www.icloud.com\/system\/cloudos\/1913Project46\/cloudos_foundation\/1913Project46\/en-us\/source\/resources\/images\/touch-icon-pad-retina.png",
                "service_name": "icloud.com",
                "id": 2,
                "original_url": "https:\/\/www.icloud.com\/iclouddrive\/0cXa-aCTFGhL-1PzoAhNCbgQw#meeting6-2"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uxW8P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Videos from our call today:\npart 1: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.icloud.com\/iclouddrive\/0_iHSsKwaw7gdlLEG6aJnaB0A#meeting6-1"
                            },
                            {
                                "type": "text",
                                "text": "\npart 2: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.icloud.com\/iclouddrive\/0cXa-aCTFGhL-1PzoAhNCbgQw#meeting6-2"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]