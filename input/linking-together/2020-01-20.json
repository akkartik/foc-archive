[
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1579508007.025800",
        "client_msg_id": "966a803d-217f-4335-8320-bf63fd77ce6c",
        "text": "TIL: There are coding fonts with ligatures to make things like === and =&gt; look like other symbols",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579508007.025800",
        "reply_count": 2,
        "reply_users_count": 1,
        "latest_reply": "1579508024.026100",
        "reply_users": [
            "UC6997THT"
        ],
        "replies": [
            {
                "user": "UC6997THT",
                "ts": "1579508013.025900"
            },
            {
                "user": "UC6997THT",
                "ts": "1579508024.026100"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vql",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "TIL: There are coding fonts with ligatures to make things like === and => look like other symbols"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UKP3B2J5D"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1579508013.025900",
        "client_msg_id": "1ce318f3-1747-4ebf-9b67-0f4306ddd30b",
        "text": "<https:\/\/github.com\/tonsky\/FiraCode>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579508007.025800",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6A9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/tonsky\/FiraCode"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1579508024.026100",
        "client_msg_id": "9d16038a-7362-481b-b901-6990274244eb",
        "text": "<https:\/\/www.jetbrains.com\/lp\/mono\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579508007.025800",
        "parent_user_id": "UC6997THT",
        "attachments": [
            {
                "service_name": "JetBrains: Developer Tools for Professionals and Teams",
                "title": "JetBrains Mono: A free and open source typeface for developers",
                "title_link": "https:\/\/www.jetbrains.com\/lp\/mono\/",
                "text": "Try JetBrains Mono in your IDE. Its simple forms and attention to every detail make coding a nice experience for developers’ eyes, no matter which IDE you choose.",
                "fallback": "JetBrains: Developer Tools for Professionals and Teams: JetBrains Mono: A free and open source typeface for developers",
                "image_url": "https:\/\/jetbrains.com\/lp\/mono\/static\/preview-234ae51be7d3bc231bf3a05b373d9f8e.png",
                "from_url": "https:\/\/www.jetbrains.com\/lp\/mono\/",
                "image_width": 400,
                "image_height": 250,
                "image_bytes": 165954,
                "service_icon": "https:\/\/www.jetbrains.com\/lp\/mono\/icons\/icon-48x48.png?v=d3da91beaba4d632d600d35814d99920",
                "id": 1,
                "original_url": "https:\/\/www.jetbrains.com\/lp\/mono\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C3l5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.jetbrains.com\/lp\/mono\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1579508449.031800",
        "client_msg_id": "fa2c7332-66f4-4a5d-b44d-9c00c6f0de13",
        "text": "Curious if anyone has any actually interesting uses for a more graphical command line. I know lots of people here want the command lines to die :sweat_smile: but, I saw \"Hyper\" which is a terminal written in Electron (yes, I can hear you screaming already :rolling_on_the_floor_laughing:)\n\nBut of course the fact that Hyper is in Electron means that any hyper aware command could output more than text directly to the terminal like spit out an jpeg or png inline as output, an SVG file, an actual `&lt;table&gt;`  , a responsive css grid or flexbox, even an interactive app that lingers.\n\nI didn't see any good examples on the front page though sadly except fireworks coming out of your cursor :face_with_rolling_eyes:\n\n<https:\/\/hyper.is\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579508449.031800",
        "reply_count": 11,
        "reply_users_count": 9,
        "latest_reply": "1580395102.021000",
        "reply_users": [
            "UC6997THT",
            "UNKSN1MRQ",
            "U5STGTB3J",
            "UD31LGQKB",
            "UJN1TAYEQ",
            "UJ6LDMMN0",
            "UE0ETTCG7",
            "UC2A2ARPT",
            "URDRJEWS0"
        ],
        "replies": [
            {
                "user": "UC6997THT",
                "ts": "1579508673.032000"
            },
            {
                "user": "UNKSN1MRQ",
                "ts": "1579513183.032200"
            },
            {
                "user": "UNKSN1MRQ",
                "ts": "1579513216.032400"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1579513948.035900"
            },
            {
                "user": "UD31LGQKB",
                "ts": "1579535193.036400"
            },
            {
                "user": "UJN1TAYEQ",
                "ts": "1579535819.036600"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1579538118.037000"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1579543623.037200"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1579800259.001700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1579800413.002000"
            },
            {
                "user": "URDRJEWS0",
                "ts": "1580395102.021000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "title": "Hyper™",
                "title_link": "https:\/\/hyper.is\/",
                "text": "Hyper™: HTML\/JS\/CSS terminal",
                "fallback": "Hyper™",
                "image_url": "https:\/\/hyper.is\/static\/hyper.png",
                "from_url": "https:\/\/hyper.is\/",
                "image_width": 418,
                "image_height": 250,
                "image_bytes": 27778,
                "service_icon": "https:\/\/hyper.is\/static\/apple-touch-icon-57x57.png",
                "service_name": "hyper.is",
                "id": 1,
                "original_url": "https:\/\/hyper.is\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uIQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Curious if anyone has any actually interesting uses for a more graphical command line. I know lots of people here want the command lines to die "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            },
                            {
                                "type": "text",
                                "text": " but, I saw \"Hyper\" which is a terminal written in Electron (yes, I can hear you screaming already "
                            },
                            {
                                "type": "emoji",
                                "name": "rolling_on_the_floor_laughing",
                                "unicode": "1f923"
                            },
                            {
                                "type": "text",
                                "text": ")\n\nBut of course the fact that Hyper is in Electron means that any hyper aware command could output more than text directly to the terminal like spit out an jpeg or png inline as output, an SVG file, an actual "
                            },
                            {
                                "type": "text",
                                "text": "<table>",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "  , a responsive css grid or flexbox, even an interactive app that lingers.\n\nI didn't see any good examples on the front page though sadly except fireworks coming out of your cursor "
                            },
                            {
                                "type": "emoji",
                                "name": "face_with_rolling_eyes",
                                "unicode": "1f644"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/hyper.is\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC6997THT",
        "type": "message",
        "ts": "1579508673.032000",
        "client_msg_id": "e3fe22b4-bef7-4a60-b5ca-cf24ae9094c4",
        "text": "I suppose a shell that lets an app output code to the terminal is a little scary if output is not fully sanitized :thinking_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f3eb3ca69d86",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-08-13\/414472553296_f3eb3ca69d86feb77929_72.png",
            "first_name": "Gregg",
            "real_name": "Gregg Tavares",
            "display_name": "gman",
            "team": "T5TCAFTA9",
            "name": "slack1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579508449.031800",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WtE",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I suppose a shell that lets an app output code to the terminal is a little scary if output is not fully sanitized "
                            },
                            {
                                "type": "emoji",
                                "name": "thinking_face",
                                "unicode": "1f914"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNKSN1MRQ",
        "type": "message",
        "ts": "1579513183.032200",
        "client_msg_id": "f6b349fc-e6df-4f8d-9a4e-856b00726fdb",
        "text": "<http:\/\/domterm.org\/Features.html>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2ffe0023d13",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2ffe0023d1387ae89a99939f8ef55466.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Sergej Koščejev",
            "display_name": "Sergej Koščejev",
            "team": "T5TCAFTA9",
            "name": "sergej",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579508449.031800",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9oUEt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/domterm.org\/Features.html"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U79HM6726"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UNKSN1MRQ",
        "type": "message",
        "ts": "1579513216.032400",
        "client_msg_id": "54502cfe-ef04-4bdd-802b-226be932223c",
        "text": "from the guy behind Kawa Scheme",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2ffe0023d13",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2ffe0023d1387ae89a99939f8ef55466.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0011-72.png",
            "first_name": "",
            "real_name": "Sergej Koščejev",
            "display_name": "Sergej Koščejev",
            "team": "T5TCAFTA9",
            "name": "sergej",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579508449.031800",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SCT6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "from the guy behind Kawa Scheme"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1579513948.035900",
        "client_msg_id": "109EC591-1A86-409C-BC3D-579A015DA936",
        "text": "Graphical output in a terminal is neat. Pushes it towards Jupyter notebook-style interactive computing. \n\nYou’ll pay with losing the composability of text stream output though. And the Electron performance tax, if you care about that.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579508449.031800",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "04zi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Graphical output in a terminal is neat. Pushes it towards Jupyter notebook-style interactive computing. \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "You’ll pay with losing the composability of text stream output though. And the Electron performance tax, if you care about that."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE0ETTCG7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFPPABQ7P",
        "type": "message",
        "ts": "1579532234.036200",
        "client_msg_id": "6904f3e2-6671-4287-a95c-4a638a4347f5",
        "text": "Anyone here know if Glamorous Toolkit is built directly on Pharo, or if GT will get benefits of the Pharo 8.0 release?\n<http:\/\/pharo.org\/news\/pharo8.0-released|http:\/\/pharo.org\/news\/pharo8.0-released>\n<@UE1JQM9HQ>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6d3ec7cc938b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-02-08\/8407560079991_6d3ec7cc938bc2e0cdb7_72.png",
            "first_name": "Cole",
            "real_name": "Cole Lawrence",
            "display_name": "Cole",
            "team": "T5TCAFTA9",
            "name": "colelawr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579532234.036200",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1579589212.037800",
        "reply_users": [
            "UE1JQM9HQ"
        ],
        "replies": [
            {
                "user": "UE1JQM9HQ",
                "ts": "1579589212.037800"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jh=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyone here know if Glamorous Toolkit is built directly on Pharo, or if GT will get benefits of the Pharo 8.0 release?\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/pharo.org\/news\/pharo8.0-released",
                                "text": "http:\/\/pharo.org\/news\/pharo8.0-released"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UE1JQM9HQ"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD31LGQKB",
        "type": "message",
        "ts": "1579535193.036400",
        "client_msg_id": "02e4fe73-3e7b-413f-81a2-4d3951417407",
        "text": "See also termkit: <https:\/\/github.com\/unconed\/TermKit|https:\/\/github.com\/unconed\/TermKit> (sadly defunct)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7e6e0f8e031",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-19\/699535022069_b7e6e0f8e031cdcf896f_72.jpg",
            "first_name": "",
            "real_name": "andrew blinn",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "me1856",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579508449.031800",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hGtW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "See also termkit: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/unconed\/TermKit",
                                "text": "https:\/\/github.com\/unconed\/TermKit"
                            },
                            {
                                "type": "text",
                                "text": " (sadly defunct)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1579535819.036600",
        "client_msg_id": "9dd0ac3f-eae7-467a-8c38-c1e813173e75",
        "text": "Yes, my Curv project needs a graphical command line, and I don't have one yet. Curv is a pure functional language for making graphical objects. There is a REPL. When you type an expression, it evaluates the expression and prints the resulting value. If the value is a colour, I want to print a colour swatch. If the value is a 3D shape, I want to print the 3D shape (and then interact with the shape, eg rotate or zoom it). If the value is a number, I want to print the number. The current compromise is to display some values as text, in the REPL, and to display other values as graphics, in a separate graphics window. I don't have a good solution for displaying compound structures, such as a list of numbers and shapes: [42, &lt;some 3D shape&gt;]. Web browser graphics are not powerful enough to support the kind of 3D rendering that I'm trying to implement, so I haven't spent any time playing with Jupyter or Electron.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579508449.031800",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZLe",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, my Curv project needs a graphical command line, and I don't have one yet. Curv is a pure functional language for making graphical objects. There is a REPL. When you type an expression, it evaluates the expression and prints the resulting value. If the value is a colour, I want to print a colour swatch. If the value is a 3D shape, I want to print the 3D shape (and then interact with the shape, eg rotate or zoom it). If the value is a number, I want to print the number. The current compromise is to display some values as text, in the REPL, and to display other values as graphics, in a separate graphics window. I don't have a good solution for displaying compound structures, such as a list of numbers and shapes: [42, <some 3D shape>]. Web browser graphics are not powerful enough to support the kind of 3D rendering that I'm trying to implement, so I haven't spent any time playing with Jupyter or Electron."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "URDRJEWS0"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1579538118.037000",
        "client_msg_id": "328e2eda-5327-4a79-896d-362d1c89e154",
        "text": "If I recall properly, the output of hyper terminal now uses a canvas. They once use the DOM as output but they switched some time ago due to performance issues.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579508449.031800",
        "parent_user_id": "UC6997THT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GeK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If I recall properly, the output of hyper terminal now uses a canvas. They once use the DOM as output but they switched some time ago due to performance issues."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1579543623.037200",
        "client_msg_id": "c663024e-edd3-4359-8054-a561f2e1715b",
        "text": "This is a plug, but this is one of the problems my own app, Repla is designed to solve. Instead of trying to add to the terminal, Repla tries to work alongside the terminal. There's some details of how this works here <https:\/\/blog.repla.app\/2020\/01\/13\/repla-use-cases\/>\n\nTerminals are blindly fast at displaying huge quantities of text, they are, bar none, the most responsive applications to input (e.g., they lose less key strokes than GUI applications), they are extraordinarily flexible, remaining at the forefront of programming as an industry, essentially since the dawn of their invention.\n\nFrankly I think terminals are finished, and the are as close to perfection as our industry has ever reached. While certainly not the best solution to every (or even most) problems, they are the best tool for large number of problems, and of course to re-iterate their most important feature is their adaptability. They are likely to remain the best tool for many new problems in the future.\n\nSo instead of trying to add to terminals, which is a losing battle when you have a tool that's already been honed to a razor-sharp edge, Repla tries to provide the same missing features, e.g., being able to display media, but through interoperability with the terminal. It's essentially a web rendering engine that can run processes itself, install its own packages, and is compatible with Unix pipes, so you could for example pipe output into Repla to display graphics, etc... but in a Repla window separate from the terminal.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579508449.031800",
        "parent_user_id": "UC6997THT",
        "attachments": [
            {
                "service_name": "Repla",
                "title": "Repla Use Cases",
                "title_link": "https:\/\/blog.repla.app\/2020\/01\/13\/repla-use-cases\/",
                "text": "In What is Repla?, we explained how Repla is designed to be adaptable, just like text editors and terminals are, by being extended with packages that run processes. This post is about some of the use cases that this enables. But before we get to those, we have to talk about how Repla is different from text editors and terminals, because it’s through the differences that the use cases emerge.",
                "fallback": "Repla: Repla Use Cases",
                "ts": 1578873600,
                "from_url": "https:\/\/blog.repla.app\/2020\/01\/13\/repla-use-cases\/",
                "service_icon": "https:\/\/blog.repla.app\/assets\/favicon\/57x57.png",
                "id": 1,
                "original_url": "https:\/\/blog.repla.app\/2020\/01\/13\/repla-use-cases\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Lyza",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is a plug, but this is one of the problems my own app, Repla is designed to solve. Instead of trying to add to the terminal, Repla tries to work alongside the terminal. There's some details of how this works here "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/blog.repla.app\/2020\/01\/13\/repla-use-cases\/"
                            },
                            {
                                "type": "text",
                                "text": "\n\nTerminals are blindly fast at displaying huge quantities of text, they are, bar none, the most responsive applications to input (e.g., they lose less key strokes than GUI applications), they are extraordinarily flexible, remaining at the forefront of programming as an industry, essentially since the dawn of their invention.\n\nFrankly I think terminals are finished, and the are as close to perfection as our industry has ever reached. While certainly not the best solution to every (or even most) problems, they are the best tool for large number of problems, and of course to re-iterate their most important feature is their adaptability. They are likely to remain the best tool for many new problems in the future.\n\nSo instead of trying to add to terminals, which is a losing battle when you have a tool that's already been honed to a razor-sharp edge, Repla tries to provide the same missing features, e.g., being able to display media, but through interoperability with the terminal. It's essentially a web rendering engine that can run processes itself, install its own packages, and is compatible with Unix pipes, so you could for example pipe output into Repla to display graphics, etc... but in a Repla window separate from the terminal."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "ULM3U6275",
                    "UFEQUBNNT"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UE1JQM9HQ",
        "type": "message",
        "ts": "1579589212.037800",
        "client_msg_id": "978ba39f-964c-4880-93d2-4300dff41085",
        "text": "GT is built in Pharo 8. Still, GT reuses the VM (in fact, we are using a VM + threaded FFI that Pharo will adopt in Pharo 9), language and core libraries. All the graphics and tools are completely separate.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g48924f215ef",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f48924f215efa665f3c87affcdb14278.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "Tudor",
            "real_name": "Tudor Girba",
            "display_name": "Tudor Girba",
            "team": "T5TCAFTA9",
            "name": "tudor",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1579532234.036200",
        "parent_user_id": "UFPPABQ7P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fn6f",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "GT is built in Pharo 8. Still, GT reuses the VM (in fact, we are using a VM + threaded FFI that Pharo will adopt in Pharo 9), language and core libraries. All the graphics and tools are completely separate."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UFPPABQ7P"
                ],
                "count": 1
            }
        ]
    }
]