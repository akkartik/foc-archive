[
    {
        "user": "U06FCGNJL4A",
        "type": "message",
        "ts": "1747846050.691499",
        "client_msg_id": "527501F5-4299-4562-A993-39D6C377950A",
        "text": "I got an idea about a code view as a comment lines. Just sharing, might hope someone to grab and build his next AI startup:\n<https:\/\/www.linkedin.com\/posts\/ahmetson_idea-make-a-recipe-from-the-code-comments-activity-7330996208393490432-iatA?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAABKP8C0BqAZeDHplB5MIP1xfu7-fWDyyUK4|https:\/\/www.linkedin.com\/posts\/ahmetson_idea-make-a-recipe-from-the-code-comments-activity-7330996208393490432-iatA?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAABKP8C0BqAZeDHplB5MIP1xfu7-fWDyyUK4>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "cdc0aa73efcf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-01-24\/6515925673254_cdc0aa73efcf782c6c05_72.jpg",
            "first_name": "Medet",
            "real_name": "Medet Ahmetson",
            "display_name": "Medet Ahmetson",
            "team": "T5TCAFTA9",
            "name": "milayter",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747846050.691499",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1747850752.821889",
        "reply_users": [
            "U011C25B38X"
        ],
        "replies": [
            {
                "user": "U011C25B38X",
                "ts": "1747850752.821889"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/www.linkedin.com\/posts\/ahmetson_idea-make-a-recipe-from-the-code-comments-activity-7330996208393490432-iatA?utm_source=share&utm_medium=member_desktop&rcm=ACoAABKP8C0BqAZeDHplB5MIP1xfu7-fWDyyUK4",
                "image_url": "https:\/\/media.licdn.com\/dms\/image\/v2\/D4E22AQH_DDIOi0NfhA\/feedshare-shrink_2048_1536\/B4EZbzuM1VGQAo-\/0\/1747845698112?e=2147483647&v=beta&t=EdCgHf3lQL6j5edNCzbAAriWM7uc9IG2tLJV1fmUjiI",
                "image_width": 1095,
                "image_height": 684,
                "image_bytes": 95398,
                "service_icon": "https:\/\/static.licdn.com\/aero-v1\/sc\/h\/al2o9zrvru7aqj8e1x2rzsrca",
                "id": 1,
                "original_url": "https:\/\/www.linkedin.com\/posts\/ahmetson_idea-make-a-recipe-from-the-code-comments-activity-7330996208393490432-iatA?utm_source=share&amp;utm_medium=member_desktop&amp;rcm=ACoAABKP8C0BqAZeDHplB5MIP1xfu7-fWDyyUK4",
                "fallback": "Idea: Make a Recipe from the code comments.  Code recipes is a view mode… | Medet Atabayev",
                "text": "Idea: Make a Recipe from the code comments.\n\nCode recipes is a view mode in your editor to read it. \n\nIn code recipe mode, instead seeing a programming language grammar words, we see the comment line for each programming language command. For example, can you understand what does following piece of code do?\n\nBut, in code editor mode, I would read the code piece as the bullet points:\n- Convert source code into ontological json data. Ontological json data is called &amp;#39;contents&amp;#39;. \/\/ ...this.identifyContent(...\n- content is created, lets create its restful api \/\/ ...PageLevel.rest...\n- Re-identify page-rest if extensions ask for. \/\/ ...extension.afterPageRestCreation(..\n- to make CSS Selector &amp;#39;module &gt; .page-content&amp;#39;, so lets find module in reflect object tree \/\/ ...rest.get(..moduleURL...)...\n- make the branch as a sub-branch of the reflect. \/\/ pageRest.setRootNode(moduleNode)\n- keep alive the page rest object, so that reflect rest could refer to it. \/\/ _pageRests[moduleURL] &amp;#61; pageRest\n\nIn above list, instead the code, we see the comment lines. And instead comments we see highlighted pieces in the code line. The comment with the highlighted code pieces should be in grey, although I didn&amp;#39;t know how to change font colour in LinkedIn. And that code is interactive, clicking on the highlighted codes will expand it or redirect the user to the whole line.\n\nThis mode is now possible with the LLMs. I as a developer write the comments on the complex parts, or in necessary parts. Often intentionally not putting comments on the code lines that I think are self explanatory, there comments are actually distracting and irritating. But now, LLMs could do really well about describing the command lines. You could highlight for the AI the parts, that are the main focus of the code piece. And for the readers as well. :)\n\nI also think, maybe add some emojis or smileys next to the recipe code views, so its easier and enjoyable to do the most hated thing: to read someone else&amp;#39;s code.\n\nThe code recipe isn&amp;#39;t good when debugging code errors, when you need to optimize or write the code piece itself. But if you want to understand the code at the architectural, business flow level through the code, for refactoring or for modification, then code recipe is another nice-to-use way. :) I would be glad to see it.",
                "title": "Idea: Make a Recipe from the code comments.  Code recipes is a view mode… | Medet Atabayev",
                "title_link": "https:\/\/www.linkedin.com\/posts\/ahmetson_idea-make-a-recipe-from-the-code-comments-activity-7330996208393490432-iatA?utm_source=share&utm_medium=member_desktop&rcm=ACoAABKP8C0BqAZeDHplB5MIP1xfu7-fWDyyUK4",
                "service_name": "linkedin.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "YTzhG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I got an idea about a code view as a comment lines. Just sharing, might hope someone to grab and build his next AI startup:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.linkedin.com\/posts\/ahmetson_idea-make-a-recipe-from-the-code-comments-activity-7330996208393490432-iatA?utm_source=share&utm_medium=member_desktop&rcm=ACoAABKP8C0BqAZeDHplB5MIP1xfu7-fWDyyUK4",
                                "text": "https:\/\/www.linkedin.com\/posts\/ahmetson_idea-make-a-recipe-from-the-code-comments-activity-7330996208393490432-iatA?utm_source=share&utm_medium=member_desktop&rcm=ACoAABKP8C0BqAZeDHplB5MIP1xfu7-fWDyyUK4"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U011C25B38X",
        "type": "message",
        "ts": "1747850752.821889",
        "client_msg_id": "c014c963-bb61-4db0-8ec5-39db5e7f04da",
        "text": "This is cool. I used to be a diehard Refactoring\/Martin Fowler fan, but then a friend pointed out that what qualifies as \"well-written code\" depends on the audience\/situation. They broke it down into a few situations:\n• Debugging - Temp variables and print statements are good here. Sometimes, long functions without too many subroutines can be easier to reason about.\n• Refactoring - Temp variables are bad since they created dependencies throughout code. Long functions generally bad. DRY.\n• Writing code - You're pushing paint around on the canvas and you probably should be copy\/pasting and duplicating things while you figure out what's going to work.\n• Reading code - Comments, clear variable names, etc.\n• Production runtime - Performance &gt; readability\nIt will be cool if AI will adapt the code to whatever context we're in",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "afe258f63c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-05-12\/8869553941623_afe258f63c3f6ecf0e55_72.png",
            "first_name": "",
            "real_name": "Angus Mitchell",
            "display_name": "Angus Mitchell",
            "team": "T5TCAFTA9",
            "name": "anguspmitchell",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747846050.691499",
        "parent_user_id": "U06FCGNJL4A",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jeTIv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is cool. I used to be a diehard Refactoring\/Martin Fowler fan, but then a friend pointed out that what qualifies as \"well-written code\" depends on the audience\/situation. They broke it down into a few situations:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Debugging - Temp variables and print statements are good here. Sometimes, long functions without too many subroutines can be easier to reason about."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Refactoring - Temp variables are bad since they created dependencies throughout code. Long functions generally bad. DRY."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Writing code - You're pushing paint around on the canvas and you probably should be copy\/pasting and duplicating things while you figure out what's going to work."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Reading code - Comments, clear variable names, etc."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Production runtime - Performance > readability"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIt will be cool if AI will adapt the code to whatever context we're in"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U07BD7U4S4R",
        "type": "message",
        "ts": "1747862537.767589",
        "client_msg_id": "a01851b3-47b0-44b7-b899-11356c493909",
        "text": "we've been paying for \"code as text files\" ever since",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "d0343f70ca57",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-07-04\/7377091009748_d0343f70ca57c18eeb41_72.png",
            "first_name": "misha",
            "real_name": "misha",
            "display_name": "misha",
            "team": "T5TCAFTA9",
            "name": "misha.akovantsev",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747153874.428279",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nv3Lo",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "we've been paying for \"code as text files\" ever since"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1747896204.611029",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1747896340.000000"
        },
        "client_msg_id": "56c6581f-83f6-4541-a69b-d1e223d7fe92",
        "text": "\"Code as text files\" isn't the problem. It's \"text files as the only view on code\". And I suspect that's true for most of the other universalist protocols in computing.\n\nI am currently experimenting with transclusions for providing additional views on code, which remains stored in text files as the underlying programming system requires: <https:\/\/hyperdoc.khinsen.net\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1747153874.428279",
        "parent_user_id": "ULM3U6275",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XzTJj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Code as text files\" isn't the problem. It's \"text files as the only view on code\". And I suspect that's true for most of the other universalist protocols in computing.\n\nI am currently experimenting with transclusions for providing additional views on code, which remains stored in text files as the underlying programming system requires: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/hyperdoc.khinsen.net\/"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]