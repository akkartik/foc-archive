[
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1695145427.272959",
        "client_msg_id": "24116542-5E4F-4439-B980-059032CE5264",
        "text": "Why on earth, in this era of many-gigabyte machines, don’t all programming languages have a time-travel mode for debugging?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1695145427.272959",
        "reply_count": 13,
        "reply_users_count": 7,
        "latest_reply": "1695428339.428769",
        "reply_users": [
            "U02U0AS3J49",
            "U05PY5AQCA2",
            "UCUSW7WVD",
            "UJBAJNFLK",
            "UKJGU23KP",
            "UA14TGLTC",
            "U05FSHWJER3"
        ],
        "replies": [
            {
                "user": "U02U0AS3J49",
                "ts": "1695155024.550739"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1695155790.410059"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1695157443.826949"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1695157470.345089"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1695179280.060379"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1695190961.612649"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1695191289.973519"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1695191331.690199"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1695192171.150209"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1695197785.455949"
            },
            {
                "user": "UKJGU23KP",
                "ts": "1695204521.695079"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1695215310.563529"
            },
            {
                "user": "U05FSHWJER3",
                "ts": "1695428339.428769"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gGlk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Why on earth, in this era of many-gigabyte machines, don’t all programming languages have a time-travel mode for debugging?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cry",
                "users": [
                    "UA14TGLTC",
                    "U03RE43UR40",
                    "UML4ZEKDK",
                    "U013ZLJARC7"
                ],
                "count": 4
            },
            {
                "name": "thinking_face",
                "users": [
                    "U02U0AS3J49"
                ],
                "count": 1
            },
            {
                "name": "expressionless",
                "users": [
                    "UNCP67JSK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1695152705.014769",
        "client_msg_id": "8F004E25-8E83-456C-AE53-A728CA7D3944",
        "text": "Turtle graphics for the win!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1695086681.821979",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "MXH",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Turtle"
                            },
                            {
                                "type": "text",
                                "text": " graphics for "
                            },
                            {
                                "type": "text",
                                "text": "the win!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1695155024.550739",
        "client_msg_id": "c3c5dbed-27c0-48d9-835d-f0c987ac6d99",
        "text": "My guess? You can't take a state, and the program, and then  move it one step backwards and expect to get the previous state, because the languages don't have a semantics in that direction in time. So time-travel mode would require a gazillion save files that you could reload whenever you like. And the size of the programs grows to match the available space, so programs run on many-gigabyte machines would need many-terrabyte machines to be able to record that kind of history.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1695145427.272959",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "teJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My guess? You can't take a state, and the program, and then  move it one step backwards and expect to get the previous state, because the languages don't have a semantics in that direction in time. So time-travel mode would require a gazillion save files that you could reload whenever you like. And the size of the programs grows to match the available space, so programs run on many-gigabyte machines would need many-terrabyte machines to be able to record that kind of history."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1695155790.410059",
        "client_msg_id": "8AD93CDE-0B4D-495B-8634-80F7988DDA57",
        "text": "I would be happy with something “relatively simple”: all in memory; keep a list of state value creations, always create new values rather than updating old ones, and turn off the GC. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1695145427.272959",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "O\/T",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would be happy with something “relatively simple”: all in memory; keep a list of state value creations, always create new values rather than updating old ones, and turn off the GC. "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1695157313.458669",
        "client_msg_id": "3A546D6C-88A4-48EB-B39F-9DE60162F55C",
        "text": "I lie in email, Slack, status messages, filenames, code comments, wishlists… It could be the way I’m primed by this thread, but I feel like honesty-enforcing systems are exceptional. I can edit a file’s mtime to be older than its actual modification time!\n\nIn my generation, people get pretty emotionally invested in the mechanisms we use to enforce immutable truth, like cryptography and DRM and the little switch that made floppies read-only. I wonder if that’s different for younger people since those controls are so much more commonplace now? Except floppies.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1694310307.429679",
        "parent_user_id": "U05G29UQHKK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IwHM0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I lie in email, Slack, status messages, filenames, code comments, wishlists… It could be the way I’m primed by this thread, but I feel like honesty-enforcing systems are exceptional. I can edit a file’s mtime to be older than its actual modification time!\n\nIn my generation, people get pretty emotionally invested in the mechanisms we use to enforce immutable truth, like cryptography and DRM and the little switch that made floppies read-only. I wonder if that’s different for younger people since those controls are so much more commonplace now? Except floppies."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1695157443.826949",
        "client_msg_id": "C38ED73D-4F26-48A4-9B90-E88E4A00B519",
        "text": "Ideally, let me have a start-stop call so I can reverse only certain parts of the code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1695145427.272959",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DCuT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Ideally, let me have a start-stop call so I can reverse only certain parts of the code."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1695157470.345089",
        "client_msg_id": "365A06D0-7F62-4D0F-9F4D-0878C76D9050",
        "text": "Yes, you would run out of memory. But you’d use it just through some crucial set of calls and then hit a breakpoint.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1695145427.272959",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gnX1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, you would run out of memory. But you’d use it just through some crucial set of calls and then hit a breakpoint."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1695179280.060379",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1695179307.000000"
        },
        "client_msg_id": "2e145ce6-f6d2-4cae-995e-9f2e0938d650",
        "text": "A few years ago I built a computing stack up from machine code that I debugged by emitting a detailed log of every instruction executed and register state at every instruction -- and then browsing the resulting log in a manner akin to time travel.\n\nI spent a long time debugging all sorts of programs with this infrastructure, that requires all of a few hundred lines of code.\n\nIf you care to try it out, these instructions should still work: <https:\/\/github.com\/akkartik\/mu\/blob\/main\/tools\/browse_trace.readme.md|https:\/\/github.com\/akkartik\/mu\/blob\/main\/tools\/browse_trace.readme.md>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1695145427.272959",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NA463",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A few years ago I built a computing stack up from machine code that I debugged by emitting a detailed log of every instruction executed and register state at every instruction -- and then browsing the resulting log in a manner akin to time travel.\n\nI spent a long time debugging all sorts of programs with this infrastructure, that requires all of a few hundred lines of code.\n\nIf you care to try it out, these instructions should still work: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/akkartik\/mu\/blob\/main\/tools\/browse_trace.readme.md",
                                "text": "https:\/\/github.com\/akkartik\/mu\/blob\/main\/tools\/browse_trace.readme.md"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1695190961.612649",
        "client_msg_id": "12f91f91-e70c-4009-9c03-a6d56d3b8576",
        "text": "A generic time-travel debugger can be problematic because of resource requirements. So... how about a framework that lets developers add context-specific time-travelling debugging to their code, as a form of instrumentation?\n\nI have done this in Pharo Smalltalk (copying the practice of others, I didn't invent anything in this space), using the <https:\/\/github.com\/pharo-project\/pharo-beacon|Beacon> library. It implements an in-memory logging system, which in an image-based language is usually all you need in terms of logging. You can add arbitrary Smalltalk objects to your log. Including stackframes. Which you can inspect in a debugger later on (or process with your own code if that's more convenient).\n\nThis isn't quite the same as time-travel because the Smalltalk image consists of mutable objects, to which stack frames only hold references. So if you have global mutable state, you have to add snapshots of it to the log as well, and then it gets messy. If you are careful with globale and\/or long-lived mutable state in your overall design, which is good advice in Smalltalk anyway, it's rarely an issue in practice.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1695145427.272959",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bdk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A generic time-travel debugger can be problematic because of resource requirements. So... how about a framework that lets developers add context-specific time-travelling debugging to their code, as a form of instrumentation?\n\nI have done this in Pharo Smalltalk (copying the practice of others, I didn't invent anything in this space), using the "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/pharo-project\/pharo-beacon",
                                "text": "Beacon"
                            },
                            {
                                "type": "text",
                                "text": " library. It implements an in-memory logging system, which in an image-based language is usually all you need in terms of logging. You can add arbitrary Smalltalk objects to your log. Including stackframes. Which you can inspect in a debugger later on (or process with your own code if that's more convenient).\n\nThis isn't quite the same as time-travel because the Smalltalk image consists of mutable objects, to which stack frames only hold references. So if you have global mutable state, you have to add snapshots of it to the log as well, and then it gets messy. If you are careful with globale and\/or long-lived mutable state in your overall design, which is good advice in Smalltalk anyway, it's rarely an issue in practice."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1695191289.973519",
        "client_msg_id": "1FBB0AEA-2BE9-47C3-97A2-A7023CE68789",
        "text": "Hmm.\n\nMy language of interest right now is Dart. They’re about to add macros. I wonder…",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1695145427.272959",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Vzkg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hmm.\n\nMy language of interest right now is Dart. They’re about to add macros. I wonder…"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1695191331.690199",
        "client_msg_id": "07f816d9-39c4-4590-8fa8-b08da87f7259",
        "text": "That's the idea of what <@UE1JQM9HQ> calls <https:\/\/moldabledevelopment.com\/|Moldable Development> : don't give developers fish but teach them fishing. Let them write their own context-dependent development tools, which are both simpler and more powerful than generic ones.\n\nQuoting Christopher Alexander (\"The timeless way of building\"):\n\n&gt; So long as I build for myself, the patterns I use will be simple, and human, and full of feeling, because I understand my situation. But as soon as a few people begin to build for \"the many,\"  their patterns about what is needed become abstract; no matter how well-meaning they are, their ideas gradually get out of touch with reality, because they are not faced daily with the living examples of what the patterns say.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1695145427.272959",
        "parent_user_id": "U05PY5AQCA2",
        "attachments": [
            {
                "from_url": "https:\/\/moldabledevelopment.com\/",
                "id": 1,
                "original_url": "https:\/\/moldabledevelopment.com\/",
                "fallback": "Moldable Development",
                "text": "Moldable development",
                "title": "Moldable Development",
                "title_link": "https:\/\/moldabledevelopment.com\/",
                "service_name": "moldabledevelopment.com"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nhYmq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's the idea of what "
                            },
                            {
                                "type": "user",
                                "user_id": "UE1JQM9HQ"
                            },
                            {
                                "type": "text",
                                "text": " calls "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/moldabledevelopment.com\/",
                                "text": "Moldable Development"
                            },
                            {
                                "type": "text",
                                "text": " : don't give developers fish but teach them fishing. Let them write their own context-dependent development tools, which are both simpler and more powerful than generic ones.\n\nQuoting Christopher Alexander (\"The timeless way of building\"):\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So long as I build for myself, the patterns I use will be simple, and human, and full of feeling, because I understand my situation. But as soon as a few people begin to build for \"the many,\"  their patterns about what is needed become abstract; no matter how well-meaning they are, their ideas gradually get out of touch with reality, because they are not faced daily with the living examples of what the patterns say."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "bow",
                "users": [
                    "UE1JQM9HQ"
                ],
                "count": 1
            },
            {
                "name": "boom",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1695192171.150209",
        "client_msg_id": "19CB0BE0-CA5B-4AF9-B153-55C2F1F9F609",
        "text": "All this aside, it seems a relatively simple way to raise developer efficiency. So why isn’t something for this shipped with every language, either as a built-in feature or as a library?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1695145427.272959",
        "parent_user_id": "U05PY5AQCA2",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C\/dN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "All this aside, it seems a relatively simple way to raise developer efficiency. So why isn’t something for this shipped with every language, either as a built-in feature or as a library?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]