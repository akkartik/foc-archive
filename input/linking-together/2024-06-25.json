[
    {
        "user": "U018S42NMMM",
        "type": "message",
        "ts": "1719310310.811469",
        "client_msg_id": "98d0c2e7-14b1-4ae5-b2ed-c220fe79e52d",
        "text": "On Interoperability of sync services for software designed to be Local-First: <https:\/\/tonsky.me\/blog\/crdt-filesync\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "972d4c887a7c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-10\/4782052692709_972d4c887a7c689aae4a_72.jpg",
            "first_name": "",
            "real_name": "Nilesh Trivedi",
            "display_name": "Nilesh Trivedi",
            "team": "T5TCAFTA9",
            "name": "nilesh.tr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719310310.811469",
        "reply_count": 1,
        "reply_users_count": 1,
        "latest_reply": "1719788533.647669",
        "reply_users": [
            "U06BZTE8Q3B"
        ],
        "replies": [
            {
                "user": "U06BZTE8Q3B",
                "ts": "1719788533.647669"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "v5mZr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "On Interoperability of sync services for software designed to be Local-First: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/tonsky.me\/blog\/crdt-filesync\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U079PRQNZQD",
        "type": "message",
        "ts": "1719383291.970569",
        "client_msg_id": "68F68EA4-9F97-4E16-B906-7299A4F54863",
        "text": "Here’s an article I wrote on a visual dataflow language modality where the execution of the graphical dataflow dynamically constructs the dataflow graph that is itself executing. (It’s similar to how Elixer functions can output AST for the function instead of the result and one can alternate between AST via quote\/unquote)  <https:\/\/create.vi\/programming-in-abstract-g-7e970f123f3c?source=friends_link&amp;sk=a53e37d328f1fbc2a8020c94c1f4c0b0|https:\/\/create.vi\/programming-in-abstract-g-7e970f123f3c?source=friends_link&amp;sk=a53e37d328f1fbc2a8020c94c1f4c0b0>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f8e9e1123d49",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-06-25\/7345443578225_f8e9e1123d49f08bf7e8_72.png",
            "first_name": "Jim",
            "real_name": "Jim Kring",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jim.kring",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1719383291.970569",
        "reply_count": 2,
        "reply_users_count": 2,
        "latest_reply": "1719557287.419119",
        "reply_users": [
            "UCUSW7WVD",
            "U079PRQNZQD"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1719514836.171039"
            },
            {
                "user": "U079PRQNZQD",
                "ts": "1719557287.419119"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/create.vi\/programming-in-abstract-g-7e970f123f3c?source=friends_link&sk=a53e37d328f1fbc2a8020c94c1f4c0b0",
                "ts": 1698980067,
                "image_url": "https:\/\/miro.medium.com\/v2\/resize:fit:900\/1*JRxnSQW73mvxyLXU1YzCGA.jpeg",
                "image_width": 900,
                "image_height": 719,
                "image_bytes": 123798,
                "service_icon": "https:\/\/miro.medium.com\/v2\/resize:fill:152:152\/1*sHhtYhaCe2Uc3IU0IgKwIQ.png",
                "id": 1,
                "original_url": "https:\/\/create.vi\/programming-in-abstract-g-7e970f123f3c?source=friends_link&amp;sk=a53e37d328f1fbc2a8020c94c1f4c0b0",
                "fallback": "Medium: Programming in “Abstract G”",
                "text": "It looks just like regular G, but *generates a data-flow graph* instead of executing it…",
                "title": "Programming in “Abstract G”",
                "title_link": "https:\/\/create.vi\/programming-in-abstract-g-7e970f123f3c?source=friends_link&sk=a53e37d328f1fbc2a8020c94c1f4c0b0",
                "service_name": "Medium",
                "fields": [
                    {
                        "value": "3 min read",
                        "title": "Reading time",
                        "short": true
                    }
                ]
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "58WeL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here’s an article I wrote on a visual dataflow language modality where the execution of the graphical dataflow dynamically constructs the dataflow graph that is itself executing. ("
                            },
                            {
                                "type": "text",
                                "text": "It’s"
                            },
                            {
                                "type": "text",
                                "text": " similar to how Elixer functions can output AST for the function instead of the result and one can alternate between AST via quote\/unquote)  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/create.vi\/programming-in-abstract-g-7e970f123f3c?source=friends_link&sk=a53e37d328f1fbc2a8020c94c1f4c0b0",
                                "text": "https:\/\/create.vi\/programming-in-abstract-g-7e970f123f3c?source=friends_link&sk=a53e37d328f1fbc2a8020c94c1f4c0b0"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]