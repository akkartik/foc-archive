[
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1725434632.714179",
        "client_msg_id": "dc4bd416-6b9b-4677-9218-79091ecafed2",
        "text": "I think the most ergonomic is ordered Maps, thats where JS and python converged. If you want insanely fast then a data-structure for every occasion is where JVM and Rust converged to. I think from a pragmatic PoV having ordered datastrcutures will end up the least work overall coz you don't need to support less datastrcutures and your programs that require ordering will require less typing, but its at the ecosystem cost of a tiny bit of overhead.\nThe consequence on ordering for join optimization is interesting. I kind of think contiguous memory access is super important for optimization and therefore forcing orders on everything might actually might still outweigh the drawbacks, like maybe more optimization oppertunities appear coz the set is not a primary collection (hashjoins?) (!?! dunno)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1725160636.476039",
        "parent_user_id": "U71PMQ1V0",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DbEIa",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think the most ergonomic is ordered Maps, thats where JS and python converged. If you want insanely fast then a data-structure for every occasion is where JVM and Rust converged to. I think from a pragmatic PoV having ordered datastrcutures will end up the least work overall coz you don't need to support less datastrcutures and your programs that require ordering will require less typing, but its at the ecosystem cost of a tiny bit of overhead.\nThe consequence on ordering for join optimization is interesting. I kind of think contiguous memory access is super important for optimization and therefore forcing orders on everything might actually might still outweigh the drawbacks, like maybe more optimization oppertunities appear coz the set is not a primary collection (hashjoins?) (!?! dunno)"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]