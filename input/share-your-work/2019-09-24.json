[
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1569378489.024100",
        "client_msg_id": "fbbb85f2-7466-44e5-b7a7-dfb47ad04777",
        "text": "After reading the article, I don't have a good sense of what it is talking about... the audio quality in the Tudor Gîrba video is very poor so it was difficult to follow. I am guessing the code in the screenshot is Smalltalk - but I am unfamiliar with that language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1557855889.034200",
        "parent_user_id": "UHEJD0CE4",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lt1h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "After reading the article, I don't have a good sense of what it is talking about... the audio quality in the Tudor Gîrba video is very poor so it was difficult to follow. I am guessing the code in the screenshot is Smalltalk - but I am unfamiliar with that language."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1569379958.024300",
        "client_msg_id": "661b6b5c-2bab-432d-ad03-7be08df767f3",
        "text": "<@U8A5MS6R1> I haven't used OCaml but yes, my idea of module parameterization resembles OCaml Functors, although my idea involves parameters with defaults that need not be replaced, and I don't think of it as a replacement for conventional generics (so it wouldn't be used for e.g. `Set&lt;T&gt;`)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1556901860.014800",
        "parent_user_id": "UHDQ62M4P",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LXIN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U8A5MS6R1"
                            },
                            {
                                "type": "text",
                                "text": " I haven't used OCaml but yes, my idea of module parameterization resembles OCaml Functors, although my idea involves parameters with defaults that need not be replaced, and I don't think of it as a replacement for conventional generics (so it wouldn't be used for e.g. "
                            },
                            {
                                "type": "text",
                                "text": "Set<T>",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UD6EXQVM0",
        "type": "message",
        "ts": "1569387252.024600",
        "client_msg_id": "3b4a6695-744f-45cd-917c-f12fbdac4724",
        "text": "I've been thinking that variable (and function) declarations should be displayed differently from usages (and calls) so I was happy to see that here. And I think in some cases showing blocks with a border and a different background color works well, e.g. to show where functions begin\/end. I think the mapping from the stylized representation to JS is a bit confusing though, e.g. why change \"x = 0\" to \"x : 0\"? And I'd prefer to see colors used for semantics more than syntax, e.g. one color for \"standard library stuff\" and another for \"calls to linear algebra functions\" and a third for \"my graphics code\". Or, alternately, one color for reading, one for mutation, one for function calls, etc...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4a9957508aa",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/e4a9957508aa1bdb16018793cfc1bb40.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "",
            "real_name": "David Piepgrass",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "qwertie256",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1558257976.057900",
        "parent_user_id": "UJG7QQQJW",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q6j",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've been thinking that variable (and function) declarations should be displayed differently from usages (and calls) so I was happy to see that here. And I think in some cases showing blocks with a border and a different background color works well, e.g. to show where functions begin\/end. I think the mapping from the stylized representation to JS is a bit confusing though, e.g. why change \"x = 0\" to \"x : 0\"? And I'd prefer to see colors used for semantics more than syntax, e.g. one color for \"standard library stuff\" and another for \"calls to linear algebra functions\" and a third for \"my graphics code\". Or, alternately, one color for reading, one for mutation, one for function calls, etc..."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]