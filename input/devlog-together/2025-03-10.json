[
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1741609740.442579",
        "client_msg_id": "d4c2b9f5-1d23-437d-8cbe-0df6ebfaa5b0",
        "text": "In my very-biased view, this looks a lot like what I think of as \"layering\". I don't trust comments, so I want a way to make diagrams tightly bound to the code itself, i.e. generate code from diagrams (syntax == figures, not just characters). In my view, to get \"layering\" you need total isolation (encapsulation of data is not enough, you also need to guarantee that the control flow is isolated). To consider: the stuff inside of boxes is important, but, are (some of) the flows important, too? I.E. I see the arrow in the first diagram as a data flow and a \"sequencing\" thing - it kicks off the box to the right (the Main page) box needs to wait until it gets a signal to begin (I call that sequencing and timing). The 2nd drawing shows 6 boxes and no arrows. Does that mean that they can be viewed in any order, i.e. how are they different from \"TABs\" on the window? I think that I want a viewer\/editor that gives me hierarchical TABs, or, clickable boxes. Double-click on a box and you get to view its innards. Make some other gesture and you go back. Does this mean that you need a \"map\" off to the edge of the window to show where in the hierarchy you are? The popular web browsers I've used flit really close to this flame, but, don't satisfy...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1741609740.442579",
        "reply_count": 33,
        "reply_users_count": 3,
        "latest_reply": "1743961859.690329",
        "reply_users": [
            "UCUSW7WVD",
            "UJBAJNFLK",
            "UGWUJUZHT"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1741675680.393739"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1741676430.601409"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1741679095.172209"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1741687785.073139"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1741707917.209199"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1741871333.582679"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1741874120.697939"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1741926204.262039"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1741926625.351239"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1741939751.239519"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1741952926.039329"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1741959161.263169"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1741959494.892649"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1742848353.876769"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1742885254.079819"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1743010503.621839"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1743016728.719159"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1743017065.758669"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1743020977.228619"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1743256772.978399"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1743259365.430739"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1743259776.735819"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1743260154.282549"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1743260564.054779"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1743260597.237989"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1743264595.425949"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1743265745.554679"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1743265916.837919"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1743284671.834089"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1743284982.565549"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1743515676.938979"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1743517838.679179"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1743961859.690329"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "U5gzF",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In my very-biased view, this looks a lot like what I think of as \"layering\". I don't trust comments, so I want a way to make diagrams tightly bound to the code itself, i.e. generate code from diagrams (syntax == figures, not just characters). In my view, to get \"layering\" you need total isolation (encapsulation of data is not enough, you also need to guarantee that the control flow is isolated). To consider: the stuff inside of boxes is important, but, are (some of) the flows important, too? I.E. I see the arrow in the first diagram as a data flow and a \"sequencing\" thing - it kicks off the box to the right (the Main page) box needs to wait until it gets a signal to begin (I call that sequencing and timing). The 2nd drawing shows 6 boxes and no arrows. Does that mean that they can be viewed in any order, i.e. how are they different from \"TABs\" on the window? I think that I want a viewer\/editor that gives me hierarchical TABs, or, clickable boxes. Double-click on a box and you get to view its innards. Make some other gesture and you go back. Does this mean that you need a \"map\" off to the edge of the window to show where in the hierarchy you are? The popular web browsers I've used flit really close to this flame, but, don't satisfy..."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "I am in the fixing all the reactivity glitches before release stage. They are so difficult to debug, clicking a link opens a panel which syncs the hash URL, which retriggers another cell that get the stale version of the URL which may cause a cycle and the app starts flickering... or something like that.\n\nI had to upgrade my <https:\/\/observablehq.com\/@tomlarkworthy\/ndd|in-notebook debugger >to work across notebooks so I can visualize the evolution of the runtime state w.r.t. time. It worked! I figured it out. Pictured is the trace of a self-triggering reactivity loop. Its still hard to understand but you can see a lot of ticks with a regular pattern, and critically, the name of the cells. There were over 1000 cells in the notebook, so knowing the 15 that were implicated in the cycle is helpful.",
        "files": [
            {
                "id": "F08HTA7UHS4",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U02E4DAQGSZ",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PEBpf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am in the fixing all the reactivity glitches before release stage. They are so difficult to debug, clicking a link opens a panel which syncs the hash URL, which retriggers another cell that get the stale version of the URL which may cause a cycle and the app starts flickering... or something like that.\n\nI had to upgrade my "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/observablehq.com\/@tomlarkworthy\/ndd",
                                "text": "in-notebook debugger "
                            },
                            {
                                "type": "text",
                                "text": "to work across notebooks so I can visualize the evolution of the runtime state w.r.t. time. It worked! I figured it out. Pictured is the trace of a self-triggering reactivity loop. Its still hard to understand but you can see a lot of ticks with a regular pattern, and critically, the name of the cells. There were over 1000 cells in the notebook, so knowing the 15 that were implicated in the cycle is helpful."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1741671563.515269",
        "client_msg_id": "2243409c-927a-4138-9a47-d69c9ca72c79",
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U0123H7JRDM"
                ],
                "count": 1
            },
            {
                "name": "exploding_head",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "cake",
                "users": [
                    "U013ZLJARC7",
                    "UML4ZEKDK",
                    "U85HCL7JP"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1741675680.393739",
        "client_msg_id": "6414691c-1214-402e-81bc-bed6f06c7b52",
        "text": "I assume you consider \"layering\" to be a bad thing. Totally valid criticism. But there are drawbacks in the other direction as well:\n\n• If you generate code from diagrams your diagrams now have to do double duty. They have to be a source of truth and also hide detail.\n• You tend to be stuck with one totalizing way of viewing a large program. There are no arrows in the second picture because _it's a different kind of picture_. Glossary rather than blueprint. To support multiple viewpoints in your approach requires checking them for inconsistencies, and showing inconsistencies in a nice way to the programmer so the programmer can understand what the compiler has found.\nThese are good directions for research. But my doctrine is that I'm trying to do as little research as possible. My focus isn't to make everything perfectly clean and pleasant to use. My focus is to help people take control of their computers with the mature technology we have today.\n\nThis is why I'm adamantly not creating a new programming language.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1741609740.442579",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+68MA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I assume you consider \"layering\" to be a bad thing. Totally valid criticism. But there are drawbacks in the other direction as well:\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "If you generate code from diagrams your diagrams now have to do double duty. They have to be a source of truth and also hide detail."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "You tend to be stuck with one totalizing way of viewing a large program. There are no arrows in the second picture because "
                                    },
                                    {
                                        "type": "text",
                                        "text": "it's a different kind of picture",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ". Glossary rather than blueprint. To support multiple viewpoints in your approach requires checking them for inconsistencies, and showing inconsistencies in a nice way to the programmer so the programmer can understand what the compiler has found."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nThese are good directions for research. But my doctrine is that I'm trying to do as little research as possible. My focus isn't to make everything perfectly clean and pleasant to use. My focus is to help people take control of their computers with the mature technology we have today.\n\nThis is why I'm adamantly not creating a new programming language."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]