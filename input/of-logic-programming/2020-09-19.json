[
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1600507122.046400",
        "client_msg_id": "648CB81E-2B70-463D-8F17-81B32FD15A62",
        "text": "I don’t think it’s “logic” in general that’s missing something, it’s just specific logic languages. For example, Datalog doesn’t include a model of interactivity\/time (but Dedalus does), nor does it include number types, or spawnable “objects” with opaque identifiers (which I think are going to be necessary in any non-trivial program). Datalog doesn’t have aggregation either but other logic languages do (I’m digging into aggregation right now). Prolog’s aggregation UX is awful as well.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600422424.013200",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XZ7e",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don’t think it’s “logic” in general that’s missing something, it’s just specific logic languages. For example, Datalog doesn’t include a model of interactivity\/time (but Dedalus does), nor does it include number types, or spawnable “objects” with opaque identifiers (which I think are going to be necessary in any non-trivial program). Datalog doesn’t have aggregation either but other logic languages do (I’m digging into aggregation right now). Prolog’s aggregation UX is awful as well."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1600546623.048700",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1600546655.000000"
        },
        "client_msg_id": "9A990387-C00D-4AEE-9B05-BD161066064B",
        "text": "By Steve: <https:\/\/medium.com\/@stevekrouse\/types-are-shapes-d6af1e83192f>\n\nBut I mean in a more rigorous \/ mathemarical way. They can be modelled to map to topological spaces and I think each individual type is a kind of container for the logical content \/ information to flow through.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600398283.002600",
        "parent_user_id": "UA14TGLTC",
        "attachments": [
            {
                "service_name": "Medium",
                "title": "Types are shapes — a graphical programming exploration",
                "title_link": "https:\/\/medium.com\/@stevekrouse\/types-are-shapes-d6af1e83192f",
                "text": "Type theory is notoriously difficult to understand. To make it easier for beginners, MIT’s Scratch programming language uses shapes as a…",
                "fallback": "Medium: Types are shapes — a graphical programming exploration",
                "image_url": "https:\/\/miro.medium.com\/max\/1160\/1*qgVl22wL2BaZHP5tJTXG1A.png",
                "fields": [
                    {
                        "title": "Reading time",
                        "value": "7 min read",
                        "short": true
                    }
                ],
                "ts": 1502213338,
                "from_url": "https:\/\/medium.com\/@stevekrouse\/types-are-shapes-d6af1e83192f",
                "image_width": 524,
                "image_height": 250,
                "image_bytes": 50056,
                "service_icon": "https:\/\/cdn-images-1.medium.com\/fit\/c\/152\/152\/1*8I-HPL0bfoIzGied-dzOvA.png",
                "id": 1,
                "original_url": "https:\/\/medium.com\/@stevekrouse\/types-are-shapes-d6af1e83192f"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k6mN2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "By Steve: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/medium.com\/@stevekrouse\/types-are-shapes-d6af1e83192f"
                            },
                            {
                                "type": "text",
                                "text": "\n\nBut I mean in a more rigorous \/ mathemarical way. They can be modelled to map to topological spaces and I think each individual type is a kind of container for the logical content \/ information to flow through."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UA14TGLTC"
                ],
                "count": 1
            }
        ]
    }
]