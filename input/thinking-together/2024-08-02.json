[
    {
        "user": "U03U0SCU5LH",
        "type": "message",
        "ts": "1722584047.073699",
        "client_msg_id": "bf3a53b4-d1d0-47f6-a182-9654f838de70",
        "text": "I want to create interactive content and games, the way I work in Houdini \/ Photoshop \/ AfterEffects...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gdf6784b7d6d",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/df6784b7d6d97fb67dec89320cc88a84.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0007-72.png",
            "first_name": "Dany",
            "real_name": "Dany",
            "display_name": "Dany",
            "team": "T5TCAFTA9",
            "name": "bitteldany",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722547627.788149",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "nLdKh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I want to create interactive content and games, the way I work in Houdini \/ Photoshop \/ AfterEffects..."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "ivan",
                "users": [
                    "UC2A2ARPT",
                    "U06BUK2M2RH"
                ],
                "count": 2
            },
            {
                "name": "curry",
                "users": [
                    "U023V63MF6V"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U018S42NMMM",
        "type": "message",
        "ts": "1722586268.783569",
        "edited": {
            "user": "U018S42NMMM",
            "ts": "1722586529.000000"
        },
        "client_msg_id": "e1daec22-8782-41f0-a29f-45ff9dd3c223",
        "text": "Yeah, a \"bunch\" is just a set without packaging or nesting.\n\nI had never thought of this as a structure on its own. He doesn't explore it further but it helped me draw the diagram where a sequence is to a bunch what a tuple is to a set, or a list is to a tuple what a string is to a sequence etc. The names in red color (for eg: a \"pack\" could be a mutable bag\/multiset) are simply some names I made up - wishing that these were standardized in all CS \/ programming literature. We can perhaps add another dimension for homogenious types v\/s mixed types: for eg: a \"multivector\" could be a tuple of mixed types: `{scalar, vector, bivector}` etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "972d4c887a7c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-10\/4782052692709_972d4c887a7c689aae4a_72.jpg",
            "first_name": "",
            "real_name": "Nilesh Trivedi",
            "display_name": "Nilesh Trivedi",
            "team": "T5TCAFTA9",
            "name": "nilesh.tr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722048644.159519",
        "parent_user_id": "U018S42NMMM",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t83jZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, a \"bunch\" is just a set without packaging or nesting.\n\nI had never thought of this as a structure on its own. He doesn't explore it further but it helped me draw the diagram where a sequence is to a bunch what a tuple is to a set, or a list is to a tuple what a string is to a sequence etc. The names in red color (for eg: a \"pack\" could be a mutable bag\/multiset) are simply some names I made up - wishing that these were standardized in all CS \/ programming literature. We can perhaps add another dimension for homogenious types v\/s mixed types: for eg: a \"multivector\" could be a tuple of mixed types: "
                            },
                            {
                                "type": "text",
                                "text": "{scalar, vector, bivector}",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " etc."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U018S42NMMM",
        "type": "message",
        "ts": "1722587380.444379",
        "edited": {
            "user": "U018S42NMMM",
            "ts": "1722606145.000000"
        },
        "client_msg_id": "60aaf7d1-c9e1-412d-bdb0-0005bd87739b",
        "text": "Malleability via abstraction for me. I have found programming to be joyful when done in an elegant domain-specific language. The absolute opposite of \"ad-hoc\". I hope today's LLM-generating walls of unmaintainable code is NOT the future of coding.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "972d4c887a7c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-10\/4782052692709_972d4c887a7c689aae4a_72.jpg",
            "first_name": "",
            "real_name": "Nilesh Trivedi",
            "display_name": "Nilesh Trivedi",
            "team": "T5TCAFTA9",
            "name": "nilesh.tr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722547627.788149",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tdK39",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Malleability via abstraction for me. I have found programming to be joyful when done in an elegant domain-specific language. The absolute opposite of \"ad-hoc\". I hope today's LLM-generating walls of unmaintainable code is NOT the future of coding."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "pray",
                "users": [
                    "U02QC0PPER3",
                    "U06BUK2M2RH"
                ],
                "count": 2
            },
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "UJBAJNFLK"
                ],
                "count": 2
            },
            {
                "name": "bulb",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02QC0PPER3",
        "type": "message",
        "ts": "1722597039.759469",
        "client_msg_id": "a5af830c-e6f5-4e48-a1aa-aab40186e2fb",
        "text": "• The _top-level_ environments in which end-users spend their work day are not malleable.  This got worse in last decades.\n• The ones that are malleable, require too much professional coding knowledge to inspect or modify.\n• That holds even for 100% Open Source linux desktops.  They could be so much more self-explaining, self-inspecting, self-modefecation-guiding...",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "90c9108c61f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-12-12\/2854686602576_90c9108c61f5d809eb8a_72.jpg",
            "first_name": "Beni",
            "real_name": "Beni Cherniavsky-Paskin",
            "display_name": "Beni Cherniavsky-Paskin",
            "team": "T5TCAFTA9",
            "name": "beni.cherniavsky",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722547627.788149",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qvyHn",
                "elements": [
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The "
                                    },
                                    {
                                        "type": "text",
                                        "text": "top-level",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " environments in which end-users spend their work day are not malleable.  This got worse in last decades."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The ones that are malleable, require too much professional coding knowledge to inspect or modify."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "That holds even for 100% Open Source linux desktops.  They could be so much more self-explaining, self-inspecting, self-modefecation-guiding..."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT",
                    "U06131CATV3",
                    "U023V63MF6V"
                ],
                "count": 3
            },
            {
                "name": "100",
                "users": [
                    "UJBAJNFLK",
                    "UML4ZEKDK"
                ],
                "count": 2
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UJBAJNFLK",
                    "UML4ZEKDK"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1722606072.463919",
        "client_msg_id": "c8831654-197a-47b5-8040-7b5a55aeaaac",
        "text": "The world runs on rules. Rules can be made computable (without translating them into objects or functions or processes) but it's unnecessarily hard to do. If it was easy, people who understand rules could build software that understands them too, people with problems could get cheap and reliable help, asymmetry of information would be reduced, and the world would be more just.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722547627.788149",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "t5QiL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The world runs on rules. Rules can be made computable (without translating them into objects or functions or processes) but it's unnecessarily hard to do. If it was easy, people who understand rules could build software that understands them too, people with problems could get cheap and reliable help, asymmetry of information would be reduced, and the world would be more just."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U06131CATV3",
                    "U023V63MF6V",
                    "UE6EFEPTQ"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1722636399.108109",
        "client_msg_id": "2b74ef59-01e4-4179-9628-a4cd3110d10b",
        "text": "Falsifiable theory…\nTheory: Function-based thinking greatly restricts thinking about FoC.\nTest: if this theory is true, then examination of the source code for The Mother Of All Demos will reveal that not all parts of the demo system were tightly inter-connected into a single synchronous, functional blob of design.\nHow?: Where can we find the source code for TMOAD? If we obtain the source, how can we reverse-engineer the design out from the implementation details? If we can get at the design, we should look for how the sub-units of software are interconnected. We need to examine if the code is designed as many islands of synchrony vs. being designed as just one big blob of synchrony.\nCorollary: if TMOAD was designed as many islands of software and hardware, then it is unlikely that anything as interesting as TMOAD can come of building software on computers using only synchronous languages, like Python, Haskell, using concepts such as thread libraries, theorem-provers,  etc. [Thread libraries are but assembler-level work-arounds that enable the use of the function-based programming paradigm with languages like Python, Haskell, etc. Theorem provers need single islands of synchronous code, to work]",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722636399.108109",
        "reply_count": 26,
        "reply_users_count": 3,
        "latest_reply": "1723206787.934249",
        "reply_users": [
            "U05PY5AQCA2",
            "UGWUJUZHT",
            "U5STGTB3J"
        ],
        "replies": [
            {
                "user": "U05PY5AQCA2",
                "ts": "1722639918.852579"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1722654278.395489"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1722663878.958829"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1722663961.085459"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1722694399.142209"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1722743499.506089"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1722781442.980299"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1722957985.608789"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1722977697.491449"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1723000832.078849"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1723001241.190829"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1723001749.026199"
            },
            {
                "user": "U05PY5AQCA2",
                "ts": "1723001781.913949"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1723026583.105509"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1723035682.483489"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1723066269.536459"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1723073325.058759"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1723111690.648469"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1723113653.530899"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1723115815.334479"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1723124562.492659"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1723125133.832199"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1723125247.997229"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1723171775.246519"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1723172141.205639"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1723206787.934249"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "5iVEW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Falsifiable theory…\nTheory: Function-based thinking greatly restricts thinking about FoC.\nTest: if this theory is true, then examination of the source code for The Mother Of All Demos will reveal that not all parts of the demo system were tightly inter-connected into a single synchronous, functional blob of design.\nHow?: Where can we find the source code for TMOAD? If we obtain the source, how can we reverse-engineer the design out from the implementation details? If we can get at the design, we should look for how the sub-units of software are interconnected. We need to examine if the code is designed as many islands of synchrony vs. being designed as just one big blob of synchrony.\nCorollary: if TMOAD was designed as many islands of software and hardware, then it is unlikely that anything as interesting as TMOAD can come of building software on computers using only synchronous languages, like Python, Haskell, using concepts such as thread libraries, theorem-provers,  etc. [Thread libraries are but assembler-level work-arounds that enable the use of the function-based programming paradigm with languages like Python, Haskell, etc. Theorem provers need single islands of synchronous code, to work]"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1722639838.143559",
        "client_msg_id": "6cfd6ea8-8658-47f2-ab69-32222de55dc6",
        "text": "A great deal more business logic can be expressed in First Order Logic than usually is.\n\nThe relational model shows us how to make FOL inference straightforward and predictable.\n\nTherefore, we should implement much more of our apps in a relational system.\n\nWe have existing, successful, widely-used systems that implement an end-user relational “programming” system (FileMaker, Access).\n\nDatalog is almost certainly the language in which to express this logic, insofar as we’re not just doing it with a GUI.\n\nThis attacks the issues we’re all concerned with by:\n• making it possible to solve problems with much less traditional programming;\n• supporting end users solving their own problems without needing to learn programming;\n• changing the nature of the traditional code we _do_ write into smaller, simpler pieces joined together with relational logic\n<http:\/\/frest.substack.com|frest.substack.com>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722547627.788149",
        "parent_user_id": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "LQooQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A great deal more business logic can be expressed in First Order Logic than usually is.\n\nThe relational model shows us how to make FOL inference straightforward and predictable.\n\nTherefore, we should implement much more of our apps in a relational system.\n\nWe have existing, successful, widely-used systems that implement an end-user relational “programming” system (FileMaker, Access).\n\nDatalog is almost certainly the language in which to express this logic, insofar as we’re not just doing it with a GUI.\n\nThis attacks the issues we’re all concerned with by:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "making it possible to solve problems with much less traditional programming;"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "supporting end users solving their own problems without needing to learn programming;"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "changing the nature of the traditional code we "
                                    },
                                    {
                                        "type": "text",
                                        "text": "do",
                                        "style": {
                                            "italic": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": " write into smaller, simpler pieces joined together with relational logic"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/frest.substack.com",
                                "text": "frest.substack.com"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U05UK5T7LPP"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1722639918.852579",
        "client_msg_id": "d6f3344a-5f81-4b82-9a79-e065100312f6",
        "text": "I take the success of Excel as evidence that functional programming is the most natural way to express programming for non-programmers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722636399.108109",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ysllI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I take the success of Excel as evidence that functional programming is the most natural way to express programming for non-programmers."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1722654278.395489",
        "client_msg_id": "6df1fdf4-9118-4b11-a7ab-dd89fc8b4863",
        "text": "How is Excel equivalent to functional programming?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722636399.108109",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kpPUu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How is Excel equivalent to functional programming?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Follow-up to <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1722547627788149|yesterday's prompt on problem statements>: post a single comment with a number from 1 to 6 for every comment but yours in yesterday's thread, indicating how close you perceive everyone else's problem statement to be relative to yours. (And don't read other people's comments before you post yours; that's part of the fun here.)\n\nHere's what the numeric scale means:\n• 1: This is a rewording of my problem statement.\n• 2: This overlaps almost entirely with my problem statement.\n• 3: I care about this problem.\n• 4: This doesn't seem like a big problem.\n• 5: This is fine, I don't think it is a problem.\n• 6: This statement is alien to me, I don't understand it as a problem statement.\nHopefully that makes sense and I haven't missed some major option..\n\nIn a day or two I'll collate the results in the attached table. (You're welcome to do so as well; just download the html file and open it in a browser tab, fill in and hit the 'save' button to save a local copy with your edits. Upload it here if you like, that can be an alternative way to give your votes.)",
        "files": [
            {
                "id": "F07F5MDAQ5U",
                "created": 1722659927,
                "timestamp": 1722659927,
                "name": "problems.html",
                "title": "problems.html",
                "mimetype": "text\/plain",
                "filetype": "html",
                "pretty_type": "HTML",
                "user": "UCUSW7WVD",
                "user_team": "T5TCAFTA9",
                "editable": true,
                "size": 14751,
                "mode": "snippet",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F07F5MDAQ5U\/problems.html?token=xoxe-197418537349-9563586786369-9561652713025-65bb8fe543aecc29d5ac9ddff9d0bf09",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F07F5MDAQ5U\/download\/problems.html?token=xoxe-197418537349-9563586786369-9561652713025-65bb8fe543aecc29d5ac9ddff9d0bf09",
                "permalink": "https:\/\/feelingofcomputing.slack.com\/files\/U5TCAFTD3\/F07F5MDAQ5U\/problems.html",
                "permalink_public": "https:\/\/slack-files.com\/T5TCAFTA9-F07F5MDAQ5U-5813686ca5",
                "edit_link": "https:\/\/feelingofcomputing.slack.com\/files\/U5TCAFTD3\/F07F5MDAQ5U\/problems.html\/edit",
                "is_starred": false,
                "skipped_shares": true,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "UCUSW7WVD",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6MRSW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Follow-up to "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1722547627788149",
                                "text": "yesterday's prompt on problem statements"
                            },
                            {
                                "type": "text",
                                "text": ": post a single comment with a number from 1 to 6 for every comment but yours in yesterday's thread, indicating how close you perceive everyone else's problem statement to be relative to yours. (And don't read other people's comments before you post yours; that's part of the fun here.)\n\nHere's what the numeric scale means:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "1: This is a rewording of my problem statement."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "2: This overlaps almost entirely with my problem statement."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "3: I care about this problem."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "4: This doesn't seem like a big problem."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "5: This is fine, I don't think it is a problem."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "6: This statement is alien to me, I don't understand it as a problem statement."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nHopefully that makes sense and I haven't missed some major option..\n\nIn a day or two I'll collate the results in the attached table. (You're welcome to do so as well; just download the html file and open it in a browser tab, fill in and hit the 'save' button to save a local copy with your edits. Upload it here if you like, that can be an alternative way to give your votes.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1722660123.009799",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1722670483.000000"
        },
        "client_msg_id": "97618218-9dcb-442b-bced-e5ba8866d880",
        "thread_ts": "1722660123.009799",
        "reply_count": 17,
        "reply_users_count": 11,
        "latest_reply": "1722941222.117739",
        "reply_users": [
            "UCUSW7WVD",
            "U023V63MF6V",
            "UC2A2ARPT",
            "U03U0SCU5LH",
            "U02E4DAQGSZ",
            "UJBAJNFLK",
            "U06131CATV3",
            "UK3LH8CF5",
            "U5STGTB3J",
            "UE6EFEPTQ",
            "UGWUJUZHT"
        ],
        "replies": [
            {
                "user": "UCUSW7WVD",
                "ts": "1722660625.155409"
            },
            {
                "user": "U023V63MF6V",
                "ts": "1722698320.620469"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1722738457.814119"
            },
            {
                "user": "U03U0SCU5LH",
                "ts": "1722748460.521869"
            },
            {
                "user": "U02E4DAQGSZ",
                "ts": "1722752635.984159"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1722798001.299209"
            },
            {
                "user": "U06131CATV3",
                "ts": "1722798646.427989"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1722805391.615309"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1722838639.110989"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1722885542.966329"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1722932111.984679"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1722932127.502109"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1722932444.955469"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1722932587.822889"
            },
            {
                "user": "UE6EFEPTQ",
                "ts": "1722933168.307579"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1722941149.865079"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1722941222.117739"
            }
        ],
        "is_locked": false,
        "subscribed": false
    },
    {
        "text": "Here are my reactions, in the same order as the comments on the previous thread:\n• Ivan Reese: 6\n• Arvind Thyagarajan: 1\n• Jasmine Otto: 3\n• Jimmy Miller: 3\n• avon: 2\n• Eli Mellen: 6\n• Paul Tarvydas: 6\n• Konrad Hinsen: 2\n• Tom Larkworthy: 2\n• Dany: 6\n• Nilesh Trivedi: 4\n• Beni Cherniavsky-Paskin: 3\n• Jason Morris: 3\n• Guyren Howe: 6\n(Hopefully this example helps clarify what I'm asking for.)\n\nAttached is the html file with my row filled out. Just in case that helps :face_palm::skin-tone-3:",
        "files": [
            {
                "id": "F07G14WCN56",
                "created": 1722660600,
                "timestamp": 1722660600,
                "name": "problems(1).html",
                "title": "problems(1).html",
                "mimetype": "text\/plain",
                "filetype": "html",
                "pretty_type": "HTML",
                "user": "UCUSW7WVD",
                "user_team": "T5TCAFTA9",
                "editable": true,
                "size": 14835,
                "mode": "snippet",
                "is_external": false,
                "external_type": "",
                "is_public": true,
                "public_url_shared": false,
                "display_as_bot": false,
                "username": "",
                "url_private": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F07G14WCN56\/problems_1_.html?token=xoxe-197418537349-9563586786369-9561652713025-65bb8fe543aecc29d5ac9ddff9d0bf09",
                "url_private_download": "https:\/\/files.slack.com\/files-pri\/T5TCAFTA9-F07G14WCN56\/download\/problems_1_.html?token=xoxe-197418537349-9563586786369-9561652713025-65bb8fe543aecc29d5ac9ddff9d0bf09",
                "permalink": "https:\/\/feelingofcomputing.slack.com\/files\/U5TCAFTD3\/F07G14WCN56\/problems_1_.html",
                "permalink_public": "https:\/\/slack-files.com\/T5TCAFTA9-F07G14WCN56-d40cd46b6e",
                "edit_link": "https:\/\/feelingofcomputing.slack.com\/files\/U5TCAFTD3\/F07G14WCN56\/problems_1_.html\/edit",
                "is_starred": false,
                "skipped_shares": true,
                "has_rich_preview": false,
                "file_access": "visible"
            }
        ],
        "upload": false,
        "user": "UCUSW7WVD",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "C+yKy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here are my reactions, in the same order as the comments on the previous thread:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Ivan Reese: 6"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Arvind Thyagarajan: 1"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Jasmine Otto: 3"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Jimmy Miller: 3"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "avon: 2"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Eli Mellen: 6"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Paul Tarvydas: 6"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Konrad Hinsen: 2"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Tom Larkworthy: 2"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Dany: 6"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Nilesh Trivedi: 4"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Beni Cherniavsky-Paskin: 3"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Jason Morris: 3"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Guyren Howe: 6"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n(Hopefully this example helps clarify what I'm asking for.)\n\nAttached is the html file with my row filled out. Just in case that helps "
                            },
                            {
                                "type": "emoji",
                                "name": "face_palm",
                                "unicode": "1f926-1f3fc",
                                "skin_tone": 3
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1722660625.155409",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1722661577.000000"
        },
        "client_msg_id": "60555edf-1a07-4b1f-87d6-bc6f91664972",
        "thread_ts": "1722660123.009799",
        "parent_user_id": "UCUSW7WVD"
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1722663878.958829",
        "client_msg_id": "2F2E2924-3073-4E39-84D7-E03657498B9B",
        "text": "Excel *is* a functional programming language. The cells contain either values or functions of those values.\n\nIt is a lazy, partially spatial (as opposed to purely textual) functional programming language.\n\nThe latest version even has user-defined functions (a *major* update to its functionality that went largely unremarked).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722636399.108109",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "+sF7\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Excel "
                            },
                            {
                                "type": "text",
                                "text": "is",
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " a functional programming language. The cells contain either values or functions of those values.\n\nIt is a lazy, partially spatial (as opposed to purely textual) functional programming language.\n\nThe latest version even has user-defined functions (a "
                            },
                            {
                                "type": "text",
                                "text": "major",
                                "style": {
                                    "bold": true,
                                    "italic": false,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": " update to its functionality that went largely unremarked)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U05PY5AQCA2",
        "type": "message",
        "ts": "1722663961.085459",
        "client_msg_id": "9E4214D5-12D5-443C-89C7-7BACE0DC03F3",
        "text": "Excel is perhaps the most successful example of the sort of thing that this group is about.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3ecb3076c7b0",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-29\/5820723719363_3ecb3076c7b047d665ea_72.jpg",
            "first_name": "Guyren",
            "real_name": "Guyren Howe",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "guyren",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1722636399.108109",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ycM3w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Excel is perhaps the most successful example of the sort of thing that this group is about."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]