[
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1668091548.239979",
        "edited": {
            "user": "UK3LH8CF5",
            "ts": "1668091584.000000"
        },
        "client_msg_id": "B55F0343-11A2-4012-B54D-9978D05C05B5",
        "text": "I have so many ideas I want to build that require a text editor. I often feel that if the editing sucks, the whole project just won’t feel nice. But recreating a decent text editor (by this typically mean for code) is always a reasonably big undertaking.\n\nWhat I’ve started working on is a headless editor. There are some that exist like xi, but I’m aiming for something a bit simpler. Right now I’m dealing with proper cursor and multi-cursor support. I’m going to be working on a few implementations for textbuffers. Going to add treestyle undo and redo. Going to get syntax highlighting working. \n\nWhat features would you want in a library like this?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "reply_count": 24,
        "reply_users_count": 7,
        "latest_reply": "1668162188.557129",
        "reply_users": [
            "U03E4LY27FS",
            "UC2A2ARPT",
            "UK3LH8CF5",
            "UBKNXPBAB",
            "UUQ2EQW21",
            "UCUSW7WVD",
            "UA14TGLTC"
        ],
        "replies": [
            {
                "user": "U03E4LY27FS",
                "ts": "1668095544.902579"
            },
            {
                "user": "U03E4LY27FS",
                "ts": "1668095598.303029"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1668097130.450549"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1668097298.177179"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1668097339.469509"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1668097378.174099"
            },
            {
                "user": "UBKNXPBAB",
                "ts": "1668097524.681909"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1668097599.868109"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1668098139.065909"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1668098215.164559"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1668098326.523359"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1668098346.890099"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1668098623.008919"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1668099118.509129"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1668099437.441099"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1668099885.509229"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1668102772.041619"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1668110422.201539"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1668112948.270999"
            },
            {
                "user": "UK3LH8CF5",
                "ts": "1668114710.644549"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1668139579.677859"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1668139661.481719"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1668162142.330049"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1668162188.557129"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BdN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have so many ideas I want to build that require a text editor. I often feel that if the editing sucks, the whole project just won’t feel nice. But recreating a decent text editor (by this typically mean for code) is always a reasonably big undertaking.\n\nWhat I’ve started working on is a headless editor. There are some that exist like xi, but I’m aiming for something a bit simpler. Right now I’m dealing with proper cursor and multi-cursor support. I’m going to be working on a few implementations for textbuffers. Going to add treestyle undo and redo. Going to get syntax highlighting working. \n\nWhat features would you want in a library like this?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U03E4LY27FS",
                    "U023V63MF6V",
                    "UCUSW7WVD",
                    "UA14TGLTC"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "U03E4LY27FS",
        "type": "message",
        "ts": "1668095544.902579",
        "edited": {
            "user": "U03E4LY27FS",
            "ts": "1668095824.000000"
        },
        "client_msg_id": "2F40413F-A088-4305-987F-FBF4B364C457",
        "text": "Hooks. Hooks everywhere.\n• first class ingress into any smart tools; expose parsed syntax in some way\n. Flat file of tree structure? Edit history?\n• Configurable anythings. Make a giant config file in whatever you want to use and make all cool decisions there. Local process endpoints, formatting choices, etc\n• if headless, the output could have preformat mode or raw “markup” mode. The former gives you pretty printable text, the latter spits out the formatting scheme you use to do your highlighting\/ tree info, etc. \n• If you do any LSP integration of any kind, expose the high-level query results in the same way to act as a smart intermediate. `smart-editor` —`headless -findusage “class User” -dir .*` if you’re lucky, you can use the LSP for even stronger highlighting ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "98f0011b77c6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-28\/3450316621254_98f0011b77c61bbc241b_72.jpg",
            "first_name": "Ivan",
            "real_name": "Ivan Lugo",
            "display_name": "Ivan Lugo",
            "team": "T5TCAFTA9",
            "name": "iheartlappy486",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UNR5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hooks. Hooks everywhere.\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "first class ingress into any smart tools; expose parsed syntax in some way"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": ". Flat file of tree structure? Edit history?\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Configurable anythings. Make a giant config file in whatever you want to use and make all cool decisions there. Local process endpoints, formatting choices, etc"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "if headless, the output could have preformat mode or raw “markup” mode. The former gives you pretty printable text, the latter spits out the formatting scheme you use to do your highlighting\/ tree info, etc. "
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I"
                                    },
                                    {
                                        "type": "text",
                                        "text": "f you do any LSP integration of any kind, expose the high-level query results in the same way to act as a smart intermediate. "
                                    },
                                    {
                                        "type": "text",
                                        "text": "smart-editor ",
                                        "style": {
                                            "bold": false,
                                            "italic": false,
                                            "strike": false,
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "—"
                                    },
                                    {
                                        "type": "text",
                                        "text": "headless -findusage “class User” -dir .* ",
                                        "style": {
                                            "bold": false,
                                            "italic": false,
                                            "strike": false,
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": "if "
                                    },
                                    {
                                        "type": "text",
                                        "text": "you’re"
                                    },
                                    {
                                        "type": "text",
                                        "text": " lucky, you can use the LSP for even stronger highlighting "
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "offset": 0,
                        "border": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "slightly_smiling_face",
                "users": [
                    "UK3LH8CF5"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U03E4LY27FS",
        "type": "message",
        "ts": "1668095598.303029",
        "client_msg_id": "0AC62561-7D20-4FBD-AB29-CC92797FB5C9",
        "text": "Also, I think you’re in for some fun. Based on your last project I saw, this is an interesting dive into editing processes, and I can imagine you picked up some tools you can apply from that.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "98f0011b77c6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-04-28\/3450316621254_98f0011b77c61bbc241b_72.jpg",
            "first_name": "Ivan",
            "real_name": "Ivan Lugo",
            "display_name": "Ivan Lugo",
            "team": "T5TCAFTA9",
            "name": "iheartlappy486",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "v4R69",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, I think "
                            },
                            {
                                "type": "text",
                                "text": "you’re"
                            },
                            {
                                "type": "text",
                                "text": " in for some fun. Based on your last project I saw, this is an interesting dive into editing processes, and I can imagine you picked up some tools you can apply from that."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1668097130.450549",
        "client_msg_id": "e4a9e6b7-0e78-4778-b539-b2a7af987c9f",
        "text": "When you say \"headless\" what do you mean? What stuff _wouldn't_ this library do?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "iWvu2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "When you say \"headless\" what do you mean? What stuff "
                            },
                            {
                                "type": "text",
                                "text": "wouldn't",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " this library do?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1668097298.177179",
        "client_msg_id": "ce98aa17-c14e-494b-b32a-660f2f2b3b20",
        "text": "(I'm familiar with Xi — but I had thought it was going to be a full-on editor, like a successor to Atom)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eSQR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(I'm familiar with Xi — but I had thought it was going to be a full-on editor, like a successor to Atom)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1668097339.469509",
        "client_msg_id": "e7377f7d-591a-4f66-ab5b-29d0ae536715",
        "text": "Primarily, it wouldn't render or be tied to any particular way of rendering. It wouldn't handle any direct IO. So no \"if i press this key or click this mouse button\". I also wouldn't want to tie it to any particular way of thinking about open files, buffers, tabs, whatever.\n\nThink of it like a backend for any code text editor you could want. That's the goal",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Rezq0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Primarily, it wouldn't render or be tied to any particular way of rendering. It wouldn't handle any direct IO. So no \"if i press this key or click this mouse button\". I also wouldn't want to tie it to any particular way of thinking about open files, buffers, tabs, whatever.\n\nThink of it like a backend for any code text editor you could want. That's the goal"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1668097378.174099",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1668097382.000000"
        },
        "client_msg_id": "d3d5b7a9-0b22-4986-82f7-05c88f86e6d6",
        "text": "But the backend would still do, like, glyph positioning? (You'd need that if you're going to handle wrapping and cursor positioning, I'd think)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qyu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But the backend would still do, like, glyph positioning? (You'd need that if you're going to handle wrapping and cursor positioning, I'd think)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1668097524.681909",
        "client_msg_id": "cb4c19ef-db3a-4fe1-9a6a-817a4fcf637c",
        "text": "Are you building on the Web? If so, I'm curious why not start with CodeMirror. CodeMirror 6's extension system is sophisticated and capable, and if it doesn't accommodate your needs you can mess with the source.\n\nIf not the Web: I'm less familiar with options, but would be surprised if there weren't an analogous project to start with.\n\nBasically: Making a nice-feeling &amp; featureful text editor is hard, and I wonder why not start with something that already works, if your goal is to experiment with an idea where the text-editor itself is not the focus.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hUOtb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are you building on the Web? If so, I'm curious why not start with CodeMirror. CodeMirror 6's extension system is sophisticated and capable, and if it doesn't accommodate your needs you can mess with the source.\n\nIf not the Web: I'm less familiar with options, but would be surprised if there weren't an analogous project to start with.\n\nBasically: Making a nice-feeling & featureful text editor is hard, and I wonder why not start with something that already works, if your goal is to experiment with an idea where the text-editor itself is not the focus."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1668097599.868109",
        "client_msg_id": "dbde4f8b-1e7c-41f3-9215-0b5e37553a2d",
        "text": "It would handle things in text space, but not in screen space. So if I say move-right and there is a unicode character, the cursor should move N bytes in the text-buffer where it is now at the end of the unicode character, not split it. But it wouldn't tell you the pixel to render at.\n\nWrapping could be out of scope? I don't know. Maybe the renderer can cooperate? Not sure whose responsibility that should be. But I'm fine with that following on the \"not my job side\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z4GTS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It would handle things in text space, but not in screen space. So if I say move-right and there is a unicode character, the cursor should move N bytes in the text-buffer where it is now at the end of the unicode character, not split it. But it wouldn't tell you the pixel to render at.\n\nWrapping could be out of scope? I don't know. Maybe the renderer can cooperate? Not sure whose responsibility that should be. But I'm fine with that following on the \"not my job side\""
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "<@UBKNXPBAB> Not the web. But for what its worth, codemirror 6 is impressive. But I have not found its extension system to be very fun to work with for the sorts of things I want to do. Someone here did a demo of an idea for layers for text, I implemented a POC of that in codemirror 6. It was super finicky though. (Gif attached)\n\n&gt; Making a nice-feeling &amp; featureful text editor is hard \nMy goal is to make hard software because that's what I have the most fun with and learn from the most. :slightly_smiling_face: I'm currently writing this in rust. You can seem my last exploration here. <http:\/\/jimmyhmiller.github.io\/editor-experience|http:\/\/jimmyhmiller.github.io\/editor-experience> (Not what is in the gif, something totally different)",
        "files": [
            {
                "id": "F04ASJASN6M",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "UK3LH8CF5",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M4X",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBKNXPBAB"
                            },
                            {
                                "type": "text",
                                "text": " Not the web. But for what its worth, codemirror 6 is impressive. But I have not found its extension system to be very fun to work with for the sorts of things I want to do. Someone here did a demo of an idea for layers for text, I implemented a POC of that in codemirror 6. It was super finicky though. (Gif attached)\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Making a nice-feeling & featureful text editor is hard "
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nMy goal is to make hard software because that's what I have the most fun with and learn from the most. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " I'm currently writing this in rust. You can seem my last exploration here. "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/jimmyhmiller.github.io\/editor-experience",
                                "text": "http:\/\/jimmyhmiller.github.io\/editor-experience"
                            },
                            {
                                "type": "text",
                                "text": " (Not what is in the gif, something totally different)"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1668098139.065909",
        "edited": {
            "user": "UK3LH8CF5",
            "ts": "1668110528.000000"
        },
        "client_msg_id": "88c6f51f-d00f-42fb-9ca6-2cf0fd79da94",
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UBKNXPBAB"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1668098215.164559",
        "client_msg_id": "998f1904-fc83-46d4-b5fc-01fc7eb1a364",
        "text": "Hi Jimmy. I had this exact problem, so went away and built a Vim &amp; Notepad-like editor for my own use.\nWhile not headless (and perhaps I should have made that split more obvious), it does separate the buffer management from the rendering (which can be either ImGui or Qt).\nI wrote lots of little unit tests, which I found invaluable when things got complicated and I didn't want to break stuff.\nIt's a big undertaking, and I'd do things different if I started again, but it has been useful.\nThere is a video overview on the page....\n<https:\/\/github.com\/Rezonality\/zep>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JDnMg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Hi Jimmy. I had this exact problem, so went away and built a Vim & Notepad-like editor for my own use.\nWhile not headless (and perhaps I should have made that split more obvious), it does separate the buffer management from the rendering (which can be either ImGui or Qt).\nI wrote lots of little unit tests, which I found invaluable when things got complicated and I didn't want to break stuff.\nIt's a big undertaking, and I'd do things different if I started again, but it has been useful.\nThere is a video overview on the page....\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/Rezonality\/zep"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "exploding_head",
                "users": [
                    "UCUSW7WVD",
                    "U02MXPT5UDC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1668098326.523359",
        "client_msg_id": "37fe1339-7746-45f2-8ffd-f602e0c875d9",
        "text": "There's an example of my most recent project using it in this video too:\n<https:\/\/www.youtube.com\/watch?v=mebNIQt8pKE>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0dUUy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's an example of my most recent project using it in this video too:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.youtube.com\/watch?v=mebNIQt8pKE"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1668098346.890099",
        "client_msg_id": "99f6fb7e-4dd6-471d-a3d9-5ad200f62f61",
        "text": "<@UUQ2EQW21> That looks awesome! Definitely going to look into this :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fAUh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UUQ2EQW21"
                            },
                            {
                                "type": "text",
                                "text": " That looks awesome! Definitely going to look into this "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1668098623.008919",
        "client_msg_id": "565f3e80-a231-4fba-b224-e7df955ce1c5",
        "text": "FWIW, My focus was:\n• Enable VIM use wherever I built something \/ enable other users to switch to non-modal editing.\n• Enable editing inside a 3D\/graphics environment.\nThere were other motivations, as you can see from the project page; but those are the top-2.\n\nThe hardest parts:\n• Key mapping\/supporting various editing modes\/features..\n• syntax highlighting\n• Intellisense (I haven't done any of that)\n• Unicode\/international rendering.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jiG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FWIW, My focus was:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Enable VIM use wherever I built something \/ enable other users to switch to non-modal editing."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Enable editing inside a 3D\/graphics environment."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There were other motivations, as you can see from the project page; but those are the top-2.\n\nThe hardest parts:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Key mapping\/supporting various editing modes\/features.."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "syntax highlighting"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Intellisense (I haven't done any of that)"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Unicode\/international rendering."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1668099118.509129",
        "client_msg_id": "615AAA81-BFA5-4480-A7A9-88E4E2FC1D7C",
        "text": "Super helpful resource and information. Mine will definitely have a bit of a different focus. Sense it is primarily for me and I’m anti-modes, definitely won’t be worrying about those :) \n\nFor my goals, this is one part of many projects I want to make. Playing with making my own debugger for my day job work. There I at the very least need to be able to display code with color syntax. But for scripting\/interactive programming I want an editor. \n\nI also have a mega project in my head for making a truly integrated development environment. A place for my computation to live and grow. Where I can extend my own editor in the process of coding. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "CSK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Super helpful resource and information. Mine will definitely have a bit of a different focus. Sense it is primarily for me and I’m anti-modes, definitely won’t be worrying about those :) \n\nFor my goals, this is one part of many projects I want to make"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Playing with making my own debugger for my day job work"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " There I at the very least need to be able to display code with color syntax"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " But for scripting\/interactive programming I want an editor"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " \n\nI also have a mega project in my head for making a truly integrated development environment"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " A place for my computation to live and grow"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Where I can extend my own editor in the process of coding"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1668099437.441099",
        "client_msg_id": "4a7650ae-990e-47c1-9ea9-11d59cc220fd",
        "text": "If you want something more basic\/non modal, you could also look at:\n<https:\/\/github.com\/BalazsJako\/ImGuiColorTextEdit>\nThis is another ImGui based editor; it is in a single file; although it has a UI, there is much in there to do with handling standard editing modes &amp; syntax highlight; you might find it useful.\n\nFWIW: in my day job I work on source editors &amp; some UI parts of debuggers too.  But we use Scintilla under the covers (<https:\/\/www.scintilla.org\/>).  It is a pain to integrate, but it has a lot of features.  We use another layer on top of it, since our tools are Qt based.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w7r=C",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you want something more basic\/non modal, you could also look at:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/BalazsJako\/ImGuiColorTextEdit"
                            },
                            {
                                "type": "text",
                                "text": "\nThis is another ImGui based editor; it is in a single file; although it has a UI, there is much in there to do with handling standard editing modes & syntax highlight; you might find it useful.\n\nFWIW: in my day job I work on source editors & some UI parts of debuggers too.  But we use Scintilla under the covers ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.scintilla.org\/"
                            },
                            {
                                "type": "text",
                                "text": ").  It is a pain to integrate, but it has a lot of features.  We use another layer on top of it, since our tools are Qt based."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UK3LH8CF5"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1668099885.509229",
        "client_msg_id": "d63fc673-7a2a-4f9c-b77b-f8bb81e2d000",
        "text": "This is also an interesting editor (no source code though).  Much of its development live-streamed.\n<https:\/\/4coder.itch.io\/4coder|4coder 4.1 by 4coder (itch.io)>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yvt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This is also an interesting editor (no source code though).  Much of its development live-streamed.\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/4coder.itch.io\/4coder",
                                "text": "4coder 4.1 by 4coder (itch.io)",
                                "unsafe": true
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1668102772.041619",
        "client_msg_id": "94bfb7b2-ae1d-414b-8102-6c11594f778a",
        "text": "I just want to say, having tried both: a text editor is a much more fertile trailhead for FoC experiments than a programming language. This realization has been building slowly, but seeing so many others take this path adds weight to it.\n\n---\n\n<@UK3LH8CF5> Do you have an idea of the API a headed editor will use to interact with this headless backend? Hmm, I haven't looked at all at Neovim's API..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "X6oS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just want to say, having tried both: a text editor is a much more fertile trailhead for FoC experiments than a programming language. This realization has been building slowly, but seeing so many others take this path adds weight to it.\n\n---\n\n"
                            },
                            {
                                "type": "user",
                                "user_id": "UK3LH8CF5"
                            },
                            {
                                "type": "text",
                                "text": " Do you have an idea of the API a headed editor will use to interact with this headless backend? Hmm, I haven't looked at all at Neovim's API.."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1668110422.201539",
        "edited": {
            "user": "UK3LH8CF5",
            "ts": "1668110458.000000"
        },
        "client_msg_id": "66B1C40E-E005-4CD3-9CC5-056F363BBC88",
        "text": "Right now, I’m less interested in the remote setup and more interested in a headless editor library. Both Xi and neovim focus on process model, I would be down with layering that on, but not my primary usage.\n\nI’m not sure exactly the shape it will take, but I want it to be fairly lightweight yet customizable. Customization though would come from using the parts differently, not configuring things. I think Casey Muratori has some really good advice on api design <https:\/\/youtu.be\/ZQ5_u8Lgvyk|https:\/\/youtu.be\/ZQ5_u8Lgvyk>\n\nSo the plan is to start with small bits of functionality and make them nice and compositional.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "attachments": [
            {
                "from_url": "https:\/\/youtu.be\/ZQ5_u8Lgvyk",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/ZQ5_u8Lgvyk\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"300\" src=\"https:\/\/www.youtube.com\/embed\/ZQ5_u8Lgvyk?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen title=\"Designing and Evaluating Reusable Components - 2004\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 300,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/ZQ5_u8Lgvyk",
                "fallback": "YouTube Video: Designing and Evaluating Reusable Components - 2004",
                "title": "Designing and Evaluating Reusable Components - 2004",
                "title_link": "https:\/\/youtu.be\/ZQ5_u8Lgvyk",
                "author_name": "Casey Muratori",
                "author_link": "https:\/\/www.youtube.com\/c\/caseymuratori",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qyu8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Right now, I’m less interested in the remote setup and more interested in a headless editor library. Both Xi and neovim focus on process model, I would be down with layering that on, but not my primary usage.\n\nI’m not sure exactly the shape it will take, but I want it to be fairly lightweight yet customizable. Customization though would come from using the parts differently, not configuring things. I think Casey Muratori has some really good advice on api design "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/ZQ5_u8Lgvyk",
                                "text": "https:\/\/youtu.be\/ZQ5_u8Lgvyk"
                            },
                            {
                                "type": "text",
                                "text": "\n\nSo the plan is to start with small bits of functionality and make them nice and compositional."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1668112948.270999",
        "client_msg_id": "4a2b9f0a-73d1-4fdb-8f9d-393a562350fe",
        "text": "I'm not sure what you mean by \"remote setup\". I think I'm basically asking how you will try out the headless editor library as you build it. I was assuming it would be by creating throwaway editors using it. Are you imagining some other approach?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BWjC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm not sure what you mean by \"remote setup\". I think I'm basically asking how you will try out the headless editor library as you build it. I was assuming it would be by creating throwaway editors using it. Are you imagining some other approach?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UK3LH8CF5",
        "type": "message",
        "ts": "1668114710.644549",
        "client_msg_id": "0402E11F-2CEA-423E-B3A4-53750E7DE01A",
        "text": "Part of the motivation for the project was because I keep procrastinating on building things because I can’t find a gui setup I like. So I’m probably going to ignore building anything graphical. Maybe I’d do a command line one? But I feel like that is a potential distraction. The goal is to have a good testing setup. To evaluate things on performance and correctness. \n\nOnce I get my work debugger stuff going, maybe I’ll integrate it there? Maybe I’ll backport it to my last experiment? In general, I’m down with not making something graphical. Though I am considering like animated gifs of test failure or something. Not sure. ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4377ee2417eb",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-25\/886144219253_4377ee2417eb9eaacd4b_72.jpg",
            "first_name": "Jimmy",
            "real_name": "Jimmy Miller",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jimmyhmiller",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZlO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Part of the motivation for the project was because I keep procrastinating on building things because "
                            },
                            {
                                "type": "text",
                                "text": "I"
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "can’t"
                            },
                            {
                                "type": "text",
                                "text": " find a gui setup I like"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " So "
                            },
                            {
                                "type": "text",
                                "text": "I’m"
                            },
                            {
                                "type": "text",
                                "text": " probably going to ignore building anything graphical"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Maybe "
                            },
                            {
                                "type": "text",
                                "text": "I’d"
                            },
                            {
                                "type": "text",
                                "text": " do a command line one? But I feel like that is a potential distraction"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " The goal is to have a good testing setup"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " To evaluate things on performance and correctness"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " \n\nOnce I get my work debugger stuff going, maybe "
                            },
                            {
                                "type": "text",
                                "text": "I’ll"
                            },
                            {
                                "type": "text",
                                "text": " integrate it there? Maybe "
                            },
                            {
                                "type": "text",
                                "text": "I’ll"
                            },
                            {
                                "type": "text",
                                "text": " backport it to my last experiment? In general"
                            },
                            {
                                "type": "text",
                                "text": ","
                            },
                            {
                                "type": "text",
                                "text": " "
                            },
                            {
                                "type": "text",
                                "text": "I’m"
                            },
                            {
                                "type": "text",
                                "text": " down with not making something graphical"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Though I am considering like animated gifs of test failure or something"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Not sure"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1668139579.677859",
        "edited": {
            "user": "UA14TGLTC",
            "ts": "1668139594.000000"
        },
        "client_msg_id": "bdfcc659-f045-43ee-a9d2-f177af4854b7",
        "text": "Simple, headless text editor?  Sam's a classic and my dad's still using it <http:\/\/sam.cat-v.org\/>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cllot",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Simple, headless text editor?  Sam's a classic and my dad's still using it "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/sam.cat-v.org\/"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1668139661.481719",
        "client_msg_id": "b82cc19b-5b8d-430d-99c7-3006a9fdcd13",
        "text": "The Sam paper is worth a read <http:\/\/doc.cat-v.org\/plan_9\/4th_edition\/papers\/sam\/>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1668091548.239979",
        "parent_user_id": "UK3LH8CF5",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "I7G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The Sam paper is worth a read "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/doc.cat-v.org\/plan_9\/4th_edition\/papers\/sam\/"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]