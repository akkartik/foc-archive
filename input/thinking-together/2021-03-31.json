[
    {
        "user": "UJFN50C00",
        "type": "message",
        "ts": "1617176946.080600",
        "client_msg_id": "ea6ad776-34d4-4140-b48b-7f5a69dc3177",
        "text": "Something like this? <https:\/\/twitter.com\/tomasruizlopez\/status\/1376582424415633416?s=20>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e35958b94f07",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-05-06\/616300651267_e35958b94f07da17cf17_72.png",
            "first_name": "Andreas",
            "real_name": "Andreas S.",
            "display_name": "curious_reader",
            "team": "T5TCAFTA9",
            "name": "andreas.scheinert",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1616432352.026200",
        "parent_user_id": "U01AD80KMLK",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/tomasruizlopez|@tomasruizlopez>: I've implemented a port of the Fuzzy Find Haskell package by <https:\/\/twitter.com\/runarorama|@runarorama> in Swift. It's a bit experimental, but check it out and let me know! You can easily consume it with the Swift Package Manager and it's open source: <https:\/\/github.com\/truizlop\/FuzzyFind> <https:\/\/pbs.twimg.com\/media\/ExoQewdXEAAqR2n.jpg>",
                "ts": 1617037800,
                "author_name": "Tom√°s Ruiz-L√≥pez üë®üèª‚Äçüíª",
                "author_link": "https:\/\/twitter.com\/tomasruizlopez\/status\/1376582424415633416",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1037645797247078400\/O1I5LYLx_normal.jpg",
                "author_subname": "@tomasruizlopez",
                "text": "I've implemented a port of the Fuzzy Find Haskell package by <https:\/\/twitter.com\/runarorama|@runarorama> in Swift. It's a bit experimental, but check it out and let me know! You can easily consume it with the Swift Package Manager and it's open source: <https:\/\/github.com\/truizlop\/FuzzyFind> <https:\/\/pbs.twimg.com\/media\/ExoQewdXEAAqR2n.jpg>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/tomasruizlopez\/status\/1376582424415633416?s=20",
                "image_url": "https:\/\/pbs.twimg.com\/media\/ExoQewdXEAAqR2n.jpg",
                "image_width": 1200,
                "image_height": 759,
                "image_bytes": 46774,
                "id": 1,
                "original_url": "https:\/\/twitter.com\/tomasruizlopez\/status\/1376582424415633416?s=20",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8pg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Something like this? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/tomasruizlopez\/status\/1376582424415633416?s=20"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1617182828.080900",
        "client_msg_id": "d928aa90-ef6e-45e3-ad53-4b8b9488e8ad",
        "text": "In Blow's defense, when pressed, he will usually articulate a more nuanced position.  There's always a tradeoff of speaking one's truth clearly and concisely against including all caveats and side-conditions.\n\nProbably the most important aspect of his perspective is that his team is small and so tool simplicity\/tractability have high value.  Friends running significantly bigger teams have enough people power to tackle technical hangups when communication, coordination, and people problems dominate.\n\nOf course a large firm can handle \"compliance\" ‚Äî be it to a government, platform, or compiler ‚Äî in a way that would crush an individual.  I digress.  :scream:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1616819824.056100",
        "parent_user_id": "UCUNN529Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=KI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In Blow's defense, when pressed, he will usually articulate a more nuanced position.  There's always a tradeoff of speaking one's truth clearly and concisely against including all caveats and side-conditions.\n\nProbably the most important aspect of his perspective is that his team is small and so tool simplicity\/tractability have high value.  Friends running significantly bigger teams have enough people power to tackle technical hangups when communication, coordination, and people problems dominate.\n\nOf course a large firm can handle \"compliance\" ‚Äî be it to a government, platform, or compiler ‚Äî in a way that would crush an individual.  I digress.  "
                            },
                            {
                                "type": "emoji",
                                "name": "scream",
                                "unicode": "1f631"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7",
                    "UMVFWPZ36"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1617190428.081200",
        "client_msg_id": "8f711489-19e6-4f5e-a2fd-2a2acd24bb8a",
        "text": "I share many of Blow's concerns and understand the value of a strong polemic. At the same time, those who receive his transmissions uncritically often fall a little _too_ hard for the ideas. Of course, the same thing has happened many times over the years -- people who've never used Lisp quoting PG's opinions, recycled Jobs-isms from messianic founders, &amp;c.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1616819824.056100",
        "parent_user_id": "UCUNN529Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cUd\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I share many of Blow's concerns and understand the value of a strong polemic. At the same time, those who receive his transmissions uncritically often fall a little "
                            },
                            {
                                "type": "text",
                                "text": "too",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " hard for the ideas. Of course, the same thing has happened many times over the years -- people who've never used Lisp quoting PG's opinions, recycled Jobs-isms from messianic founders, &c."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UML4ZEKDK",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U01AD80KMLK",
        "type": "message",
        "ts": "1617198846.081500",
        "client_msg_id": "99c34e2f-6654-4a96-9a78-9a307946c9c6",
        "text": "Nice ideas! Thanks!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a07cdcb6d037",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-09\/1376906509376_a07cdcb6d037bf7b6a5e_72.jpg",
            "first_name": "",
            "real_name": "Denny Vrandeƒçiƒá",
            "display_name": "Denny Vrandeƒçiƒá",
            "team": "T5TCAFTA9",
            "name": "dvrandecic",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1616432352.026200",
        "parent_user_id": "U01AD80KMLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "knPL",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice ideas! Thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01JNTE35QS",
        "type": "message",
        "ts": "1617206682.081900",
        "client_msg_id": "0d526126-32ec-42fc-a1b4-c9f7b89e0904",
        "text": "I just find it strange that blanket statements can be made regarding performance especially for scenarios where there is a ton of rasterization going on.  Raph Levien describes the situation pretty elegantly here - <https:\/\/www.janestreet.com\/tech-talks\/a-taste-of-gpu-compute\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "97155db555c2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-01-13\/1631845309525_97155db555c2091ecd20_72.jpg",
            "first_name": "",
            "real_name": "Vijay Chakravarthy",
            "display_name": "Vijay Chakravarthy",
            "team": "T5TCAFTA9",
            "name": "vchakrav",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1616819824.056100",
        "parent_user_id": "UCUNN529Y",
        "attachments": [
            {
                "title": " A Taste of GPU Compute :: Jane Street",
                "title_link": "https:\/\/www.janestreet.com\/tech-talks\/a-taste-of-gpu-compute\/",
                "text": "Jane Street is a quantitative trading firm and liquidity provider with a unique focus on technology and collaborative problem solving.",
                "fallback": " A Taste of GPU Compute :: Jane Street",
                "from_url": "https:\/\/www.janestreet.com\/tech-talks\/a-taste-of-gpu-compute\/",
                "service_icon": "https:\/\/www.janestreet.com\/assets\/logo-icon.png",
                "service_name": "janestreet.com",
                "id": 1,
                "original_url": "https:\/\/www.janestreet.com\/tech-talks\/a-taste-of-gpu-compute\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kdq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I just find it strange that blanket statements can be made regarding performance especially for scenarios where there is a ton of rasterization going on.  Raph Levien describes the situation pretty elegantly here - "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.janestreet.com\/tech-talks\/a-taste-of-gpu-compute\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36",
                    "U013ZLJARC7",
                    "UA14TGLTC"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UCUNN529Y",
        "type": "message",
        "ts": "1617232948.082700",
        "edited": {
            "user": "UCUNN529Y",
            "ts": "1617233026.000000"
        },
        "client_msg_id": "04e052b3-2562-4beb-a80c-040d49443d50",
        "text": "Yeah, agreed on all of that, and thanks <@U013ZLJARC7>! The blanket statements also concern me. I‚Äôm personally just interested in applications that really push the boundaries of performance, e.g. the last project I worked on was <http:\/\/webviz.io|webviz.io>.\n\nThere we ran into the limitations of a language like JS ‚Äî we ended up doing a lot of manual memory management to avoid the overhead of a garbage collector, of non-zero-cost object instantiation and function calls, of DOM elements being fairly expensive when you get into the 10,000-100,000 range, and so on. It was very clear that what we were trying to do did not fit the language well ‚Äî we ended up with tons of ArrayBuffers and manual operations on them, which was a lot faster, but pretty inconvenient.\n\nSo I‚Äôm interested in GUI systems in languages where you don‚Äôt have all these constraints, and where things like GC\/refcount\/dynamic dispatch\/etc are opt-in, but where the default is much more low-level. This kind of programming is certainly not for every use case, but it seems strange to me that there really isn‚Äôt much out there to cater to these more extreme use cases, because surely it can‚Äôt be _that_ rare‚Ä¶?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g1809393c6fc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d1809393c6fcd63dcc5ddd5e128dc967.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "JP Posma",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "me1532",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1616819824.056100",
        "parent_user_id": "UCUNN529Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lrN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, agreed on all of that, and thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": "! The blanket statements also concern me. I‚Äôm personally just interested in applications that really push the boundaries of performance, e.g. the last project I worked on was "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/webviz.io",
                                "text": "webviz.io"
                            },
                            {
                                "type": "text",
                                "text": ".\n\nThere we ran into the limitations of a language like JS ‚Äî we ended up doing a lot of manual memory management to avoid the overhead of a garbage collector, of non-zero-cost object instantiation and function calls, of DOM elements being fairly expensive when you get into the 10,000-100,000 range, and so on. It was very clear that what we were trying to do did not fit the language well ‚Äî we ended up with tons of ArrayBuffers and manual operations on them, which was a lot faster, but pretty inconvenient.\n\nSo I‚Äôm interested in GUI systems in languages where you don‚Äôt have all these constraints, and where things like GC\/refcount\/dynamic dispatch\/etc are opt-in, but where the default is much more low-level. This kind of programming is certainly not for every use case, but it seems strange to me that there really isn‚Äôt much out there to cater to these more extreme use cases, because surely it can‚Äôt be "
                            },
                            {
                                "type": "text",
                                "text": "that",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " rare‚Ä¶?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UMVFWPZ36",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UCUNN529Y",
        "type": "message",
        "ts": "1617233305.083000",
        "client_msg_id": "93141d63-b985-4647-84b9-0d0e952b3088",
        "text": "Also, in an application like that, it‚Äôs not like you can isolate just one part of your application that is the most performance critical ‚Äî I wish that were the case! The core data that we were operating on easily ran into the many gigabytes, and since pretty much everything builds on top of that and needs to iterate over many objects, there are no easy abstractions. This is probably a pretty extreme use case though. :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g1809393c6fc",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d1809393c6fcd63dcc5ddd5e128dc967.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "",
            "real_name": "JP Posma",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "me1532",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1616819824.056100",
        "parent_user_id": "UCUNN529Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Qq4fG",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also, in an application like that, it‚Äôs not like you can isolate just one part of your application that is the most performance critical ‚Äî I wish that were the case! The core data that we were operating on easily ran into the many gigabytes, and since pretty much everything builds on top of that and needs to iterate over many objects, there are no easy abstractions. This is probably a pretty extreme use case though. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UA14TGLTC",
        "type": "message",
        "ts": "1617250452.083500",
        "client_msg_id": "b3374d84-2af6-49cb-9a43-4644cc492d32",
        "text": "Sounds like you were doing the right things ‚Äî so far as they go.  Everyone let me know if there's a robust, reusable way to scale these sorts of things up.  :pray:  Once you're into the million, billions, iterating isn't such a great idea.  On the UI side, sigh, it's like you know you have a supercomputer under your hands with shaders as a lava pit between you and awesomeness.  Ultimately,  cheating is only trick I know: how do I get most of the benefit of visualizing this data without actually doing it.  It all ends up being bespoke though.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gae6d55db9d1",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/3ae6d55db9d15b79bc683a8031fc2588.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "",
            "real_name": "William Taysom",
            "display_name": "wtaysom",
            "team": "T5TCAFTA9",
            "name": "wtaysom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1616819824.056100",
        "parent_user_id": "UCUNN529Y",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4O+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Sounds like you were doing the right things ‚Äî so far as they go.  Everyone let me know if there's a robust, reusable way to scale these sorts of things up.  "
                            },
                            {
                                "type": "emoji",
                                "name": "pray",
                                "unicode": "1f64f"
                            },
                            {
                                "type": "text",
                                "text": "  Once you're into the million, billions, iterating isn't such a great idea.  On the UI side, sigh, it's like you know you have a supercomputer under your hands with shaders as a lava pit between you and awesomeness.  Ultimately,  cheating is only trick I know: how do I get most of the benefit of visualizing this data without actually doing it.  It all ends up being bespoke though."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]