[
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1736150513.863119",
        "client_msg_id": "f0ce0b5c-4399-4508-b515-677676fc4a32",
        "text": "A related observation that I made in the three decades I have been working in academia is that money corrupts in terms of reliability. Disciplines with few resources (mathematics, fundamental physics, ...) have higher quality standards, and invest larger efforts to increase them, than \"rich\" disciplines such as biology or medical research. Part of it is the available resources per researcher: the less you have, the more ingenuity you need to invest to get results. But I suspect the main driver to be inequality in terms of resources, which attracts a different kind of person, more interest in status than in knowledge.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1736003300.962479",
        "parent_user_id": "U0768BNPTEY",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pE3wW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A related observation that I made in the three decades I have been working in academia is that money corrupts in terms of reliability. Disciplines with few resources (mathematics, fundamental physics, ...) have higher quality standards, and invest larger efforts to increase them, than \"rich\" disciplines such as biology or medical research. Part of it is the available resources per researcher: the less you have, the more ingenuity you need to invest to get results. But I suspect the main driver to be inequality in terms of resources, which attracts a different kind of person, more interest in status than in knowledge."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "U0768BNPTEY",
                    "U8A5MS6R1"
                ],
                "count": 2
            },
            {
                "name": "boom",
                "users": [
                    "URKQXRCAC",
                    "UCUSW7WVD"
                ],
                "count": 2
            },
            {
                "name": "heavy_plus_sign",
                "users": [
                    "UML4ZEKDK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02E4DAQGSZ",
        "type": "message",
        "ts": "1736171176.976739",
        "edited": {
            "user": "U02E4DAQGSZ",
            "ts": "1736171207.000000"
        },
        "client_msg_id": "389bc410-8e45-474f-88aa-88cf9e86f689",
        "text": "the outcome of our \"no broken graphs\" project was adding transactional modification, so instead of mutating graphs one node\/edge at a time, you applied a patch all-or-nothing, and we check the post conditions before committing the transaction.\n\nFor us, our graphs needed certain matching nodes, a bit like making sure every \"(\" has a \")\" but where the bit in the middle is a graph walks. Impossible to verify if you add one node\/edge at a time, but totally possible when you apply transactional batches and maintain the invariants between transactions.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "27dffd0e73bd",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2483463922595_27dffd0e73bd6f709927_72.gif",
            "first_name": "Tom",
            "real_name": "Tom Larkworthy",
            "display_name": "Tom Larkworthy",
            "team": "T5TCAFTA9",
            "name": "tom.larkworthy",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734713588.023319",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xtWX7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the outcome of our \"no broken graphs\" project was adding transactional modification, so instead of mutating graphs one node\/edge at a time, you applied a patch all-or-nothing, and we check the post conditions before committing the transaction.\n\nFor us, our graphs needed certain matching nodes, a bit like making sure every \"(\" has a \")\" but where the bit in the middle is a graph walks. Impossible to verify if you add one node\/edge at a time, but totally possible when you apply transactional batches and maintain the invariants between transactions."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1736181836.974379",
        "client_msg_id": "c8ff4610-a38d-4259-ad2a-2e180b8f6af6",
        "text": "It sounds like most of you have graphs embedded into a non-graph structure\nI wish it was easier to find a data structure\/representation that makes graph-breaking operations non-representable (aka generate a data structure for a schema that includes read\/write constraints)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734713588.023319",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hjzy7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It sounds like most of you have graphs embedded into a non-graph structure\nI wish it was easier to find a data structure\/representation that makes graph-breaking operations non-representable (aka generate a data structure for a schema that includes read\/write constraints)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1736183128.179289",
        "client_msg_id": "dbade7b7-f096-42b0-8250-e24b1aeb4ec0",
        "text": "That's actually not my issue. But it's not as if \"node\" and \"edge\" and \"graph\" are first order types in any language I'm using, so technically I suppose it's always a graph embedded in a non-graph structure!? My API doesn't let me do anything that would make it \"not a graph\". The problem is just that I am constantly creating \"not the shape of graph I was expecting\".",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734713588.023319",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jDlkQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "That's actually not my issue. But it's not as if \"node\" and \"edge\" and \"graph\" are first order types in any language I'm using, so technically I suppose it's always a graph embedded in a non-graph structure!? My API doesn't let me do anything that would make it \"not a graph\". The problem is just that I am constantly creating \"not the shape of graph I was expecting\"."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFEQUBNNT",
        "type": "message",
        "ts": "1736185579.489909",
        "client_msg_id": "3A92A959-B4AC-4D9E-A321-A0BCBFAD1AC3",
        "text": "I thought this was a fun, related article. It won’t be of much help pragmatically, but may provide some catharsis.\n\n&gt; So which algorithms should come with the library? “The amount of things people want to do with graphs is absurd,” Kelly told me. That matches my experience, and the experiences of all my interviewees. It sometimes seems like graphs are _too powerful,_ that all their possibilities are beyond my understanding.\n<https:\/\/www.hillelwayne.com\/post\/graph-types\/|https:\/\/www.hillelwayne.com\/post\/graph-types\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "565c54a4fa91",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-09-13\/2508698086192_565c54a4fa91a0c8c75a_72.png",
            "first_name": "Tom",
            "real_name": "Tom Lieber",
            "display_name": "alltom",
            "team": "T5TCAFTA9",
            "name": "tom",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734713588.023319",
        "parent_user_id": "U02U0AS3J49",
        "attachments": [
            {
                "from_url": "https:\/\/www.hillelwayne.com\/post\/graph-types\/",
                "service_icon": "https:\/\/www.hillelwayne.com\/favicon.ico",
                "ts": 1709337600,
                "id": 1,
                "original_url": "https:\/\/www.hillelwayne.com\/post\/graph-types\/",
                "fallback": "Hillel Wayne: The Hunt for the Missing Data Type",
                "text": "A (directed) graph is a set of nodes, connected by arrows (edges). The nodes and edges may contain data. Here are some graphs:\n\n \nAll graphs made with graphviz (source)\n\nGraphs are ubiquitous in software engineering:\n Package dependencies form directed graphs, as do module imports. The internet is a graph of links between webpages. Model checkers analyze software by exploring the “state space” of all possible configurations.",
                "title": "The Hunt for the Missing Data Type",
                "title_link": "https:\/\/www.hillelwayne.com\/post\/graph-types\/",
                "service_name": "Hillel Wayne"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GAUgC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I thought this was a fun, related article"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " It "
                            },
                            {
                                "type": "text",
                                "text": "won’t"
                            },
                            {
                                "type": "text",
                                "text": " be of much help pragmatically, but may provide some catharsis."
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So which algorithms should come with the library? “The amount of things people want to do with graphs is absurd,” Kelly told me. That matches my experience, and the experiences of all my interviewees. It sometimes seems like graphs are "
                            },
                            {
                                "type": "text",
                                "text": "too powerful,",
                                "style": {
                                    "bold": false,
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " that all their possibilities are beyond my understanding."
                            }
                        ],
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.hillelwayne.com\/post\/graph-types\/",
                                "text": "https:\/\/www.hillelwayne.com\/post\/graph-types\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U01AD80KMLK",
        "type": "message",
        "ts": "1736236759.968469",
        "client_msg_id": "ce497e82-6454-4032-b5ff-eae5292ecdad",
        "text": "I am having trouble understanding the problem and I would appreciate more concrete examples. Is it syntactical shapes don't align with expectations, or is it the semantics of the query and the representation don't sufficiently match to get the right answer after an evolution of the KG? Each of these need very different approaches to improve the situation. I have worked with very large KGs, and found them very workable, but you need to constantly garden them, preferably automatically detecting issues, and adding a lot of tests \/ constraints that are automatically checked, to your data.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "a07cdcb6d037",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-09\/1376906509376_a07cdcb6d037bf7b6a5e_72.jpg",
            "first_name": "",
            "real_name": "Denny Vrandečić",
            "display_name": "Denny Vrandečić",
            "team": "T5TCAFTA9",
            "name": "dvrandecic",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1734713588.023319",
        "parent_user_id": "U02U0AS3J49",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pc\/NA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I am having trouble understanding the problem and I would appreciate more concrete examples. Is it syntactical shapes don't align with expectations, or is it the semantics of the query and the representation don't sufficiently match to get the right answer after an evolution of the KG? Each of these need very different approaches to improve the situation. I have worked with very large KGs, and found them very workable, but you need to constantly garden them, preferably automatically detecting issues, and adding a lot of tests \/ constraints that are automatically checked, to your data."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]