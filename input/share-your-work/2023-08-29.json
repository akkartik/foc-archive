[
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1693346245.026099",
        "client_msg_id": "4274bfe8-30e1-4daa-9c9b-92693c4f2c82",
        "text": "You guys are in my head. First driver and now this.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692759278.355689",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SgwrX",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You guys are in my head. First driver and now this."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1693346644.636409",
        "client_msg_id": "61188786-f02c-4551-967e-00018fb6a425",
        "text": "I don't think common sense is necessarily captured in most LLM models, but I would suggest that there are other ways to bootstrap symbolic AI that by doing knowledge representation of common sense. You could also do knowledge representation of uncommon sense expressed in text, the advantage being that unlike common sense, uncommon sense is usually explicitly stated in the text, making it easier to find. What would make that easier is examples of knowledge extracted from text, started in a formal language. Which would require people with uncommon knowledge to be able to encode that knowledge formally. Which would require tools better than the ones we have now for letting humans use formal language. Or end-user programming.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692759278.355689",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vO0pV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't think common sense is necessarily captured in most LLM models, but I would suggest that there are other ways to bootstrap symbolic AI that by doing knowledge representation of common sense. You could also do knowledge representation of uncommon sense expressed in text, the advantage being that unlike common sense, uncommon sense is usually explicitly stated in the text, making it easier to find. What would make that easier is examples of knowledge extracted from text, started in a formal language. Which would require people with uncommon knowledge to be able to encode that knowledge formally. Which would require tools better than the ones we have now for letting humans use formal language. Or end-user programming."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1693346904.165259",
        "client_msg_id": "c78108c7-bed2-406e-8469-fe6eebee7201",
        "text": "For me, generative AI has only this year gotten good enough to be able to translate facts from natural to formal language usefully. But that means a symbolic encoding by a human can now be used by AI in a natural language conversation. And even without the natural language part, the software developers who want to interact with my reasoner through code want features for conversation. \"Why doesn't it know what question to ask, the order in which to ask them, and how they should be phrased?\" So that one question at a time web interviews can be created without the software developers needing to know so damned much about the problem.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692759278.355689",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "tULK+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For me, generative AI has only this year gotten good enough to be able to translate facts from natural to formal language usefully. But that means a symbolic encoding by a human can now be used by AI in a natural language conversation. And even without the natural language part, the software developers who want to interact with my reasoner through code want features for conversation. \"Why doesn't it know what question to ask, the order in which to ask them, and how they should be phrased?\" So that one question at a time web interviews can be created without the software developers needing to know so damned much about the problem."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1693346997.630089",
        "client_msg_id": "78ea5db6-f3d6-4691-8c01-7c57e3edd283",
        "text": "Facts, but not yet logical implications. But the latter limitation might be a matter of prompt engineering, fine tuning, or context size.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692759278.355689",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f8rs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Facts, but not yet logical implications. But the latter limitation might be a matter of prompt engineering, fine tuning, or context size."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1693347210.030169",
        "edited": {
            "user": "U02U0AS3J49",
            "ts": "1693347231.000000"
        },
        "client_msg_id": "4bd45492-0832-4b58-99bb-a84911052185",
        "text": "I'm currently reading kowalski's book on computational thinking again. His paper on resolution of clausal form logic that led to the creation of Prolog might be fun. Or if you want to stick with the in Jason's head theme, \"British nationality act as a logic program\", which is like the birthplace of statutory legal knowledge representation in symbolic AI.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692759278.355689",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UE4u",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm currently reading kowalski's book on computational thinking again. His paper on resolution of clausal form logic that led to the creation of Prolog might be fun. Or if you want to stick with the in Jason's head theme, \"British nationality act as a logic program\", which is like the birthplace of statutory legal knowledge representation in symbolic AI."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1693348906.141009",
        "client_msg_id": "a4cfbb7b-b84d-4f49-81fa-a268b9b65732",
        "text": "<@UC2A2ARPT> if it’s handy, please post a link to the pinhole camera Blender demo you talked about.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692759278.355689",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eDZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " if it’s handy, please post a link to the pinhole camera Blender demo you talked about."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1693349947.168969",
        "client_msg_id": "8023a3e4-7f56-4c66-8be3-583c1ae00ed7",
        "text": "<https:\/\/youtube.com\/watch?v=YE9rEQAGpLw&amp;si=PvDkY6Q10Jzkls4g|https:\/\/youtube.com\/watch?v=YE9rEQAGpLw&amp;si=PvDkY6Q10Jzkls4g>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692759278.355689",
        "parent_user_id": "UC2A2ARPT",
        "attachments": [
            {
                "from_url": "https:\/\/youtube.com\/watch?v=YE9rEQAGpLw&amp;si=PvDkY6Q10Jzkls4g",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/YE9rEQAGpLw\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/YE9rEQAGpLw?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"Make Your Renders Unnecessarily Complicated\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtube.com\/watch?v=YE9rEQAGpLw&amp;si=PvDkY6Q10Jzkls4g",
                "fallback": "YouTube Video: Make Your Renders Unnecessarily Complicated",
                "title": "Make Your Renders Unnecessarily Complicated",
                "title_link": "https:\/\/youtube.com\/watch?v=YE9rEQAGpLw&amp;si=PvDkY6Q10Jzkls4g",
                "author_name": "sirrandalot",
                "author_link": "https:\/\/www.youtube.com\/@sirrandalot",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "irW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/youtube.com\/watch?v=YE9rEQAGpLw&si=PvDkY6Q10Jzkls4g",
                                "text": "https:\/\/youtube.com\/watch?v=YE9rEQAGpLw&si=PvDkY6Q10Jzkls4g"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "100",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1693352352.502109",
        "client_msg_id": "aed62447-f50c-4177-8cec-8db51dc98750",
        "text": "Blockly is another example of people very concerned about lowering the threshold to accessibility, with (originally) a specific aim on pedagogy in the sense of young person education. So much so, in fact, that they have justified certain design decisions by saying \"it isn't supposed to be used for 'real' work.\" Then they switched away from a focus on children, moving toward education more broadly. But in the last year or two they have had a visible change of heart about whether it is for education, and have moved to the position that it is also for domain specific language interfaces. Which undoes the only justification they had for not including more complicated syntactical elements, which they have started adding. Basic elements, first, and still very much focussed on imperative code, but they can see from how their software is being used what it is for. And they were wrong. It's not for kids, and it's not for education. It's just a better way to program for human beings (one of many). They built a tool for helping programmers build tools for end user programming by accident, but they are starting to understand that, and I'm curious to see where it goes from here.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692759278.355689",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ht0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Blockly is another example of people very concerned about lowering the threshold to accessibility, with (originally) a specific aim on pedagogy in the sense of young person education. So much so, in fact, that they have justified certain design decisions by saying \"it isn't supposed to be used for 'real' work.\" Then they switched away from a focus on children, moving toward education more broadly. But in the last year or two they have had a visible change of heart about whether it is for education, and have moved to the position that it is also for domain specific language interfaces. Which undoes the only justification they had for not including more complicated syntactical elements, which they have started adding. Basic elements, first, and still very much focussed on imperative code, but they can see from how their software is being used what it is for. And they were wrong. It's not for kids, and it's not for education. It's just a better way to program for human beings (one of many). They built a tool for helping programmers build tools for end user programming by accident, but they are starting to understand that, and I'm curious to see where it goes from here."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1693352568.694379",
        "client_msg_id": "A3E26FD5-07AE-4654-8DC0-B5A1431F4232",
        "text": "<@UGWUJUZHT> — the link shared by <@U02U0AS3J49> is correct. Also, in case you missed it, each episode comes with a rather exhaustive <https:\/\/futureofcoding.org\/episodes\/066|collection of links in the show notes> :)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1692759278.355689",
        "parent_user_id": "UC2A2ARPT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "omq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " — the link shared by "
                            },
                            {
                                "type": "user",
                                "user_id": "U02U0AS3J49"
                            },
                            {
                                "type": "text",
                                "text": " is correct. Also, in case you missed it, each episode comes with a rather exhaustive "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.org\/episodes\/066",
                                "text": "collection of links in the show notes"
                            },
                            {
                                "type": "text",
                                "text": " :)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UGWUJUZHT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    }
]