[
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1600159410.433000",
        "client_msg_id": "6CD74965-4FD9-4DE0-84EA-994933BE50C6",
        "text": "<@UHWC9PXBL> Yep, I was aware and didn’t think it was ambiguous because in that paragraph <@UDKTZSD6H> was exclusively talking about Alexander, I think…? Not sure what NoC is though; I just read that as Nature of Order…\n\nAPL the language is for sure interesting too. I read Aaron Hsu’s thesis and spent days working through some of the compiler code symbol by symbol. That’s when I first looked more closely into APL. There are some clever things going on, in particular the way scalars, vectors and matrices are handled transparently, and that you basically only have one or two arguments per “function call”. That is really what the terseness is about. It’s easy to just see single-symbol function names and dismiss that as a peculiar design choice and then miss all the interesting stuff (that’s what I did before).\n\nFor me APL however is mostly interesting for defaulting to vector-like structures, which makes it especially suitable for algorithms optimized for parallel execution and GPU compute, and it seems APL practitioners have adapted to mostly take advantage of that style of programming. From a language design perspective or a mathematical perspective I don’t find it that exciting, but I may very well be overlooking something.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "QFO02",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " Yep, I was aware and didn’t think it was ambiguous because in that paragraph "
                            },
                            {
                                "type": "user",
                                "user_id": "UDKTZSD6H"
                            },
                            {
                                "type": "text",
                                "text": " was exclusively talking about Alexander, I think…? Not sure what NoC is though; I just read that as Nature of Order…\n\nAPL the language is for sure interesting too. I read Aaron Hsu’s thesis and spent days working through some of the compiler code symbol by symbol. That’s when I first looked more closely into APL. There are some clever things going on, in particular the way scalars, vectors and matrices are handled transparently, and that you basically only have one or two arguments per “function call”. That is really what the terseness is about. It’s easy to just see single-symbol function names and dismiss that as a peculiar design choice and then miss all the interesting stuff (that’s what I did before).\n\n"
                            },
                            {
                                "type": "text",
                                "text": "For me APL however is mostly interesting for defaulting to vector-like structures, which makes it especially suitable for algorithms optimized for parallel execution and GPU compute, and it seems APL practitioners have adapted to mostly take advantage of that style of programming. From a language design perspective or a mathematical perspective I don’t find it that exciting, but I may very well be overlooking something."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDKTZSD6H"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1600159556.434800",
        "client_msg_id": "8C6CD11F-8E7F-4F3F-A13B-773BDDA8A19E",
        "text": "I’m totally up for a video call with the two of you (and anybody else who feels crazy enough for this conversation; it seems we scared most of them away though… :rolling_on_the_floor_laughing:)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "mhUn",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m totally up for a video call with the two of you (and anybody else who feels crazy enough for this conversation; it seems we scared most of them away though… "
                            },
                            {
                                "type": "emoji",
                                "name": "rolling_on_the_floor_laughing",
                                "unicode": "1f923"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UHWC9PXBL",
                    "UDKTZSD6H"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1600159644.436100",
        "client_msg_id": "350600E3-2BF3-4A4D-A677-DFBEA3C7E826",
        "text": "<@UDKTZSD6H> Your last responses will take me a while, but the references are great, thanks!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V=p",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDKTZSD6H"
                            },
                            {
                                "type": "text",
                                "text": " Your last responses will take me a while, but the references are great, thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1600165252.438800",
        "client_msg_id": "746ac907-e2cc-4316-a3c9-a6ebd0a5c631",
        "text": "Since many of you are interested in visual programming, I wonder what your take is on accessibility issues. Motivated by this message found on today's Emacs News (<https:\/\/lists.gnu.org\/archive\/html\/emacs-devel\/2020-09\/msg00286.html>) which basically says \"Emacs is a great application platform for blind users like myself because it has a plain text user interface that can be adapted to voice I\/O.\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600165252.438800",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1600194889.447200",
        "reply_users": [
            "U0123H7JRDM",
            "UKP3B2J5D",
            "UJ6LDMMN0"
        ],
        "replies": [
            {
                "user": "U0123H7JRDM",
                "ts": "1600166792.441000"
            },
            {
                "user": "UKP3B2J5D",
                "ts": "1600167220.442200"
            },
            {
                "user": "UJ6LDMMN0",
                "ts": "1600194889.447200"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jlQU6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Since many of you are interested in visual programming, I wonder what your take is on accessibility issues. Motivated by this message found on today's Emacs News ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/lists.gnu.org\/archive\/html\/emacs-devel\/2020-09\/msg00286.html"
                            },
                            {
                                "type": "text",
                                "text": ") which basically says \"Emacs is a great application platform for blind users like myself because it has a plain text user interface that can be adapted to voice I\/O.\""
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UKP3B2J5D",
                    "U0123H7JRDM",
                    "UHWC9PXBL",
                    "UE0ETTCG7",
                    "UA14TGLTC"
                ],
                "count": 5
            }
        ]
    },
    {
        "user": "UKP3B2J5D",
        "type": "message",
        "ts": "1600165989.440400",
        "client_msg_id": "97A09509-D2C9-4C93-AA98-091D7F1F7147",
        "text": "Also technically a question like this would be in <#CEXED56UR|administrivia> since it’s meta :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4980e1f3e51a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-03\/1220847671058_4980e1f3e51a273b630a_72.png",
            "first_name": "Ope",
            "real_name": "Ope",
            "display_name": "opeispo",
            "team": "T5TCAFTA9",
            "name": "ogunks900",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600031168.386700",
        "parent_user_id": "U01ASF5K29J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6Er",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Also technically a question like this would be in "
                            },
                            {
                                "type": "channel",
                                "channel_id": "CEXED56UR"
                            },
                            {
                                "type": "text",
                                "text": " since it’s meta "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "beers",
                "users": [
                    "UC2A2ARPT",
                    "UBSMEUXAA"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1600166526.440800",
        "client_msg_id": "77391221-5bb5-43e1-a7cd-204ae6e58047",
        "text": "<@UDKTZSD6H> regarding your 3 suggested resources:\n\n*1 Universal Algebra* — this seems to be what I was hoping for when I started getting into category theory (we even had a study group here). For category theory I concluded that the basics are great to know, and they btw align with Christopher Alexander's intent with pattern languages, which also state that patterns are independent from the actual entities and are completely defined by the relations between them. But as I'm still more interested in applying that knowledge to actual problems, category theory then quickly seems to drift off into abstract math land where it seems more like an entertaining thinking sport for a higher math priesthood.\n\nAnyway, Universal Algebra: I'm familiar with orders, groups, sets, monoids, etc. If I'm specifically interested in the mathematical definition and transformations between lists and trees and lattices, do you have any great introductory pointers to read\/watch?\n\n*2 Topology* — I guess I need to brush up on topology. Will read that blog post.\n\n*3 Recursion + Chomsky* — If I understand you correctly, I think you're interpreting what I said already on a more abstract level than I meant it, which is interesting. That's the main problem discussing these things: we talk about abstraction all the time and we do it all the time, but we don't really have a sense for which level of abstraction we're at right now. We can only determine where we are in the hierarchy of abstractions in a relative way, by pointing out what's above or below. There is no stable absolute coordinate system that's granular enough. Feels a lot like category theory.\n\nThe way I just recently started to understand Alexander's pattern language, seems even more down-to-earth, pragmatic application of a grammar with certain terminals and non-terminals, which form a hierarchy. The point is that such a language can be described with a finite amount of elements (or patterns, in Alexander's case), but can be combined to construct an infinite amount of resulting artifacts (built structures, in Alexander's case). Through the language we get hierarchy, so there are patterns that apply to different levels of scale (up from patterns for towns, through patterns for houses, to patterns for ornaments). These correspond to where in the syntax tree they are; higher-level (town) non-terminals often rely on several more layers of lower-level (house) non-terminals until you finally resolve to a terminal (~ ornaments?).\nSo that's all pretty basic generative grammars stuff.\n\nAlexander doesn't like recursion, because there isn't really an infinite sequence anywhere in nature. It all begins and ends somewhere. So it doesn't map perfectly. But I'm willing to consider that an \"implementation detail\". :slightly_smiling_face:\nBut I expect more clarity on this from his Nature of Order series, which I will finally attempt to read soon.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0IP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UDKTZSD6H"
                            },
                            {
                                "type": "text",
                                "text": " regarding your 3 suggested resources:\n\n"
                            },
                            {
                                "type": "text",
                                "text": "1 Universal Algebra",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " — this seems to be what I was hoping for when I started getting into category theory (we even had a study group here). For category theory I concluded that the basics are great to know, and they btw align with Christopher Alexander's intent with pattern languages, which also state that patterns are independent from the actual entities and are completely defined by the relations between them. But as I'm still more interested in applying that knowledge to actual problems, category theory then quickly seems to drift off into abstract math land where it seems more like an entertaining thinking sport for a higher math priesthood.\n\nAnyway, Universal Algebra: I'm familiar with orders, groups, sets, monoids, etc. If I'm specifically interested in the mathematical definition and transformations between lists and trees and lattices, do you have any great introductory pointers to read\/watch?\n\n"
                            },
                            {
                                "type": "text",
                                "text": "2 Topology",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " — I guess I need to brush up on topology. Will read that blog post.\n\n"
                            },
                            {
                                "type": "text",
                                "text": "3 Recursion + Chomsky",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " — If I understand you correctly, I think you're interpreting what I said already on a more abstract level than I meant it, which is interesting. That's the main problem discussing these things: we talk about abstraction all the time and we do it all the time, but we don't really have a sense for which level of abstraction we're at right now. We can only determine where we are in the hierarchy of abstractions in a relative way, by pointing out what's above or below. There is no stable absolute coordinate system that's granular enough. Feels a lot like category theory.\n\nThe way I just recently started to understand Alexander's pattern language, seems even more down-to-earth, pragmatic application of a grammar with certain terminals and non-terminals, which form a hierarchy. The point is that such a language can be described with a finite amount of elements (or patterns, in Alexander's case), but can be combined to construct an infinite amount of resulting artifacts (built structures, in Alexander's case). Through the language we get hierarchy, so there are patterns that apply to different levels of scale (up from patterns for towns, through patterns for houses, to patterns for ornaments). These correspond to where in the syntax tree they are; higher-level (town) non-terminals often rely on several more layers of lower-level (house) non-terminals until you finally resolve to a terminal (~ ornaments?).\nSo that's all pretty basic generative grammars stuff.\n\nAlexander doesn't like recursion, because there isn't really an infinite sequence anywhere in nature. It all begins and ends somewhere. So it doesn't map perfectly. But I'm willing to consider that an \"implementation detail\". "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\nBut I expect more clarity on this from his Nature of Order series, which I will finally attempt to read soon."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UDKTZSD6H"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U0123H7JRDM",
        "type": "message",
        "ts": "1600166792.441000",
        "client_msg_id": "e5989334-cb00-487b-897d-e3a41a6a3f74",
        "text": "yeah, very good question. I've been thinking about this myself as well since I am working on a visual tool. Since 25% of users (I heard this number last week in a seminar about this topic, but can't find online docs to support this) of regular websites have some sort of (temporarily)  accessiblity issues, this deserves attention. I can imagine that it should be possible to \"tab\" through a visual flow following the connections somehow. Keyboard access in general is needed offcourse. And also simply using color combinations with a good enough contrast ratio. But I wonder if a \"nodes and wire\" visual-model helps people who are blind, even if a screenreader would work properly with such interface. Would this give you a proper mental model of the visual flow? Would a different kind of flow work better? In my day job I have to take accessibility into account (the website\/webapp I currently work on has users who are blind for example). But for my own flow-based-programming project I don't take this into account yet (I simply dont have the time and its a project without users anyway currently), but in the future I probablly will take it into account.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "533c1a6943bf",
            "image_72": "https:\/\/avatars.slack-edge.com\/2025-03-16\/8613805779220_533c1a6943bfc0b7f150_72.jpg",
            "first_name": "Maikel",
            "real_name": "Maikel van de Lisdonk",
            "display_name": "Maikel",
            "team": "T5TCAFTA9",
            "name": "maikel",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600165252.438800",
        "parent_user_id": "UJBAJNFLK",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lJr",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yeah, very good question. I've been thinking about this myself as well since I am working on a visual tool. Since 25% of users (I heard this number last week in a seminar about this topic, but can't find online docs to support this) of regular websites have some sort of (temporarily)  accessiblity issues, this deserves attention. I can imagine that it should be possible to \"tab\" through a visual flow following the connections somehow. Keyboard access in general is needed offcourse. And also simply using color combinations with a good enough contrast ratio. But I wonder if a \"nodes and wire\" visual-model helps people who are blind, even if a screenreader would work properly with such interface. Would this give you a proper mental model of the visual flow? Would a different kind of flow work better? In my day job I have to take accessibility into account (the website\/webapp I currently work on has users who are blind for example). But for my own flow-based-programming project I don't take this into account yet (I simply dont have the time and its a project without users anyway currently), but in the future I probablly will take it into account."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UKP3B2J5D",
        "type": "message",
        "ts": "1600167220.442200",
        "client_msg_id": "83945D32-E5A5-4512-AD88-0FF6CBEB5000",
        "text": "Super relevant link on the topic <https:\/\/twitter.com\/HilaCodes\/status\/1296138844677390336?s=20|https:\/\/twitter.com\/HilaCodes\/status\/1296138844677390336?s=20> ",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "4980e1f3e51a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-07-03\/1220847671058_4980e1f3e51a273b630a_72.png",
            "first_name": "Ope",
            "real_name": "Ope",
            "display_name": "opeispo",
            "team": "T5TCAFTA9",
            "name": "ogunks900",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600165252.438800",
        "parent_user_id": "UJBAJNFLK",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/HilaCodes|@HilaCodes>: On Thursday, <https:\/\/twitter.com\/AndreasStefik|@AndreasStefik> on Programming Languages and the Silly Humans that Use Them\n\n<https:\/\/www.youtube.com\/watch?v=k1Tfv0vlGZw>",
                "ts": 1597858556,
                "author_name": "Hila Peleg",
                "author_link": "https:\/\/twitter.com\/HilaCodes\/status\/1296138844677390336",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/1063196653363052545\/AgPaFlH5_normal.jpg",
                "author_subname": "@HilaCodes",
                "text": "On Thursday, <https:\/\/twitter.com\/AndreasStefik|@AndreasStefik> on Programming Languages and the Silly Humans that Use Them\n\n<https:\/\/www.youtube.com\/watch?v=k1Tfv0vlGZw>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/HilaCodes\/status\/1296138844677390336?s=20",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/HilaCodes\/status\/1296138844677390336?s=20",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WY1r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Super relevant link on the topic "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/HilaCodes\/status\/1296138844677390336?s=20",
                                "text": "https:\/\/twitter.com\/HilaCodes\/status\/1296138844677390336?s=20"
                            },
                            {
                                "type": "text",
                                "text": " "
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1600169155.442500",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1600169188.000000"
        },
        "client_msg_id": "c7bab2f5-af2a-49b9-a333-8cd01625b8bf",
        "text": "<@UHWC9PXBL> I have been meaning to look at Nada’s work for a while, but I lacked the math-fu to tackle it and sat through the first 20 minutes wondering like what was even happening when I saw it a couple of years ago. But I think I’m reasonably ready now to slowly work towards absorbing the lessons there. That + MiniKanren by Friedman\/Byrd been on my list for a while.\n\nThank you for the links on Kernel, coming across of it for the first time. Will take a closer look at this one. Yeah, folds and unfolds (Origami programming I think it’s called? <https:\/\/archive.alvb.in\/msc\/11_infomtpt\/papers\/origami-programming_Gibbons.pdf>) points at that deep correspondence between Initial\/Final (co)algebras that I have been talking about. I think the idea here is that you can modularize everything down to a sequence of unary\/binary function and then talk about folding them to get data and unfolding the data to get the sequence back. This I think is a powerful idea and continuations I think are like things that does these sporadically and jumps to another part (like goto) to create a computational structure. Bird\/Meerteens\/Gibbons seem to be the people who pioneer work in this domain. Their Algorithmics movement I think is a great advancement in this direction. I found this person on Twitter who have been reading papers on these and doing a review of them: <https:\/\/twitter.com\/chansey97>\n\nRe: Specter\/Lenses is another place, though I don’t know how they related to these structures. But is something I would love to read further. I see Profunctor Optics have slowly turned into a central focus point among theorists.\n\nOne of the central things I think in computing and most of mathematics is the idea of duality. So that defunctionalization\/refunctionalization as much as I understand is a way to reify a continuation so that it can be treated as a datastructure. If my guess is not far off, what you get is the above mentioned algebra structure which the folds and unfolds work over. The beauty about algebra is that you get a lot of nice properties which yields itself to different ways of instrumenting into the program. Like associativity guarantees that the brackets around operations a(bc)(de) can be moved around giving (ab)(cd)e meaning you can execute each of those functions in any context (any thread when mapped to a computational substrate) and then rejoin the result to get back the original one. Mathematicians go further and generalize that to ideas like Tamari lattice: <https:\/\/en.wikipedia.org\/wiki\/Tamari_lattice> where all such orderings are studied and their properties are investigated. So this bigger perspective of looking at things gives an idea to locate where the dualities arise and then instrument your program accordingly. Writing all that makes me wish there was an interactive space to show how all these things fit together.\n\nThanks a tonne for your input and I’ll definitely look through them and respond back when I have better clarity on these.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "attachments": [
            {
                "title": "Siyuan Chen (@chansey97) | Twitter",
                "title_link": "https:\/\/twitter.com\/chansey97",
                "text": "The latest Tweets from Siyuan Chen (@chansey97). Learning logic, type-theory and category-theory",
                "fallback": "Siyuan Chen (@chansey97) | Twitter",
                "from_url": "https:\/\/twitter.com\/chansey97",
                "service_icon": "https:\/\/abs.twimg.com\/icons\/apple-touch-icon-192x192.png",
                "service_name": "twitter.com",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/chansey97"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "z9g",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " I have been meaning to look at Nada’s work for a while, but I lacked the math-fu to tackle it and sat through the first 20 minutes wondering like what was even happening when I saw it a couple of years ago. But I think I’m reasonably ready now to slowly work towards absorbing the lessons there. That + MiniKanren by Friedman\/Byrd been on my list for a while.\n\nThank you for the links on Kernel, coming across of it for the first time. Will take a closer look at this one. Yeah, folds and unfolds (Origami programming I think it’s called? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/archive.alvb.in\/msc\/11_infomtpt\/papers\/origami-programming_Gibbons.pdf"
                            },
                            {
                                "type": "text",
                                "text": ") points at that deep correspondence between Initial\/Final (co)algebras that I have been talking about. I think the idea here is that you can modularize everything down to a sequence of unary\/binary function and then talk about folding them to get data and unfolding the data to get the sequence back. This I think is a powerful idea and continuations I think are like things that does these sporadically and jumps to another part (like goto) to create a computational structure. Bird\/Meerteens\/Gibbons seem to be the people who pioneer work in this domain. Their Algorithmics movement I think is a great advancement in this direction. I found this person on Twitter who have been reading papers on these and doing a review of them: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/chansey97"
                            },
                            {
                                "type": "text",
                                "text": "\n\nRe: Specter\/Lenses is another place, though I don’t know how they related to these structures. But is something I would love to read further. I see Profunctor Optics have slowly turned into a central focus point among theorists.\n\nOne of the central things I think in computing and most of mathematics is the idea of duality. So that defunctionalization\/refunctionalization as much as I understand is a way to reify a continuation so that it can be treated as a datastructure. If my guess is not far off, what you get is the above mentioned algebra structure which the folds and unfolds work over. The beauty about algebra is that you get a lot of nice properties which yields itself to different ways of instrumenting into the program. Like associativity guarantees that the brackets around operations a(bc)(de) can be moved around giving (ab)(cd)e meaning you can execute each of those functions in any context (any thread when mapped to a computational substrate) and then rejoin the result to get back the original one. Mathematicians go further and generalize that to ideas like Tamari lattice: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Tamari_lattice"
                            },
                            {
                                "type": "text",
                                "text": " where all such orderings are studied and their properties are investigated. So this bigger perspective of looking at things gives an idea to locate where the dualities arise and then instrument your program accordingly. Writing all that makes me wish there was an interactive space to show how all these things fit together.\n\nThanks a tonne for your input and I’ll definitely look through them and respond back when I have better clarity on these."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1600169436.443100",
        "client_msg_id": "95d67d00-e1c2-4e33-a3c4-bc555ac09700",
        "text": "&gt; <@UHWC9PXBL> Yep, I was aware and didn’t think it was ambiguous because in that paragraph <@UDKTZSD6H> was exclusively talking about Alexander, I think…? Not sure what NoC is though; I just read that as Nature of Order…\n<@U5STGTB3J> I did indeed mean Nature of Order. Sorry for the typo.\n\nRe: APL I was pleasantly surprised to find APL in the form of K, making headway into financial markets in the form of Shakti and high performance numeric computing: <https:\/\/shakti.com\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "attachments": [
            {
                "title": "Shakti time-series database and streaming platform",
                "title_link": "https:\/\/shakti.com\/",
                "text": "Shakti merges database, language, connectivity and stream processing into one powerful platform",
                "fallback": "Shakti time-series database and streaming platform",
                "image_url": "https:\/\/shakti.com\/_IMAGES\/Shakti-Logo-LinkedIn.png",
                "from_url": "https:\/\/shakti.com\/",
                "image_width": 475,
                "image_height": 250,
                "image_bytes": 33233,
                "service_icon": "https:\/\/shakti.com\/wp-content\/uploads\/2019\/05\/cropped-cropped-favico-270x270-180x180.png",
                "service_name": "shakti.com",
                "id": 1,
                "original_url": "https:\/\/shakti.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "DI9DK",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UHWC9PXBL"
                            },
                            {
                                "type": "text",
                                "text": " Yep, I was aware and didn’t think it was ambiguous because in that paragraph "
                            },
                            {
                                "type": "user",
                                "user_id": "UDKTZSD6H"
                            },
                            {
                                "type": "text",
                                "text": " was exclusively talking about Alexander, I think…? Not sure what NoC is though; I just read that as Nature of Order…"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U5STGTB3J"
                            },
                            {
                                "type": "text",
                                "text": " I did indeed mean Nature of Order. Sorry for the typo.\n\nRe: APL I was pleasantly surprised to find APL in the form of K, making headway into financial markets in the form of Shakti and high performance numeric computing: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/shakti.com\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1600169639.443400",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1600170813.000000"
        },
        "client_msg_id": "ae82878b-725f-4a6d-8a2f-dc177b66aa3b",
        "text": "&gt; and anybody else who feels crazy enough for this conversation; it seems we scared most of them away though\nYeah, I really wish there were more programming practitioners who tried to bring these ideas back into a setting which we can inspect like that Javascript talk on folds\/unfolds. These ideas I think provide a great leverage point to think about what is happening when you compile your program or work towards implementing a certain UI interaction. There is very less awareness about the perspective that logical inquiries and mathematical language is a way to cast these ideas with least amount of distracting details and then inspect them for their properties and what they provide\/take away from us.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "y1F\/b",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "and anybody else who feels crazy enough for this conversation; it seems we scared most of them away though"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yeah, I really wish there were more programming practitioners who tried to bring these ideas back into a setting which we can inspect like that Javascript talk on folds\/unfolds. These ideas I think provide a great leverage point to think about what is happening when you compile your program or work towards implementing a certain UI interaction. There is very less awareness about the perspective that logical inquiries and mathematical language is a way to cast these ideas with least amount of distracting details and then inspect them for their properties and what they provide\/take away from us."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UHWC9PXBL"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1600169941.443800",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1600181287.000000"
        },
        "client_msg_id": "f0989e4b-b3c6-48b6-8ae9-8add37376f39",
        "text": "If you guys would like, I found two books that talks about the benefits of abstract algebra in a concrete setting.\n\nSawyer’s work: <https:\/\/archive.org\/details\/AConcreteApproachToAbstractAlgebra> that reads like a novel rather than a theorem (see exercise for proof) → lemma → corollary → exercise (prove theorem) textbook :stuck_out_tongue:\nAbstract Algebra: A Computational Approach – This ties in with APL mentioned previously as the exercises ask you to work out the exercises using APL: <https:\/\/www.amazon.com\/Abstract-algebra-computational-Charles-Sims\/dp\/0471098469>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "attachments": [
            {
                "title": "Abstract algebra: A computational approach",
                "title_link": "https:\/\/www.amazon.com\/Abstract-algebra-computational-Charles-Sims\/dp\/0471098469",
                "text": "Abstract algebra: A computational approach",
                "fallback": "Abstract algebra: A computational approach",
                "image_url": "https:\/\/images-na.ssl-images-amazon.com\/images\/I\/61yfsHfNUGL._SR600%2c315_PIWhiteStrip%2cBottomLeft%2c0%2c35_PIStarRatingFOUR%2cBottomLeft%2c360%2c-6_SR600%2c315_SCLZZZZZZZ_.jpg",
                "from_url": "https:\/\/www.amazon.com\/Abstract-algebra-computational-Charles-Sims\/dp\/0471098469",
                "image_width": 476,
                "image_height": 250,
                "image_bytes": 18418,
                "service_icon": "https:\/\/www.amazon.com\/favicon.ico",
                "service_name": "amazon.com",
                "id": 1,
                "original_url": "https:\/\/www.amazon.com\/Abstract-algebra-computational-Charles-Sims\/dp\/0471098469"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "dm6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you guys would like, I found two books that talks about the benefits of abstract algebra in a concrete setting.\n\nSawyer’s work: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/archive.org\/details\/AConcreteApproachToAbstractAlgebra"
                            },
                            {
                                "type": "text",
                                "text": " that reads like a novel rather than a theorem (see exercise for proof) → lemma → corollary → exercise (prove theorem) textbook "
                            },
                            {
                                "type": "emoji",
                                "name": "stuck_out_tongue",
                                "unicode": "1f61b"
                            },
                            {
                                "type": "text",
                                "text": "\nAbstract Algebra: A Computational Approach – This ties in with APL mentioned previously as the exercises ask you to work out the exercises using APL: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.amazon.com\/Abstract-algebra-computational-Charles-Sims\/dp\/0471098469"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1600170418.444400",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1600171002.000000"
        },
        "client_msg_id": "cc2fe667-cc88-4c07-b31a-85b019c061fb",
        "text": "&gt; We can only determine where we are in the hierarchy of abstractions in a relative way, by pointing out what's above or below. There is no stable absolute coordinate system that's granular enough. Feels a lot like category theory.\nIf I may venture a guess, I think this is where metric spaces and gauge theories come in. Once you have vector spaces to locate a manifold, the idea of measure gives it a way to locate certain points at a certain distance from one another. This is how topology differs from geometry, in that, topology or set elements for that matter, doesn’t have a notion of distance between them. So you can continuously transform them without losing the “resolution detail” between the points. Having access to a coordinate and then being able to ground these structures gives a way to talk about distance from your point of reference and which way the hierarchy is aligned. This is a stretch but the idea of left and right adjoints I think can be made visual once we have a coordinate access acting as an indexical. Also, as a related idea, if you take a different coordinate axis, you can see your perspective on these changing and the structures being cast in a different manner. Category Theory studies the perspectiveless space and hence opens up to a very general ground for studying these structures.\n\nIf you would like to have a general picture of how these things stand: <https:\/\/www.mathphysicsbook.com\/> is one that walks you through the ideas without going all textbook style. Mac Lane, (co)inventor of Category Theory has written a book called Mathematics, Form and Function: <https:\/\/www.amazon.com\/Mathematics-Form-Function-Saunders-MacLane\/dp\/1461293405\/> but I think it needs a decent grounding in at least some mathematical domains before you read it. Its his whirlwind tour though mathematics detailing how each of them relate to one another. Motivation to invent Category Theory can be seen in this work.\n\nThat is my understanding so far, open to corrections if I have made any wildly wrong speculations here.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yOI",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "We can only determine where we are in the hierarchy of abstractions in a relative way, by pointing out what's above or below. There is no stable absolute coordinate system that's granular enough. Feels a lot like category theory."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If I may venture a guess, I think this is where metric spaces and gauge theories come in. Once you have vector spaces to locate a manifold, the idea of measure gives it a way to locate certain points at a certain distance from one another. This is how topology differs from geometry, in that, topology or set elements for that matter, doesn’t have a notion of distance between them. So you can continuously transform them without losing the “resolution detail” between the points. Having access to a coordinate and then being able to ground these structures gives a way to talk about distance from your point of reference and which way the hierarchy is aligned. This is a stretch but the idea of left and right adjoints I think can be made visual once we have a coordinate access acting as an indexical. Also, as a related idea, if you take a different coordinate axis, you can see your perspective on these changing and the structures being cast in a different manner. Category Theory studies the perspectiveless space and hence opens up to a very general ground for studying these structures.\n\nIf you would like to have a general picture of how these things stand: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.mathphysicsbook.com\/"
                            },
                            {
                                "type": "text",
                                "text": " is one that walks you through the ideas without going all textbook style. Mac Lane, (co)inventor of Category Theory has written a book called Mathematics, Form and Function: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.amazon.com\/Mathematics-Form-Function-Saunders-MacLane\/dp\/1461293405\/"
                            },
                            {
                                "type": "text",
                                "text": " but I think it needs a decent grounding in at least some mathematical domains before you read it. Its his whirlwind tour though mathematics detailing how each of them relate to one another. Motivation to invent Category Theory can be seen in this work.\n\nThat is my understanding so far, open to corrections if I have made any wildly wrong speculations here."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1600170654.445000",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1600170678.000000"
        },
        "client_msg_id": "a32fba5f-4a44-4a48-a0aa-a7ce740b75ee",
        "text": "&gt; Alexander doesn't like recursion, because there isn't really an infinite sequence anywhere in nature. It all begins and ends somewhere. So it doesn't map perfectly. But I'm willing to consider that an \"implementation detail\" :slightly_smiling_face:\n&gt; But I expect more clarity on this from his Nature of Order series, which I will finally attempt to read soon.\nI look forward to your thoughts as you go through it. Christopher Alexander is a deep thinker who I think have stumbled onto something fundamental about us.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wIU",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Alexander doesn't like recursion, because there isn't really an infinite sequence anywhere in nature. It all begins and ends somewhere. So it doesn't map perfectly. But I'm willing to consider that an \"implementation detail\" "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": "\nBut I expect more clarity on this from his Nature of Order series, which I will finally attempt to read soon."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I look forward to your thoughts as you go through it. Christopher Alexander is a deep thinker who I think have stumbled onto something fundamental about us."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1600179362.445800",
        "edited": {
            "user": "UDKTZSD6H",
            "ts": "1600180030.000000"
        },
        "client_msg_id": "242b6f4d-cb9d-4854-b007-a5eb4f9b1ff2",
        "text": "Realized I missed answering this question:\n&gt; Anyway, Universal Algebra: I'm familiar with orders, groups, sets, monoids, etc. If I'm specifically interested in the mathematical definition and transformations between lists and trees and lattices, do you have any great introductory pointers to read\/watch?\nI recently came across Brent Yorgey’s study on Combinatorial Species and I think they are a good setting to study these: <https:\/\/vimeo.com\/16753644>\n\nThere is a way in which trees become lattices. I need to examine the exact mathematical properties that create this transformation, but I think it is when boundaries merge together around a center. For trees, you can think of nested circles, but as soon as they become a lattice, you have intersecting circles that share the same entities. I think you would have come across this, but ICYMI, Christopher Alexander has written a paper on lattices (<https:\/\/web.archive.org\/web\/20120117003449\/rudi.net\/pages\/8755|Part I>, <https:\/\/web.archive.org\/web\/20120315195832\/rudi.net\/books\/201|Part II>)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599906350.292600",
        "parent_user_id": "UDKTZSD6H",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VJ5s",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Realized I missed answering this question:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Anyway, Universal Algebra: I'm familiar with orders, groups, sets, monoids, etc. If I'm specifically interested in the mathematical definition and transformations between lists and trees and lattices, do you have any great introductory pointers to read\/watch?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I recently came across Brent Yorgey’s study on Combinatorial Species and I think they are a good setting to study these: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/vimeo.com\/16753644"
                            },
                            {
                                "type": "text",
                                "text": "\n\nThere is a way in which trees become lattices. I need to examine the exact mathematical properties that create this transformation, but I think it is when boundaries merge together around a center. For trees, you can think of nested circles, but as soon as they become a lattice, you have intersecting circles that share the same entities. I think you would have come across this, but ICYMI, Christopher Alexander has written a paper on lattices ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/web.archive.org\/web\/20120117003449\/rudi.net\/pages\/8755",
                                "text": "Part I"
                            },
                            {
                                "type": "text",
                                "text": ", "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/web.archive.org\/web\/20120315195832\/rudi.net\/books\/201",
                                "text": "Part II"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJ6LDMMN0",
        "type": "message",
        "ts": "1600194889.447200",
        "client_msg_id": "053b86ed-bd0f-40ac-82fb-98d228eeeb94",
        "text": "Maybe more than an educational experiment than a real tool blind people can use, but some years ago a French teacher has developed a system to program Scratch with real LEGO blocks with Braille symbols on them so that blind people can create things with Scratch.\n\nI guess here you have real \"tangible\" programming!\n\nHere is some links (in French):\n<https:\/\/www.lemonde.fr\/blog\/binaire\/2017\/05\/22\/apprendre-a-programmer-les-yeux-fermes\/>\n<https:\/\/manipulatelearnlooktouch.wordpress.com\/mallt-algo-en-main-accessidvscratch\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "0c210ee2df74",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-11-13\/2722434855730_0c210ee2df74838f8683_72.png",
            "first_name": "nicolas",
            "real_name": "nicolas decoster",
            "display_name": "ogadaki",
            "team": "T5TCAFTA9",
            "name": "nicolas.decoster",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600165252.438800",
        "parent_user_id": "UJBAJNFLK",
        "attachments": [
            {
                "service_name": "binaire",
                "title": "Programmer les yeux fermés",
                "title_link": "https:\/\/www.lemonde.fr\/blog\/binaire\/2017\/05\/22\/apprendre-a-programmer-les-yeux-fermes\/",
                "fallback": "binaire: Programmer les yeux fermés",
                "image_url": "https:\/\/www.lemonde.fr\/blog\/binaire\/wp-content\/uploads\/sites\/38\/2017\/04\/articleMondeducode_html_47715f87b226aee9.png",
                "ts": 1495432812,
                "from_url": "https:\/\/www.lemonde.fr\/blog\/binaire\/2017\/05\/22\/apprendre-a-programmer-les-yeux-fermes\/",
                "image_width": 219,
                "image_height": 250,
                "image_bytes": 32007,
                "service_icon": "https:\/\/www.lemonde.fr\/favicon.ico",
                "id": 1,
                "original_url": "https:\/\/www.lemonde.fr\/blog\/binaire\/2017\/05\/22\/apprendre-a-programmer-les-yeux-fermes\/"
            },
            {
                "service_name": "Manipulate Learn Look &amp; Touch",
                "service_url": "http:\/\/manipulatelearnlooktouch.wordpress.com",
                "title": "Mall&amp;t’ Algo en Main – AccessiDVScratch",
                "title_link": "https:\/\/manipulatelearnlooktouch.wordpress.com\/mallt-algo-en-main-accessidvscratch\/",
                "author_name": "sandrineboissel",
                "author_link": "https:\/\/manipulatelearnlooktouch.wordpress.com\/author\/sandrineboissel\/",
                "thumb_url": "https:\/\/manipulatelearnlooktouch.files.wordpress.com\/2018\/06\/img_20180626_081913.jpeg?fit=200%2C150",
                "thumb_width": 113,
                "thumb_height": 150,
                "text": "Dernier ajout : 20 f&eacute;vrier\n\n\nMall&amp;t&rsquo; Algo en Main&nbsp;&ndash; AccessiDVScratch &ndash;&nbsp;\n\nUne inclusion &laquo;&nbsp;symbiose&nbsp;&raquo; entre &eacute;l&egrave;ves DV et non DV\nProgramme de cycle 4&nbsp;: l&rsquo;algorithmique sur Scratch accessible\n\nSondage pour l&rsquo;estimation des besoins&nbsp;:\n&nbsp;\nProjet soutenu depuis 2016 par le Minist&egrave;re&nbsp; DNE (num&eacute;rique et handicap), IG maths, INRIA &amp; Class&rsquo;Code, IREM, INSHEA, F&eacute;d&eacute;ration Aveugles de France, PandaGuide&hellip;&hellip;.\nMALL&amp;T&rsquo; &laquo;&nbsp;algo en main&nbsp;&raquo; Manipulate, Learn, Look &amp; Touch &nbsp;Certificat de marque d&eacute;livr&eacute; par l&rsquo;Institut National de Propri&eacute;t&eacute; Industrielle, &amp; Concept officiellement prot&eacute;g&eacute; INPI.&nbsp;\nQu&rsquo;est-ce que c&rsquo;est ?&nbsp;\nMall&amp;t&rsquo; Algo en Main est un dispositif p&eacute;dagogique inclusif.\nL&rsquo;&eacute;cran d&rsquo;ordinateur est remplac&eacute; par un support r&eacute;el et dynamique (&eacute;pingles et &eacute;lastiques sur support en relief); toutes les instructions sont adapt&eacute;es en gros caract&egrave;res et en braille sur des briques de type Lego; les couleurs et formes g&eacute;om&eacute;triques saillantes permettent d&rsquo;identifier rapidement les instructions.\nPour cr&eacute;er un algorithme, il suffit de le construire en emboitant les diff&eacute;rentes instructions.\nCet outil permet de faciliter l&rsquo;acquisition de nouveaux concepts math&eacute;matiques (variables, priorit&eacute;s de calculs&hellip;) et de la pens&eacute;e algorithmique en s&rsquo;appuyant sur la manipulation. Il offre la possibilit&eacute; de travailler de fa&ccedil;on individuelle ou collaborative, de lire un script de fa&ccedil;on lin&eacute;aire ou s&eacute;quentielle rapide, de d&eacute;couper, conserver, comparer ou &eacute;changer des morceaux d&rsquo;algorithme. Ce dispositif a &eacute;t&eacute; con&ccedil;u pour des personnes aveugles ou mal-voyantes et leur est donc parfaitement accessible. Cela permet un travail commun entre personnes dites valides et personnes en situations de handicap.\n\nIntervention Mall&amp;t&rsquo; Algo en Main le 12 avril dernier  Merci @SemCodesSources\n\n\nInterventions \/ Pr&eacute;sentations \/ Formations :\n\n\n\n\nInterventions\/Pr&eacute;sentations\/Formations sur Mall&amp;t&rsquo; Algo en Main\nLes publications \/ Articles :\nPublications \/ Articles sur Mall&amp;t&rsquo; Algo en Main\n\nBonne lecture&nbsp;:&nbsp;Articles plus bas&hellip;\n&nbsp;1. Scratchons en braille et en gros caract&egrave;res&nbsp;Scratchons en Braille et en gros caract&egrave;res sans ordi&nbsp;\nPremiers pas de la mallette&nbsp;Premiers pas d&rsquo;AccessiDVScratch\n\n&nbsp;\n&nbsp;2. S&eacute;quence p&eacute;dagogique de prise en main + vid&eacute;os\nS&eacute;quence de prise en main + vid&eacute;os\n&nbsp;3. 2&egrave;me mallette\nMallette 2 Accessi DV Scratch\n&nbsp;4. AccessiDVScratch pr&eacute;sentation au salon EduspotFrance\nAccessiDVScratch au salon EduspotFrance\n&nbsp;5. BlueBot et AccessiDVScratch &ndash; Liaison ULIS &eacute;cole &ndash; ULIS coll&egrave;ge\nBlueBot et AccessiDVScratch &ndash; Liaison ULIS &eacute;cole &ndash; ULIS coll&egrave;ge\n\n\nMerci Florent pour ce premier logo&nbsp;&nbsp;\n\n\nAccessiDV Scratch&nbsp;from&nbsp;Canop&eacute; production AURA&nbsp;on&nbsp;Vimeo.\n\n\n\n\nDerni&egrave;re s&eacute;ance avec les Ulissiens &#128521; Progression annuelle achev&eacute;e : indentation dans une pr&eacute;sentation textuelle comprise.\n       dav          dav       \n\n\n\n\n\nArticles de cette rubrique\n\nScratchons en braille et en gros caract&egrave;res\n30 mars 2017\n\nS&eacute;quence de prise en main + vid&eacute;os\n1er septembre 2017\n\nAccessiDVScratch 2&egrave;me mallette\n12 mars 2017\n\nAccessiDVScratch au salon EduspotFrance\n12 mars 2017\n\nArticle sur Mall&amp;t&rsquo; Algo en Main &ndash; dossier &laquo;&nbsp;&eacute;ducation&nbsp;&raquo; du @ledauphine Num&eacute;ro du mercredi 1er novembre\n1er novembre 2017\n\nBlueBot et AccessiDVScratch &ndash; Liaison ULIS &eacute;cole &ndash; ULIS coll&egrave;ge\n2 septembre 2017\n\nPremiers pas d&rsquo;AccessiDVScratch\n12 mars 2017\n\nQuelques photos du salon Educatice\n19 novembre 2017\n\nScratch avec Manu&nbsp;!! (Manuel FAOUEN, informaticien aveugle)\n21 novembre 2017\n\nSondage Estimation des besoins\n18 novembre 2017\n\n\n\n&nbsp;",
                "fallback": "Manipulate Learn Look &amp; Touch Link: Mall&amp;t’ Algo en Main &#8211; AccessiDVScratch",
                "from_url": "https:\/\/manipulatelearnlooktouch.wordpress.com\/mallt-algo-en-main-accessidvscratch\/",
                "service_icon": "https:\/\/manipulatelearnlooktouch.files.wordpress.com\/2018\/03\/cropped-28642695_860125030853879_924744942_o1.jpg?w=180",
                "id": 2,
                "original_url": "https:\/\/manipulatelearnlooktouch.wordpress.com\/mallt-algo-en-main-accessidvscratch\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WGK8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Maybe more than an educational experiment than a real tool blind people can use, but some years ago a French teacher has developed a system to program Scratch with real LEGO blocks with Braille symbols on them so that blind people can create things with Scratch.\n\nI guess here you have real \"tangible\" programming!\n\nHere is some links (in French):\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.lemonde.fr\/blog\/binaire\/2017\/05\/22\/apprendre-a-programmer-les-yeux-fermes\/"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/manipulatelearnlooktouch.wordpress.com\/mallt-algo-en-main-accessidvscratch\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UJBAJNFLK",
                    "UA14TGLTC"
                ],
                "count": 2
            },
            {
                "name": "+1",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1600195910.451200",
        "edited": {
            "user": "UE0ETTCG7",
            "ts": "1600196289.000000"
        },
        "client_msg_id": "3d8a1c0f-e76e-4d9f-beab-9432ccc0399c",
        "text": "In the thread I started asking why programmers don't program more for themselves (<https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1599588394135900> thanks for all the interesting responses everyone! I largely came to the conclusion that they do program for themselves, it just takes the form of personal sites and side projects, rather than the type of thing I was looking for), I got a couple of requests for some examples of what I mean, so I decided to start a thread to share customizations.\n\nThere are three categories I had in mind when I started that thread:\n\n1. Using programming to support software development with things like continuous integration, and automated testing (these are both actually popular, but in my experience programmers tend not to like working on them very much).\n2. Solving problems programming problems programmatically, e.g., writing shell scripts or using  text editor marcos (<https:\/\/www.emacswiki.org\/emacs\/KeyboardMacros>) to perform a refactor that isn't supported by refactoring tools.\n3. Writing scripts and customizations to help improve your own personal workflow.\n\nI think of those three, only the last one that I think only #3, personal customizations, needs examples to understand, so that's what this thread is about. I'm going to try to share a mix of things that I think would be helpful to any programmer, and things that are very specific to my own workflow.\n\nI'd love for anyone else to share their own customizations. I'd also love to hear of people think these types of customizations would be helpful (or not helpful) for the way they work. (Or also just if my presentation of them isn't clear.) Cheers!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600195910.451200",
        "reply_count": 33,
        "reply_users_count": 8,
        "latest_reply": "1600728073.090400",
        "reply_users": [
            "UE0ETTCG7",
            "UAJKEBGP8",
            "UPX3PH28N",
            "UCUSW7WVD",
            "UUQ2EQW21",
            "U013ZLJARC7",
            "UJBAJNFLK",
            "US6TKS2HW"
        ],
        "replies": [
            {
                "user": "UE0ETTCG7",
                "ts": "1600195962.451500"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1600196000.451900"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1600196036.452300"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1600196071.452700"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1600196105.453100"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1600196266.453500"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1600196321.453800"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1600196437.454000"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1600197515.454300"
            },
            {
                "user": "UPX3PH28N",
                "ts": "1600198453.454700"
            },
            {
                "user": "UPX3PH28N",
                "ts": "1600199516.454900"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1600217707.455300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1600229570.455800"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1600229996.456100"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1600230350.456700"
            },
            {
                "user": "UPX3PH28N",
                "ts": "1600234823.464400"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1600241749.465400"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1600274934.469400"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1600275436.469600"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1600275916.469800"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1600281369.470300"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1600281628.470900"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1600282101.477000"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1600282283.477400"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1600282328.477700"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1600343348.480400"
            },
            {
                "user": "UE0ETTCG7",
                "ts": "1600353128.482100"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1600416841.000400"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1600421877.000700"
            },
            {
                "user": "UUQ2EQW21",
                "ts": "1600421932.000900"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1600422945.001300"
            },
            {
                "user": "UJBAJNFLK",
                "ts": "1600495838.008400"
            },
            {
                "user": "US6TKS2HW",
                "ts": "1600728073.090400"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "T3d",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In the thread I started asking why programmers don't program more for themselves ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1599588394135900"
                            },
                            {
                                "type": "text",
                                "text": " thanks for all the interesting responses everyone! I largely came to the conclusion that they do program for themselves, it just takes the form of personal sites and side projects, rather than the type of thing I was looking for), I got a couple of requests for some examples of what I mean, so I decided to start a thread to share customizations.\n\nThere are three categories I had in mind when I started that thread:\n\n1. Using programming to support software development with things like continuous integration, and automated testing (these are both actually popular, but in my experience programmers tend not to like working on them very much).\n2. Solving problems programming problems programmatically, e.g., writing shell scripts or using  text editor marcos ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.emacswiki.org\/emacs\/KeyboardMacros"
                            },
                            {
                                "type": "text",
                                "text": ") to perform a refactor that isn't supported by refactoring tools.\n3. Writing scripts and customizations to help improve your own personal workflow.\n\nI think of those three, only the last one that I think only #3, personal customizations, needs examples to understand, so that's what this thread is about. I'm going to try to share a mix of things that I think would be helpful to any programmer, and things that are very specific to my own workflow.\n\nI'd love for anyone else to share their own customizations. I'd also love to hear of people think these types of customizations would be helpful (or not helpful) for the way they work. (Or also just if my presentation of them isn't clear.) Cheers!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "Fuzzy find is already popular for opening files in text editors, and it's become a popular way to implement search, it's how Spotlight works on macOS for example.\n\nBut fuzzy find is also adaptable to many more use cases, for example, entering the relative path to another file in a text editor.",
        "files": [
            {
                "id": "F01AN6X67N1",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UE0ETTCG7",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "W8NxO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Fuzzy find is already popular for opening files in text editors, and it's become a popular way to implement search, it's how Spotlight works on macOS for example.\n\nBut fuzzy find is also adaptable to many more use cases, for example, entering the relative path to another file in a text editor."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1600195962.451500",
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "text": "Another great use case of fuzzy find is to add file arguments to shell commands, it's faster, and there's less to remember than using tab to complete paths.",
        "files": [
            {
                "id": "F01B3U34X97",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UE0ETTCG7",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "B2W",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Another great use case of fuzzy find is to add file arguments to shell commands, it's faster, and there's less to remember than using tab to complete paths."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1600196000.451900",
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "text": "Emacs has a culture of being able to easily execute code anywhere. In practice I've found this to be less useful than it sounds, because you normally need to add some additional context.\n\nSo I've adapted this idea into being able to quickly open a scratch file to execute code in.",
        "files": [
            {
                "id": "F01AJHJRVAS",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UE0ETTCG7",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6h6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Emacs has a culture of being able to easily execute code anywhere. In practice I've found this to be less useful than it sounds, because you normally need to add some additional context.\n\nSo I've adapted this idea into being able to quickly open a scratch file to execute code in."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1600196036.452300",
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U016VUZGUUQ"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "My favorites customizations are my most personal. I write a lot of notes in Markdown while I work, so I lot of my customizations are for working with Markdown.\n\nFor example, here's a creating a new relative file and linking to it, and then following that link to open the file.",
        "files": [
            {
                "id": "F01AAHBKH71",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UE0ETTCG7",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "yDewt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My favorites customizations are my most personal. I write a lot of notes in Markdown while I work, so I lot of my customizations are for working with Markdown.\n\nFor example, here's a creating a new relative file and linking to it, and then following that link to open the file."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1600196071.452700",
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "text": "AppleScript on macOS is a great way to provide customization to GUI applications that aren't otherwise scriptable.\n\nOne thing I use this for all the time is copying a Markdown link to the current web page to my notes. I can then use the same URL opening link to visit the web page again later.",
        "files": [
            {
                "id": "F01B3U7RQ9X",
                "mode": "tombstone"
            }
        ],
        "upload": false,
        "user": "UE0ETTCG7",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jPvl",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "AppleScript on macOS is a great way to provide customization to GUI applications that aren't otherwise scriptable.\n\nOne thing I use this for all the time is copying a Markdown link to the current web page to my notes. I can then use the same URL opening link to visit the web page again later."
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1600196105.453100",
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7"
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1600196266.453500",
        "client_msg_id": "58e31d7f-a117-4edf-b856-d649198845dc",
        "text": "I”ll be damned if you don’t turn all of this conversation into a tidy blog post :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F5swh",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I”ll be damned if you don’t turn all of this conversation into a tidy blog post "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1600196321.453800",
        "client_msg_id": "fc9dc285-e037-40c0-afb2-49249dcc32fb",
        "text": "Heh, yeah definitely. I going to put together a twitter thread next",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "v598",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Heh, yeah definitely. I going to put together a twitter thread next"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1600196437.454000",
        "client_msg_id": "0478141d-4e2b-47c0-bdaa-c92f391fd3f0",
        "text": "I've thought about doing some how tos, since I've got a system down for doing this stuff really quickly with minimal maintenance. But I see so few people doing things like this that I wonder how many people would be interested?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jR0",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I've thought about doing some how tos, since I've got a system down for doing this stuff really quickly with minimal maintenance. But I see so few people doing things like this that I wonder how many people would be interested?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1600197515.454300",
        "client_msg_id": "43298d5c-dc79-486e-952a-9fad20ad4a12",
        "text": "only one way to find out :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hq5",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "only one way to find out "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE0ETTCG7",
                    "U019CPED6T1",
                    "UHWC9PXBL"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UPX3PH28N",
        "type": "message",
        "ts": "1600198453.454700",
        "client_msg_id": "4c2cfbb9-cae9-4d00-b514-632c20e65d3b",
        "text": "I have a razer mouse with 12 side keys, so I wrote a a script to forward the presses into my window manager, so I can configure actions per-application. My favorites are browser-management: prev\/next tab, close\/restore tab, forward\/backward history. Switch between two last workspaces is also cool. This way I can do browsing effectively with just one hand.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g58ad4af42f7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/58ad4af42f7cff8698951a7befb26f0f.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Oleksii",
            "real_name": "Oleksii Shmalko",
            "display_name": "Oleksii Shmalko",
            "team": "T5TCAFTA9",
            "name": "rasen.dubi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZP+4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have a razer mouse with 12 side keys, so I wrote a a script to forward the presses into my window manager, so I can configure actions per-application. My favorites are browser-management: prev\/next tab, close\/restore tab, forward\/backward history. Switch between two last workspaces is also cool. This way I can do browsing effectively with just one hand."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UA14TGLTC",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UPX3PH28N",
        "type": "message",
        "ts": "1600199516.454900",
        "client_msg_id": "7453f12a-522a-47ad-b2a0-547928cd6c05",
        "text": "I also hacked a spaced repetition package in Emacs to work with my reading list. I just keep adding articles\/videos to it and use spaced repetition to remind me about cool stuff I have postponed.\n\nI've been using this for a month now and I should say it works pretty great: I've been reading much more and I don't feel overwhelmed by the growing reading list—I never review it manually. Also good for keeping FOMO in bay—just add the article and rely on the system to remind you about it.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g58ad4af42f7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/58ad4af42f7cff8698951a7befb26f0f.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Oleksii",
            "real_name": "Oleksii Shmalko",
            "display_name": "Oleksii Shmalko",
            "team": "T5TCAFTA9",
            "name": "rasen.dubi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "V+XsK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I also hacked a spaced repetition package in Emacs to work with my reading list. I just keep adding articles\/videos to it and use spaced repetition to remind me about cool stuff I have postponed.\n\nI've been using this for a month now and I should say it works pretty great: I've been reading much more and I don't feel overwhelmed by the growing reading list—I never review it manually. Also good for keeping FOMO in bay—just add the article and rely on the system to remind you about it."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "sunglasses",
                "users": [
                    "UE0ETTCG7",
                    "UA14TGLTC"
                ],
                "count": 2
            },
            {
                "name": "ok_hand",
                "users": [
                    "UN9SCH5RD",
                    "UHWC9PXBL"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UE0ETTCG7",
        "type": "message",
        "ts": "1600217707.455300",
        "client_msg_id": "77084010-3474-4071-946d-0f7172a4c5ab",
        "text": "The spaced repetition hack sounds awesome, love to hear more about how you did that if you have any links or other resources!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8d5fa305f272",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-09-24\/1392332871012_8d5fa305f272f9d0c9e3_72.jpg",
            "first_name": "Roben",
            "real_name": "Roben Kleene",
            "display_name": "robenkleene",
            "team": "T5TCAFTA9",
            "name": "services",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Q=Wb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The spaced repetition hack sounds awesome, love to hear more about how you did that if you have any links or other resources!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1600229570.455800",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1600229690.000000"
        },
        "client_msg_id": "6395781a-8d53-42ca-9a7c-b699809eae4a",
        "text": "I have some old blog posts from back when I used to do more customization:\n\n<http:\/\/akkartik.name\/bash.html>\n<http:\/\/www.google.com\/search?q=+site%3Awww.vim.org+kartik+agaram>\n<http:\/\/akkartik.name\/lisp.html>\n<http:\/\/akkartik.name\/desktop.html> (endless time spent on colors)\n<http:\/\/akkartik.name\/firefox.html>\n\nHere's something more substantial I made: OCR for VNC <http:\/\/akkartik.name\/vnc.html>. Still quite proud of this one. Only Windows programming I've ever done. I used it all the time for 5 years, but I haven't used it in 12 years.\n\nOther more substantial things:\n<http:\/\/akkartik.name\/codelog.html> was how I got into the habit of using version control.\n<http:\/\/akkartik.name\/post\/2010-09-25-05-29-01-soc> (a suite of scripts for slicing and dicing data from shell scripts)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Y=+3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I have some old blog posts from back when I used to do more customization:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/bash.html"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/www.google.com\/search?q=+site%3Awww.vim.org+kartik+agaram"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/lisp.html"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/desktop.html"
                            },
                            {
                                "type": "text",
                                "text": " (endless time spent on colors)\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/firefox.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nHere's something more substantial I made: OCR for VNC "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/vnc.html"
                            },
                            {
                                "type": "text",
                                "text": ". Still quite proud of this one. Only Windows programming I've ever done. I used it all the time for 5 years, but I haven't used it in 12 years.\n\nOther more substantial things:\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/codelog.html"
                            },
                            {
                                "type": "text",
                                "text": " was how I got into the habit of using version control.\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/post\/2010-09-25-05-29-01-soc"
                            },
                            {
                                "type": "text",
                                "text": " (a suite of scripts for slicing and dicing data from shell scripts)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1600229996.456100",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1600230580.000000"
        },
        "client_msg_id": "90340b76-018a-4262-897b-72e6625be554",
        "text": "These days I try to minimize my desires, mostly so I can leave my existing computer faster for a Mu computer.\n\nI stopped writing Firefox extensions after the RSS feedreader extension I wrote (<https:\/\/github.com\/akkartik\/spew>) stopped working. I'm still in mourning about this one, the second betrayal around RSS feeds.\n\nI still tweak colors: <https:\/\/lobste.rs\/s\/yn8drc\/context_coloring#c_3do8ct>\n\nHere's a recent hack to get Vim windows to be first class with tmux windows: <https:\/\/www.reddit.com\/r\/vim\/comments\/22ixkq\/navigate_around_vim_and_tmux_panes_painlessly\/cgnnnai\/?context=3>\n\nAnd then I added a feature to the way my editor shows git diffs in the margins: <https:\/\/mastodon.social\/@akkartik\/103994830568601931>\n\nI don't know if these examples satisfy your 3 categories..",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "akkartik\/spew",
                "title_link": "https:\/\/github.com\/akkartik\/spew",
                "text": "UI-less firefox extension feedreader. Contribute to akkartik\/spew development by creating an account on GitHub.",
                "fallback": "GitHub: akkartik\/spew",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/3161?s=400&v=4",
                "from_url": "https:\/\/github.com\/akkartik\/spew",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/akkartik\/spew"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JIlLm",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "These days I try to minimize my desires, mostly so I can leave my existing computer faster for a Mu computer.\n\nI stopped writing Firefox extensions after the RSS feedreader extension I wrote ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/akkartik\/spew"
                            },
                            {
                                "type": "text",
                                "text": ") stopped working. I'm still in mourning about this one, the second betrayal around RSS feeds.\n\nI still tweak colors: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/lobste.rs\/s\/yn8drc\/context_coloring#c_3do8ct"
                            },
                            {
                                "type": "text",
                                "text": "\n\nHere's a recent hack to get Vim windows to be first class with tmux windows: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.reddit.com\/r\/vim\/comments\/22ixkq\/navigate_around_vim_and_tmux_panes_painlessly\/cgnnnai\/?context=3"
                            },
                            {
                                "type": "text",
                                "text": "\n\nAnd then I added a feature to the way my editor shows git diffs in the margins: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/mastodon.social\/@akkartik\/103994830568601931"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI don't know if these examples satisfy your 3 categories.."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1600230350.456700",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1600282484.000000"
        },
        "client_msg_id": "9450112b-7e5b-4e26-9f89-83302de291e1",
        "text": "RSS feeds are a whole separate chapter of my life. Here's a list of feed aggregators I've built, in autobiographical order:\n\n2004: <http:\/\/akkartik.name\/agg\/rwir.tgz>\n2008: <http:\/\/akkartik.name\/newsflash>\n2009: <https:\/\/github.com\/akkartik\/readwarp>\n2015: <https:\/\/github.com\/akkartik\/spew>\n\nHonorable mention to my old HN reader:\n2008, 2011: <http:\/\/akkartik.name\/hackerstream>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/7DHy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "RSS feeds are a whole separate chapter of my life. Here's a list of feed aggregators I've built, in autobiographical order:\n\n2004: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/agg\/rwir.tgz"
                            },
                            {
                                "type": "text",
                                "text": "\n2008: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/newsflash"
                            },
                            {
                                "type": "text",
                                "text": "\n2009: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/akkartik\/readwarp"
                            },
                            {
                                "type": "text",
                                "text": "\n2015: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/akkartik\/spew"
                            },
                            {
                                "type": "text",
                                "text": "\n\nHonorable mention to my old HN reader:\n2008, 2011: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/hackerstream"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1600231488.459700",
        "client_msg_id": "7735205b-a382-4864-81be-0c0d7bc5e6a5",
        "text": "Who here is working on a logic programming system? I feel if there are a few of us it could be nice to form a little subgroup to share questions and ideas that require a background in logic programming.\n\nPerhaps there are not many of us, though.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600231488.459700",
        "reply_count": 18,
        "reply_users_count": 10,
        "latest_reply": "1600473673.006000",
        "reply_users": [
            "UC2A2ARPT",
            "UN9SCH5RD",
            "UCGAK10LS",
            "UDKTZSD6H",
            "UA14TGLTC",
            "UHWC9PXBL",
            "U016VUZGUUQ",
            "U01A1C2K8MP",
            "U013ZLJARC7",
            "U013HU44GLS"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1600231599.459800"
            },
            {
                "user": "UN9SCH5RD",
                "ts": "1600232023.460100"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1600233098.463700"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1600233195.463900"
            },
            {
                "user": "UN9SCH5RD",
                "ts": "1600236901.464700"
            },
            {
                "user": "UDKTZSD6H",
                "ts": "1600246901.466300"
            },
            {
                "user": "UA14TGLTC",
                "ts": "1600247166.466500"
            },
            {
                "user": "UHWC9PXBL",
                "ts": "1600269902.468800"
            },
            {
                "user": "U016VUZGUUQ",
                "ts": "1600278549.470100"
            },
            {
                "user": "U01A1C2K8MP",
                "ts": "1600281565.470500"
            },
            {
                "user": "U01A1C2K8MP",
                "ts": "1600281613.470700"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1600328463.479500"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1600352552.481000"
            },
            {
                "user": "U013HU44GLS",
                "ts": "1600467167.002800"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1600467309.003000"
            },
            {
                "user": "U013HU44GLS",
                "ts": "1600467683.003400"
            },
            {
                "user": "U013HU44GLS",
                "ts": "1600471128.003600"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1600473673.006000"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FqI3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Who here is working on a logic programming system? I feel if there are a few of us it could be nice to form a little subgroup to share questions and ideas that require a background in logic programming.\n\nPerhaps there are not many of us, though."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1600231599.459800",
        "client_msg_id": "2b794338-d418-48e3-be31-73f5800174d9",
        "text": "If we get enough buy-in, I'd be happy to spin up a subject-specific channel for that. (Now that we have the new `of-` naming scheme, I am more inclined to let us experiment with various subject-specific channels, since they are sort of clustered together in the channel list and thus easier to manage)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600231488.459700",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "HYYP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If we get enough buy-in, I'd be happy to spin up a subject-specific channel for that. (Now that we have the new "
                            },
                            {
                                "type": "text",
                                "text": "of-",
                                "style": {
                                    "code": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " naming scheme, I am more inclined to let us experiment with various subject-specific channels, since they are sort of clustered together in the channel list and thus easier to manage)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS",
                    "UAJ9DV971"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UN9SCH5RD",
        "type": "message",
        "ts": "1600232023.460100",
        "client_msg_id": "0caff452-9c22-4194-bf41-6500fb05e2b9",
        "text": "what is a logic programming system? Prolog like programming language?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa31b79aded",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa31b79adedc3f60547769f1a8971ba6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Emmanuel Oga",
            "display_name": "Emmanuel Oga",
            "team": "T5TCAFTA9",
            "name": "emmanueloga",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600231488.459700",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e=A",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "what is a logic programming system? Prolog like programming language?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1600233098.463700",
        "client_msg_id": "274A948B-1041-4F3F-BD70-294F200DDAA7",
        "text": "Prolog is one example of a logic programming language, though there are many other (niche) examples that are very different. The main qualifier is that the semantics of a logic programming language is based directly on some variant or extension of first-order logic, as opposed to Von Neumann machines or lambda calculus.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600231488.459700",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x81+w",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Prolog is one example of a logic programming language, though there are many other (niche) examples that are very different. The main qualifier is that the semantics of a logic programming language is based directly on some variant or extension of first-order logic, as opposed to Von Neumann machines or lambda calculus."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1600233195.463900",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1600233230.000000"
        },
        "client_msg_id": "3db4ca17-ee25-4b24-be10-5f61ad707a70",
        "text": "<@UN9SCH5RD> It's fairly common, around here, to say \"programming system\" as a superset of \"programming language\", so as to include means of programming that aren't text-based or otherwise resembling traditional PLs.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600231488.459700",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "uEj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UN9SCH5RD"
                            },
                            {
                                "type": "text",
                                "text": " It's fairly common, around here, to say \"programming system\" as a superset of \"programming language\", so as to include means of programming that aren't text-based or otherwise resembling traditional PLs."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCGAK10LS",
                    "UDKTZSD6H",
                    "U013ZLJARC7"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UPX3PH28N",
        "type": "message",
        "ts": "1600234823.464400",
        "client_msg_id": "2deb0fe5-461e-4636-a7f4-08ea40131b69",
        "text": "<@UE0ETTCG7> I believe I got this idea from Andy Matuschak\n<https:\/\/notes.andymatuschak.org\/z8aZybuJJopS5fL7TnPou2JcmCsBUJeqirbBh|https:\/\/notes.andymatuschak.org\/z8aZybuJJopS5fL7TnPou2JcmCsBUJeqirbBh>\n<https:\/\/notes.andymatuschak.org\/z7yRMBXGc81KkUwLxefodzfnnfKXx63vXzP88|https:\/\/notes.andymatuschak.org\/z7yRMBXGc81KkUwLxefodzfnnfKXx63vXzP88>\n\nFor implementation, I used org-fc as a base and my hacks are here: <https:\/\/github.com\/rasendubi\/dotfiles#org-fc-review-todos|https:\/\/github.com\/rasendubi\/dotfiles#org-fc-review-todos>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g58ad4af42f7",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/58ad4af42f7cff8698951a7befb26f0f.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0010-72.png",
            "first_name": "Oleksii",
            "real_name": "Oleksii Shmalko",
            "display_name": "Oleksii Shmalko",
            "team": "T5TCAFTA9",
            "name": "rasen.dubi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600195910.451200",
        "parent_user_id": "UE0ETTCG7",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "rasendubi\/dotfiles",
                "title_link": "https:\/\/github.com\/rasendubi\/dotfiles#org-fc-review-todos",
                "text": "My dotfiles. Contribute to rasendubi\/dotfiles development by creating an account on GitHub.",
                "fallback": "GitHub: rasendubi\/dotfiles",
                "thumb_url": "https:\/\/avatars0.githubusercontent.com\/u\/1366419?s=400&v=4",
                "from_url": "https:\/\/github.com\/rasendubi\/dotfiles#org-fc-review-todos",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/rasendubi\/dotfiles#org-fc-review-todos"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f7\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UE0ETTCG7"
                            },
                            {
                                "type": "text",
                                "text": " I believe I got this idea from Andy Matuschak\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/notes.andymatuschak.org\/z8aZybuJJopS5fL7TnPou2JcmCsBUJeqirbBh",
                                "text": "https:\/\/notes.andymatuschak.org\/z8aZybuJJopS5fL7TnPou2JcmCsBUJeqirbBh"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/notes.andymatuschak.org\/z7yRMBXGc81KkUwLxefodzfnnfKXx63vXzP88",
                                "text": "https:\/\/notes.andymatuschak.org\/z7yRMBXGc81KkUwLxefodzfnnfKXx63vXzP88"
                            },
                            {
                                "type": "text",
                                "text": "\n\nFor implementation, I used org-fc as a base and my hacks are here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/rasendubi\/dotfiles#org-fc-review-todos",
                                "text": "https:\/\/github.com\/rasendubi\/dotfiles#org-fc-review-todos"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9SCH5RD",
        "type": "message",
        "ts": "1600236901.464700",
        "client_msg_id": "925d9f54-c5c1-4e47-91bb-da1d0522a5c9",
        "text": "oh I see",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa31b79aded",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa31b79adedc3f60547769f1a8971ba6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Emmanuel Oga",
            "display_name": "Emmanuel Oga",
            "team": "T5TCAFTA9",
            "name": "emmanueloga",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1600231488.459700",
        "parent_user_id": "UCGAK10LS",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "=4N6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh I see"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]