[
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1599032989.156400",
        "client_msg_id": "204c6d9d-8e7e-4a39-9cfb-c4ae806a3adb",
        "text": "This could be a start? *<https:\/\/link.springer.com\/chapter\/10.1007\/978-3-662-44202-9_13|Spores>*<https:\/\/link.springer.com\/chapter\/10.1007\/978-3-662-44202-9_13|: A type-based foundation for closures in the age of concurrency and distribution>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599014047.155300",
        "parent_user_id": "U018DRGAC5S",
        "attachments": [
            {
                "service_name": "SpringerLink",
                "title": "Spores: A Type-Based Foundation for Closures in the Age of Concurrency",
                "title_link": "https:\/\/link.springer.com\/chapter\/10.1007\/978-3-662-44202-9_13",
                "text": "Functional programming (FP) is regularly touted as the way forward for bringing parallel, concurrent, and distributed programming to the mainstream. The popularity of the rationale behind this...",
                "fallback": "SpringerLink: Spores: A Type-Based Foundation for Closures in the Age of Concurrency",
                "thumb_url": "https:\/\/static-content.springer.com\/cover\/book\/978-3-662-44202-9.jpg",
                "from_url": "https:\/\/link.springer.com\/chapter\/10.1007\/978-3-662-44202-9_13",
                "thumb_width": 153,
                "thumb_height": 232,
                "service_icon": "https:\/\/link.springer.com\/springerlink-static\/1781331718\/images\/favicon\/app-icon-iphone@3x.png",
                "id": 1,
                "original_url": "https:\/\/link.springer.com\/chapter\/10.1007\/978-3-662-44202-9_13"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "\/8p+9",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "This could be a start? "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/link.springer.com\/chapter\/10.1007\/978-3-662-44202-9_13",
                                "text": "Spores",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/link.springer.com\/chapter\/10.1007\/978-3-662-44202-9_13",
                                "text": ": A type-based foundation for closures in the age of concurrency and distribution"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "U013ZLJARC7"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1599033074.156700",
        "edited": {
            "user": "UBN9AFS0N",
            "ts": "1599033137.000000"
        },
        "client_msg_id": "5f573347-aa4e-402b-be7a-d7685c5092f8",
        "text": "Instant pickles: generating object-oriented pickler combinators for fast and extensible serialization <https:\/\/dl.acm.org\/doi\/abs\/10.1145\/2509136.2509547>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599014047.155300",
        "parent_user_id": "U018DRGAC5S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NnW6",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Instant pickles: generating object-oriented pickler combinators for fast and extensible serialization "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/dl.acm.org\/doi\/abs\/10.1145\/2509136.2509547"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1599033385.157200",
        "client_msg_id": "5b357341-9716-4cd0-840a-8d8fbf67d761",
        "text": "the references on this paper look interesting <https:\/\/dl.acm.org\/doi\/10.1145\/174675.178047>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599014047.155300",
        "parent_user_id": "U018DRGAC5S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OUf78",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "the references on this paper look interesting "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/dl.acm.org\/doi\/10.1145\/174675.178047"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1599035661.157500",
        "client_msg_id": "ccb5b10c-fbe9-43c0-9ab9-f5e5631fd338",
        "text": "Unsurprisingly, Oleg has some prior art in this area:\n<http:\/\/okmij.org\/ftp\/continuations\/#shift-cgi>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599014047.155300",
        "parent_user_id": "U018DRGAC5S",
        "attachments": [
            {
                "title": "Continuations and delimited control",
                "title_link": "http:\/\/okmij.org\/ftp\/continuations\/#shift-cgi",
                "text": "A collection of articles on delimited and undelimited continuations and context-passing programming.",
                "fallback": "Continuations and delimited control",
                "from_url": "http:\/\/okmij.org\/ftp\/continuations\/#shift-cgi",
                "service_name": "okmij.org",
                "id": 1,
                "original_url": "http:\/\/okmij.org\/ftp\/continuations\/#shift-cgi"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VFr0V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Unsurprisingly, Oleg has some prior art in this area:\n"
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/okmij.org\/ftp\/continuations\/#shift-cgi"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U018DRGAC5S",
        "type": "message",
        "ts": "1599074125.158000",
        "client_msg_id": "d18ca575-e4eb-4520-83d2-43c88c3e091b",
        "text": "Pickling and unpickling isn't enough unless you also reify continuations so they are (un)picklable.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0345f6261d6",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0345f6261d6ced21145afdec166fd114.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "François-René Rideau",
            "display_name": "François-René Rideau",
            "team": "T5TCAFTA9",
            "name": "fahree",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599014047.155300",
        "parent_user_id": "U018DRGAC5S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "WhrN",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Pickling and unpickling isn't enough unless you also reify continuations so they are (un)picklable."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U018DRGAC5S",
        "type": "message",
        "ts": "1599074149.158200",
        "client_msg_id": "91f0cf86-31de-4276-8128-7561dba001f3",
        "text": "Similarly, delimited control isn't enough unless it's also picklable.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0345f6261d6",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0345f6261d6ced21145afdec166fd114.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "François-René Rideau",
            "display_name": "François-René Rideau",
            "team": "T5TCAFTA9",
            "name": "fahree",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599014047.155300",
        "parent_user_id": "U018DRGAC5S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "vcf",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Similarly, delimited control isn't enough unless it's also picklable."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U018DRGAC5S",
        "type": "message",
        "ts": "1599074226.158400",
        "client_msg_id": "a7bf8563-82f8-4fab-9c16-c143352d1204",
        "text": "I know some prior art in the Scheme, Smalltalk and CL communities on serializing continuations, though I'm not sure how they handled transactionality.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0345f6261d6",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0345f6261d6ced21145afdec166fd114.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "François-René Rideau",
            "display_name": "François-René Rideau",
            "team": "T5TCAFTA9",
            "name": "fahree",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599014047.155300",
        "parent_user_id": "U018DRGAC5S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rMW",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I know some prior art in the Scheme, Smalltalk and CL communities on serializing continuations, though I'm not sure how they handled transactionality."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U018DRGAC5S",
        "type": "message",
        "ts": "1599074522.158600",
        "client_msg_id": "ac9b51c6-a7c7-4cce-90ac-b5e12c5c4a14",
        "text": "But thanks for all the links. I'll read and re-read.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0345f6261d6",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0345f6261d6ced21145afdec166fd114.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "François-René Rideau",
            "display_name": "François-René Rideau",
            "team": "T5TCAFTA9",
            "name": "fahree",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599014047.155300",
        "parent_user_id": "U018DRGAC5S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ChD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "But thanks for all the links. I'll read and re-read."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1599076761.158900",
        "client_msg_id": "e05313bb-6751-4297-8998-3bc75e3a3f56",
        "text": "<@U018DRGAC5S> From the linked paper: \"The captured delimited continuations can be stored on disk, to be later loaded and resumed in a different process.\" :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599014047.155300",
        "parent_user_id": "U018DRGAC5S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gsmw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U018DRGAC5S"
                            },
                            {
                                "type": "text",
                                "text": " From the linked paper: \"The captured delimited continuations can be stored on disk, to be later loaded and resumed in a different process.\" "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U018DRGAC5S",
        "type": "message",
        "ts": "1599085912.159100",
        "client_msg_id": "f603ba52-66f1-4cef-8946-95f69c7f5391",
        "text": "Doing it is harder than saying it. Issues like how to represent closures, and how to hack your compiler to generate those serializable representations, etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g0345f6261d6",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/0345f6261d6ced21145afdec166fd114.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "François-René Rideau",
            "display_name": "François-René Rideau",
            "team": "T5TCAFTA9",
            "name": "fahree",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599014047.155300",
        "parent_user_id": "U018DRGAC5S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "19BIO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Doing it is harder than saying it. Issues like how to represent closures, and how to hack your compiler to generate those serializable representations, etc."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U017GNJM021",
        "type": "message",
        "ts": "1599086594.159300",
        "edited": {
            "user": "U017GNJM021",
            "ts": "1599092698.000000"
        },
        "client_msg_id": "ed2d7d1a-a332-47e0-bc65-a24219423819",
        "text": "<@U013ZLJARC7> it is indeed an understatement, but that is a major part of why this project is interesting to me.\n\nComputers haven't had the impact on maths\/physics we might think they should have. Most \"naievly\", one might have said, in 1960: \"computers have incredible raw computing power. They will surely outperform mathematicians and physicists with mathematical breakthroughs\". But the Poincare conjecture, Fermat's last theorem, and the superstring revolutions were (?) all old-school no-computer maths. People are now talking about AI revolutionizing maths and physics, and maybe that'll happen, but it hasn't happened yet.\n\nWith that in the background, consider the following question: \"Why do people not use GA?\" The answer is not mathematical; the mathematical breakthroughs that should have convinced people to adopt it have already happened. The gap is \"soft\", i.e. it's in the domain of psychology (or even philosophy if you like Charles Gunn). That creates a \"cultural\" challenge, and you are precisely right that getting cultural change is hard (certainly harder than \"hey, here's algorithm X, it is 30% faster than algorithm Y). I think most people who understand the issue agree that this is the case. It's a hard problem, and it's an important one too, because GA really is a lot better than vector algebra.\n\nAlright, we've got two questions: \"can computers actually change physics?\" and \"what needs to be done to bring about the revolution in physics that is GA's destiny?\". And I'm betting my farm on the idea that the first is the answer to the second. That with computer visualization and a well-thought-out \"coding\" \"environment\" (mathland!), you can get exactly the cognitive revolution\/cultural change you want in physics. To me, everything said by our great \"philosophers of computer visualization and psychology\", i.e. Alan Kay, Seymour Papert, Bret Victor and Jonathan Blow, can be applied quite well to propagating GA.\n\nBut to be clear, I was interested in Blow\/Victor\/Papert before I was interested in GA. I might almost (almost) say that I am not, as such, interested in GA :smile: the main thing I am interested in is proving that computers visualization can revolutionize physics. So, yes, it's a challenge, and that's the point. If it works, nobody will be able to deny the power of the Papertian program.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gada15ee32be",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ada15ee32bea73f6cfe00c7e36819a68.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0000-72.png",
            "first_name": "",
            "real_name": "hamish todd",
            "display_name": "hamish todd",
            "team": "T5TCAFTA9",
            "name": "hamish.todd1",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1596545313.448700",
        "parent_user_id": "U017GNJM021",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Sm2\/",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " it is indeed an understatement, but that is a major part of why this project is interesting to me.\n\nComputers haven't had the impact on maths\/physics we might think they should have. Most \"naievly\", one might have said, in 1960: \"computers have incredible raw computing power. They will surely outperform mathematicians and physicists with mathematical breakthroughs\". But the Poincare conjecture, Fermat's last theorem, and the superstring revolutions were (?) all old-school no-computer maths. People are now talking about AI revolutionizing maths and physics, and maybe that'll happen, but it hasn't happened yet.\n\nWith that in the background, consider the following question: \"Why do people not use GA?\" The answer is not mathematical; the mathematical breakthroughs that should have convinced people to adopt it have already happened. The gap is \"soft\", i.e. it's in the domain of psychology (or even philosophy if you like Charles Gunn). That creates a \"cultural\" challenge, and you are precisely right that getting cultural change is hard (certainly harder than \"hey, here's algorithm X, it is 30% faster than algorithm Y). I think most people who understand the issue agree that this is the case. It's a hard problem, and it's an important one too, because GA really is a lot better than vector algebra.\n\nAlright, we've got two questions: \"can computers actually change physics?\" and \"what needs to be done to bring about the revolution in physics that is GA's destiny?\". And I'm betting my farm on the idea that the first is the answer to the second. That with computer visualization and a well-thought-out \"coding\" \"environment\" (mathland!), you can get exactly the cognitive revolution\/cultural change you want in physics. To me, everything said by our great \"philosophers of computer visualization and psychology\", i.e. Alan Kay, Seymour Papert, Bret Victor and Jonathan Blow, can be applied quite well to propagating GA.\n\nBut to be clear, I was interested in Blow\/Victor\/Papert before I was interested in GA. I might almost (almost) say that I am not, as such, interested in GA "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": " the main thing I am interested in is proving that computers visualization can revolutionize physics. So, yes, it's a challenge, and that's the point. If it works, nobody will be able to deny the power of the Papertian program."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9SCH5RD",
        "type": "message",
        "ts": "1599104954.159800",
        "edited": {
            "user": "UN9SCH5RD",
            "ts": "1599105847.000000"
        },
        "client_msg_id": "05378dab-d509-4469-b7e6-ea08149640f5",
        "text": "there was a pretty practical explanation complete with working code on how to serialize clojure functions in this article: <https:\/\/tech.redplanetlabs.com\/2020\/01\/06\/serializing-and-deserializing-clojure-fns-with-nippy\/>\nIf your continuations are \"just functions\" perhaps it is relevant :slightly_smiling_face: Seems like a hard problem",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa31b79aded",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa31b79adedc3f60547769f1a8971ba6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Emmanuel Oga",
            "display_name": "Emmanuel Oga",
            "team": "T5TCAFTA9",
            "name": "emmanueloga",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599014047.155300",
        "parent_user_id": "U018DRGAC5S",
        "attachments": [
            {
                "service_name": "Tech blog",
                "title": "Serializing and Deserializing Clojure Fns with Nippy",
                "title_link": "https:\/\/tech.redplanetlabs.com\/2020\/01\/06\/serializing-and-deserializing-clojure-fns-with-nippy\/",
                "text": "We use Nippy at Red Planet Labs whenever we need general purpose serialization \/ deserialization of Clojure objects. It’s easy to use, fast, and covers virtually everything you could ever wan…",
                "fallback": "Tech blog: Serializing and Deserializing Clojure Fns with Nippy",
                "thumb_url": "https:\/\/i1.wp.com\/tech.redplanetlabs.com\/wp-content\/uploads\/2019\/09\/cropped-alien-1.png?fit=512%2C512&ssl=1",
                "ts": 1578335592,
                "from_url": "https:\/\/tech.redplanetlabs.com\/2020\/01\/06\/serializing-and-deserializing-clojure-fns-with-nippy\/",
                "thumb_width": 512,
                "thumb_height": 512,
                "service_icon": "https:\/\/i1.wp.com\/tech.redplanetlabs.com\/wp-content\/uploads\/2019\/09\/cropped-alien-1.png?fit=180%2C180&#038;ssl=1",
                "id": 1,
                "original_url": "https:\/\/tech.redplanetlabs.com\/2020\/01\/06\/serializing-and-deserializing-clojure-fns-with-nippy\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k6BU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "there was a pretty practical explanation complete with working code on how to serialize clojure functions in this article: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/tech.redplanetlabs.com\/2020\/01\/06\/serializing-and-deserializing-clojure-fns-with-nippy\/"
                            },
                            {
                                "type": "text",
                                "text": "\nIf your continuations are \"just functions\" perhaps it is relevant "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " Seems like a hard problem"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]