[
    {
        "user": "UDKTZSD6H",
        "type": "message",
        "ts": "1599223771.161900",
        "client_msg_id": "580df643-599d-4a64-bdff-9623ff681c05",
        "text": "Is this close to defunctionalization?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2b4594ccf61c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-06-03\/652459184852_2b4594ccf61c401763eb_72.png",
            "first_name": "",
            "real_name": "Prathyush",
            "display_name": "Prathyush",
            "team": "T5TCAFTA9",
            "name": "prax08",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599014047.155300",
        "parent_user_id": "U018DRGAC5S",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FU8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is this close to defunctionalization?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "US370TRJA",
        "type": "message",
        "ts": "1599238375.165000",
        "edited": {
            "user": "US370TRJA",
            "ts": "1599249132.000000"
        },
        "client_msg_id": "C3F44E3B-D462-4834-B2E2-BD41B056B40B",
        "text": "Not mine, but I thought the demo was compelling. Using a visual spreadsheet interface to generate python pandas data cleaning code. <https:\/\/trymito.io\/|https:\/\/trymito.io\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8449ebbf703",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8449ebbf703fcee4e1eadc3e78478f01.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "Cameron",
            "real_name": "Cameron Yick",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "cameron.yick",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599238375.165000",
        "reply_count": 6,
        "reply_users_count": 3,
        "latest_reply": "1599247702.175700",
        "reply_users": [
            "UAJKEBGP8",
            "US370TRJA",
            "U013ZLJARC7"
        ],
        "replies": [
            {
                "user": "UAJKEBGP8",
                "ts": "1599238579.165200"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1599238589.165400"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1599238610.165600"
            },
            {
                "user": "UAJKEBGP8",
                "ts": "1599238621.165800"
            },
            {
                "user": "US370TRJA",
                "ts": "1599239440.174900"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1599247702.175700"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "cEow",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Not mine, but I thought the demo was compelling. Using a visual spreadsheet interface to generate python pandas data cleaning code. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/trymito.io\/",
                                "text": "https:\/\/trymito.io\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UAJKEBGP8",
                    "U013ZLJARC7"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1599238579.165200",
        "client_msg_id": "1a5d2ce5-c2bf-49b4-8386-b31b12a3c013",
        "text": "oo we kept talking about building something like this at my last job (I used to work for an online learning platform focused on data science and we taught pandas a lot)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599238375.165000",
        "parent_user_id": "US370TRJA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "f9h",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oo we kept talking about building something like this at my last job (I used to work for an online learning platform focused on data science and we taught pandas a lot)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1599238589.165400",
        "client_msg_id": "3602300b-cefd-4464-b46d-c4b41bfdbf22",
        "text": "we wanted to help lower the ramp from “I can’t code” -&gt; “pandas”",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599238375.165000",
        "parent_user_id": "US370TRJA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L+quV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "we wanted to help lower the ramp from “I can’t code” -> “pandas”"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1599238610.165600",
        "client_msg_id": "180f5ad3-7851-473d-bc96-981527fc94d6",
        "text": "but this is neat b\/c so much of databases, spreadsheets, and pandas dataframes are just simple groupbys, counts, etc",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599238375.165000",
        "parent_user_id": "US370TRJA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "IOMQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "but this is neat b\/c so much of databases, spreadsheets, and pandas dataframes are just simple groupbys, counts, etc"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heavy_plus_sign",
                "users": [
                    "US370TRJA",
                    "U01A1C2K8MP"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UAJKEBGP8",
        "type": "message",
        "ts": "1599238621.165800",
        "client_msg_id": "6a03a924-afbc-46f9-8269-df4f0f226c21",
        "text": "we have the same ideas &amp; transforms repeated everywhere \/ inevery tool!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "72578ab3b4f8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-10-09\/2610495978720_72578ab3b4f8ab9ef250_72.jpg",
            "first_name": "Srini",
            "real_name": "Srini K",
            "display_name": "Srini K",
            "team": "T5TCAFTA9",
            "name": "skadamat",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599238375.165000",
        "parent_user_id": "US370TRJA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "i=d4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "we have the same ideas & transforms repeated everywhere \/ inevery tool!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "US370TRJA",
        "type": "message",
        "ts": "1599239440.174900",
        "edited": {
            "user": "US370TRJA",
            "ts": "1599239559.000000"
        },
        "client_msg_id": "C068CED3-A212-4316-A04F-938AE12E5E52",
        "text": "I haven’t tried them yet but 2 peer products in this space (some form of GUI wrapper around data ops that lets you export the generated code are  <https:\/\/bamboolib.8080labs.com\/|https:\/\/bamboolib.8080labs.com\/> for Python and <https:\/\/exploratory.io\/|https:\/\/exploratory.io\/> for R). I like their focus on the familiar spreadsheet metaphor. I’m reminded of the google \n\nI haven’t done a head to head comparison of this type of tool, so I’m hoping this post gets them some early users + surfaces related projects people have heard of\/and or presently find useful.\n\nSeparately, I’m hoping to see more of these visual abstraction tools let people edit some underlying generated code with more options that may not necessarily be exposed\/inferred - I see the google sheets “smart fill” feature’s decision to let users edit the generated formula as a good step in that direction. <https:\/\/9to5google.com\/2020\/06\/30\/google-sheets-smart-fill\/|https:\/\/9to5google.com\/2020\/06\/30\/google-sheets-smart-fill\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g8449ebbf703",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/8449ebbf703fcee4e1eadc3e78478f01.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0026-72.png",
            "first_name": "Cameron",
            "real_name": "Cameron Yick",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "cameron.yick",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599238375.165000",
        "parent_user_id": "US370TRJA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "olFb",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I haven’t tried them yet but 2 peer products in this space (some form of GUI wrapper around data ops that lets you export the generated code are  "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/bamboolib.8080labs.com\/",
                                "text": "https:\/\/bamboolib.8080labs.com\/"
                            },
                            {
                                "type": "text",
                                "text": " for Python and "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/exploratory.io\/",
                                "text": "https:\/\/exploratory.io\/"
                            },
                            {
                                "type": "text",
                                "text": " for R). I like their focus on the familiar spreadsheet metaphor. I’m reminded of the google \n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "I haven’t done a head to head comparison of this type of tool, so I’m hoping this post gets them some early users + surfaces related projects people have heard of\/and or presently find useful.\n"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Separately, I’m hoping to see more of these visual abstraction tools let people edit some underlying generated code with more options that may not necessarily be exposed\/inferred - I see the google sheets “smart fill” feature’s decision to let users edit the generated formula as a good step in that direction. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/9to5google.com\/2020\/06\/30\/google-sheets-smart-fill\/",
                                "text": "https:\/\/9to5google.com\/2020\/06\/30\/google-sheets-smart-fill\/"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1599247702.175700",
        "client_msg_id": "efcbbdbf-7d9b-4269-ab55-e091dea07cd0",
        "text": "Nice! Around 30 years ago there was a movement called _<https:\/\/en.wikipedia.org\/wiki\/Programming_by_example|Programming by Example>_ (PBE) that tried to find a generalization of this pattern for a variety of programming tasks. I'd love to see people revisit that work with modern compute power and neural network architectures. (An early 90s history of the word can be found <http:\/\/acypher.com\/wwid\/WWIDToC.html|here>, a sequel by a different researcher <http:\/\/web.media.mit.edu\/~lieber\/Your-Wish\/|here>. Many familiar names contributed essays: Larry Tesler, Brad Myers, &amp;c.)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1599238375.165000",
        "parent_user_id": "US370TRJA",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xijw",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Nice! Around 30 years ago there was a movement called "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Programming_by_example",
                                "text": "Programming by Example",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (PBE) that tried to find a generalization of this pattern for a variety of programming tasks. I'd love to see people revisit that work with modern compute power and neural network architectures. (An early 90s history of the word can be found "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/acypher.com\/wwid\/WWIDToC.html",
                                "text": "here"
                            },
                            {
                                "type": "text",
                                "text": ", a sequel by a different researcher "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/web.media.mit.edu\/~lieber\/Your-Wish\/",
                                "text": "here"
                            },
                            {
                                "type": "text",
                                "text": ". Many familiar names contributed essays: Larry Tesler, Brad Myers, &c.)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart_eyes",
                "users": [
                    "USH01JEDQ",
                    "US370TRJA",
                    "UF6RLAL7J"
                ],
                "count": 3
            },
            {
                "name": "star",
                "users": [
                    "USH01JEDQ",
                    "UF6RLAL7J"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "U01A1C2K8MP",
        "type": "message",
        "ts": "1599250941.176300",
        "client_msg_id": "104592e8-ea92-4800-8c77-f7c896f6985f",
        "text": "Off-topic <@UBKNXPBAB>, but I just watched your demo video for PANE and thought it was fantastic. Very thought provoking.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gd4b24603815",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/d4b246038154d7cc2363256bd25a4fe0.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0014-72.png",
            "first_name": "",
            "real_name": "larry",
            "display_name": "larry",
            "team": "T5TCAFTA9",
            "name": "ljw1001",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598126579.060300",
        "parent_user_id": "UBKNXPBAB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L3tWC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Off-topic "
                            },
                            {
                                "type": "user",
                                "user_id": "UBKNXPBAB"
                            },
                            {
                                "type": "text",
                                "text": ", but I just watched your demo video for PANE and thought it was fantastic. Very thought provoking."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U019W8A1884",
        "type": "message",
        "ts": "1599260691.176500",
        "client_msg_id": "be80ef51-368f-40f6-886b-d3e8799116b1",
        "text": "<@UJBAJNFLK> look at the top of the source for the notion-clone code. root wraps some data-declared events and dispatches them to a transaction function. You should be able to find it, the source is quite small: only two files, really. root.impl.core and root.impl.resolver contain most of the functionality.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9d297317a647",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-08-28\/1327009683269_9d297317a647a021921f_72.jpg",
            "first_name": "",
            "real_name": "Dennis Heihoff",
            "display_name": "Dennis Heihoff",
            "team": "T5TCAFTA9",
            "name": "kalavox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598634636.121900",
        "parent_user_id": "U019W8A1884",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xw+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " look at the top of the source for the notion-clone code. root wraps some data-declared events and dispatches them to a transaction function. You should be able to find it, the source is quite small: only two files, really. root.impl.core and root.impl.resolver contain most of the functionality."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U019W8A1884",
        "type": "message",
        "ts": "1599260864.176700",
        "client_msg_id": "746e46ea-37ba-4fa4-bf10-a5cbd95cab98",
        "text": "one caveat, I’ve currently disabled the auto-wrapping of event-handlers because it led react to re-render on anonymous handler-fn-redefinitions (no function equality). However, I realized this is easy to fix with: <https:\/\/github.com\/reagent-project\/reagent\/blob\/ea42671d832be77acabe012df6386cd5d34d5ac1\/src\/reagent\/core.cljs#L348-L351>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "9d297317a647",
            "image_72": "https:\/\/avatars.slack-edge.com\/2020-08-28\/1327009683269_9d297317a647a021921f_72.jpg",
            "first_name": "",
            "real_name": "Dennis Heihoff",
            "display_name": "Dennis Heihoff",
            "team": "T5TCAFTA9",
            "name": "kalavox",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598634636.121900",
        "parent_user_id": "U019W8A1884",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "reagent-project\/reagent",
                "title_link": "https:\/\/github.com\/reagent-project\/reagent\/blob\/ea42671d832be77acabe012df6386cd5d34d5ac1\/src\/reagent\/core.cljs#L348-L351",
                "text": "A minimalistic ClojureScript interface to React.js - reagent-project\/reagent",
                "fallback": "GitHub: reagent-project\/reagent",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/9254615?s=400&v=4",
                "from_url": "https:\/\/github.com\/reagent-project\/reagent\/blob\/ea42671d832be77acabe012df6386cd5d34d5ac1\/src\/reagent\/core.cljs#L348-L351",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/github.png",
                "id": 1,
                "original_url": "https:\/\/github.com\/reagent-project\/reagent\/blob\/ea42671d832be77acabe012df6386cd5d34d5ac1\/src\/reagent\/core.cljs#L348-L351"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hgfD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "one caveat, I’ve currently disabled the auto-wrapping of event-handlers because it led react to re-render on anonymous handler-fn-redefinitions (no function equality). However, I realized this is easy to fix with: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/reagent-project\/reagent\/blob\/ea42671d832be77acabe012df6386cd5d34d5ac1\/src\/reagent\/core.cljs#L348-L351"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1599282889.177000",
        "client_msg_id": "90ef995b-ce9c-4fba-8a13-5cf22ca8774b",
        "text": "Thanks <@U01A1C2K8MP>! I appreciate the kind words. :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1598126579.060300",
        "parent_user_id": "UBKNXPBAB",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "E=3hy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U01A1C2K8MP"
                            },
                            {
                                "type": "text",
                                "text": "! I appreciate the kind words. "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]