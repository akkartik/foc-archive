[
    {
        "user": "UM7034QUQ",
        "type": "message",
        "ts": "1675239762.485179",
        "client_msg_id": "ec4f9a95-e4c2-4e2d-87d8-f472d56704d7",
        "text": "Heya, small demo showing sync between nodysseus instances. While this is on a desktop, it also works between two different devices so long as they are online at the same time <https:\/\/youtu.be\/BhbF7RrVjlw|https:\/\/youtu.be\/BhbF7RrVjlw>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5e9f304f291",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/05e9f304f29113e7155df3ab1f1d21e8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Ulysses Popple",
            "display_name": "Ulysses Popple",
            "team": "T5TCAFTA9",
            "name": "ulysses.popple",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675239762.485179",
        "reply_count": 5,
        "reply_users_count": 3,
        "latest_reply": "1675282133.082959",
        "reply_users": [
            "U018S42NMMM",
            "U02U0AS3J49",
            "UM7034QUQ"
        ],
        "replies": [
            {
                "user": "U018S42NMMM",
                "ts": "1675262257.391119"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1675279493.457219"
            },
            {
                "user": "UM7034QUQ",
                "ts": "1675282033.420779"
            },
            {
                "user": "UM7034QUQ",
                "ts": "1675282105.955379"
            },
            {
                "user": "UM7034QUQ",
                "ts": "1675282133.082959"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "attachments": [
            {
                "from_url": "https:\/\/youtu.be\/BhbF7RrVjlw",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/BhbF7RrVjlw\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/BhbF7RrVjlw?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"Nodysseus sync\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/BhbF7RrVjlw",
                "fallback": "YouTube Video: Nodysseus sync",
                "title": "Nodysseus sync",
                "title_link": "https:\/\/youtu.be\/BhbF7RrVjlw",
                "author_name": "Ulysses Popple",
                "author_link": "https:\/\/www.youtube.com\/@UlyssesPopple",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "wDuy",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Heya, small demo showing sync between nodysseus instances. While this is on a desktop, it also works between two different devices so long as they are online at the same time "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/BhbF7RrVjlw",
                                "text": "https:\/\/youtu.be\/BhbF7RrVjlw"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1675247100.935179",
        "client_msg_id": "1493065f-3045-4aee-8b40-0bc55817b420",
        "text": "<@U04MAEU6VHN> My favorite example of a domain-specific type system is dimensional analysis in science and engineering (<https:\/\/en.wikipedia.org\/wiki\/Dimensional_analysis>). It illustrates the general characteristics of domain-specific typing: (1) types apply to some but not all data\/variables in a program and (2) each piece of data and each variable can have types from another type system as well.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675140821.935599",
        "parent_user_id": "U04MAEU6VHN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "A+3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U04MAEU6VHN"
                            },
                            {
                                "type": "text",
                                "text": " My favorite example of a domain-specific type system is dimensional analysis in science and engineering ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/en.wikipedia.org\/wiki\/Dimensional_analysis"
                            },
                            {
                                "type": "text",
                                "text": "). It illustrates the general characteristics of domain-specific typing: (1) types apply to some but not all data\/variables in a program and (2) each piece of data and each variable can have types from another type system as well."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U79HM6726",
        "type": "message",
        "ts": "1675258439.547849",
        "edited": {
            "user": "U79HM6726",
            "ts": "1675258545.000000"
        },
        "client_msg_id": "c05ebbf3-8b2f-42c2-b239-41a3f75ca8e3",
        "text": "Regarding:\n&gt; *Prior Art*\n&gt; *…*\n&gt; I don’t know if they [Lamdu] store the inferred types in the syntax tree, or if they re-compute them on every edit.\nLamdu does a combination:\n• For every definition (global variable\/function) it stores the types of every definition that it used, so that if that definition changes its old type is still used for inference until a manual (and informative!) “update type” action\n• Inside the definition it does re-infer it on every edit, and an edit that would had resulted in an error in a normal language gets inserted as wrapped in a “fragment” (aka “non-empty hole” which was our old term and was also adopted by Hazel)\nAnd btw, Lamdu also has the option to mark the new usage with fragment as the correct one and push the error to other parts of the code.\n\nIt’s all explained\/demonstrated in more detail here: <https:\/\/youtu.be\/viF1bVTOO6k>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4ac39488e9c",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/24ac39488e9c4f2833d087a1343707dc.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Yair Chuchem",
            "display_name": "yairchu",
            "team": "T5TCAFTA9",
            "name": "yairchu",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675140821.935599",
        "parent_user_id": "U04MAEU6VHN",
        "attachments": [
            {
                "from_url": "https:\/\/youtu.be\/viF1bVTOO6k",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/viF1bVTOO6k\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/viF1bVTOO6k?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen title=\"Steady Typing\"><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/viF1bVTOO6k",
                "fallback": "YouTube Video: Steady Typing",
                "title": "Steady Typing",
                "title_link": "https:\/\/youtu.be\/viF1bVTOO6k",
                "author_name": "Lamdu",
                "author_link": "https:\/\/www.youtube.com\/@Lamdu",
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OR0D",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Regarding:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Prior Art",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "…",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "\nI don’t know if they [Lamdu] store the inferred types in the syntax tree, or if they re-compute them on every edit."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nLamdu does a combination:\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "For every definition (global variable\/function) it stores the types of every definition that it used, so that if that definition changes its old type is still used for inference until a manual (and informative!) “update type” action"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Inside the definition it does re-infer it on every edit, and an edit that would had resulted in an error in a normal language gets inserted as wrapped in a “fragment” (aka “non-empty hole” which was our old term and was also adopted by Hazel)"
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0,
                        "border": 0
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nAnd btw, Lamdu also has the option to mark the new usage with fragment as the correct one and push the error to other parts of the code.\n\nIt’s all explained\/demonstrated in more detail here: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/viF1bVTOO6k"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04MAEU6VHN",
        "type": "message",
        "ts": "1675258855.596559",
        "client_msg_id": "271b0556-7cb0-48f7-b253-ae00744e4355",
        "text": "oh fantastic, thanks <@U79HM6726> for the more info! exactly what I was hoping for :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43e7ef32ef6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-01-25\/4713451001249_43e7ef32ef6c84455dbd_72.jpg",
            "first_name": "Jared",
            "real_name": "Jared Forsyth",
            "display_name": "Jared Forsyth",
            "team": "T5TCAFTA9",
            "name": "jabapyth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675140821.935599",
        "parent_user_id": "U04MAEU6VHN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4sj1G",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "oh fantastic, thanks "
                            },
                            {
                                "type": "user",
                                "user_id": "U79HM6726"
                            },
                            {
                                "type": "text",
                                "text": " for the more info! exactly what I was hoping for "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04MAEU6VHN",
        "type": "message",
        "ts": "1675259012.544649",
        "client_msg_id": "4465e04f-408d-4cc3-9342-f91bc88f72ba",
        "text": "<@U0296ACR13M> If there's the possibility of ambiguity, always ask the user! Also, adding a new function *never* changes previously defined code.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43e7ef32ef6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-01-25\/4713451001249_43e7ef32ef6c84455dbd_72.jpg",
            "first_name": "Jared",
            "real_name": "Jared Forsyth",
            "display_name": "Jared Forsyth",
            "team": "T5TCAFTA9",
            "name": "jabapyth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675140821.935599",
        "parent_user_id": "U04MAEU6VHN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4Fbzk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U0296ACR13M"
                            },
                            {
                                "type": "text",
                                "text": " If there's the possibility of ambiguity, always ask the user! Also, adding a new function "
                            },
                            {
                                "type": "text",
                                "text": "never",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " changes previously defined code."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U0296ACR13M",
        "type": "message",
        "ts": "1675260029.611249",
        "client_msg_id": "f48c529c-f140-4076-8457-1f971207803f",
        "text": "So in my example, user would have to go through all the calls to a previous overload and select the correct one? Could be quite a bit of work in a big codebase.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "59de929720a2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-09-08\/4075674207584_59de929720a2fe0a13d8_72.jpg",
            "first_name": "",
            "real_name": "Jarno Montonen",
            "display_name": "Jarno Montonen",
            "team": "T5TCAFTA9",
            "name": "jarno.montonen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675140821.935599",
        "parent_user_id": "U04MAEU6VHN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x18IA",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So in my example, user would have to go through all the calls to a previous overload and select the correct one? Could be quite a bit of work in a big codebase."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04MAEU6VHN",
        "type": "message",
        "ts": "1675261498.757329",
        "edited": {
            "user": "U04MAEU6VHN",
            "ts": "1675261520.000000"
        },
        "client_msg_id": "05fd1f61-7223-445e-8d06-d5d7fa464abc",
        "text": "If you actually want to change the behavior of all of your code, it will take some work, yes :smile:  there'll be automated assistance however, that will allow you to \"re-base\" existing functions onto a new function (or indeed a changed definition of a previous function), while running any relevant tests. hash-based identification is definitely a different paradigm. By default, the behavior of a function is deeply immutable, but there are tools to migrate changes broadly if that is what you want.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43e7ef32ef6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-01-25\/4713451001249_43e7ef32ef6c84455dbd_72.jpg",
            "first_name": "Jared",
            "real_name": "Jared Forsyth",
            "display_name": "Jared Forsyth",
            "team": "T5TCAFTA9",
            "name": "jabapyth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675140821.935599",
        "parent_user_id": "U04MAEU6VHN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UZ2t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "If you actually want to change the behavior of all of your code, it will take some work, yes "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "  there'll be automated assistance however, that will allow you to \"re-base\" existing functions onto a new function (or indeed a changed definition of a previous function), while running any relevant tests. hash-based identification is definitely a different paradigm. By default, the behavior of a function is deeply immutable, but there are tools to migrate changes broadly if that is what you want."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0296ACR13M"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U04MAEU6VHN",
        "type": "message",
        "ts": "1675261620.920069",
        "client_msg_id": "7c950932-25b2-45d2-8f7d-3776a6a4dce0",
        "text": "You can think of it as pull-based vs push-based. The current general mode is pull-based (everything always auto-updates dependencies), but jerd (which takes inspiration from unison) is push-based (dependency updates are explicit). We're used to that pattern in external dependencies, and here it's applied to internal ones as well.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43e7ef32ef6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-01-25\/4713451001249_43e7ef32ef6c84455dbd_72.jpg",
            "first_name": "Jared",
            "real_name": "Jared Forsyth",
            "display_name": "Jared Forsyth",
            "team": "T5TCAFTA9",
            "name": "jabapyth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675140821.935599",
        "parent_user_id": "U04MAEU6VHN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9E8np",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You can think of it as pull-based vs push-based. The current general mode is pull-based (everything always auto-updates dependencies), but jerd (which takes inspiration from unison) is push-based (dependency updates are explicit). We're used to that pattern in external dependencies, and here it's applied to internal ones as well."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U79HM6726"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U018S42NMMM",
        "type": "message",
        "ts": "1675262257.391119",
        "client_msg_id": "1a3648bf-1144-4c28-9e51-75e3fa795868",
        "text": "I don't understand. What does this tool do?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "972d4c887a7c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-10\/4782052692709_972d4c887a7c689aae4a_72.jpg",
            "first_name": "",
            "real_name": "Nilesh Trivedi",
            "display_name": "Nilesh Trivedi",
            "team": "T5TCAFTA9",
            "name": "nilesh.tr",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675239762.485179",
        "parent_user_id": "UM7034QUQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "OKf4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't understand. What does this tool do?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U04MAEU6VHN",
        "type": "message",
        "ts": "1675265095.798459",
        "client_msg_id": "6d8b0bdc-c1f7-4ac3-b4d5-462225ba37e0",
        "text": "(this is all experimental of course, it may well turn out that operating this way is prohibitively annoying :sweat_smile: )",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "43e7ef32ef6c",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-01-25\/4713451001249_43e7ef32ef6c84455dbd_72.jpg",
            "first_name": "Jared",
            "real_name": "Jared Forsyth",
            "display_name": "Jared Forsyth",
            "team": "T5TCAFTA9",
            "name": "jabapyth",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675140821.935599",
        "parent_user_id": "U04MAEU6VHN",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8U4",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "(this is all experimental of course, it may well turn out that operating this way is prohibitively annoying "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            },
                            {
                                "type": "text",
                                "text": " )"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1675279493.457219",
        "client_msg_id": "72b64f80-a360-417e-80dc-041de7b5a007",
        "text": "Live collaboration over a graph, like Google Docs allows over a text document?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675239762.485179",
        "parent_user_id": "UM7034QUQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "L7FK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Live collaboration over a graph, like Google Docs allows over a text document?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UM7034QUQ",
        "type": "message",
        "ts": "1675282033.420779",
        "client_msg_id": "d886b347-ebc4-4142-82b2-2bb58d3608d7",
        "text": "It's a node-based wrapper around javascript. In this example, you can see the html_element changing in the bottom left. There are also threejs and other library wrappers, but ultimately it can do whatever is possible in the environment it's running (in this case a browser).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5e9f304f291",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/05e9f304f29113e7155df3ab1f1d21e8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Ulysses Popple",
            "display_name": "Ulysses Popple",
            "team": "T5TCAFTA9",
            "name": "ulysses.popple",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675239762.485179",
        "parent_user_id": "UM7034QUQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k\/Ok",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It's a node-based wrapper around javascript. In this example, you can see the html_element changing in the bottom left. There are also threejs and other library wrappers, but ultimately it can do whatever is possible in the environment it's running (in this case a browser)."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "clap",
                "users": [
                    "U018S42NMMM"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UM7034QUQ",
        "type": "message",
        "ts": "1675282105.955379",
        "client_msg_id": "213e331c-b58c-4d8f-9547-cd647a44940b",
        "text": "Yup! Live collaboration on a graph, but that graph represents code which is running in both browsers.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5e9f304f291",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/05e9f304f29113e7155df3ab1f1d21e8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Ulysses Popple",
            "display_name": "Ulysses Popple",
            "team": "T5TCAFTA9",
            "name": "ulysses.popple",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675239762.485179",
        "parent_user_id": "UM7034QUQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "GNs",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yup! Live collaboration on a graph, but that graph represents code which is running in both browsers."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UM7034QUQ",
        "type": "message",
        "ts": "1675282133.082959",
        "client_msg_id": "91e595f9-60f9-48a7-82ad-09d91b299c27",
        "text": "Using yjs, a crdt algorithm under the hood.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5e9f304f291",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/05e9f304f29113e7155df3ab1f1d21e8.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0002-72.png",
            "first_name": "",
            "real_name": "Ulysses Popple",
            "display_name": "Ulysses Popple",
            "team": "T5TCAFTA9",
            "name": "ulysses.popple",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1675239762.485179",
        "parent_user_id": "UM7034QUQ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "jgsg3",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Using yjs, a crdt algorithm under the hood."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]