[
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1614366089.029100",
        "client_msg_id": "51ecc7fc-83ba-4e46-ab1c-11a1dbffa90d",
        "text": "What \"How to create your own programming language\" tutorial\/resource would you point somebody to, who is not doing it for the first time, roughly knows what they're doing, and is looking for insights on how to do it well?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614366089.029100",
        "reply_count": 22,
        "reply_users_count": 9,
        "latest_reply": "1616644266.002300",
        "reply_users": [
            "UFB8STN7K",
            "U5STGTB3J",
            "UDQBTJ211",
            "UCGAK10LS",
            "UN9SCH5RD",
            "UEDDR6L5Q",
            "UL5AX4G2H",
            "UAVCC2X70",
            "U01L1TTFP62"
        ],
        "replies": [
            {
                "user": "UFB8STN7K",
                "ts": "1614366159.029200"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1614366278.029400"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1614367285.029700"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1614367472.030100"
            },
            {
                "user": "UFB8STN7K",
                "ts": "1614367640.030300"
            },
            {
                "user": "UDQBTJ211",
                "ts": "1614371085.030800"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1614379551.034200"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1614379721.036600"
            },
            {
                "user": "UCGAK10LS",
                "ts": "1614380175.037200"
            },
            {
                "user": "UN9SCH5RD",
                "ts": "1614393052.037800"
            },
            {
                "user": "UN9SCH5RD",
                "ts": "1614393591.038300"
            },
            {
                "user": "UEDDR6L5Q",
                "ts": "1614422932.038500"
            },
            {
                "user": "UEDDR6L5Q",
                "ts": "1614423303.038900"
            },
            {
                "user": "UEDDR6L5Q",
                "ts": "1614424245.039100"
            },
            {
                "user": "UL5AX4G2H",
                "ts": "1614444803.039300"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1614458267.039500"
            },
            {
                "user": "UEDDR6L5Q",
                "ts": "1614458647.039900"
            },
            {
                "user": "UAVCC2X70",
                "ts": "1614459125.040600"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1614771284.041900"
            },
            {
                "user": "U5STGTB3J",
                "ts": "1615372144.011000"
            },
            {
                "user": "U01L1TTFP62",
                "ts": "1616643589.002100"
            },
            {
                "user": "UN9SCH5RD",
                "ts": "1616644266.002300"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "BJ1",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What \"How to create your own programming language\" tutorial\/resource would you point somebody to, who is not doing it for the first time, roughly knows what they're doing, and is looking for insights on how to do it well?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1614366159.029200",
        "client_msg_id": "2fd7e221-794d-48e9-9a49-fe71a8567b91",
        "text": "What kind of programming language are you planning to build?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614366089.029100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "h3YT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "What kind of programming language are you planning to build?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1614366278.029400",
        "client_msg_id": "9d8a9b3b-d716-4243-ac95-9992787a63e5",
        "text": "My own recommendation would be <https:\/\/craftinginterpreters.com>, but that's more of a \"first time\" intro. Although you get to build both an interpreter and a compiler + vm, which I think is more advanced (and more what I'm after here). What I also like is that he explains everything without any dependencies required.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614366089.029100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kPnZ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "My own recommendation would be "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/craftinginterpreters.com"
                            },
                            {
                                "type": "text",
                                "text": ", but that's more of a \"first time\" intro. Although you get to build both an interpreter and a compiler + vm, which I think is more advanced (and more what I'm after here). What I also like is that he explains everything without any dependencies required."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UUB7RA7PF"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1614367285.029700",
        "edited": {
            "user": "U5STGTB3J",
            "ts": "1614367305.000000"
        },
        "client_msg_id": "b7df7ea0-8b74-48e4-9761-d038fd349bb6",
        "text": "<@UFB8STN7K> Appreciate you asking that — we software people are often quick with offering solutions before really understanding the problem… the thing is, in this case I'm actually looking for a wide variety of different solutions, because I can't describe my problem well. Yet.\n\nI'm looking for different perspectives on how language implementors split that problem into different parts and why. Do you write an interpreter or a compiler? Do you hook into something like LLVM? Do you use a virtual machine? Do you explicitly design for multiple stages\/passes (tower of interpreters-style)?\n\nMaybe \"tutorial\" is framing it the wrong way and I'm more looking for design documents and field reports; something like <https:\/\/www.goodreads.com\/book\/show\/1168500.LISP_in_Small_Pieces> or <https:\/\/www.lua.org\/doc\/jucs05.pdf>.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614366089.029100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "No5gT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UFB8STN7K"
                            },
                            {
                                "type": "text",
                                "text": " Appreciate you asking that — we software people are often quick with offering solutions before really understanding the problem… the thing is, in this case I'm actually looking for a wide variety of different solutions, because I can't describe my problem well. Yet.\n\nI'm looking for different perspectives on how language implementors split that problem into different parts and why. Do you write an interpreter or a compiler? Do you hook into something like LLVM? Do you use a virtual machine? Do you explicitly design for multiple stages\/passes (tower of interpreters-style)?\n\nMaybe \"tutorial\" is framing it the wrong way and I'm more looking for design documents and field reports; something like "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.goodreads.com\/book\/show\/1168500.LISP_in_Small_Pieces"
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.lua.org\/doc\/jucs05.pdf"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U5STGTB3J",
        "type": "message",
        "ts": "1614367472.030100",
        "client_msg_id": "c430c9cb-00c7-4161-97f1-b6dd5c6264b8",
        "text": "I'm particularly interested in the separation of the \"static\" and \"dynamic\" parts and implementations that make conscious design decisions to split them up and have well-defined interfaces between them. So an interpreter-based language would less likely qualify than a compiler+vm approach.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "649181907e06",
            "image_72": "https:\/\/avatars.slack-edge.com\/2017-08-20\/228447816352_649181907e06ec450c64_72.jpg",
            "first_name": "Stefan",
            "real_name": "Stefan Lesser",
            "display_name": "Stefan",
            "team": "T5TCAFTA9",
            "name": "stefanlesser",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614366089.029100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "9X3bu",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm particularly interested in the separation of the \"static\" and \"dynamic\" parts and implementations that make conscious design decisions to split them up and have well-defined interfaces between them. So an interpreter-based language would less likely qualify than a compiler+vm approach."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1614367640.030300",
        "edited": {
            "user": "UFB8STN7K",
            "ts": "1614367646.000000"
        },
        "client_msg_id": "d7600f04-7f42-4856-9341-ff9c388f8517",
        "text": "The best resource I’ve found for the high-level design decisions of programming languages is HOPL proceedings. <https:\/\/hopl4.sigplan.org\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614366089.029100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "P8dAq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The best resource I’ve found for the high-level design decisions of programming languages is HOPL proceedings. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/hopl4.sigplan.org\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U5STGTB3J",
                    "UML4ZEKDK",
                    "UCUNN529Y",
                    "U0112C10V4Y"
                ],
                "count": 4
            }
        ]
    },
    {
        "user": "UDQBTJ211",
        "type": "message",
        "ts": "1614371085.030800",
        "client_msg_id": "73eeb8e3-b182-4cdc-9ce3-ba4cb09d446e",
        "text": "You mentioned LLVM - they have a tutorial that walks you through implementing a simple PL (\"Kaleidoscope\"); <https:\/\/llvm.org\/docs\/tutorial\/MyFirstLanguageFrontend\/index.html>\n\nI haven't done it yet but am planning to in the next few weeks so can report back then",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "2624b1e78c0a",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-14\/551655871797_2624b1e78c0a9eaed529_72.jpg",
            "first_name": "Chris",
            "real_name": "Chris Knott",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "chrisknott",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614366089.029100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "JTC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "You mentioned LLVM - they have a tutorial that walks you through implementing a simple PL (\"Kaleidoscope\"); "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/llvm.org\/docs\/tutorial\/MyFirstLanguageFrontend\/index.html"
                            },
                            {
                                "type": "text",
                                "text": "\n\nI haven't done it yet but am planning to in the next few weeks so can report back then"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1614379551.034200",
        "client_msg_id": "51EDE09F-9F29-4FAF-9302-17D74C480D66",
        "text": "FWIW I’m just planning to translate to Wasm bytecode because it’s far simpler than LLVM, and high quality Wasm compilers and JITs exist (and will be a big focus of the next decade).",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614366089.029100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "PnGCv",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FWIW I’m just planning to translate to Wasm bytecode because it’s far simpler than LLVM, and high quality Wasm compilers and JITs exist (and will be a big focus of the next decade)."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1614379721.036600",
        "client_msg_id": "6987A577-D477-47A2-AE2A-5EDC6A8B6CE6",
        "text": "So the resources I need are along the lines of “how do I efficiently map my language to the Wasm VM? (Or similar VMs?)”",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614366089.029100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hOP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "So the resources I need are along the lines of “how do I efficiently map my language to the Wasm VM? (Or similar VMs?)”"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCGAK10LS",
        "type": "message",
        "ts": "1614380175.037200",
        "edited": {
            "user": "UCGAK10LS",
            "ts": "1614393284.000000"
        },
        "client_msg_id": "8f94a727-c4d3-457b-b386-0d7e121e8faf",
        "text": "Because my language is declarative, the challenge is in the *serialization* of the declared computation to a \"sequence of instructions\". For the most part I think this is an *open problem*: there are ideas from existing functional language compilers like \"loop fusion\" and dataflow analyses but I think many of the compilation approaches will depend on the fine details of the language itself. So I'll probably start by reading the literature on FP compilation and then probably have to invent the rest. (Traditional compiler books spend a lot of time on topics like parsing, lexing, type checking, and register allocation, none of which I need: My language isn't based on text files, it doesn't have static types, and Wasm doesn't have registers.)\n\nSo that's my current perspective anyway.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6402e9775ed7",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-04-13\/5095853045814_6402e9775ed73b75334f_72.jpg",
            "first_name": "",
            "real_name": "Nick Smith",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "nmsmith65",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614366089.029100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "F7kft",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Because my language is declarative, the challenge is in the "
                            },
                            {
                                "type": "text",
                                "text": "serialization",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " of the declared computation to a \"sequence of instructions\". For the most part I think this is an "
                            },
                            {
                                "type": "text",
                                "text": "open problem",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ": there are ideas from existing functional language compilers like \"loop fusion\" and dataflow analyses but I think many of the compilation approaches will depend on the fine details of the language itself. So I'll probably start by reading the literature on FP compilation and then probably have to invent the rest. (Traditional compiler books spend a lot of time on topics like parsing, lexing, type checking, and register allocation, none of which I need: My language isn't based on text files, it doesn't have static types, and Wasm doesn't have registers.)\n\nSo that's my current perspective anyway."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9SCH5RD",
        "type": "message",
        "ts": "1614393052.037800",
        "client_msg_id": "032139f9-e054-41ef-8e27-9fa0a7bbf216",
        "text": "<https:\/\/www.oreilly.com\/library\/view\/masterminds-of-programming\/9780596801670\/> is interesting as a high level view of the decision taken by authors of major programming languages",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa31b79aded",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa31b79adedc3f60547769f1a8971ba6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Emmanuel Oga",
            "display_name": "Emmanuel Oga",
            "team": "T5TCAFTA9",
            "name": "emmanueloga",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614366089.029100",
        "parent_user_id": "U5STGTB3J",
        "attachments": [
            {
                "service_name": "O’Reilly Online Learning",
                "title": "Masterminds of Programming",
                "title_link": "https:\/\/www.oreilly.com\/library\/view\/masterminds-of-programming\/9780596801670\/",
                "text": "Masterminds of Programming features exclusive interviews with the creators of several historic and highly influential programming languages. In this unique collection, you'll learn about the processes that led to specific … - Selection from Masterminds of Programming [Book]",
                "fallback": "O’Reilly Online Learning: Masterminds of Programming",
                "thumb_url": "https:\/\/www.oreilly.com\/library\/cover\/9780596801670\/",
                "from_url": "https:\/\/www.oreilly.com\/library\/view\/masterminds-of-programming\/9780596801670\/",
                "thumb_width": 140,
                "thumb_height": 184,
                "service_icon": "https:\/\/www.oreilly.com\/library\/view\/static\/images\/apple-touch-icon.png",
                "id": 1,
                "original_url": "https:\/\/www.oreilly.com\/library\/view\/masterminds-of-programming\/9780596801670\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rF9n",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.oreilly.com\/library\/view\/masterminds-of-programming\/9780596801670\/"
                            },
                            {
                                "type": "text",
                                "text": " is interesting as a high level view of the decision taken by authors of major programming languages"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN9SCH5RD",
        "type": "message",
        "ts": "1614393591.038300",
        "client_msg_id": "828da500-b2b6-4b64-a6bc-d0bd670214f9",
        "text": "<https:\/\/www.amazon.com\/Language-Implementation-Patterns-Domain-Specific-Programming\/dp\/193435645X> has a nice collection of patterns, the scope is not super wide but I think it is a pretty useful resource anyway to get acquainted with a particular way of solving \"language problems\"",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gaa31b79aded",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/aa31b79adedc3f60547769f1a8971ba6.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0015-72.png",
            "first_name": "",
            "real_name": "Emmanuel Oga",
            "display_name": "Emmanuel Oga",
            "team": "T5TCAFTA9",
            "name": "emmanueloga",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614366089.029100",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "zEuKz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/www.amazon.com\/Language-Implementation-Patterns-Domain-Specific-Programming\/dp\/193435645X"
                            },
                            {
                                "type": "text",
                                "text": " has a nice collection of patterns, the scope is not super wide but I think it is a pretty useful resource anyway to get acquainted with a particular way of solving \"language problems\""
                            }
                        ]
                    }
                ]
            }
        ]
    }
]