[
    {
        "user": "USJ899UUD",
        "type": "message",
        "ts": "1614592143.043100",
        "client_msg_id": "97fc2feb-72bc-424b-b9f1-ba8b35674065",
        "text": "<@U01NQ4945N1> —yep, game development background :slightly_smiling_face: Agree with the sentiment that games as software bring something special that could be applied more widely. I see part of it coming from a higher ideal for what user learning\/mastery can be like—especially that we see fluency as a realistic goal, allowing users to reach a point where control of the software becomes nearly an entirely subconscious process (maybe this forces a useful design constraint of non-complexity more strongly than elsewhere in software). There's also a kind of avoiding rough edges and having a base assumption that things will evolve without discontinuity that makes games more interesting \/ pleasant to interact with imo. It's hard to be enthralled by software which is, at least in appearance, largely static after working on games for a while...\n\n&gt;  In TiledText you probably want all lines that you're cycling through to be at full size? But other lines, that are not in the current cycle, could vary?\nI did some experiments along these lines while developing Tiled Text and couldn't find a particular config that wasn't distracting\/disconcerting. But the scales I was playing with were different from your experiment: I was only making relatively small modifications, so I didn't get the interesting \"zoomed out map\" kind of effect shown in your demo.\n\n&gt;  ... but with \"thumbnails\" you wouldn't need to remember.\nAgreed. And the \"thumbnail\" concept is again a very natural fit since the contents of a \"tile\" in Tiled Text is already literally a raster image produced by walking a subtree, so it would be a simple matter to scale it.\n\n&gt; ... because you seem to be already creating exactly the kind of visualization I wanted\nIt's still the kind of visualization I'd like too! Unfortunately I've stopped working on it at least for the near future since I hit a realization that it was going to be impractical for me to finish it on my own in random bits of free time I had e.g. between jobs (basically all the work on it was done during these times), and ran out of ideas for securing funding.\n\nSo there will probably never be an actual release, but I may open source and write a high level guide to the concepts \/ architecture \/ code etc.\n\nThanks for the kind remarks, and I'll keep an eye out for future videos!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gacd8b29c5cd",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/acd8b29c5cd9153ba8f87532661ce874.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0003-72.png",
            "first_name": "",
            "real_name": "westoncb",
            "display_name": "westoncb",
            "team": "T5TCAFTA9",
            "name": "westoncb",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1613861522.005800",
        "parent_user_id": "U01NQ4945N1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "8vyC",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U01NQ4945N1"
                            },
                            {
                                "type": "text",
                                "text": " —yep, game development background "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": " Agree with the sentiment that games as software bring something special that could be applied more widely. I see part of it coming from a higher ideal for what user learning\/mastery can be like—especially that we see fluency as a realistic goal, allowing users to reach a point where control of the software becomes nearly an entirely subconscious process (maybe this forces a useful design constraint of non-complexity more strongly than elsewhere in software). There's also a kind of avoiding rough edges and having a base assumption that things will evolve without discontinuity that makes games more interesting \/ pleasant to interact with imo. It's hard to be enthralled by software which is, at least in appearance, largely static after working on games for a while...\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " In TiledText you probably want all lines that you're cycling through to be at full size? But other lines, that are not in the current cycle, could vary?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nI did some experiments along these lines while developing Tiled Text and couldn't find a particular config that wasn't distracting\/disconcerting. But the scales I was playing with were different from your experiment: I was only making relatively small modifications, so I didn't get the interesting \"zoomed out map\" kind of effect shown in your demo.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " ... but with \"thumbnails\" you wouldn't need to remember."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nAgreed. And the \"thumbnail\" concept is again a very natural fit since the contents of a \"tile\" in Tiled Text is already literally a raster image produced by walking a subtree, so it would be a simple matter to scale it.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "... because you seem to be already creating exactly the kind of visualization I wanted"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nIt's still the kind of visualization I'd like too! Unfortunately I've stopped working on it at least for the near future since I hit a realization that it was going to be impractical for me to finish it on my own in random bits of free time I had e.g. between jobs (basically all the work on it was done during these times), and ran out of ideas for securing funding.\n\nSo there will probably never be an actual release, but I may open source and write a high level guide to the concepts \/ architecture \/ code etc.\n\nThanks for the kind remarks, and I'll keep an eye out for future videos!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UEDDR6L5Q",
        "type": "message",
        "ts": "1614615637.043400",
        "edited": {
            "user": "UEDDR6L5Q",
            "ts": "1614615749.000000"
        },
        "client_msg_id": "50ed4ac0-7568-4d65-9033-b3ad9529e9a0",
        "text": "Thanks! :smile:\n\nYeah that screenshot has been rattling around my head since I first watched Bret Victor's talks. Similar to some of the issues you were describing with Mu, scaling is non-trivial, and I don't think Bret's prototype here scales without a few changes. This is particularly true in my case, where I have added the constraint that all primary information has to communicable without changing the way the editor itself presents the code.\n\n&gt; How does this work with more complex, nested objects &amp; structs?\n1. at the most basic level, the variable names on the left can be expanded to show its members. You can see this happen 1-level deep in the above GIF when I expand `rect`, but this can happen recursively as many times as needed\n2. This is not the only code visualizer in the tool, and others may be more appropriate for complex structures\n3. I'm thinking of adding the option of expanding the timeline so each 1D bar becomes a 2D canvas that can show each value in a more semantically-aware way",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "adf09dea9be2",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-04-20\/1975289475446_adf09dea9be29fa422a0_72.png",
            "first_name": "",
            "real_name": "Andrew Reece",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "azmreece",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1614522053.039300",
        "parent_user_id": "UEDDR6L5Q",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "6N53",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks! "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": "\n\nYeah that screenshot has been rattling around my head since I first watched Bret Victor's talks. Similar to some of the issues you were describing with Mu, scaling is non-trivial, and I don't think Bret's prototype here scales without a few changes. This is particularly true in my case, where I have added the constraint that all primary information has to communicable without changing the way the editor itself presents the code.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "How does this work with more complex, nested objects & structs?"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "at the most basic level, the variable names on the left can be expanded to show its members. You can see this happen 1-level deep in the above GIF when I expand "
                                    },
                                    {
                                        "type": "text",
                                        "text": "rect",
                                        "style": {
                                            "code": true
                                        }
                                    },
                                    {
                                        "type": "text",
                                        "text": ", but this can happen recursively as many times as needed"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "This is not the only code visualizer in the tool, and others may be more appropriate for complex structures"
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "I'm thinking of adding the option of expanding the timeline so each 1D bar becomes a 2D canvas that can show each value in a more semantically-aware way"
                                    }
                                ]
                            }
                        ],
                        "style": "ordered",
                        "indent": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U01KZQEQVUP"
                ],
                "count": 1
            },
            {
                "name": "heart",
                "users": [
                    "U01KZQEQVUP"
                ],
                "count": 1
            }
        ]
    }
]