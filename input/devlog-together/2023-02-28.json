[
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1677629762.002999",
        "edited": {
            "user": "UC2A2ARPT",
            "ts": "1677630266.000000"
        },
        "client_msg_id": "79561535-c558-49cf-8e02-76957121d4ab",
        "text": "Thinking about building some visual programming tools after taking a break for a while. One fun idea that popped up: hybrid text + node-wire environment where you can _wire to the text_. Like, a word in the text can act as a node. Probably been done somewhere, but I haven't seen it, so I'm kinda jamming on the thought. Like, what if Natto but you exploded the frames, brought some of Bret's Tangle in there, little bit of that style of annotating an image+paragraph by coloring a word the same as a corresponding thing in the image. Constants in the text live-update, etc etc.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "trmt",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thinking about building some visual programming tools after taking a break for a while. One fun idea that popped up: hybrid text + node-wire environment where you can "
                            },
                            {
                                "type": "text",
                                "text": "wire to the text",
                                "style": {
                                    "bold": false,
                                    "italic": true,
                                    "strike": false
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Like, a word in the text can act as a node. Probably been done somewhere, but I haven't seen it, so I'm kinda jamming on the thought. Like, what if Natto but you exploded the frames, brought some of Bret's Tangle in there, little bit of that style of annotating an image+paragraph by coloring a word the same as a corresponding thing in the image. Constants in the text live-update, etc etc."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "USH01JEDQ",
                    "U023V63MF6V",
                    "UMQ6LR9NZ",
                    "U013ZLJARC7",
                    "UML4ZEKDK"
                ],
                "count": 5
            },
            {
                "name": "pray",
                "users": [
                    "UMQ6LR9NZ",
                    "UHWC9PXBL",
                    "UA14TGLTC"
                ],
                "count": 3
            },
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD",
                    "U03R0B9U1GD"
                ],
                "count": 2
            },
            {
                "name": "exploding_head",
                "users": [
                    "U03R0B9U1GD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1677633753.693619",
        "client_msg_id": "684717a5-8aca-499a-b590-dc50151fab1a",
        "text": "FWIW - here’s how I think about it...  You are programming a MACHINE. Every bit of syntax has to DO something (have a meaning).  [The meaning of comments is “to be ignored by the machine”.  A lot of other syntactic baubles have that same meaning - e.g. stick people and clouds].  What does it mean to connect a wire to a word?  What happens if you connect that same wire to a different word?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1677633753.693619",
        "reply_count": 12,
        "reply_users_count": 8,
        "latest_reply": "1677848436.311349",
        "reply_users": [
            "UC2A2ARPT",
            "U02U0AS3J49",
            "UMQ6LR9NZ",
            "UCUSW7WVD",
            "UGWUJUZHT",
            "U03R0B9U1GD",
            "UE1JQM9HQ",
            "U017TE5R09M"
        ],
        "replies": [
            {
                "user": "UC2A2ARPT",
                "ts": "1677634251.889409"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1677634515.655399"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1677634603.205609"
            },
            {
                "user": "U02U0AS3J49",
                "ts": "1677634801.283029"
            },
            {
                "user": "UMQ6LR9NZ",
                "ts": "1677635622.132609"
            },
            {
                "user": "UCUSW7WVD",
                "ts": "1677644148.561319"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1677665841.665449"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1677666000.967379"
            },
            {
                "user": "UGWUJUZHT",
                "ts": "1677666072.874489"
            },
            {
                "user": "U03R0B9U1GD",
                "ts": "1677666518.996109"
            },
            {
                "user": "UE1JQM9HQ",
                "ts": "1677736810.584969"
            },
            {
                "user": "U017TE5R09M",
                "ts": "1677848436.311349"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "kRfk2",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FWIW - here’s how I think about it...  You are programming a MACHINE. Every bit of syntax has to DO something (have a meaning).  [The meaning of comments is “to be ignored by the machine”.  A lot of other syntactic baubles have that same meaning - e.g. stick people and clouds].  What does it mean to connect a wire to a word?  What happens if you connect that same wire to a different word?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1677634251.889409",
        "client_msg_id": "DF761846-3162-45FB-AE7A-0554F55A6523",
        "text": "One issue I have with comments is that they are monochromatic \/ monotonous. Not many programming environments let you be expressive with your comments. You can't distinguish a \"what\" comment from a \"why\" comment by any means other than verbose writing or pidgin syntax.\n\nI'm big on finding ways for person-to-person expression within a codebase to be a lot richer.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1677633753.693619",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Gzz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One issue I have with comments is that they are monochromatic \/ monotonous"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Not many programming environments let you be expressive with your comments"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " You can't distinguish a \"what\" comment from a \"why\" comment by any means other than verbose writing or pidgin syntax"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": "\n\nI'm big on finding ways for person-to-person expression within a codebase to be a lot richer"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1677634515.655399",
        "client_msg_id": "248F4368-1185-4CC0-8D4C-F376B11643C8",
        "text": "One reason to allow wiring to text would be that it enables a bit more flexibility as you move between a text paradigm and a node paradigm. Like, let's say you have an existing textual codebase written in some traditional language. You want to use a node-based programming tool to expand on that codebase. If the node tool is smart about integrating with text, it can be layered-in atop the existing text — the text can be incorporated as an element within the new graphical node canvas. Wiring directly to text might be a nice way to make that transition feel more.. node-y.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1677633753.693619",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VsLO",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "One reason to allow wiring to text would be that it enables a bit more flexibility as you move between a text paradigm and a node paradigm"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Like, let's say you have an existing textual codebase written in some traditional language"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " You want to use a node-based programming tool to expand on that codebase"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " If the node tool is smart about integrating with text, it can be layered-in atop the existing text — the text can be incorporated as an element within the new graphical node canvas"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " Wiring directly to text might be a nice way to make that transition feel more.. node-y"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1677634603.205609",
        "client_msg_id": "4CF8E84B-637A-4270-9108-1627EC594016",
        "text": "A common alternative is just treating either the nodes or the text as an FFI, or communicating over some network-like abstraction. That's arms-length. It's invisible.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1677633753.693619",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "qil",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "A common alternative is just treating either the nodes or the text as an FFI, or communicating over some network-like abstraction"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " That's arms-length"
                            },
                            {
                                "type": "text",
                                "text": "."
                            },
                            {
                                "type": "text",
                                "text": " It's invisible"
                            },
                            {
                                "type": "text",
                                "text": "."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U02U0AS3J49",
        "type": "message",
        "ts": "1677634801.283029",
        "client_msg_id": "47274ac3-ffa0-4012-839d-75920e9c1cad",
        "text": "I would like to have better tools for annotating code with its relationships to legal text that it models. I don't need there to be a visual line (though it might not hurt), but I do need a convenient way to create an \"annotation\" which includes disjoint segments of text, where annotations can overlap one another, and can be linked from symbols in the code, so that when I mouse-over the relevant code, the linked sections of text are highlighted, or something. There's a lot of room to improve the way code and text relate to each other. If you could even implement something like that inside Jupyter I think it would be illustrative.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g5247a9c6cbb",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/5247a9c6cbb943683c9e2e2cef6eba79.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0022-72.png",
            "first_name": "Jason",
            "real_name": "Jason Morris",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "jason",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1677633753.693619",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "hBR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would like to have better tools for annotating code with its relationships to legal text that it models. I don't need there to be a visual line (though it might not hurt), but I do need a convenient way to create an \"annotation\" which includes disjoint segments of text, where annotations can overlap one another, and can be linked from symbols in the code, so that when I mouse-over the relevant code, the linked sections of text are highlighted, or something. There's a lot of room to improve the way code and text relate to each other. If you could even implement something like that inside Jupyter I think it would be illustrative."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1677635622.132609",
        "edited": {
            "user": "UMQ6LR9NZ",
            "ts": "1677635785.000000"
        },
        "client_msg_id": "7f9dae33-5b3f-4d57-a8f5-ae6505a4f9de",
        "text": "<@UC2A2ARPT> oh oh oh! I dig this idea a lot! I’ve been playing with a way to allow text\/files to exist in relation to one another — at first I thought about doing this through a bespoke editor, but realized I didn’t wanna reinvent that particular wheel — I was aiming someplace between text files…I didn’t care about how they were generated. I care about finding a way to make multiple text files touch and look at each other and reference each other.\n\nMy mental model for this is something like the talmud, where you’ve got a core text (maybe your executable program) but then all these layers of commentary around it, in orbit. The commentary is held in place by the core text, but may not actually only be about that core text, it is also in context and talking to other commentaries and other pieces of text that are core to other stuff.\n\n…sorta rabbit hole around “all text is hypertext” and pleading with a tool to let it happen.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1677633753.693619",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "3Ll",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " oh oh oh! I dig this idea a lot! I’ve been playing with a way to allow text\/files to exist in relation to one another — at first I thought about doing this through a bespoke editor, but realized I didn’t wanna reinvent that particular wheel — I was aiming someplace between text files…I didn’t care about how they were generated. I care about finding a way to make multiple text files touch and look at each other and reference each other.\n\nMy mental model for this is something like the talmud, where you’ve got a core text (maybe your executable program) but then all these layers of commentary around it, in orbit. The commentary is held in place by the core text, but may not actually only be about that core text, it is also in context and talking to other commentaries and other pieces of text that are core to other stuff.\n\n…sorta rabbit hole around “all text is hypertext” and pleading with a tool to let it happen."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "fire",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1677644148.561319",
        "client_msg_id": "95ff4363-59aa-45c3-9059-9a1179d9bdab",
        "text": "I use 3 different colors for comments, though I hadn't thought to distinguish what from why comments: <https:\/\/news.ycombinator.com\/item?id=21665105#21665366|https:\/\/news.ycombinator.com\/item?id=21665105#21665366>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1677633753.693619",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "di6yg",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I use 3 different colors for comments, though I hadn't thought to distinguish what from why comments: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=21665105#21665366",
                                "text": "https:\/\/news.ycombinator.com\/item?id=21665105#21665366"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "text": "Since I built this, my thoughts have been running in the direction of turning it into a full graph editor.\n\nHowever, all the graphs I want to create also have other constraints. Sometimes I want a sort of activity diagram (<https:\/\/plantuml.com\/activity-diagram-beta|https:\/\/plantuml.com\/activity-diagram-beta>), other times I want some edges always be horizontal and to line up with similar edges.\n\nI've also been thinking about the clunky drawing primitives I chose in <http:\/\/akkartik.name\/lines.html|http:\/\/akkartik.name\/lines.html>. Writing text inside shapes doesn't really work, which is like literally the first thing one might want to do with line drawings.\n\nPutting these thoughts together, I've been imagining a 2-level tool with a tray on the left like in <http:\/\/recursivedrawing.com\/|Recursive Drawing> or <https:\/\/www.inkandswitch.com\/crosscut\/|Crosscut>, where I can draw some primitives into the tool tray and then attach hotkeys to them to compose them into pictures in the main area.",
        "files": [
            {
                "id": "F04RL7V82RL",
                "mode": "hidden_by_limit"
            },
            {
                "id": "F04SGGDGCBS",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "UCUSW7WVD",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZYJK",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Since I built this, my thoughts have been running in the direction of turning it into a full graph editor.\n\nHowever, all the graphs I want to create also have other constraints. Sometimes I want a sort of activity diagram ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/plantuml.com\/activity-diagram-beta",
                                "text": "https:\/\/plantuml.com\/activity-diagram-beta"
                            },
                            {
                                "type": "text",
                                "text": "), other times I want some edges always be horizontal and to line up with similar edges.\n\nI've also been thinking about the clunky drawing primitives I chose in "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/lines.html",
                                "text": "http:\/\/akkartik.name\/lines.html"
                            },
                            {
                                "type": "text",
                                "text": ". Writing text inside shapes doesn't really work, which is like literally the first thing one might want to do with line drawings.\n\nPutting these thoughts together, I've been imagining a 2-level tool with a tray on the left like in "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/recursivedrawing.com\/",
                                "text": "Recursive Drawing"
                            },
                            {
                                "type": "text",
                                "text": " or "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.inkandswitch.com\/crosscut\/",
                                "text": "Crosscut"
                            },
                            {
                                "type": "text",
                                "text": ", where I can draw some primitives into the tool tray and then attach hotkeys to them to compose them into pictures in the main area."
                            }
                        ]
                    }
                ]
            }
        ],
        "subtype": "thread_broadcast",
        "root": {
            "text": "Today I put together a little visualizer for Mastodon threads. The graph layout is nothing special, but:\n• it has structured keyboard shortcuts (up for parent, down for child, left\/right for siblings) which might be more useful for understanding a complex thread\n• as always you can live-edit it so it's hopefully easy to improve\nOne other little integration: opening links in browsers opens up all sorts of cross-platform cans of worms, so I ended up just copying a URL to the clipboard any time you click on a toot.\n\n<https:\/\/git.sr.ht\/~akkartik\/mastodon-unfurl.love>",
            "files": [
                {
                    "id": "F04QNMABSGZ",
                    "mode": "hidden_by_limit"
                }
            ],
            "upload": false,
            "user": "UCUSW7WVD",
            "display_as_bot": false,
            "blocks": [
                {
                    "type": "rich_text",
                    "block_id": "qCDe",
                    "elements": [
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "Today I put together a little visualizer for Mastodon threads. The graph layout is nothing special, but:\n"
                                }
                            ]
                        },
                        {
                            "type": "rich_text_list",
                            "elements": [
                                {
                                    "type": "rich_text_section",
                                    "elements": [
                                        {
                                            "type": "text",
                                            "text": "it has structured keyboard shortcuts (up for parent, down for child, left\/right for siblings) which might be more useful for understanding a complex thread"
                                        }
                                    ]
                                },
                                {
                                    "type": "rich_text_section",
                                    "elements": [
                                        {
                                            "type": "text",
                                            "text": "as always you can live-edit it so it's hopefully easy to improve"
                                        }
                                    ]
                                }
                            ],
                            "style": "bullet",
                            "indent": 0,
                            "border": 0
                        },
                        {
                            "type": "rich_text_section",
                            "elements": [
                                {
                                    "type": "text",
                                    "text": "\nOne other little integration: opening links in browsers opens up all sorts of cross-platform cans of worms, so I ended up just copying a URL to the clipboard any time you click on a toot.\n\n"
                                },
                                {
                                    "type": "link",
                                    "url": "https:\/\/git.sr.ht\/~akkartik\/mastodon-unfurl.love"
                                }
                            ]
                        }
                    ]
                }
            ],
            "type": "message",
            "ts": "1676798153.605919",
            "edited": {
                "user": "UCUSW7WVD",
                "ts": "1676798406.000000"
            },
            "client_msg_id": "dc1208f1-9bed-421d-9f1b-26e67b1bf8f9",
            "thread_ts": "1676798153.605919",
            "reply_count": 6,
            "reply_users_count": 4,
            "latest_reply": "1677695118.929019",
            "reply_users": [
                "UJBAJNFLK",
                "U013ZLJARC7",
                "UCUSW7WVD",
                "U03R0B9U1GD"
            ],
            "replies": [
                {
                    "user": "UJBAJNFLK",
                    "ts": "1676799649.971389"
                },
                {
                    "user": "U013ZLJARC7",
                    "ts": "1676806966.849259"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1677654869.010439"
                },
                {
                    "user": "U03R0B9U1GD",
                    "ts": "1677669176.903009"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1677689546.725739"
                },
                {
                    "user": "UCUSW7WVD",
                    "ts": "1677695118.929019"
                }
            ],
            "is_locked": false,
            "subscribed": false
        },
        "type": "message",
        "ts": "1677654869.010439",
        "edited": {
            "user": "UCUSW7WVD",
            "ts": "1677657240.000000"
        },
        "client_msg_id": "c13a180c-387c-48b6-ac19-8218c9dd6f2d",
        "thread_ts": "1676798153.605919",
        "parent_user_id": "UCUSW7WVD",
        "reactions": [
            {
                "name": "thinking_face",
                "users": [
                    "UC2A2ARPT",
                    "UA14TGLTC"
                ],
                "count": 2
            }
        ]
    }
]