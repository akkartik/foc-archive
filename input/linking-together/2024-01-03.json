[
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1704308309.354909",
        "client_msg_id": "bab1cfe9-d165-43bc-842f-605e09685bf9",
        "text": "I ran across <https:\/\/cassette-lang.com\/|Cassette>, a programming language today. I liked some of the stuff on the webpage and think it is interestingly aligned with the Future of Coding community.\n\n&gt; I made Cassette as a simple language for “playful programming”. Playful programming is writing something for the sake of writing it. It’s making a software 3D renderer or a GIF reader, even though better implementations of those already exist. It’s making generative art programs and drawing them with a pen plotter. Cassette itself is playful programming—there are certainly other scripting languages that may be better for personal projects like these, but this one is mine.\nContinuing,\n\n&gt; *In particular, I wanted Cassette to feel “essential”, where each aspect of the language reflects some fundamental aspect of computing* (from a functional language perspective, at least). For example, I consider garbage collection, lexical scopes, and immutable types essential. The result is a little boring, but I hope it’s a good platform to play with other programming concepts.\n*Emphasis* mine.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704308309.354909",
        "reply_count": 3,
        "reply_users_count": 3,
        "latest_reply": "1704355353.668849",
        "reply_users": [
            "UBKNXPBAB",
            "UMQ6LR9NZ",
            "U013ZLJARC7"
        ],
        "replies": [
            {
                "user": "UBKNXPBAB",
                "ts": "1704312709.111439"
            },
            {
                "user": "UMQ6LR9NZ",
                "ts": "1704312781.986139"
            },
            {
                "user": "U013ZLJARC7",
                "ts": "1704355353.668849"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "g2qsR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I ran across "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/cassette-lang.com\/",
                                "text": "Cassette"
                            },
                            {
                                "type": "text",
                                "text": ", a programming language today. I liked some of the stuff on the webpage and think it is interestingly aligned with the Future of Coding community.\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I made Cassette as a simple language for “playful programming”. Playful programming is writing something for the sake of writing it. It’s making a software 3D renderer or a GIF reader, even though better implementations of those already exist. It’s making generative art programs and drawing them with a pen plotter. Cassette itself is playful programming—there are certainly other scripting languages that may be better for personal projects like these, but this one is mine."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nContinuing,\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": "In particular, I wanted Cassette to feel “essential”, where each aspect of the language reflects some fundamental aspect of computing",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " (from a functional language perspective, at least). For example, I consider garbage collection, lexical scopes, and immutable types essential. The result is a little boring, but I hope it’s a good platform to play with other programming concepts."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\n"
                            },
                            {
                                "type": "text",
                                "text": "Emphasis",
                                "style": {
                                    "bold": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " mine."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U03CEGR3HSL",
                    "U03R0B9U1GD"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UBKNXPBAB",
        "type": "message",
        "ts": "1704312709.111439",
        "client_msg_id": "90e27cbc-2b71-46fd-8e3d-d557418b088b",
        "text": "I’m not sure what the bolded part means. It feels unhelpful as a design principle. I mean, every language designer thinks the things they’re putting into their language are essential; otherwise they wouldn’t be putting them in there. This leaves entirely unresolved how to determine what is and isn’t essential.\n\nThe one way I can see for this principle to be substantive is as a statement of minimalism – excluding conveniences in favor of radical simplicity. But given that the “future work” section of the page includes “Bignum support” and “Destructuring assignment”, it hardly seems that the author is eschewing conveniences! Is destructuring assignment a “fundamental aspect of computing”? If so, what in the world isn’t? If not, how does the bolded statement constrain or guide the design of the language?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7b3bc9e878d6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2024-03-28\/6866700980471_7b3bc9e878d663396caf_72.jpg",
            "first_name": "",
            "real_name": "Joshua Horowitz",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "joshuah",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704308309.354909",
        "parent_user_id": "UMQ6LR9NZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Az6Wz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I’m not sure what the bolded part means. It feels unhelpful as a design principle. I mean, every language designer thinks the things they’re putting into their language are essential; otherwise they wouldn’t be putting them in there. This leaves entirely unresolved how to determine what is and isn’t essential.\n\nThe one way I can see for this principle to be substantive is as a statement of minimalism – excluding conveniences in favor of radical simplicity. But given that the “future work” section of the page includes “Bignum support” and “Destructuring assignment”, it hardly seems that the author is eschewing conveniences! Is destructuring assignment a “fundamental aspect of computing”? If so, what in the world isn’t? If not, how does the bolded statement constrain or guide the design of the language?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U5STGTB3J",
                    "UCUSW7WVD"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UMQ6LR9NZ",
        "type": "message",
        "ts": "1704312781.986139",
        "client_msg_id": "9881940b-11fe-48c0-97f0-ef139b066c8f",
        "text": "For me the _essential_ bit was worth highlighting when taken as _essence_ and _accident_",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf70d12f2630",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/f70d12f2630b6c2a0854e3bef118e73c.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0020-72.png",
            "first_name": "Eli",
            "real_name": "Eli Mellen",
            "display_name": "Eli",
            "team": "T5TCAFTA9",
            "name": "eli.mellen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1704308309.354909",
        "parent_user_id": "UMQ6LR9NZ",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "bg4Eq",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "For me the "
                            },
                            {
                                "type": "text",
                                "text": "essential",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " bit was worth highlighting when taken as "
                            },
                            {
                                "type": "text",
                                "text": "essence ",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": "and "
                            },
                            {
                                "type": "text",
                                "text": "accident",
                                "style": {
                                    "italic": true
                                }
                            }
                        ]
                    }
                ]
            }
        ]
    }
]