[
    {
        "text": "Is Ruby syntax able to come close to optimal for expressing these? ",
        "files": [
            {
                "id": "F08HZ3S46AJ",
                "mode": "hidden_by_limit"
            },
            {
                "id": "F08JG6UJWN5",
                "mode": "hidden_by_limit"
            }
        ],
        "upload": false,
        "user": "U013ZLJARC7",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "VFvzP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Is Ruby syntax able to come close to optimal for expressing th"
                            },
                            {
                                "type": "text",
                                "text": "e"
                            },
                            {
                                "type": "text",
                                "text": "s"
                            },
                            {
                                "type": "text",
                                "text": "e"
                            },
                            {
                                "type": "text",
                                "text": "? "
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1742281588.151989",
        "client_msg_id": "A2C0A02D-ABC9-49B4-8F29-281BE2058A8F",
        "thread_ts": "1742096636.964039",
        "parent_user_id": "UGWUJUZHT"
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1742286358.341989",
        "client_msg_id": "bcce7dfd-7af5-4303-8a94-ce686cc6bf4c",
        "text": "<@UGWUJUZHT> Relevant for editor support: <https:\/\/www.gnu.org\/software\/emacs\/manual\/html_node\/elisp\/Parsing-Expression-Grammars.html|Emacs> (haven't tried this yet).\n\nIt would definitely be nice to have PEG support as ubiquitous as regex support.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1742096636.964039",
        "parent_user_id": "UGWUJUZHT",
        "attachments": [
            {
                "from_url": "https:\/\/www.gnu.org\/software\/emacs\/manual\/html_node\/elisp\/Parsing-Expression-Grammars.html",
                "service_icon": "https:\/\/www.gnu.org\/graphics\/gnu-head-mini.png",
                "id": 1,
                "original_url": "https:\/\/www.gnu.org\/software\/emacs\/manual\/html_node\/elisp\/Parsing-Expression-Grammars.html",
                "fallback": "Parsing Expression Grammars (GNU Emacs Lisp Reference Manual)",
                "text": "Parsing Expression Grammars (GNU Emacs Lisp Reference Manual)",
                "title": "Parsing Expression Grammars (GNU Emacs Lisp Reference Manual)",
                "title_link": "https:\/\/www.gnu.org\/software\/emacs\/manual\/html_node\/elisp\/Parsing-Expression-Grammars.html",
                "service_name": "gnu.org"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "k1kKP",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " Relevant for editor support: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.gnu.org\/software\/emacs\/manual\/html_node\/elisp\/Parsing-Expression-Grammars.html",
                                "text": "Emacs"
                            },
                            {
                                "type": "text",
                                "text": " (haven't tried this yet).\n\nIt would definitely be nice to have PEG support as ubiquitous as regex support."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1742300380.368299",
        "client_msg_id": "a46cf2d3-1b38-4073-9ab6-e6570fd1dfa8",
        "text": "<@UJBAJNFLK> Wonderful! Haha, it never dawned on me to look to see if emacs supported PEG (I shoulda known better :-). I will poke at it some more. Thanks!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1742096636.964039",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "FcvXV",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": " Wonderful! Haha, it never dawned on me to look to see if emacs supported PEG (I shoulda known better :-). I will poke at it some more. Thanks!"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UGWUJUZHT",
        "type": "message",
        "ts": "1742300694.531479",
        "client_msg_id": "0a138263-632d-4840-8ae5-fd2ac4494843",
        "text": "<@U013ZLJARC7> I am interested in looking more at LoP and Mora (or its descendants), but, I'm lazy and have become wary of wading through walls of reference information. Does anything jump out as the best places to start discovering more about these things?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "41a8bada7812",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-02-06\/4754627914258_41a8bada781281751d07_72.jpg",
            "first_name": "",
            "real_name": "Paul Tarvydas",
            "display_name": "guitarvydas",
            "team": "T5TCAFTA9",
            "name": "paultarvydas",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1742096636.964039",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "22SxQ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": " I am interested in looking more at LoP and Mora (or its descendants), but, I'm lazy and have become wary of wading through walls of reference information. Does anything jump out as the best places to start discovering more about these things?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U013ZLJARC7",
        "type": "message",
        "ts": "1742301781.772859",
        "edited": {
            "user": "U013ZLJARC7",
            "ts": "1742301965.000000"
        },
        "client_msg_id": "6e448ba6-3a3e-40c1-8b09-80a62d02763b",
        "text": "Here’s an example of embedding a different syntax in a program:\n<https:\/\/docs.racket-lang.org\/algol60\/>\n… and the source code for the parser for Algol 60 used in this implementation:\n<https:\/\/github.com\/racket\/algol60\/blob\/master\/parse.rkt>\nAnd a friendly article on the approach:\n<https:\/\/cacm.acm.org\/research\/a-programmable-programming-language\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "8ea58fc41bd6",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-10-13\/6057269405632_8ea58fc41bd6baa7dda6_72.png",
            "first_name": "",
            "real_name": "Jack Rusher",
            "display_name": "Jack Rusher",
            "team": "T5TCAFTA9",
            "name": "jack529",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1742096636.964039",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "K81CS",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Here’s an example of embedding a different syntax in a program:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/docs.racket-lang.org\/algol60\/"
                            },
                            {
                                "type": "text",
                                "text": "\n… and the source code for the parser for Algol 60 used in this implementation:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/racket\/algol60\/blob\/master\/parse.rkt"
                            },
                            {
                                "type": "text",
                                "text": "\nAnd a friendly article on the approach:\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/cacm.acm.org\/research\/a-programmable-programming-language\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "eyes",
                "users": [
                    "UGWUJUZHT"
                ],
                "count": 1
            },
            {
                "name": "+1",
                "users": [
                    "UJBAJNFLK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1742302234.342029",
        "edited": {
            "user": "UJBAJNFLK",
            "ts": "1742302388.000000"
        },
        "client_msg_id": "632a1212-4611-4b36-b04d-7bcada5b49d0",
        "text": "<@UGWUJUZHT> PEG support is a new feature in Emacs 30, though the library has been around as an add-on for a while (<https:\/\/www.emacswiki.org\/emacs\/peg.el>).\n\nAs for language-oriented programming in Racket, that's definitely worth a look. The last link in <@U013ZLJARC7>'s comment is a good entry point. Racket has become a modular compiler in which a new language is just another library.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1742096636.964039",
        "parent_user_id": "UGWUJUZHT",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ZrOx8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UGWUJUZHT"
                            },
                            {
                                "type": "text",
                                "text": " PEG support is a new feature in Emacs 30, though the library has been around as an add-on for a while ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.emacswiki.org\/emacs\/peg.el"
                            },
                            {
                                "type": "text",
                                "text": ").\n\nAs for language-oriented programming in Racket, that's definitely worth a look. The last link in "
                            },
                            {
                                "type": "user",
                                "user_id": "U013ZLJARC7"
                            },
                            {
                                "type": "text",
                                "text": "'s comment is a good entry point. Racket has become a modular compiler in which a new language is just another library."
                            }
                        ]
                    }
                ]
            }
        ]
    }
]