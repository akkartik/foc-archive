[
    {
        "user": "U03B14DUZSA",
        "type": "message",
        "ts": "1653517677.899219",
        "edited": {
            "user": "U03B14DUZSA",
            "ts": "1653517801.000000"
        },
        "client_msg_id": "6dd8cb7b-dbfe-4b01-bee8-26e58f39093c",
        "text": "<http:\/\/sp.cmc.msu.ru\/courses\/smalltalk\/fabrik\/Fabrik.html|Fabrik> may be what you're looking for - a visual programming environment based on dataflow-style box and wire diagrams on top of Smalltalk, which lower level components are built in.  <http:\/\/sp.cmc.msu.ru\/courses\/smalltalk\/fabrik\/figure3.gif>\n\n&gt;  Fabrik began with an attempt to mix arbitrary layout and cell types in an object-oriented spreadsheet. The spreadsheet approach broke down with the complex expressions needed for synthetic graphics and other generative structures. The wiring approach addressed this problem and also opened the way for bidirectional constructions.\nYou can definitely get the feeling of a \"spreadsheet on wheels\" from it. Brad Cox, the creator of Objective-C, really admires it as the highest stage of programming modularity, basically as a super-object level that is directly manipulable and visible.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7358a16bdea5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2022-11-02\/4314864832259_7358a16bdea535168748_72.png",
            "first_name": "Riley",
            "real_name": "Riley Stewart",
            "display_name": "Riley Stewart",
            "team": "T5TCAFTA9",
            "name": "me1307",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1653382869.317309",
        "parent_user_id": "U03GBV8B58V",
        "attachments": [
            {
                "from_url": "http:\/\/sp.cmc.msu.ru\/courses\/smalltalk\/fabrik\/figure3.gif",
                "image_url": "http:\/\/sp.cmc.msu.ru\/courses\/smalltalk\/fabrik\/figure3.gif",
                "image_width": 515,
                "image_height": 325,
                "image_bytes": 6711,
                "id": 1,
                "original_url": "http:\/\/sp.cmc.msu.ru\/courses\/smalltalk\/fabrik\/figure3.gif",
                "fallback": "515x325px image"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "UOYj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "http:\/\/sp.cmc.msu.ru\/courses\/smalltalk\/fabrik\/Fabrik.html",
                                "text": "Fabrik"
                            },
                            {
                                "type": "text",
                                "text": " may be what you're looking for - a visual programming environment based on dataflow-style box and wire diagrams on top of Smalltalk, which lower level components are built in.  "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/sp.cmc.msu.ru\/courses\/smalltalk\/fabrik\/figure3.gif"
                            },
                            {
                                "type": "text",
                                "text": "\n\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " Fabrik began with an attempt to mix arbitrary layout and cell types in an object-oriented spreadsheet. The spreadsheet approach broke down with the complex expressions needed for synthetic graphics and other generative structures. The wiring approach addressed this problem and also opened the way for bidirectional constructions."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\nYou can definitely get the feeling of a \"spreadsheet on wheels\" from it. Brad Cox, the creator of Objective-C, really admires it as the highest stage of programming modularity, basically as a super-object level that is directly manipulable and visible."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U03GBV8B58V"
                ],
                "count": 1
            }
        ]
    }
]