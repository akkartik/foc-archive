[
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1586936524.437200",
        "client_msg_id": "fd01889d-3860-472b-b8f8-4dd71a6a5e22",
        "text": "I don't feel that it will definitely never work. I think it _has to_ work, because the alternatives all suck. What I share in common with your hypothetical interlocutors is the unspoken question, \"how could this _possibly_ be made to work?\"\n\nIn <https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1586869277389100?thread_ts=1584718837.435500&amp;cid=C5T9GPWFL> you suggested that you're trying to separate goals from solutions and focus on the former. That's reasonable as a goal for this particular page. (It's also why I find this page unsatisfying.) But it also seems reasonable for it to trigger conversations about the how. That doesn't feel like \"missing the point\". Isn't that sort of conversation what this page is designed to engender?\n\nPerhaps it will help to triangulate by bringing up my mission: <http:\/\/akkartik.name\/about>. Not to brag, but we're attacking highly overlapping if not isomorphic problems. By definition I should have addressed any shortcomings I bring up here. It stays high-level, focuses on goals, but also indicates the sorts of trade-offs I'm willing to make. I'd love to receive similar criticism from you about what it's lacking. I should probably update it after my recent efforts writing my paper :sweat_smile: It's quite possible there's a cultural chasm here from me spending too much time on HN. I'd love to understand it better.\n\nPerhaps it would help to drill down into which comments you consider to be missing the point. It might require a private conversation, but it might help make this conversation more concrete. Here, I'll start by summarizing how I view the top-level comments:\n\n<https:\/\/news.ycombinator.com\/item?id=22858254>: neutral sentiment, acknowledges you're stating an unpopular opinion, responds with another. Seems useful for generating ideas, and -- reading between the lines -- sympathetic.\n\n<https:\/\/news.ycombinator.com\/item?id=22859409>: negative sentiment. I would steelman it (\"what could this be true of?\") as asking a) do you propose limits to extensibility, and b) how do you imagine the system as a whole self-regulating in response to bad changes? That seems useful, even if it's not phrased constructively.\n\n<https:\/\/news.ycombinator.com\/item?id=22862292>: not useful, as <@UDQBTJ211> already pointed out.\n\n<https:\/\/news.ycombinator.com\/item?id=22859613>: positive sentiment. Points out the future is already here, maybe just not evenly distributed.\n\n<https:\/\/news.ycombinator.com\/item?id=22874983>: negative sentiment, but suggests that your problem statement needs focus. Seems like useful feedback.\n\n<https:\/\/news.ycombinator.com\/item?id=22858315>: neutral sentiment, draws a connection with another story on the frontpage to highlight a trade-off. Super useful, to my mind. Engendered a response (<https:\/\/news.ycombinator.com\/item?id=22858888>) from someone seemingly ripe to join the movement.\n\n<https:\/\/news.ycombinator.com\/item?id=22858897>: neutral sentiment, brings up Plan 9 as prior art. My favorite sub-thread, if my actions are any guide. (Plan 9 isn't a major obsession of mine.)\n\n<https:\/\/news.ycombinator.com\/item?id=22864602>: negative sentiment, airs a conservation of complexity argument that might be worth addressing head-on. Maybe you need a FAQ?\n\nOther people making positive noises in startlingly diverse choices of words:\n* <https:\/\/news.ycombinator.com\/item?id=22862660>\n* <https:\/\/news.ycombinator.com\/item?id=22859957>\n* <https:\/\/news.ycombinator.com\/item?id=22862143>\n* <https:\/\/news.ycombinator.com\/item?id=22872606> (supporting the right to make a mess)\n\n<https:\/\/news.ycombinator.com\/item?id=22859278>: Someone being politely skeptical _by using Rails as an example_. So they're missing the point a bit, thinking about how opinionated you should be _after you have achieved malleability_. Still kinda interesting to me.\n\nThis is just the top-level comments, but at a glance the responses in the major sub-trees seem to mostly be ping-pong rebuttals. So to first approximation half the comments are supportive of the endeavor!\n\nOverall, there's a refreshing lack of \"startup mindset\" in this thread, particularly if -- like me -- you go in expecting 90% of everything to be crap. Nobody's asking you how you make money, or to to define a market, or to tweak the website. Great example of my thesis that HN is really 2 or 3 mostly-decoupled communities.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586818028.382000",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "eWk0S",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I don't feel that it will definitely never work. I think it "
                            },
                            {
                                "type": "text",
                                "text": "has to",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " work, because the alternatives all suck. What I share in common with your hypothetical interlocutors is the unspoken question, \"how could this "
                            },
                            {
                                "type": "text",
                                "text": "possibly",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": " be made to work?\"\n\nIn "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/futureofcoding.slack.com\/archives\/C5T9GPWFL\/p1586869277389100?thread_ts=1584718837.435500&cid=C5T9GPWFL"
                            },
                            {
                                "type": "text",
                                "text": " you suggested that you're trying to separate goals from solutions and focus on the former. That's reasonable as a goal for this particular page. (It's also why I find this page unsatisfying.) But it also seems reasonable for it to trigger conversations about the how. That doesn't feel like \"missing the point\". Isn't that sort of conversation what this page is designed to engender?\n\nPerhaps it will help to triangulate by bringing up my mission: "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/akkartik.name\/about"
                            },
                            {
                                "type": "text",
                                "text": ". Not to brag, but we're attacking highly overlapping if not isomorphic problems. By definition I should have addressed any shortcomings I bring up here. It stays high-level, focuses on goals, but also indicates the sorts of trade-offs I'm willing to make. I'd love to receive similar criticism from you about what it's lacking. I should probably update it after my recent efforts writing my paper "
                            },
                            {
                                "type": "emoji",
                                "name": "sweat_smile",
                                "unicode": "1f605"
                            },
                            {
                                "type": "text",
                                "text": " It's quite possible there's a cultural chasm here from me spending too much time on HN. I'd love to understand it better.\n\nPerhaps it would help to drill down into which comments you consider to be missing the point. It might require a private conversation, but it might help make this conversation more concrete. Here, I'll start by summarizing how I view the top-level comments:\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22858254"
                            },
                            {
                                "type": "text",
                                "text": ": neutral sentiment, acknowledges you're stating an unpopular opinion, responds with another. Seems useful for generating ideas, and -- reading between the lines -- sympathetic.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22859409"
                            },
                            {
                                "type": "text",
                                "text": ": negative sentiment. I would steelman it (\"what could this be true of?\") as asking a) do you propose limits to extensibility, and b) how do you imagine the system as a whole self-regulating in response to bad changes? That seems useful, even if it's not phrased constructively.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22862292"
                            },
                            {
                                "type": "text",
                                "text": ": not useful, as "
                            },
                            {
                                "type": "user",
                                "user_id": "UDQBTJ211"
                            },
                            {
                                "type": "text",
                                "text": " already pointed out.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22859613"
                            },
                            {
                                "type": "text",
                                "text": ": positive sentiment. Points out the future is already here, maybe just not evenly distributed.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22874983"
                            },
                            {
                                "type": "text",
                                "text": ": negative sentiment, but suggests that your problem statement needs focus. Seems like useful feedback.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22858315"
                            },
                            {
                                "type": "text",
                                "text": ": neutral sentiment, draws a connection with another story on the frontpage to highlight a trade-off. Super useful, to my mind. Engendered a response ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22858888"
                            },
                            {
                                "type": "text",
                                "text": ") from someone seemingly ripe to join the movement.\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22858897"
                            },
                            {
                                "type": "text",
                                "text": ": neutral sentiment, brings up Plan 9 as prior art. My favorite sub-thread, if my actions are any guide. (Plan 9 isn't a major obsession of mine.)\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22864602"
                            },
                            {
                                "type": "text",
                                "text": ": negative sentiment, airs a conservation of complexity argument that might be worth addressing head-on. Maybe you need a FAQ?\n\nOther people making positive noises in startlingly diverse choices of words:\n* "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22862660"
                            },
                            {
                                "type": "text",
                                "text": "\n* "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22859957"
                            },
                            {
                                "type": "text",
                                "text": "\n* "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22862143"
                            },
                            {
                                "type": "text",
                                "text": "\n* "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22872606"
                            },
                            {
                                "type": "text",
                                "text": " (supporting the right to make a mess)\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22859278"
                            },
                            {
                                "type": "text",
                                "text": ": Someone being politely skeptical "
                            },
                            {
                                "type": "text",
                                "text": "by using Rails as an example",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". So they're missing the point a bit, thinking about how opinionated you should be "
                            },
                            {
                                "type": "text",
                                "text": "after you have achieved malleability",
                                "style": {
                                    "italic": true
                                }
                            },
                            {
                                "type": "text",
                                "text": ". Still kinda interesting to me.\n\nThis is just the top-level comments, but at a glance the responses in the major sub-trees seem to mostly be ping-pong rebuttals. So to first approximation half the comments are supportive of the endeavor!\n\nOverall, there's a refreshing lack of \"startup mindset\" in this thread, particularly if -- like me -- you go in expecting 90% of everything to be crap. Nobody's asking you how you make money, or to to define a market, or to tweak the website. Great example of my thesis that HN is really 2 or 3 mostly-decoupled communities."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCUSW7WVD",
        "type": "message",
        "ts": "1586940009.437400",
        "client_msg_id": "5ac0ea77-668c-4493-a184-d49caa3ff253",
        "text": "I spent all day thinking about this, and finally found words to articulate hopefully half of what I intend to convey: <https:\/\/github.com\/malleable-systems\/malleable.systems\/issues\/13#issuecomment-613900649>. Hopefully I managed to walk the tightrope between showing vehemence and just being harsh.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "6e649a383cf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-07-14\/687915485201_6e649a383cf8f9e366e3_72.png",
            "first_name": "Kartik",
            "real_name": "Kartik Agaram",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "ak",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1584718837.435500",
        "parent_user_id": "UF1ATC4RF",
        "attachments": [
            {
                "author_name": "akkartik",
                "fallback": "[malleable-systems\/malleable.systems] Comment on #13",
                "text": "Here's <https:\/\/www.ribbonfarm.com\/2009\/09\/17\/your-evil-twins-and-how-to-find-them|an evil twin's take> on the Malleable Systems principles.\n\n&gt; 1. Software must be as easy to change as it is to use it.\n\nI support making software harder to use if it will get us to this goal faster. Everybody eat your vegetables.\n\n&gt; 2. All layers, from the user interface through functionality to the data within, must support arbitrary recombination and reuse in new environments.\n\nThe easiest way to support this is by letting users edit source code. Recombination and reuse don't have to happen from behind some pane of glass. <http:\/\/www.bldgblog.com\/2010\/01\/nakatomi-space|Allow your users to be like John McClane from the \"Die Hard\" movies, punching through walls and jumping through elevator shafts.> Focus on giving them maps and safety nets.\n\n&gt; 3. Tools should strive to be easy to begin working with but still have lots of open-ended potential.\n\nThe most natural place to begin working with a tool is using it. Treat your existing users as potential hackers at the start of a funnel with a steep drop-off. Some of them will recombine what you give them, but you don't know who. How do _you_ maintain motivation to continue supporting them under these conditions?\n\n&gt; 4. Retain ownership and control.\n\nExisting extension systems like browsers and Emacs already do this? By the time somebody is extending your system they tend to know enough to exercise ownership. Maybe we just need to grow this set of people?\n\n&gt; 5. Freely shareable.\n\nAgain, it's unclear what systems are in the author's mind that are extensible but not shareable.\n\n&gt; 6. Modifying in the context of use.\n\nThis seems really hard. Should it be a high priority? I recommend going from `(disempowered, beautiful)` to `(empowered, ugly)` first, trading off one attribute (candy) for another (eat your vegetables) to strengthen fundamentals. Once you lay the ground work, then you can try to perform the energetic heavy lift to `(empowered, beautiful)`.\n\n&gt; 7. Thoughtfully crafted.\n\nThis. This is the meat. Everything else feels like fluff, either really obvious or pie-in-the-sky hard. Don't make me wade through it to get here. That'll also give you more space to elaborate. How do we 'refine' our tools? Is this a matter of UX? Superficial reworking? Deeper surgery? Throwing everything out and starting over? A new methodology? A new social structure?\n\nOverall, I think my disagreements mostly stem from an overwhelming sense of urgency. You're over-constraining your solution space by shooting simultaneously for useful social properties (empowerment) and useful individual aesthetic properties (Bret Victor-esque WYSIWYG context of use). We're far enough behind here that maybe we should aim lower. It doesn't convey the appropriate urgency to say that \"software is trapped in silos\". No, the problem is that we find ourselves in a world where everybody uses software, and software can do anything, and nobody knows what their software is doing. Instructions from too many masters are fractally intertwined. This can't end well. We need to get off this train as quickly as possible.\n\nSigned,  \n<http:\/\/akkartik.name\/about|Kartik Agaram>",
                "title": "Comment on #13 Add post about common trade-offs",
                "footer": "<https:\/\/github.com\/malleable-systems\/malleable.systems|malleable-systems\/malleable.systems>",
                "id": 1,
                "title_link": "https:\/\/github.com\/malleable-systems\/malleable.systems\/issues\/13#issuecomment-613900649",
                "author_link": "https:\/\/github.com\/akkartik",
                "author_icon": "https:\/\/avatars0.githubusercontent.com\/u\/3161?u=e25daa1ed1f05cecc22431d9e4071d9da89ccfbd&v=4",
                "footer_icon": "https:\/\/github.githubassets.com\/favicon.ico",
                "ts": 1586939763,
                "color": "24292f",
                "mrkdwn_in": [
                    "text"
                ],
                "bot_id": "B011KHY4N3Y",
                "app_unfurl_url": "https:\/\/github.com\/malleable-systems\/malleable.systems\/issues\/13#issuecomment-613900649",
                "is_app_unfurl": true
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "TMBD",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I spent all day thinking about this, and finally found words to articulate hopefully half of what I intend to convey: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/github.com\/malleable-systems\/malleable.systems\/issues\/13#issuecomment-613900649"
                            },
                            {
                                "type": "text",
                                "text": ". Hopefully I managed to walk the tightrope between showing vehemence and just being harsh."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1586940698.437700",
        "client_msg_id": "400b5c3b-88d7-4434-beb8-c5b039dfac2c",
        "text": "Probably people would like to react to these two-minute-week videos. Should we post link to a Slack thread with the video right into newsletter?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586714499.350400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "J3x",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Probably people would like to react to these two-minute-week videos. Should we post link to a Slack thread with the video right into newsletter?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1586942259.437900",
        "client_msg_id": "156a92f9-71f6-40a1-83b1-c6cd779c0ca7",
        "text": "yes, I will post a link to the video with a title\/summary and a link to the thread (it would help if the author provides the title\/summary :slightly_smiling_face:)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586714499.350400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "pSuYY",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "yes, I will post a link to the video with a title\/summary and a link to the thread (it would help if the author provides the title\/summary "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            },
                            {
                                "type": "text",
                                "text": ")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USUMN6XLH",
        "type": "message",
        "ts": "1586957244.445200",
        "edited": {
            "user": "USUMN6XLH",
            "ts": "1586959874.000000"
        },
        "client_msg_id": "e99ceae1-fc90-4427-8840-4e6627278eb4",
        "text": "Are there any languages with explicit focus (and philosophy) around intermediary steps between ideas and working code? Modern programming languages feel like I must, in part, produce completed structures of code, rather than brainstorming and exploring. Programming inevitably alternates the code from working to not working to working to not working, etc, and we would benefit from languages that were more explicit about facilitating the ‘not working’ states. From my rough intuition, the ‘not working’ states of code outweigh ‘working’ state in terms of time and importance (e.g. compiler for code that is exploratory but does not work).\n\nREPL, for a very simple idea, is praised so much (and so widely used) perhaps for this reason — it facilitates intermediate steps. This would be a rough parallel to how Bret Victor mentions that “ideas are important” to him. I looked at <https:\/\/medium.com\/bits-and-behavior\/four-years-of-studying-exploratory-programming-4656586b1d3b|Exploratory Programming>, but it doesn’t seem to capture exactly what I want (i.e. goes a bit too shallow).\n\nEDIT: Also relevant, <http:\/\/tomasp.net\/histogram\/|Histogram> and <https:\/\/youtu.be\/X36ye-1x_HQ?t=1273|Type-driven Development>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "729eecb0df1d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-03\/5678948713014_729eecb0df1d998c9bcc_72.jpg",
            "first_name": "Josh",
            "real_name": "Josh Cho",
            "display_name": "Josh Cho",
            "team": "T5TCAFTA9",
            "name": "joshchonpc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586957244.445200",
        "reply_count": 21,
        "reply_users_count": 10,
        "latest_reply": "1691067419.532949",
        "reply_users": [
            "UBN9AFS0N",
            "UCKRZS3DZ",
            "USUMN6XLH",
            "UNGNT3BKR",
            "UFB8STN7K",
            "UC2A2ARPT",
            "UG0EL18H3",
            "UN57U8V53",
            "UNCP67JSK",
            "UFQQ3P867"
        ],
        "replies": [
            {
                "user": "UBN9AFS0N",
                "ts": "1586957669.445600"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1586957726.445900"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1586957760.446200"
            },
            {
                "user": "UBN9AFS0N",
                "ts": "1586957785.446400"
            },
            {
                "user": "UCKRZS3DZ",
                "ts": "1586958120.446700"
            },
            {
                "user": "USUMN6XLH",
                "ts": "1586959050.447200"
            },
            {
                "user": "USUMN6XLH",
                "ts": "1586959110.447500"
            },
            {
                "user": "UNGNT3BKR",
                "ts": "1586959317.448400"
            },
            {
                "user": "USUMN6XLH",
                "ts": "1586959389.448700"
            },
            {
                "user": "USUMN6XLH",
                "ts": "1586959660.449000"
            },
            {
                "user": "UFB8STN7K",
                "ts": "1586966959.452200"
            },
            {
                "user": "UC2A2ARPT",
                "ts": "1586972084.453600"
            },
            {
                "user": "UG0EL18H3",
                "ts": "1586994546.454900"
            },
            {
                "user": "UN57U8V53",
                "ts": "1587015827.456500"
            },
            {
                "user": "UN57U8V53",
                "ts": "1587016117.456700"
            },
            {
                "user": "UNCP67JSK",
                "ts": "1587049093.467200"
            },
            {
                "user": "UG0EL18H3",
                "ts": "1587051374.467500"
            },
            {
                "user": "UN57U8V53",
                "ts": "1587051494.467700"
            },
            {
                "user": "UNCP67JSK",
                "ts": "1587152134.027400"
            },
            {
                "user": "UFQQ3P867",
                "ts": "1604680663.345500"
            },
            {
                "user": "USUMN6XLH",
                "ts": "1691067419.532949"
            }
        ],
        "is_locked": false,
        "subscribed": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "p=t0v",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Are there any languages with explicit focus (and philosophy) around intermediary steps between ideas and working code? Modern programming languages feel like I must, in part, produce completed structures of code, rather than brainstorming and exploring. Programming inevitably alternates the code from working to not working to working to not working, etc, and we would benefit from languages that were more explicit about facilitating the ‘not working’ states. From my rough intuition, the ‘not working’ states of code outweigh ‘working’ state in terms of time and importance (e.g. compiler for code that is exploratory but does not work).\n\nREPL, for a very simple idea, is praised so much (and so widely used) perhaps for this reason — it facilitates intermediate steps. This would be a rough parallel to how Bret Victor mentions that “ideas are important” to him. I looked at "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/medium.com\/bits-and-behavior\/four-years-of-studying-exploratory-programming-4656586b1d3b",
                                "text": "Exploratory Programming"
                            },
                            {
                                "type": "text",
                                "text": ", but it doesn’t seem to capture exactly what I want (i.e. goes a bit too shallow).\n\nEDIT: Also relevant, "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/tomasp.net\/histogram\/",
                                "text": "Histogram"
                            },
                            {
                                "type": "text",
                                "text": " and "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/X36ye-1x_HQ?t=1273",
                                "text": "Type-driven Development"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1586957669.445600",
        "client_msg_id": "09285aa5-82d3-474a-b26b-6a16193e38db",
        "text": "<https:\/\/hazel.org\/> has first class concepts of errors (missing code, binding errors, conflicts, type errors)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586957244.445200",
        "parent_user_id": "USUMN6XLH",
        "attachments": [
            {
                "title": "Hazel, a live functional programming environment featuring typed holes.",
                "title_link": "https:\/\/hazel.org\/",
                "text": "Hazel is a live functional programming environment featuring typed holes.",
                "fallback": "Hazel, a live functional programming environment featuring typed holes.",
                "from_url": "https:\/\/hazel.org\/",
                "service_name": "hazel.org",
                "id": 1,
                "original_url": "https:\/\/hazel.org\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ODwRk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/hazel.org\/"
                            },
                            {
                                "type": "text",
                                "text": " has first class concepts of errors (missing code, binding errors, conflicts, type errors)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0118UBB41G"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1586957726.445900",
        "client_msg_id": "c7f2909c-5bf1-472a-9a4c-1e6427d7d350",
        "text": "unison promises that your code is always in a valid state: <https:\/\/www.unisonweb.org\/docs\/tour\/>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586957244.445200",
        "parent_user_id": "USUMN6XLH",
        "attachments": [
            {
                "title": "A tour of Unison",
                "title_link": "https:\/\/www.unisonweb.org\/docs\/tour\/",
                "text": "undefined",
                "fallback": "A tour of Unison",
                "from_url": "https:\/\/www.unisonweb.org\/docs\/tour\/",
                "service_name": "unisonweb.org",
                "id": 1,
                "original_url": "https:\/\/www.unisonweb.org\/docs\/tour\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "M4Enc",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "unison promises that your code is always in a valid state: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.unisonweb.org\/docs\/tour\/"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "USUMN6XLH",
                    "UPD5QQW81",
                    "U0118UBB41G"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1586957760.446200",
        "client_msg_id": "80eb3779-891e-4017-b1a6-abcb7b2673b6",
        "text": "dynamically typed languages support incomplete programs as long as you don't step into the incomplete code :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586957244.445200",
        "parent_user_id": "USUMN6XLH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "x4r",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "dynamically typed languages support incomplete programs as long as you don't step into the incomplete code "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1586957785.446400",
        "client_msg_id": "eb9ecb9d-d736-471e-b9af-c193a2d82c4b",
        "text": "in smalltalk there's people that fill the code as they go in the debugger",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586957244.445200",
        "parent_user_id": "USUMN6XLH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "EYPd+",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "in smalltalk there's people that fill the code as they go in the debugger"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "point_up",
                "users": [
                    "ULM3U6275"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1586958120.446700",
        "client_msg_id": "5941662c-9d04-4f61-87ff-c027d27f93f9",
        "text": "I think <@USUMN6XLH> is saying that during development you try out many ideas and finally get to working code. Working code is checked in to VCS, while all these steps to this working code are lost, while they might be the most valuable to learn.\n\nAm I right?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586957244.445200",
        "parent_user_id": "USUMN6XLH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ttV1t",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I think "
                            },
                            {
                                "type": "user",
                                "user_id": "USUMN6XLH"
                            },
                            {
                                "type": "text",
                                "text": " is saying that during development you try out many ideas and finally get to working code. Working code is checked in to VCS, while all these steps to this working code are lost, while they might be the most valuable to learn.\n\nAm I right?"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "USUMN6XLH"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "USUMN6XLH",
        "type": "message",
        "ts": "1586959050.447200",
        "edited": {
            "user": "USUMN6XLH",
            "ts": "1586959262.000000"
        },
        "client_msg_id": "37d9306b-8d48-46e0-aa5c-bb47ef0ad8aa",
        "text": "Yes <@UCKRZS3DZ>, not to get too philosophical, but humans always focus more on what is than what is not (i.e. yin-yang). So we are bound to focus on what works, our successes, rather than what does not work, our failures, or our intermediaries. This kind of human bias\/inevitability is bound to be present in computing, which is often too fast for its own good.\n\nMaybe we can step back a little and think about the in-between…? <http:\/\/tomasp.net\/histogram\/> is the only instance where I have seen anyone do some thinking like this to a sufficiently satisfying extent.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "729eecb0df1d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-03\/5678948713014_729eecb0df1d998c9bcc_72.jpg",
            "first_name": "Josh",
            "real_name": "Josh Cho",
            "display_name": "Josh Cho",
            "team": "T5TCAFTA9",
            "name": "joshchonpc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586957244.445200",
        "parent_user_id": "USUMN6XLH",
        "attachments": [
            {
                "title": "Histogram: You have to know the past to understand the present",
                "title_link": "http:\/\/tomasp.net\/histogram\/",
                "text": "To invent new programming tools, we need to shift our focus from programs to programming. Programs are created through a variety of interactions, but programming research often forgets about those. In this interactive essay, we represent programs as lists of interactions and we explore the consequences of this idea in a simple programming environment for data exploration.",
                "fallback": "Histogram: You have to know the past to understand the present",
                "image_url": "http:\/\/tomasp.net\/histogram\/histogram.png",
                "from_url": "http:\/\/tomasp.net\/histogram\/",
                "image_width": 500,
                "image_height": 250,
                "image_bytes": 19836,
                "service_icon": "http:\/\/tomasp.net\/favicon.ico",
                "service_name": "tomasp.net",
                "id": 1,
                "original_url": "http:\/\/tomasp.net\/histogram\/"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gFmIR",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes "
                            },
                            {
                                "type": "user",
                                "user_id": "UCKRZS3DZ"
                            },
                            {
                                "type": "text",
                                "text": ", not to get too philosophical, but humans always focus more on what is than what is not (i.e. yin-yang). So we are bound to focus on what works, our successes, rather than what does not work, our failures, or our intermediaries. This kind of human bias\/inevitability is bound to be present in computing, which is often too fast for its own good.\n\nMaybe we can step back a little and think about the in-between…? "
                            },
                            {
                                "type": "link",
                                "url": "http:\/\/tomasp.net\/histogram\/"
                            },
                            {
                                "type": "text",
                                "text": " is the only instance where I have seen anyone do some thinking like this to a sufficiently satisfying extent."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UNCP67JSK"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "USUMN6XLH",
        "type": "message",
        "ts": "1586959110.447500",
        "client_msg_id": "c70ac8e6-64f6-4dc8-9d4e-8a7375c2d5c1",
        "text": "<@UBN9AFS0N> I am looking at Unison right now for the first time and it’s very interesting. Scratches as an alternate to REPL might have some interesting ideas in this space.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "729eecb0df1d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-03\/5678948713014_729eecb0df1d998c9bcc_72.jpg",
            "first_name": "Josh",
            "real_name": "Josh Cho",
            "display_name": "Josh Cho",
            "team": "T5TCAFTA9",
            "name": "joshchonpc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586957244.445200",
        "parent_user_id": "USUMN6XLH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Fn\/OI",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UBN9AFS0N"
                            },
                            {
                                "type": "text",
                                "text": " I am looking at Unison right now for the first time and it’s very interesting. Scratches as an alternate to REPL might have some interesting ideas in this space."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNGNT3BKR",
        "type": "message",
        "ts": "1586959317.448400",
        "edited": {
            "user": "UNGNT3BKR",
            "ts": "1586959333.000000"
        },
        "text": "\"Livecoding\" is about continuously modifying the code as it runs. This doesn't necessarily improve the experience with having non-working code, but it does let you work with partially-working code and \"code as you go\". The system I am working on (<https:\/\/alive.s-ol.nu>) takes an alternate approach to the common REPL-based livecoding that supports continuously changing FRP programs at runtime.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f5598145b9e3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-20\/844081492646_f5598145b9e31ad2c4bd_72.jpg",
            "first_name": "Sol",
            "real_name": "Sol Bekic",
            "display_name": "s-ol",
            "team": "T5TCAFTA9",
            "name": "machinemail_slack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586957244.445200",
        "parent_user_id": "USUMN6XLH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "b4R",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "\"Livecoding\" is about continuously modifying the code as it runs. This doesn't necessarily improve the experience with having non-working code, but it does let you work with partially-working code and \"code as you go\". The system I am working on ("
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/alive.s-ol.nu"
                            },
                            {
                                "type": "text",
                                "text": ") takes an alternate approach to the common REPL-based livecoding that supports continuously changing FRP programs at runtime."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USUMN6XLH",
        "type": "message",
        "ts": "1586959389.448700",
        "edited": {
            "user": "USUMN6XLH",
            "ts": "1586959456.000000"
        },
        "client_msg_id": "e32f3c21-9f56-4e55-a6b9-dc25bf2248d1",
        "text": "The psychological equivalent would be how long it takes for our nonverbal, implicit ‘thoughts’ or qualia to become verbal, explicit &lt;thoughts&gt;. We have intuitions before explicit thoughts, and modern psychology has focused too much on what can be observed (verbal thoughts, or even worse, behavior) that it has missed out on large portion of our psyche.\n\nIntuition precedes thoughts, but we only observe thoughts because they are easy to observe.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "729eecb0df1d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-03\/5678948713014_729eecb0df1d998c9bcc_72.jpg",
            "first_name": "Josh",
            "real_name": "Josh Cho",
            "display_name": "Josh Cho",
            "team": "T5TCAFTA9",
            "name": "joshchonpc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586957244.445200",
        "parent_user_id": "USUMN6XLH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "fyAzi",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "The psychological equivalent would be how long it takes for our nonverbal, implicit ‘thoughts’ or qualia to become verbal, explicit <thoughts>. We have intuitions before explicit thoughts, and modern psychology has focused too much on what can be observed (verbal thoughts, or even worse, behavior) that it has missed out on large portion of our psyche.\n\nIntuition precedes thoughts, but we only observe thoughts because they are easy to observe."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USUMN6XLH",
        "type": "message",
        "ts": "1586959660.449000",
        "edited": {
            "user": "USUMN6XLH",
            "ts": "1586959676.000000"
        },
        "client_msg_id": "37e20c73-84ec-4b04-a958-0f2c11797162",
        "text": "<@UNGNT3BKR> Yeah live-coding or even something like Orca (which has no distinctive distinction between code and output) are also important in this space. But I think we can definitely go further — the idea is simple but its adoption is surprisingly slow. I think this shows how people are willing to just withstand discomfort of ‘not seeing’.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "729eecb0df1d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-08-03\/5678948713014_729eecb0df1d998c9bcc_72.jpg",
            "first_name": "Josh",
            "real_name": "Josh Cho",
            "display_name": "Josh Cho",
            "team": "T5TCAFTA9",
            "name": "joshchonpc",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586957244.445200",
        "parent_user_id": "USUMN6XLH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "0PMid",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UNGNT3BKR"
                            },
                            {
                                "type": "text",
                                "text": " Yeah live-coding or even something like Orca (which has no distinctive distinction between code and output) are also important in this space. But I think we can definitely go further — the idea is simple but its adoption is surprisingly slow. I think this shows how people are willing to just withstand discomfort of ‘not seeing’."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJN1TAYEQ",
        "type": "message",
        "ts": "1586961155.449800",
        "client_msg_id": "3a673204-62b6-4a3a-bfbf-1981beb606a9",
        "text": "ColorForth takes this idea of \"creative limitation\" farther than any other language I can think of. <https:\/\/colorforth.github.io\/cf.htm>\n• The language is written using 48 ASCII characters, which enables you to code using a special keyboard layout (if you like) where your fingers never leave home row.\n• Identifiers are typically limited to 6 characters. They must fit into 32 bits after being compressed using \"Shannon coding\".\n• Source files are called \"blocks\" and are limited to 256 \"words\". An entire block fits on the screen at once, so there is no need for scrolling.\n• Function definitions are typically 1 line long. That's not directly enforced, but Forth code becomes increasingly hard to decipher when functions are longer than this.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g4185a542241",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/34185a5422416f82b3e4a62964f2866b.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0008-72.png",
            "first_name": "",
            "real_name": "Doug Moen",
            "display_name": "Doug Moen",
            "team": "T5TCAFTA9",
            "name": "doug",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586906564.409300",
        "parent_user_id": "U5STGTB3J",
        "attachments": [
            {
                "title": "Chuck Moore's Wonderful colorForth Programming Language and Operating System",
                "title_link": "https:\/\/colorforth.github.io\/cf.htm",
                "text": "ColorForth is a dialect of Forth that uses color as punctuation. It is a simple, colorful programming language that produces compact, efficient programs. It is also an operating system, running stand-alone on a PC. And a philosophy that leads to tested, reliable applications.",
                "fallback": "Chuck Moore's Wonderful colorForth Programming Language and Operating System",
                "from_url": "https:\/\/colorforth.github.io\/cf.htm",
                "service_icon": "https:\/\/colorforth.github.io\/favicon.ico",
                "service_name": "colorforth.github.io",
                "id": 1,
                "original_url": "https:\/\/colorforth.github.io\/cf.htm"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "e7gj",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "ColorForth takes this idea of \"creative limitation\" farther than any other language I can think of. "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/colorforth.github.io\/cf.htm"
                            },
                            {
                                "type": "text",
                                "text": "\n"
                            }
                        ]
                    },
                    {
                        "type": "rich_text_list",
                        "elements": [
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "The language is written using 48 ASCII characters, which enables you to code using a special keyboard layout (if you like) where your fingers never leave home row."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Identifiers are typically limited to 6 characters. They must fit into 32 bits after being compressed using \"Shannon coding\"."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Source files are called \"blocks\" and are limited to 256 \"words\". An entire block fits on the screen at once, so there is no need for scrolling."
                                    }
                                ]
                            },
                            {
                                "type": "rich_text_section",
                                "elements": [
                                    {
                                        "type": "text",
                                        "text": "Function definitions are typically 1 line long. That's not directly enforced, but Forth code becomes increasingly hard to decipher when functions are longer than this."
                                    }
                                ]
                            }
                        ],
                        "style": "bullet",
                        "indent": 0
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UC2A2ARPT",
                    "UBSMEUXAA",
                    "UJUGB1XGD"
                ],
                "count": 3
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1586964568.450300",
        "client_msg_id": "036ea3d1-373d-498f-a721-27be1c63d74e",
        "text": "I'm thinking I'll just call mine \"Week 1, Week 2, Week 3\" since I'm not really doing sprints or anything, I'm just working on things for as long as they take.\n\nAnyone else planning to make a video for the channel? (I'm assuming you're all waiting for the imaginary construct known as \"the end of the week\")",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586714499.350400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "lcFf7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I'm thinking I'll just call mine \"Week 1, Week 2, Week 3\" since I'm not really doing sprints or anything, I'm just working on things for as long as they take.\n\nAnyone else planning to make a video for the channel? (I'm assuming you're all waiting for the imaginary construct known as \"the end of the week\")"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UNGNT3BKR",
        "type": "message",
        "ts": "1586964628.450500",
        "text": "<@UC2A2ARPT> I will definitely make one, just have to get around to it ;) (and wait for some things I want to mention to be wrapped up)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "f5598145b9e3",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-11-20\/844081492646_f5598145b9e31ad2c4bd_72.jpg",
            "first_name": "Sol",
            "real_name": "Sol Bekic",
            "display_name": "s-ol",
            "team": "T5TCAFTA9",
            "name": "machinemail_slack",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586714499.350400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "gmp",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UC2A2ARPT"
                            },
                            {
                                "type": "text",
                                "text": " I will definitely make one, just have to get around to it ;) (and wait for some things I want to mention to be wrapped up)"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1586964715.450700",
        "client_msg_id": "6af461f1-43a4-4715-8c07-62e257a5ce12",
        "text": "I plan to make one",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586714499.350400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "s7V",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I plan to make one"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "cake",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UBN9AFS0N",
        "type": "message",
        "ts": "1586965232.451100",
        "client_msg_id": "7814dbb1-97e0-42e1-9ada-654ce742c153",
        "text": "imaginary construct guy here :slightly_smiling_face:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "7f0f1c0238ec",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-07-09\/395086754178_7f0f1c0238ec02befdab_72.jpg",
            "first_name": "Mariano",
            "real_name": "Mariano Guerra",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "mariano",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586714499.350400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "XyT",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "imaginary construct guy here "
                            },
                            {
                                "type": "emoji",
                                "name": "slightly_smiling_face",
                                "unicode": "1f642"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "joy",
                "users": [
                    "UCKRZS3DZ"
                ],
                "count": 1
            },
            {
                "name": "hatching_chick",
                "users": [
                    "UC2A2ARPT"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1586966650.451500",
        "client_msg_id": "6700695e-5b03-4748-b7c0-ad6973f62da9",
        "text": "Yes, I'll make one; is there a channel now?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586714499.350400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "c=rU",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Yes, I'll make one; is there a channel now?"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1586966811.451700",
        "client_msg_id": "9c794dd7-145f-4a22-8599-0f3468a5342c",
        "text": "&gt;  HN is easy and fashionable to diss, but I found this thread useful. Yes you have to filter, and yes you need some flame-retardant underwear at times, but if you're willing to sift through you get some gems.\nJust wanted to say I generally agree with this, which is why I go to HN :smile:. I guess I was just expecting to see a higher 'hit rate' with this post.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586818028.382000",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "NiAp",
                "elements": [
                    {
                        "type": "rich_text_quote",
                        "elements": [
                            {
                                "type": "text",
                                "text": " HN is easy and fashionable to diss, but I found this thread useful. Yes you have to filter, and yes you need some flame-retardant underwear at times, but if you're willing to sift through you get some gems."
                            }
                        ]
                    },
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Just wanted to say I generally agree with this, which is why I go to HN "
                            },
                            {
                                "type": "emoji",
                                "name": "smile",
                                "unicode": "1f604"
                            },
                            {
                                "type": "text",
                                "text": ". I guess I was just expecting to see a higher 'hit rate' with this post."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "U8A5MS6R1",
        "type": "message",
        "ts": "1586966835.451900",
        "edited": {
            "user": "U8A5MS6R1",
            "ts": "1586969067.000000"
        },
        "client_msg_id": "af15a09d-7c95-47ea-9715-6279abc010b7",
        "text": "FWIW, <@UJBAJNFLK>’s Emacs write-up is on HN now: <https:\/\/news.ycombinator.com\/item?id=22875106> [edit: oops, fixed link to HN]",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "b7c63cc07373",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-03-21\/584465935395_b7c63cc07373326ec6ea_72.jpg",
            "first_name": "Shalabh",
            "real_name": "Shalabh",
            "display_name": "shalabh",
            "team": "T5TCAFTA9",
            "name": "shalabh.chaturvedi",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586818028.382000",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Iq89E",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FWIW, "
                            },
                            {
                                "type": "user",
                                "user_id": "UJBAJNFLK"
                            },
                            {
                                "type": "text",
                                "text": "’s Emacs write-up is on HN now: "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/news.ycombinator.com\/item?id=22875106"
                            },
                            {
                                "type": "text",
                                "text": " [edit: oops, fixed link to HN]"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UFB8STN7K",
        "type": "message",
        "ts": "1586966959.452200",
        "edited": {
            "user": "UFB8STN7K",
            "ts": "1586966963.000000"
        },
        "client_msg_id": "646d24df-e823-4555-ad63-223a8d85963a",
        "text": "I would separate methodologies that structure process from languages that enable (or make easier) aspects of process. Type-driven and test-driven development are both methodologies that focus on incrementally developing a program specification through types or tests.\n\nA language like Idris or Hazel supports type-driven development by having an explicit notion of holes. A language like <https:\/\/www.pyret.org\/|Pyret> supports test-driven development by allowing unit tests to be co-located with functions.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ge240a8e5a8f",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/ce240a8e5a8fdc65e86bbb869975ccfe.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0009-72.png",
            "first_name": "Will",
            "real_name": "Will Crichton",
            "display_name": "Will",
            "team": "T5TCAFTA9",
            "name": "wcrichto",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586957244.445200",
        "parent_user_id": "USUMN6XLH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "ms\/P",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "I would separate methodologies that structure process from languages that enable (or make easier) aspects of process. Type-driven and test-driven development are both methodologies that focus on incrementally developing a program specification through types or tests.\n\nA language like Idris or Hazel supports type-driven development by having an explicit notion of holes. A language like "
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/www.pyret.org\/",
                                "text": "Pyret"
                            },
                            {
                                "type": "text",
                                "text": " supports test-driven development by allowing unit tests to be co-located with functions."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "USUMN6XLH"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UCKRZS3DZ",
        "type": "message",
        "ts": "1586966980.452600",
        "client_msg_id": "39284f72-cc28-4509-b38b-5fc74b5f5c36",
        "text": "<#C0120A3L30R|two-minute-week>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "222a2870915d",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-12-15\/861537614034_222a2870915d24ec10cc_72.jpg",
            "first_name": "Vladimir",
            "real_name": "Vladimir Gordeev",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "gordeev.vladimir.v",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586714499.350400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "rZbx8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "channel",
                                "channel_id": "C0120A3L30R"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UUQ2EQW21",
        "type": "message",
        "ts": "1586967602.452800",
        "client_msg_id": "6b0897e4-72a0-4f77-a94a-32e656cccb37",
        "text": "Thanks :wink:",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "g2266cacc8f3",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/2266cacc8f3c9964e7bfb1c357bf6873.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0024-72.png",
            "first_name": "Chris",
            "real_name": "Chris Maughan",
            "display_name": "Chris Maughan",
            "team": "T5TCAFTA9",
            "name": "mornymorny",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586714499.350400",
        "parent_user_id": "UBN9AFS0N",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "w+=65",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks "
                            },
                            {
                                "type": "emoji",
                                "name": "wink",
                                "unicode": "1f609"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UJBAJNFLK",
        "type": "message",
        "ts": "1586968777.453000",
        "client_msg_id": "fd653ace-d3a5-41ec-9c40-46eca510a900",
        "text": "Thanks for the pointer (I don't follow HN much these days). It's a pity that most comments focus on comparing Emacs to other text editors with little reference to malleability!",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "e169f54bbaf8",
            "image_72": "https:\/\/avatars.slack-edge.com\/2021-03-12\/1859691333940_e169f54bbaf8b9b36b12_72.png",
            "first_name": "Konrad",
            "real_name": "Konrad Hinsen",
            "display_name": "Konrad Hinsen",
            "team": "T5TCAFTA9",
            "name": "konrad.hinsen",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586818028.382000",
        "parent_user_id": "U8A5MS6R1",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Xc7",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Thanks for the pointer (I don't follow HN much these days). It's a pity that most comments focus on comparing Emacs to other text editors with little reference to malleability!"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UCUSW7WVD"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UC2A2ARPT",
        "type": "message",
        "ts": "1586972084.453600",
        "client_msg_id": "dcf0e3ee-ceb6-4c8e-9c90-1861816302d8",
        "text": "There's also an entire discipline and ecosystem around non-functional or minimally-functional prototypes. There's paper prototyping, wireframes, modern HyperCard-like tools — hell, the UI prototyping group at Apple used to (maybe still does) use Keynote presentations for user testing because they're so much faster to make, and you can do a bunch of tricks to make them feel like a working app.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "gf94d2ed5e18",
            "image_72": "https:\/\/secure.gravatar.com\/avatar\/6f94d2ed5e188be9865a531021b0afcd.jpg?s=72&d=https%3A%2F%2Fa.slack-edge.com%2Fdf10d%2Fimg%2Favatars%2Fava_0013-72.png",
            "first_name": "Ivan",
            "real_name": "Ivan Reese",
            "display_name": "Ivan Reese",
            "team": "T5TCAFTA9",
            "name": "ivanreese",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586957244.445200",
        "parent_user_id": "USUMN6XLH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "xfQNM",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "There's also an entire discipline and ecosystem around non-functional or minimally-functional prototypes. There's paper prototyping, wireframes, modern HyperCard-like tools — hell, the UI prototyping group at Apple used to (maybe still does) use Keynote presentations for user testing because they're so much faster to make, and you can do a bunch of tricks to make them feel like a working app."
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "USUMN6XLH"
                ],
                "count": 1
            }
        ]
    },
    {
        "user": "UEQ6M68H0",
        "type": "message",
        "ts": "1586977529.454500",
        "client_msg_id": "9fb23f5f-32d2-4a86-aec6-b468edb5f808",
        "text": "FORTH and its cousin Postscript are very compact languages. I think FORTH is probably the most compact language, but also very difficult to read, as effectively you are pushing things into the stack, and you have to memorize how many items on the stack are consumed by each operator. APL had built-in graphing which was wonderful in its day (character graphics based plotting!), so it became more popular. FORTH was targeting embedded systems. If i am not mistaken it was invented for telescope control. FORTH was actually embedded into each Microchannel board; the Microchannel architecture was invented by Data general, and then licensed by IBM for their PC. The beauty of that architecture was that the boards each had some firmware on them, written in FORTH that would negotiate for interrupt vectors and low memory space. They needed a super compact language, so they used FORTH. But the terrible readability has hindered FORTH's general commercial use. I am surprised at how little people use J and FORTH given that they both work very well, and are super powerful. If you are doing a one man project, you might not care about readability. Perhaps it is all the hoopla around functional programming that makes people ignore these very interesting languages.",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "326328f75c3f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-02-05\/542651515888_326328f75c3f2a08544c_72.jpg",
            "first_name": "Edward",
            "real_name": "Edward de Jong",
            "display_name": "Edward de Jong \/ Beads Project",
            "team": "T5TCAFTA9",
            "name": "magicmouse94937",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586906564.409300",
        "parent_user_id": "U5STGTB3J",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "d55",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "FORTH and its cousin Postscript are very compact languages. I think FORTH is probably the most compact language, but also very difficult to read, as effectively you are pushing things into the stack, and you have to memorize how many items on the stack are consumed by each operator. APL had built-in graphing which was wonderful in its day (character graphics based plotting!), so it became more popular. FORTH was targeting embedded systems. If i am not mistaken it was invented for telescope control. FORTH was actually embedded into each Microchannel board; the Microchannel architecture was invented by Data general, and then licensed by IBM for their PC. The beauty of that architecture was that the boards each had some firmware on them, written in FORTH that would negotiate for interrupt vectors and low memory space. They needed a super compact language, so they used FORTH. But the terrible readability has hindered FORTH's general commercial use. I am surprised at how little people use J and FORTH given that they both work very well, and are super powerful. If you are doing a one man project, you might not care about readability. Perhaps it is all the hoopla around functional programming that makes people ignore these very interesting languages."
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "text": "was thinking about \"comment-driven development\" a while back and came up with this sketch: typically when i'm writing a complex series of transformations, i'll write out all the steps in individual comments and then \"fill in the blanks\" with code once i have an outline for the whole transformation. would be interesting to have the comments exist as \"blocks\" that could be expanded and contracted (and nested?) so you'd be able to zoom out and see the entire system at a glance without looking at the code",
        "files": [
            {
                "id": "F011GPZUNDV",
                "mode": "tombstone"
            }
        ],
        "upload": true,
        "user": "UG0EL18H3",
        "display_as_bot": false,
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "15d=8",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "was thinking about \"comment-driven development\" a while back and came up with this sketch: typically when i'm writing a complex series of transformations, i'll write out all the steps in individual comments and then \"fill in the blanks\" with code once i have an outline for the whole transformation. would be interesting to have the comments exist as \"blocks\" that could be expanded and contracted (and nested?) so you'd be able to zoom out and see the entire system at a glance without looking at the code"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "message",
        "ts": "1586994546.454900",
        "client_msg_id": "95f5bc68-48fb-4dc0-a936-b46fcca1be81",
        "thread_ts": "1586957244.445200",
        "parent_user_id": "USUMN6XLH"
    },
    {
        "user": "UAVCC2X70",
        "type": "message",
        "ts": "1587010204.455700",
        "client_msg_id": "262e9f27-c0bb-4f4d-8b40-e2e299a739f2",
        "text": "<@UML4ZEKDK>: \"anti-post\" - You mean like BV's \"Future of programming\"?\n\n<https:\/\/youtu.be\/8pTEmbeENF4|https:\/\/youtu.be\/8pTEmbeENF4>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "ec35ac5b251f",
            "image_72": "https:\/\/avatars.slack-edge.com\/2018-05-22\/369438371830_ec35ac5b251f37e26aca_72.jpg",
            "first_name": "",
            "real_name": "Dan Cook",
            "display_name": "",
            "team": "T5TCAFTA9",
            "name": "dcook0819",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586818028.382000",
        "parent_user_id": "U8A5MS6R1",
        "attachments": [
            {
                "service_name": "YouTube",
                "service_url": "https:\/\/www.youtube.com\/",
                "title": "Bret Victor   The Future of Programming",
                "title_link": "https:\/\/youtu.be\/8pTEmbeENF4",
                "author_name": "Joey Reid",
                "author_link": "https:\/\/www.youtube.com\/channel\/UCrsAgqP6k_aVMD2cPr1194g",
                "thumb_url": "https:\/\/i.ytimg.com\/vi\/8pTEmbeENF4\/hqdefault.jpg",
                "thumb_width": 480,
                "thumb_height": 360,
                "fallback": "YouTube Video: Bret Victor   The Future of Programming",
                "video_html": "<iframe width=\"400\" height=\"225\" src=\"https:\/\/www.youtube.com\/embed\/8pTEmbeENF4?feature=oembed&autoplay=1&iv_load_policy=3\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen><\/iframe>",
                "video_html_width": 400,
                "video_html_height": 225,
                "from_url": "https:\/\/youtu.be\/8pTEmbeENF4",
                "service_icon": "https:\/\/a.slack-edge.com\/80588\/img\/unfurl_icons\/youtube.png",
                "id": 1,
                "original_url": "https:\/\/youtu.be\/8pTEmbeENF4"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "Hbk",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "user",
                                "user_id": "UML4ZEKDK"
                            },
                            {
                                "type": "text",
                                "text": ": \"anti-post\" - You mean like BV's \"Future of programming\"?\n\n"
                            },
                            {
                                "type": "link",
                                "url": "https:\/\/youtu.be\/8pTEmbeENF4",
                                "text": "https:\/\/youtu.be\/8pTEmbeENF4"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "USH01JEDQ",
        "type": "message",
        "ts": "1587014414.456100",
        "client_msg_id": "63D8BF46-AB8A-4210-BBCB-7289F537BD4E",
        "text": "<https:\/\/twitter.com\/jonathoda\/status\/1250477469032996872|https:\/\/twitter.com\/jonathoda\/status\/1250477469032996872>",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "854f96b690f5",
            "image_72": "https:\/\/avatars.slack-edge.com\/2023-12-17\/6370745671793_854f96b690f51d1266ee_72.png",
            "first_name": "Christopher",
            "real_name": "Christopher Galtenberg",
            "display_name": "Chris G",
            "team": "T5TCAFTA9",
            "name": "galtenberg",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/jonathoda|@jonathoda>: The <https:\/\/twitter.com\/airtable|@airtable>  scripting environment. Interesting tradeoffs. JS. Terminal-like interaction. Nice auto-completion on APIs and user data model. Nice tethered docs with runnable examples customized to user data model. via <https:\/\/twitter.com\/geoffreylitt|@geoffreylitt> \n<https:\/\/airtable.news\/creating-a-scripting-environment-for-airtable-that-anyone-can-use-21a43e5de841>",
                "ts": 1586972036,
                "author_name": "Jonathan Edwards",
                "author_link": "https:\/\/twitter.com\/jonathoda\/status\/1250477469032996872",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/587356046223486976\/Si4vWb1__normal.jpg",
                "author_subname": "@jonathoda",
                "text": "The <https:\/\/twitter.com\/airtable|@airtable>  scripting environment. Interesting tradeoffs. JS. Terminal-like interaction. Nice auto-completion on APIs and user data model. Nice tethered docs with runnable examples customized to user data model. via <https:\/\/twitter.com\/geoffreylitt|@geoffreylitt> \n<https:\/\/airtable.news\/creating-a-scripting-environment-for-airtable-that-anyone-can-use-21a43e5de841>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/jonathoda\/status\/1250477469032996872",
                "id": 1,
                "original_url": "https:\/\/twitter.com\/jonathoda\/status\/1250477469032996872",
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/80588\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "S7I0=",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "link",
                                "url": "https:\/\/twitter.com\/jonathoda\/status\/1250477469032996872",
                                "text": "https:\/\/twitter.com\/jonathoda\/status\/1250477469032996872"
                            }
                        ]
                    }
                ]
            }
        ],
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "UE0ETTCG7",
                    "UJ6LDMMN0"
                ],
                "count": 2
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1587015827.456500",
        "client_msg_id": "21e06058-e1cc-4c34-bddd-cd1a9da98ac3",
        "text": "Similar to this is gradual typing where you start \"sloppy\" and gradually add guarantees to your code. It's an area of active research (typescript being the most well known)",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586957244.445200",
        "parent_user_id": "USUMN6XLH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "4Gz",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "Similar to this is gradual typing where you start \"sloppy\" and gradually add guarantees to your code. It's an area of active research (typescript being the most well known)"
                            }
                        ]
                    }
                ]
            }
        ]
    },
    {
        "user": "UN57U8V53",
        "type": "message",
        "ts": "1587016117.456700",
        "client_msg_id": "0bbdd0b8-2f8b-4183-ac86-8e7d8d07c966",
        "text": "It all depends on your definition of working. We could easily make a language where every library\/function had a default (noop) and only good states could be entered (like scratch). But does it really help you sketch out your idea?",
        "team": "T5TCAFTA9",
        "user_team": "T5TCAFTA9",
        "source_team": "T5TCAFTA9",
        "user_profile": {
            "avatar_hash": "3447742b735b",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-09-09\/753296041488_3447742b735b104a7ff2_72.png",
            "first_name": "",
            "real_name": "Don Abrams",
            "display_name": "Don Abrams",
            "team": "T5TCAFTA9",
            "name": "donabrams",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "thread_ts": "1586957244.445200",
        "parent_user_id": "USUMN6XLH",
        "blocks": [
            {
                "type": "rich_text",
                "block_id": "SRsMJ",
                "elements": [
                    {
                        "type": "rich_text_section",
                        "elements": [
                            {
                                "type": "text",
                                "text": "It all depends on your definition of working. We could easily make a language where every library\/function had a default (noop) and only good states could be entered (like scratch). But does it really help you sketch out your idea?"
                            }
                        ]
                    }
                ]
            }
        ]
    }
]